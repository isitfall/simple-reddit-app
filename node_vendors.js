/*! For license information please see node_vendors.js.LICENSE.txt */
(self.webpackChunksimple_reddit_app=self.webpackChunksimple_reddit_app||[]).push([[987],{427:(e,t,n)=>{"use strict";function r(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];throw Error("[Immer] minified error nr: "+e+(n.length?" "+n.map((function(e){return"'"+e+"'"})).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function o(e){return!!e&&!!e[B]}function a(e){return!!e&&(function(e){if(!e||"object"!=typeof e)return!1;var t=Object.getPrototypeOf(e);if(null===t)return!0;var n=Object.hasOwnProperty.call(t,"constructor")&&t.constructor;return n===Object||"function"==typeof n&&Function.toString.call(n)===H}(e)||Array.isArray(e)||!!e[W]||!!e.constructor[W]||f(e)||d(e))}function l(e,t,n){void 0===n&&(n=!1),0===u(e)?(n?Object.keys:Q)(e).forEach((function(r){n&&"symbol"==typeof r||t(r,e[r],e)})):e.forEach((function(n,r){return t(r,n,e)}))}function u(e){var t=e[B];return t?t.i>3?t.i-4:t.i:Array.isArray(e)?1:f(e)?2:d(e)?3:0}function i(e,t){return 2===u(e)?e.has(t):Object.prototype.hasOwnProperty.call(e,t)}function c(e,t,n){var r=u(e);2===r?e.set(t,n):3===r?(e.delete(t),e.add(n)):e[t]=n}function s(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}function f(e){return A&&e instanceof Map}function d(e){return U&&e instanceof Set}function p(e){return e.o||e.t}function h(e){if(Array.isArray(e))return Array.prototype.slice.call(e);var t=q(e);delete t[B];for(var n=Q(t),r=0;r<n.length;r++){var o=n[r],a=t[o];!1===a.writable&&(a.writable=!0,a.configurable=!0),(a.get||a.set)&&(t[o]={configurable:!0,writable:!0,enumerable:a.enumerable,value:e[o]})}return Object.create(Object.getPrototypeOf(e),t)}function v(e,t){return void 0===t&&(t=!1),y(e)||o(e)||!a(e)||(u(e)>1&&(e.set=e.add=e.clear=e.delete=m),Object.freeze(e),t&&l(e,(function(e,t){return v(t,!0)}),!0)),e}function m(){r(2)}function y(e){return null==e||"object"!=typeof e||Object.isFrozen(e)}function g(e){var t=K[e];return t||r(18,e),t}function b(){return D}function w(e,t){t&&(g("Patches"),e.u=[],e.s=[],e.v=t)}function S(e){k(e),e.p.forEach(E),e.p=null}function k(e){e===D&&(D=e.l)}function x(e){return D={p:[],l:D,h:e,m:!0,_:0}}function E(e){var t=e[B];0===t.i||1===t.i?t.j():t.O=!0}function _(e,t){t._=t.p.length;var n=t.p[0],o=void 0!==e&&e!==n;return t.h.g||g("ES5").S(t,e,o),o?(n[B].P&&(S(t),r(4)),a(e)&&(e=P(t,e),t.l||O(t,e)),t.u&&g("Patches").M(n[B].t,e,t.u,t.s)):e=P(t,n,[]),S(t),t.u&&t.v(t.u,t.s),e!==V?e:void 0}function P(e,t,n){if(y(t))return t;var r=t[B];if(!r)return l(t,(function(o,a){return C(e,r,t,o,a,n)}),!0),t;if(r.A!==e)return t;if(!r.P)return O(e,r.t,!0),r.t;if(!r.I){r.I=!0,r.A._--;var o=4===r.i||5===r.i?r.o=h(r.k):r.o;l(3===r.i?new Set(o):o,(function(t,a){return C(e,r,o,t,a,n)})),O(e,o,!1),n&&e.u&&g("Patches").R(r,n,e.u,e.s)}return r.o}function C(e,t,n,r,l,u){if(o(l)){var s=P(e,l,u&&t&&3!==t.i&&!i(t.D,r)?u.concat(r):void 0);if(c(n,r,s),!o(s))return;e.m=!1}if(a(l)&&!y(l)){if(!e.h.F&&e._<1)return;P(e,l),t&&t.A.l||O(e,l)}}function O(e,t,n){void 0===n&&(n=!1),e.h.F&&e.m&&v(t,n)}function N(e,t){var n=e[B];return(n?p(n):e)[t]}function z(e,t){if(t in e)for(var n=Object.getPrototypeOf(e);n;){var r=Object.getOwnPropertyDescriptor(n,t);if(r)return r;n=Object.getPrototypeOf(n)}}function T(e){e.P||(e.P=!0,e.l&&T(e.l))}function L(e){e.o||(e.o=h(e.t))}function R(e,t,n){var r=f(t)?g("MapSet").N(t,n):d(t)?g("MapSet").T(t,n):e.g?function(e,t){var n=Array.isArray(e),r={i:n?1:0,A:t?t.A:b(),P:!1,I:!1,D:{},l:t,t:e,k:null,o:null,j:null,C:!1},o=r,a=X;n&&(o=[r],a=Y);var l=Proxy.revocable(o,a),u=l.revoke,i=l.proxy;return r.k=i,r.j=u,i}(t,n):g("ES5").J(t,n);return(n?n.A:b()).p.push(r),r}function M(e){return o(e)||r(22,e),function e(t){if(!a(t))return t;var n,r=t[B],o=u(t);if(r){if(!r.P&&(r.i<4||!g("ES5").K(r)))return r.t;r.I=!0,n=j(t,o),r.I=!1}else n=j(t,o);return l(n,(function(t,o){r&&function(e,t){return 2===u(e)?e.get(t):e[t]}(r.t,t)===o||c(n,t,e(o))})),3===o?new Set(n):n}(e)}function j(e,t){switch(t){case 2:return new Map(e);case 3:return Array.from(e)}return h(e)}n.d(t,{xC:()=>ze,hg:()=>Fe,oM:()=>Re});var I,D,F="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),A="undefined"!=typeof Map,U="undefined"!=typeof Set,$="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,V=F?Symbol.for("immer-nothing"):((I={})["immer-nothing"]=!0,I),W=F?Symbol.for("immer-draftable"):"__$immer_draftable",B=F?Symbol.for("immer-state"):"__$immer_state",H=("undefined"!=typeof Symbol&&Symbol.iterator,""+Object.prototype.constructor),Q="undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Object.getOwnPropertyNames,q=Object.getOwnPropertyDescriptors||function(e){var t={};return Q(e).forEach((function(n){t[n]=Object.getOwnPropertyDescriptor(e,n)})),t},K={},X={get:function(e,t){if(t===B)return e;var n=p(e);if(!i(n,t))return function(e,t,n){var r,o=z(t,n);return o?"value"in o?o.value:null===(r=o.get)||void 0===r?void 0:r.call(e.k):void 0}(e,n,t);var r=n[t];return e.I||!a(r)?r:r===N(e.t,t)?(L(e),e.o[t]=R(e.A.h,r,e)):r},has:function(e,t){return t in p(e)},ownKeys:function(e){return Reflect.ownKeys(p(e))},set:function(e,t,n){var r=z(p(e),t);if(null==r?void 0:r.set)return r.set.call(e.k,n),!0;if(!e.P){var o=N(p(e),t),a=null==o?void 0:o[B];if(a&&a.t===n)return e.o[t]=n,e.D[t]=!1,!0;if(s(n,o)&&(void 0!==n||i(e.t,t)))return!0;L(e),T(e)}return e.o[t]===n&&"number"!=typeof n&&(void 0!==n||t in e.o)||(e.o[t]=n,e.D[t]=!0,!0)},deleteProperty:function(e,t){return void 0!==N(e.t,t)||t in e.t?(e.D[t]=!1,L(e),T(e)):delete e.D[t],e.o&&delete e.o[t],!0},getOwnPropertyDescriptor:function(e,t){var n=p(e),r=Reflect.getOwnPropertyDescriptor(n,t);return r?{writable:!0,configurable:1!==e.i||"length"!==t,enumerable:r.enumerable,value:n[t]}:r},defineProperty:function(){r(11)},getPrototypeOf:function(e){return Object.getPrototypeOf(e.t)},setPrototypeOf:function(){r(12)}},Y={};l(X,(function(e,t){Y[e]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),Y.deleteProperty=function(e,t){return Y.set.call(this,e,t,void 0)},Y.set=function(e,t,n){return X.set.call(this,e[0],t,n,e[0])};var G=function(){function e(e){var t=this;this.g=$,this.F=!0,this.produce=function(e,n,o){if("function"==typeof e&&"function"!=typeof n){var l=n;n=e;var u=t;return function(e){var t=this;void 0===e&&(e=l);for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];return u.produce(e,(function(e){var r;return(r=n).call.apply(r,[t,e].concat(o))}))}}var i;if("function"!=typeof n&&r(6),void 0!==o&&"function"!=typeof o&&r(7),a(e)){var c=x(t),s=R(t,e,void 0),f=!0;try{i=n(s),f=!1}finally{f?S(c):k(c)}return"undefined"!=typeof Promise&&i instanceof Promise?i.then((function(e){return w(c,o),_(e,c)}),(function(e){throw S(c),e})):(w(c,o),_(i,c))}if(!e||"object"!=typeof e){if(void 0===(i=n(e))&&(i=e),i===V&&(i=void 0),t.F&&v(i,!0),o){var d=[],p=[];g("Patches").M(e,i,d,p),o(d,p)}return i}r(21,e)},this.produceWithPatches=function(e,n){if("function"==typeof e)return function(n){for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];return t.produceWithPatches(n,(function(t){return e.apply(void 0,[t].concat(o))}))};var r,o,a=t.produce(e,n,(function(e,t){r=e,o=t}));return"undefined"!=typeof Promise&&a instanceof Promise?a.then((function(e){return[e,r,o]})):[a,r,o]},"boolean"==typeof(null==e?void 0:e.useProxies)&&this.setUseProxies(e.useProxies),"boolean"==typeof(null==e?void 0:e.autoFreeze)&&this.setAutoFreeze(e.autoFreeze)}var t=e.prototype;return t.createDraft=function(e){a(e)||r(8),o(e)&&(e=M(e));var t=x(this),n=R(this,e,void 0);return n[B].C=!0,k(t),n},t.finishDraft=function(e,t){var n=(e&&e[B]).A;return w(n,t),_(void 0,n)},t.setAutoFreeze=function(e){this.F=e},t.setUseProxies=function(e){e&&!$&&r(20),this.g=e},t.applyPatches=function(e,t){var n;for(n=t.length-1;n>=0;n--){var r=t[n];if(0===r.path.length&&"replace"===r.op){e=r.value;break}}n>-1&&(t=t.slice(n+1));var a=g("Patches").$;return o(e)?a(e,t):this.produce(e,(function(e){return a(e,t)}))},e}(),Z=new G,J=Z.produce;Z.produceWithPatches.bind(Z),Z.setAutoFreeze.bind(Z),Z.setUseProxies.bind(Z),Z.applyPatches.bind(Z),Z.createDraft.bind(Z),Z.finishDraft.bind(Z);const ee=J;function te(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function ne(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function re(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ne(Object(n),!0).forEach((function(t){te(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ne(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function oe(e){return"Minified Redux error #"+e+"; visit https://redux.js.org/Errors?code="+e+" for the full message or use the non-minified dev environment for full errors. "}var ae="function"==typeof Symbol&&Symbol.observable||"@@observable",le=function(){return Math.random().toString(36).substring(7).split("").join(".")},ue={INIT:"@@redux/INIT"+le(),REPLACE:"@@redux/REPLACE"+le(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+le()}};function ie(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function ce(e,t,n){var r;if("function"==typeof t&&"function"==typeof n||"function"==typeof n&&"function"==typeof arguments[3])throw new Error(oe(0));if("function"==typeof t&&void 0===n&&(n=t,t=void 0),void 0!==n){if("function"!=typeof n)throw new Error(oe(1));return n(ce)(e,t)}if("function"!=typeof e)throw new Error(oe(2));var o=e,a=t,l=[],u=l,i=!1;function c(){u===l&&(u=l.slice())}function s(){if(i)throw new Error(oe(3));return a}function f(e){if("function"!=typeof e)throw new Error(oe(4));if(i)throw new Error(oe(5));var t=!0;return c(),u.push(e),function(){if(t){if(i)throw new Error(oe(6));t=!1,c();var n=u.indexOf(e);u.splice(n,1),l=null}}}function d(e){if(!ie(e))throw new Error(oe(7));if(void 0===e.type)throw new Error(oe(8));if(i)throw new Error(oe(9));try{i=!0,a=o(a,e)}finally{i=!1}for(var t=l=u,n=0;n<t.length;n++)(0,t[n])();return e}function p(e){if("function"!=typeof e)throw new Error(oe(10));o=e,d({type:ue.REPLACE})}function h(){var e,t=f;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new Error(oe(11));function n(){e.next&&e.next(s())}return n(),{unsubscribe:t(n)}}})[ae]=function(){return this},e}return d({type:ue.INIT}),(r={dispatch:d,subscribe:f,getState:s,replaceReducer:p})[ae]=h,r}function se(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce((function(e,t){return function(){return e(t.apply(void 0,arguments))}}))}function fe(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return function(){var n=e.apply(void 0,arguments),r=function(){throw new Error(oe(15))},o={getState:n.getState,dispatch:function(){return r.apply(void 0,arguments)}},a=t.map((function(e){return e(o)}));return r=se.apply(void 0,a)(n.dispatch),re(re({},n),{},{dispatch:r})}}}function de(e){return function(t){var n=t.dispatch,r=t.getState;return function(t){return function(o){return"function"==typeof o?o(n,r,e):t(o)}}}}var pe=de();pe.withExtraArgument=de;const he=pe;var ve,me=(ve=function(e,t){return ve=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},ve(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}ve(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),ye=function(e,t){for(var n=0,r=t.length,o=e.length;n<r;n++,o++)e[o]=t[n];return e},ge=Object.defineProperty,be=Object.defineProperties,we=Object.getOwnPropertyDescriptors,Se=Object.getOwnPropertySymbols,ke=Object.prototype.hasOwnProperty,xe=Object.prototype.propertyIsEnumerable,Ee=function(e,t,n){return t in e?ge(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n},_e=function(e,t){for(var n in t||(t={}))ke.call(t,n)&&Ee(e,n,t[n]);if(Se)for(var r=0,o=Se(t);r<o.length;r++)n=o[r],xe.call(t,n)&&Ee(e,n,t[n]);return e},Pe=function(e,t){return be(e,we(t))},Ce="undefined"!=typeof window&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__:function(){if(0!==arguments.length)return"object"==typeof arguments[0]?se:se.apply(null,arguments)};"undefined"!=typeof window&&window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__;var Oe=function(e){function t(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];var o=e.apply(this,n)||this;return Object.setPrototypeOf(o,t.prototype),o}return me(t,e),Object.defineProperty(t,Symbol.species,{get:function(){return t},enumerable:!1,configurable:!0}),t.prototype.concat=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return e.prototype.concat.apply(this,t)},t.prototype.prepend=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return 1===e.length&&Array.isArray(e[0])?new(t.bind.apply(t,ye([void 0],e[0].concat(this)))):new(t.bind.apply(t,ye([void 0],e.concat(this))))},t}(Array);function Ne(e){return a(e)?ee(e,(function(){})):e}function ze(e){var t,n=function(e){return function(e){void 0===e&&(e={});var t=e.thunk,n=void 0===t||t,r=(e.immutableCheck,e.serializableCheck,new Oe);return n&&(function(e){return"boolean"==typeof e}(n)?r.push(he):r.push(he.withExtraArgument(n.extraArgument))),r}(e)},r=e||{},o=r.reducer,a=void 0===o?void 0:o,l=r.middleware,u=void 0===l?n():l,i=r.devTools,c=void 0===i||i,s=r.preloadedState,f=void 0===s?void 0:s,d=r.enhancers,p=void 0===d?void 0:d;if("function"==typeof a)t=a;else{if(!function(e){if("object"!=typeof e||null===e)return!1;var t=Object.getPrototypeOf(e);if(null===t)return!0;for(var n=t;null!==Object.getPrototypeOf(n);)n=Object.getPrototypeOf(n);return t===n}(a))throw new Error('"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');t=function(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++){var o=t[r];"function"==typeof e[o]&&(n[o]=e[o])}var a,l=Object.keys(n);try{!function(e){Object.keys(e).forEach((function(t){var n=e[t];if(void 0===n(void 0,{type:ue.INIT}))throw new Error(oe(12));if(void 0===n(void 0,{type:ue.PROBE_UNKNOWN_ACTION()}))throw new Error(oe(13))}))}(n)}catch(e){a=e}return function(e,t){if(void 0===e&&(e={}),a)throw a;for(var r=!1,o={},u=0;u<l.length;u++){var i=l[u],c=n[i],s=e[i],f=c(s,t);if(void 0===f)throw t&&t.type,new Error(oe(14));o[i]=f,r=r||f!==s}return(r=r||l.length!==Object.keys(e).length)?o:e}}(a)}var h=u;"function"==typeof h&&(h=h(n));var v=fe.apply(void 0,h),m=se;c&&(m=Ce(_e({trace:!1},"object"==typeof c&&c)));var y=[v];return Array.isArray(p)?y=ye([v],p):"function"==typeof p&&(y=p(y)),ce(t,f,m.apply(void 0,y))}function Te(e,t){function n(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];if(t){var o=t.apply(void 0,n);if(!o)throw new Error("prepareAction did not return an object");return _e(_e({type:e,payload:o.payload},"meta"in o&&{meta:o.meta}),"error"in o&&{error:o.error})}return{type:e,payload:n[0]}}return n.toString=function(){return""+e},n.type=e,n.match=function(t){return t.type===e},n}function Le(e){var t,n={},r=[],o={addCase:function(e,t){var r="string"==typeof e?e:e.type;if(r in n)throw new Error("addCase cannot be called with two reducers for the same action type");return n[r]=t,o},addMatcher:function(e,t){return r.push({matcher:e,reducer:t}),o},addDefaultCase:function(e){return t=e,o}};return e(o),[n,r,t]}function Re(e){var t=e.name;if(!t)throw new Error("`name` is a required option for createSlice");var n,r="function"==typeof e.initialState?e.initialState:Ne(e.initialState),l=e.reducers||{},u=Object.keys(l),i={},c={},s={};function f(){var t="function"==typeof e.extraReducers?Le(e.extraReducers):[e.extraReducers],n=t[0],l=void 0===n?{}:n,u=t[1],i=void 0===u?[]:u,s=t[2],f=void 0===s?void 0:s,d=_e(_e({},l),c);return function(e,t,n,r){void 0===n&&(n=[]);var l,u="function"==typeof t?Le(t):[t,n,r],i=u[0],c=u[1],s=u[2];if(function(e){return"function"==typeof e}(e))l=function(){return Ne(e())};else{var f=Ne(e);l=function(){return f}}function d(e,t){void 0===e&&(e=l());var n=ye([i[t.type]],c.filter((function(e){return(0,e.matcher)(t)})).map((function(e){return e.reducer})));return 0===n.filter((function(e){return!!e})).length&&(n=[s]),n.reduce((function(e,n){if(n){var r;if(o(e))return void 0===(r=n(e,t))?e:r;if(a(e))return ee(e,(function(e){return n(e,t)}));if(void 0===(r=n(e,t))){if(null===e)return e;throw Error("A case reducer on a non-draftable value must not return undefined")}return r}return e}),e)}return d.getInitialState=l,d}(r,d,i,f)}return u.forEach((function(e){var n,r,o=l[e],a=t+"/"+e;"reducer"in o?(n=o.reducer,r=o.prepare):n=o,i[e]=n,c[a]=n,s[e]=r?Te(a,r):Te(a)})),{name:t,reducer:function(e,t){return n||(n=f()),n(e,t)},actions:s,caseReducers:i,getInitialState:function(){return n||(n=f()),n.getInitialState()}}}var Me=["name","message","stack","code"],je=function(e,t){this.payload=e,this.meta=t},Ie=function(e,t){this.payload=e,this.meta=t},De=function(e){if("object"==typeof e&&null!==e){for(var t={},n=0,r=Me;n<r.length;n++){var o=r[n];"string"==typeof e[o]&&(t[o]=e[o])}return t}return{message:String(e)}};function Fe(e,t,n){var r=Te(e+"/fulfilled",(function(e,t,n,r){return{payload:e,meta:Pe(_e({},r||{}),{arg:n,requestId:t,requestStatus:"fulfilled"})}})),o=Te(e+"/pending",(function(e,t,n){return{payload:void 0,meta:Pe(_e({},n||{}),{arg:t,requestId:e,requestStatus:"pending"})}})),a=Te(e+"/rejected",(function(e,t,r,o,a){return{payload:o,error:(n&&n.serializeError||De)(e||"Rejected"),meta:Pe(_e({},a||{}),{arg:r,requestId:t,rejectedWithValue:!!o,requestStatus:"rejected",aborted:"AbortError"===(null==e?void 0:e.name),condition:"ConditionError"===(null==e?void 0:e.name)})}})),l="undefined"!=typeof AbortController?AbortController:function(){function e(){this.signal={aborted:!1,addEventListener:function(){},dispatchEvent:function(){return!1},onabort:function(){},removeEventListener:function(){},reason:void 0,throwIfAborted:function(){}}}return e.prototype.abort=function(){},e}();return Object.assign((function(e){return function(u,i,c){var s,f=(null==n?void 0:n.idGenerator)?n.idGenerator(e):function(e){void 0===e&&(e=21);for(var t="",n=e;n--;)t+="ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW"[64*Math.random()|0];return t}(),d=new l,p=new Promise((function(e,t){return d.signal.addEventListener("abort",(function(){return t({name:"AbortError",message:s||"Aborted"})}))})),h=!1,v=function(){return l=this,s=null,v=function(){var l,s,v,m,y;return function(e,t){var n,r,o,a,l={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(a){return function(u){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;l;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return l.label++,{value:a[1],done:!1};case 5:l.label++,r=a[1],a=[0];continue;case 7:a=l.ops.pop(),l.trys.pop();continue;default:if(!((o=(o=l.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){l=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){l.label=a[1];break}if(6===a[0]&&l.label<o[1]){l.label=o[1],o=a;break}if(o&&l.label<o[2]){l.label=o[2],l.ops.push(a);break}o[2]&&l.ops.pop(),l.trys.pop();continue}a=t.call(e,l)}catch(e){a=[6,e],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}}(this,(function(g){switch(g.label){case 0:return g.trys.push([0,4,,5]),null===(b=m=null==(l=null==n?void 0:n.condition)?void 0:l.call(n,e,{getState:i,extra:c}))||"object"!=typeof b||"function"!=typeof b.then?[3,2]:[4,m];case 1:m=g.sent(),g.label=2;case 2:if(!1===m)throw{name:"ConditionError",message:"Aborted due to condition callback returning false."};return h=!0,u(o(f,e,null==(s=null==n?void 0:n.getPendingMeta)?void 0:s.call(n,{requestId:f,arg:e},{getState:i,extra:c}))),[4,Promise.race([p,Promise.resolve(t(e,{dispatch:u,getState:i,extra:c,requestId:f,signal:d.signal,rejectWithValue:function(e,t){return new je(e,t)},fulfillWithValue:function(e,t){return new Ie(e,t)}})).then((function(t){if(t instanceof je)throw t;return t instanceof Ie?r(t.payload,f,e,t.meta):r(t,f,e)}))])];case 3:return v=g.sent(),[3,5];case 4:return y=g.sent(),v=y instanceof je?a(null,f,e,y.payload,y.meta):a(y,f,e),[3,5];case 5:return n&&!n.dispatchConditionRejection&&a.match(v)&&v.meta.condition||u(v),[2,v]}var b}))},new Promise((function(e,t){var n=function(e){try{o(v.next(e))}catch(e){t(e)}},r=function(e){try{o(v.throw(e))}catch(e){t(e)}},o=function(t){return t.done?e(t.value):Promise.resolve(t.value).then(n,r)};o((v=v.apply(l,s)).next())}));var l,s,v}();return Object.assign(v,{abort:function(e){h&&(s=e,d.abort())},requestId:f,arg:e,unwrap:function(){return v.then(Ae)}})}}),{pending:o,rejected:a,fulfilled:r,typePrefix:e})}function Ae(e){if(e.meta&&e.meta.rejectedWithValue)throw e.payload;if(e.error)throw e.error;return e.payload}Object.assign;var Ue="listenerMiddleware";Te(Ue+"/add"),Te(Ue+"/removeAll"),Te(Ue+"/remove"),function(){function e(e,t){var n=a[e];return n?n.enumerable=t:a[e]=n={configurable:!0,enumerable:t,get:function(){var t=this[B];return X.get(t,e)},set:function(t){var n=this[B];X.set(n,e,t)}},n}function t(e){for(var t=e.length-1;t>=0;t--){var o=e[t][B];if(!o.P)switch(o.i){case 5:r(o)&&T(o);break;case 4:n(o)&&T(o)}}}function n(e){for(var t=e.t,n=e.k,r=Q(n),o=r.length-1;o>=0;o--){var a=r[o];if(a!==B){var l=t[a];if(void 0===l&&!i(t,a))return!0;var u=n[a],c=u&&u[B];if(c?c.t!==l:!s(u,l))return!0}}var f=!!t[B];return r.length!==Q(t).length+(f?0:1)}function r(e){var t=e.k;if(t.length!==e.t.length)return!0;var n=Object.getOwnPropertyDescriptor(t,t.length-1);if(n&&!n.get)return!0;for(var r=0;r<t.length;r++)if(!t.hasOwnProperty(r))return!0;return!1}var a={};!function(e,t){K[e]||(K[e]=t)}("ES5",{J:function(t,n){var r=Array.isArray(t),o=function(t,n){if(t){for(var r=Array(n.length),o=0;o<n.length;o++)Object.defineProperty(r,""+o,e(o,!0));return r}var a=q(n);delete a[B];for(var l=Q(a),u=0;u<l.length;u++){var i=l[u];a[i]=e(i,t||!!a[i].enumerable)}return Object.create(Object.getPrototypeOf(n),a)}(r,t),a={i:r?5:4,A:n?n.A:b(),P:!1,I:!1,D:{},l:n,t,k:o,o:null,O:!1,C:!1};return Object.defineProperty(o,B,{value:a,writable:!0}),o},S:function(e,n,a){a?o(n)&&n[B].A===e&&t(e.p):(e.u&&function e(t){if(t&&"object"==typeof t){var n=t[B];if(n){var o=n.t,a=n.k,u=n.D,c=n.i;if(4===c)l(a,(function(t){t!==B&&(void 0!==o[t]||i(o,t)?u[t]||e(a[t]):(u[t]=!0,T(n)))})),l(o,(function(e){void 0!==a[e]||i(a,e)||(u[e]=!1,T(n))}));else if(5===c){if(r(n)&&(T(n),u.length=!0),a.length<o.length)for(var s=a.length;s<o.length;s++)u[s]=!1;else for(var f=o.length;f<a.length;f++)u[f]=!0;for(var d=Math.min(a.length,o.length),p=0;p<d;p++)a.hasOwnProperty(p)||(u[p]=!0),void 0===u[p]&&e(a[p])}}}}(e.p[0]),t(e.p))},K:function(e){return 4===e.i?n(e):r(e)}})}()},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var l={};if(r)for(var u=0;u<this.length;u++){var i=this[u][0];null!=i&&(l[i]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);r&&l[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),t.push(s))}},t}},667:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),l=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(l).concat([a]).join("\n")}return[t].join("\n")}},296:e=>{function t(e,t,n){var r,o,a,l,u;function i(){var c=Date.now()-l;c<t&&c>=0?r=setTimeout(i,t-c):(r=null,n||(u=e.apply(a,o),a=o=null))}null==t&&(t=100);var c=function(){a=this,o=arguments,l=Date.now();var c=n&&!r;return r||(r=setTimeout(i,t)),c&&(u=e.apply(a,o),a=o=null),u};return c.clear=function(){r&&(clearTimeout(r),r=null)},c.flush=function(){r&&(u=e.apply(a,o),a=o=null,clearTimeout(r),r=null)},c}t.debounce=t,e.exports=t},679:(e,t,n)=>{"use strict";var r=n(864),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},u={};function i(e){return r.isMemo(e)?l:u[e.$$typeof]||o}u[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},u[r.Memo]=l;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=p(n);o&&o!==h&&e(t,o,r)}var l=s(n);f&&(l=l.concat(f(n)));for(var u=i(t),v=i(n),m=0;m<l.length;++m){var y=l[m];if(!(a[y]||r&&r[y]||v&&v[y]||u&&u[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}}return t}},448:(e,t,n)=>{"use strict";var r=n(294),o=n(840);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var l=new Set,u={};function i(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var s=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),f=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},h={};function v(e,t,n,r,o,a,l){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=l}var m={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){m[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];m[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){m[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){m[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){m[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){m[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){m[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){m[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){m[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function g(e){return e[1].toUpperCase()}function b(e,t,n,r){var o=m.hasOwnProperty(t)?m[t]:null;(null!==o?0!==o.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!f.call(h,e)||!f.call(p,e)&&(d.test(e)?h[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,g);m[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,g);m[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,g);m[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){m[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),m.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){m[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var w=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,S=Symbol.for("react.element"),k=Symbol.for("react.portal"),x=Symbol.for("react.fragment"),E=Symbol.for("react.strict_mode"),_=Symbol.for("react.profiler"),P=Symbol.for("react.provider"),C=Symbol.for("react.context"),O=Symbol.for("react.forward_ref"),N=Symbol.for("react.suspense"),z=Symbol.for("react.suspense_list"),T=Symbol.for("react.memo"),L=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var R=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var M=Symbol.iterator;function j(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=M&&e[M]||e["@@iterator"])?e:null}var I,D=Object.assign;function F(e){if(void 0===I)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);I=t&&t[1]||""}return"\n"+I+e}var A=!1;function U(e,t){if(!e||A)return"";A=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var o=t.stack.split("\n"),a=r.stack.split("\n"),l=o.length-1,u=a.length-1;1<=l&&0<=u&&o[l]!==a[u];)u--;for(;1<=l&&0<=u;l--,u--)if(o[l]!==a[u]){if(1!==l||1!==u)do{if(l--,0>--u||o[l]!==a[u]){var i="\n"+o[l].replace(" at new "," at ");return e.displayName&&i.includes("<anonymous>")&&(i=i.replace("<anonymous>",e.displayName)),i}}while(1<=l&&0<=u);break}}}finally{A=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?F(e):""}function $(e){switch(e.tag){case 5:return F(e.type);case 16:return F("Lazy");case 13:return F("Suspense");case 19:return F("SuspenseList");case 0:case 2:case 15:return U(e.type,!1);case 11:return U(e.type.render,!1);case 1:return U(e.type,!0);default:return""}}function V(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case k:return"Portal";case _:return"Profiler";case E:return"StrictMode";case N:return"Suspense";case z:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case P:return(e._context.displayName||"Context")+".Provider";case O:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case T:return null!==(t=e.displayName||null)?t:V(e.type)||"Memo";case L:t=e._payload,e=e._init;try{return V(e(t))}catch(e){}}return null}function W(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return V(t);case 8:return t===E?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function B(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Q(e){e._valueTracker||(e._valueTracker=function(e){var t=H(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=H(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function K(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function X(e,t){var n=t.checked;return D({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Y(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=B(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function G(e,t){null!=(t=t.checked)&&b(e,"checked",t,!1)}function Z(e,t){G(e,t);var n=B(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,B(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&K(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+B(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return D({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function oe(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(te(n)){if(1<n.length)throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:B(n)}}function ae(e,t){var n=B(t.value),r=B(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function le(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ue(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ie(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ue(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,se,fe=(se=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return se(e,t)}))}:se);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function ve(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function me(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=ve(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(pe).forEach((function(e){he.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ye=D({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ge(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var we=null;function Se(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,xe=null,Ee=null;function _e(e){if(e=wo(e)){if("function"!=typeof ke)throw Error(a(280));var t=e.stateNode;t&&(t=ko(t),ke(e.stateNode,e.type,t))}}function Pe(e){xe?Ee?Ee.push(e):Ee=[e]:xe=e}function Ce(){if(xe){var e=xe,t=Ee;if(Ee=xe=null,_e(e),t)for(e=0;e<t.length;e++)_e(t[e])}}function Oe(e,t){return e(t)}function Ne(){}var ze=!1;function Te(e,t,n){if(ze)return e(t,n);ze=!0;try{return Oe(e,t,n)}finally{ze=!1,(null!==xe||null!==Ee)&&(Ne(),Ce())}}function Le(e,t){var n=e.stateNode;if(null===n)return null;var r=ko(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}var Re=!1;if(s)try{var Me={};Object.defineProperty(Me,"passive",{get:function(){Re=!0}}),window.addEventListener("test",Me,Me),window.removeEventListener("test",Me,Me)}catch(se){Re=!1}function je(e,t,n,r,o,a,l,u,i){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var Ie=!1,De=null,Fe=!1,Ae=null,Ue={onError:function(e){Ie=!0,De=e}};function $e(e,t,n,r,o,a,l,u,i){Ie=!1,De=null,je.apply(Ue,arguments)}function Ve(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function We(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Be(e){if(Ve(e)!==e)throw Error(a(188))}function He(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ve(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var l=o.alternate;if(null===l){if(null!==(r=o.return)){n=r;continue}break}if(o.child===l.child){for(l=o.child;l;){if(l===n)return Be(o),e;if(l===r)return Be(o),t;l=l.sibling}throw Error(a(188))}if(n.return!==r.return)n=o,r=l;else{for(var u=!1,i=o.child;i;){if(i===n){u=!0,n=o,r=l;break}if(i===r){u=!0,r=o,n=l;break}i=i.sibling}if(!u){for(i=l.child;i;){if(i===n){u=!0,n=l,r=o;break}if(i===r){u=!0,r=l,n=o;break}i=i.sibling}if(!u)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e))?Qe(e):null}function Qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Qe(e);if(null!==t)return t;e=e.sibling}return null}var qe=o.unstable_scheduleCallback,Ke=o.unstable_cancelCallback,Xe=o.unstable_shouldYield,Ye=o.unstable_requestPaint,Ge=o.unstable_now,Ze=o.unstable_getCurrentPriorityLevel,Je=o.unstable_ImmediatePriority,et=o.unstable_UserBlockingPriority,tt=o.unstable_NormalPriority,nt=o.unstable_LowPriority,rt=o.unstable_IdlePriority,ot=null,at=null,lt=Math.clz32?Math.clz32:function(e){return 0==(e>>>=0)?32:31-(ut(e)/it|0)|0},ut=Math.log,it=Math.LN2,ct=64,st=4194304;function ft(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,o=e.suspendedLanes,a=e.pingedLanes,l=268435455&n;if(0!==l){var u=l&~o;0!==u?r=ft(u):0!=(a&=l)&&(r=ft(a))}else 0!=(l=n&~o)?r=ft(l):0!==a&&(r=ft(a));if(0===r)return 0;if(0!==t&&t!==r&&0==(t&o)&&((o=r&-r)>=(a=t&-t)||16===o&&0!=(4194240&a)))return t;if(0!=(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)o=1<<(n=31-lt(t)),r|=e[n],t&=~o;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ht(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function vt(){var e=ct;return 0==(4194240&(ct<<=1))&&(ct=64),e}function mt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-lt(t)]=n}function gt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-lt(n),o=1<<r;o&t|e[r]&t&&(e[r]|=t),n&=~o}}var bt=0;function wt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var St,kt,xt,Et,_t,Pt=!1,Ct=[],Ot=null,Nt=null,zt=null,Tt=new Map,Lt=new Map,Rt=[],Mt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function jt(e,t){switch(e){case"focusin":case"focusout":Ot=null;break;case"dragenter":case"dragleave":Nt=null;break;case"mouseover":case"mouseout":zt=null;break;case"pointerover":case"pointerout":Tt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Lt.delete(t.pointerId)}}function It(e,t,n,r,o,a){return null===e||e.nativeEvent!==a?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:a,targetContainers:[o]},null!==t&&null!==(t=wo(t))&&kt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function Dt(e){var t=bo(e.target);if(null!==t){var n=Ve(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=We(n)))return e.blockedOn=t,void _t(e.priority,(function(){xt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Ft(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=wo(n))&&kt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);we=r,n.target.dispatchEvent(r),we=null,t.shift()}return!0}function At(e,t,n){Ft(e)&&n.delete(t)}function Ut(){Pt=!1,null!==Ot&&Ft(Ot)&&(Ot=null),null!==Nt&&Ft(Nt)&&(Nt=null),null!==zt&&Ft(zt)&&(zt=null),Tt.forEach(At),Lt.forEach(At)}function $t(e,t){e.blockedOn===t&&(e.blockedOn=null,Pt||(Pt=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,Ut)))}function Vt(e){function t(t){return $t(t,e)}if(0<Ct.length){$t(Ct[0],e);for(var n=1;n<Ct.length;n++){var r=Ct[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Ot&&$t(Ot,e),null!==Nt&&$t(Nt,e),null!==zt&&$t(zt,e),Tt.forEach(t),Lt.forEach(t),n=0;n<Rt.length;n++)(r=Rt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Rt.length&&null===(n=Rt[0]).blockedOn;)Dt(n),null===n.blockedOn&&Rt.shift()}var Wt=w.ReactCurrentBatchConfig,Bt=!0;function Ht(e,t,n,r){var o=bt,a=Wt.transition;Wt.transition=null;try{bt=1,qt(e,t,n,r)}finally{bt=o,Wt.transition=a}}function Qt(e,t,n,r){var o=bt,a=Wt.transition;Wt.transition=null;try{bt=4,qt(e,t,n,r)}finally{bt=o,Wt.transition=a}}function qt(e,t,n,r){if(Bt){var o=Xt(e,t,n,r);if(null===o)Br(e,t,r,Kt,n),jt(e,r);else if(function(e,t,n,r,o){switch(t){case"focusin":return Ot=It(Ot,e,t,n,r,o),!0;case"dragenter":return Nt=It(Nt,e,t,n,r,o),!0;case"mouseover":return zt=It(zt,e,t,n,r,o),!0;case"pointerover":var a=o.pointerId;return Tt.set(a,It(Tt.get(a)||null,e,t,n,r,o)),!0;case"gotpointercapture":return a=o.pointerId,Lt.set(a,It(Lt.get(a)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r))r.stopPropagation();else if(jt(e,r),4&t&&-1<Mt.indexOf(e)){for(;null!==o;){var a=wo(o);if(null!==a&&St(a),null===(a=Xt(e,t,n,r))&&Br(e,t,r,Kt,n),a===o)break;o=a}null!==o&&r.stopPropagation()}else Br(e,t,r,null,n)}}var Kt=null;function Xt(e,t,n,r){if(Kt=null,null!==(e=bo(e=Se(r))))if(null===(t=Ve(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=We(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Kt=e,null}function Yt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ze()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Gt=null,Zt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Zt,r=n.length,o="value"in Gt?Gt.value:Gt.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[a-t];t++);return Jt=o.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function on(e){function t(t,n,r,o,a){for(var l in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(l)&&(t=e[l],this[l]=t?t(o):o[l]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return D(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var an,ln,un,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},sn=on(cn),fn=D({},cn,{view:0,detail:0}),dn=on(fn),pn=D({},fn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:_n,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==un&&(un&&"mousemove"===e.type?(an=e.screenX-un.screenX,ln=e.screenY-un.screenY):ln=an=0,un=e),an)},movementY:function(e){return"movementY"in e?e.movementY:ln}}),hn=on(pn),vn=on(D({},pn,{dataTransfer:0})),mn=on(D({},fn,{relatedTarget:0})),yn=on(D({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),gn=D({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bn=on(gn),wn=on(D({},cn,{data:0})),Sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function En(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=xn[e])&&!!t[e]}function _n(){return En}var Pn=D({},fn,{key:function(e){if(e.key){var t=Sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:_n,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Cn=on(Pn),On=on(D({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Nn=on(D({},fn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:_n})),zn=on(D({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Tn=D({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Ln=on(Tn),Rn=[9,13,27,32],Mn=s&&"CompositionEvent"in window,jn=null;s&&"documentMode"in document&&(jn=document.documentMode);var In=s&&"TextEvent"in window&&!jn,Dn=s&&(!Mn||jn&&8<jn&&11>=jn),Fn=String.fromCharCode(32),An=!1;function Un(e,t){switch(e){case"keyup":return-1!==Rn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function $n(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Vn=!1,Wn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Bn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Wn[e.type]:"textarea"===t}function Hn(e,t,n,r){Pe(r),0<(t=Qr(t,"onChange")).length&&(n=new sn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Qn=null,qn=null;function Kn(e){Fr(e,0)}function Xn(e){if(q(So(e)))return e}function Yn(e,t){if("change"===e)return t}var Gn=!1;if(s){var Zn;if(s){var Jn="oninput"in document;if(!Jn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jn="function"==typeof er.oninput}Zn=Jn}else Zn=!1;Gn=Zn&&(!document.documentMode||9<document.documentMode)}function tr(){Qn&&(Qn.detachEvent("onpropertychange",nr),qn=Qn=null)}function nr(e){if("value"===e.propertyName&&Xn(qn)){var t=[];Hn(t,qn,e,Se(e)),Te(Kn,t)}}function rr(e,t,n){"focusin"===e?(tr(),qn=n,(Qn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function or(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xn(qn)}function ar(e,t){if("click"===e)return Xn(t)}function lr(e,t){if("input"===e||"change"===e)return Xn(t)}var ur="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function ir(e,t){if(ur(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var o=n[r];if(!f.call(t,o)||!ur(e[o],t[o]))return!1}return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,t){var n,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=K((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function hr(e){var t=dr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&fr(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,a=Math.min(r.start,o);r=void 0===r.end?a:Math.min(r.end,o),!e.extend&&a>r&&(o=r,r=a,a=o),o=sr(n,a);var l=sr(n,r);o&&l&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==l.node||e.focusOffset!==l.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(l.node,l.offset)):(t.setEnd(l.node,l.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var vr=s&&"documentMode"in document&&11>=document.documentMode,mr=null,yr=null,gr=null,br=!1;function wr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==mr||mr!==K(r)||(r="selectionStart"in(r=mr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},gr&&ir(gr,r)||(gr=r,0<(r=Qr(yr,"onSelect")).length&&(t=new sn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=mr)))}function Sr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var kr={animationend:Sr("Animation","AnimationEnd"),animationiteration:Sr("Animation","AnimationIteration"),animationstart:Sr("Animation","AnimationStart"),transitionend:Sr("Transition","TransitionEnd")},xr={},Er={};function _r(e){if(xr[e])return xr[e];if(!kr[e])return e;var t,n=kr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Er)return xr[e]=n[t];return e}s&&(Er=document.createElement("div").style,"AnimationEvent"in window||(delete kr.animationend.animation,delete kr.animationiteration.animation,delete kr.animationstart.animation),"TransitionEvent"in window||delete kr.transitionend.transition);var Pr=_r("animationend"),Cr=_r("animationiteration"),Or=_r("animationstart"),Nr=_r("transitionend"),zr=new Map,Tr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Lr(e,t){zr.set(e,t),i(t,[e])}for(var Rr=0;Rr<Tr.length;Rr++){var Mr=Tr[Rr];Lr(Mr.toLowerCase(),"on"+(Mr[0].toUpperCase()+Mr.slice(1)))}Lr(Pr,"onAnimationEnd"),Lr(Cr,"onAnimationIteration"),Lr(Or,"onAnimationStart"),Lr("dblclick","onDoubleClick"),Lr("focusin","onFocus"),Lr("focusout","onBlur"),Lr(Nr,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),i("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),i("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),i("onBeforeInput",["compositionend","keypress","textInput","paste"]),i("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),i("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),i("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var jr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ir=new Set("cancel close invalid load scroll toggle".split(" ").concat(jr));function Dr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,o,l,u,i,c){if($e.apply(this,arguments),Ie){if(!Ie)throw Error(a(198));var s=De;Ie=!1,De=null,Fe||(Fe=!0,Ae=s)}}(r,t,void 0,e),e.currentTarget=null}function Fr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],o=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var l=r.length-1;0<=l;l--){var u=r[l],i=u.instance,c=u.currentTarget;if(u=u.listener,i!==a&&o.isPropagationStopped())break e;Dr(o,u,c),a=i}else for(l=0;l<r.length;l++){if(i=(u=r[l]).instance,c=u.currentTarget,u=u.listener,i!==a&&o.isPropagationStopped())break e;Dr(o,u,c),a=i}}}if(Fe)throw e=Ae,Fe=!1,Ae=null,e}function Ar(e,t){var n=t[mo];void 0===n&&(n=t[mo]=new Set);var r=e+"__bubble";n.has(r)||(Wr(t,e,2,!1),n.add(r))}function Ur(e,t,n){var r=0;t&&(r|=4),Wr(n,e,r,t)}var $r="_reactListening"+Math.random().toString(36).slice(2);function Vr(e){if(!e[$r]){e[$r]=!0,l.forEach((function(t){"selectionchange"!==t&&(Ir.has(t)||Ur(t,!1,e),Ur(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[$r]||(t[$r]=!0,Ur("selectionchange",!1,t))}}function Wr(e,t,n,r){switch(Yt(t)){case 1:var o=Ht;break;case 4:o=Qt;break;default:o=qt}n=o.bind(null,t,n,e),o=void 0,!Re||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),r?void 0!==o?e.addEventListener(t,n,{capture:!0,passive:o}):e.addEventListener(t,n,!0):void 0!==o?e.addEventListener(t,n,{passive:o}):e.addEventListener(t,n,!1)}function Br(e,t,n,r,o){var a=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var l=r.tag;if(3===l||4===l){var u=r.stateNode.containerInfo;if(u===o||8===u.nodeType&&u.parentNode===o)break;if(4===l)for(l=r.return;null!==l;){var i=l.tag;if((3===i||4===i)&&((i=l.stateNode.containerInfo)===o||8===i.nodeType&&i.parentNode===o))return;l=l.return}for(;null!==u;){if(null===(l=bo(u)))return;if(5===(i=l.tag)||6===i){r=a=l;continue e}u=u.parentNode}}r=r.return}Te((function(){var r=a,o=Se(n),l=[];e:{var u=zr.get(e);if(void 0!==u){var i=sn,c=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":i=Cn;break;case"focusin":c="focus",i=mn;break;case"focusout":c="blur",i=mn;break;case"beforeblur":case"afterblur":i=mn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":i=hn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":i=vn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":i=Nn;break;case Pr:case Cr:case Or:i=yn;break;case Nr:i=zn;break;case"scroll":i=dn;break;case"wheel":i=Ln;break;case"copy":case"cut":case"paste":i=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":i=On}var s=0!=(4&t),f=!s&&"scroll"===e,d=s?null!==u?u+"Capture":null:u;s=[];for(var p,h=r;null!==h;){var v=(p=h).stateNode;if(5===p.tag&&null!==v&&(p=v,null!==d&&null!=(v=Le(h,d))&&s.push(Hr(h,v,p))),f)break;h=h.return}0<s.length&&(u=new i(u,c,null,n,o),l.push({event:u,listeners:s}))}}if(0==(7&t)){if(i="mouseout"===e||"pointerout"===e,(!(u="mouseover"===e||"pointerover"===e)||n===we||!(c=n.relatedTarget||n.fromElement)||!bo(c)&&!c[vo])&&(i||u)&&(u=o.window===o?o:(u=o.ownerDocument)?u.defaultView||u.parentWindow:window,i?(i=r,null!==(c=(c=n.relatedTarget||n.toElement)?bo(c):null)&&(c!==(f=Ve(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(i=null,c=r),i!==c)){if(s=hn,v="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=On,v="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==i?u:So(i),p=null==c?u:So(c),(u=new s(v,h+"leave",i,n,o)).target=f,u.relatedTarget=p,v=null,bo(o)===r&&((s=new s(d,h+"enter",c,n,o)).target=p,s.relatedTarget=f,v=s),f=v,i&&c)e:{for(d=c,h=0,p=s=i;p;p=qr(p))h++;for(p=0,v=d;v;v=qr(v))p++;for(;0<h-p;)s=qr(s),h--;for(;0<p-h;)d=qr(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=qr(s),d=qr(d)}s=null}else s=null;null!==i&&Kr(l,u,i,s,!1),null!==c&&null!==f&&Kr(l,f,c,s,!0)}if("select"===(i=(u=r?So(r):window).nodeName&&u.nodeName.toLowerCase())||"input"===i&&"file"===u.type)var m=Yn;else if(Bn(u))if(Gn)m=lr;else{m=or;var y=rr}else(i=u.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===u.type||"radio"===u.type)&&(m=ar);switch(m&&(m=m(e,r))?Hn(l,m,n,o):(y&&y(e,u,r),"focusout"===e&&(y=u._wrapperState)&&y.controlled&&"number"===u.type&&ee(u,"number",u.value)),y=r?So(r):window,e){case"focusin":(Bn(y)||"true"===y.contentEditable)&&(mr=y,yr=r,gr=null);break;case"focusout":gr=yr=mr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,wr(l,n,o);break;case"selectionchange":if(vr)break;case"keydown":case"keyup":wr(l,n,o)}var g;if(Mn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Vn?Un(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Dn&&"ko"!==n.locale&&(Vn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Vn&&(g=en()):(Zt="value"in(Gt=o)?Gt.value:Gt.textContent,Vn=!0)),0<(y=Qr(r,b)).length&&(b=new wn(b,e,null,n,o),l.push({event:b,listeners:y}),(g||null!==(g=$n(n)))&&(b.data=g))),(g=In?function(e,t){switch(e){case"compositionend":return $n(t);case"keypress":return 32!==t.which?null:(An=!0,Fn);case"textInput":return(e=t.data)===Fn&&An?null:e;default:return null}}(e,n):function(e,t){if(Vn)return"compositionend"===e||!Mn&&Un(e,t)?(e=en(),Jt=Zt=Gt=null,Vn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Dn&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=Qr(r,"onBeforeInput")).length&&(o=new wn("onBeforeInput","beforeinput",null,n,o),l.push({event:o,listeners:r}),o.data=g)}Fr(l,t)}))}function Hr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Qr(e,t){for(var n=t+"Capture",r=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=Le(e,n))&&r.unshift(Hr(e,a,o)),null!=(a=Le(e,t))&&r.push(Hr(e,a,o))),e=e.return}return r}function qr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Kr(e,t,n,r,o){for(var a=t._reactName,l=[];null!==n&&n!==r;){var u=n,i=u.alternate,c=u.stateNode;if(null!==i&&i===r)break;5===u.tag&&null!==c&&(u=c,o?null!=(i=Le(n,a))&&l.unshift(Hr(n,i,u)):o||null!=(i=Le(n,a))&&l.push(Hr(n,i,u))),n=n.return}0!==l.length&&e.push({event:t,listeners:l})}var Xr=/\r\n?/g,Yr=/\u0000|\uFFFD/g;function Gr(e){return("string"==typeof e?e:""+e).replace(Xr,"\n").replace(Yr,"")}function Zr(e,t,n){if(t=Gr(t),Gr(e)!==t&&n)throw Error(a(425))}function Jr(){}var eo=null,to=null;function no(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ro="function"==typeof setTimeout?setTimeout:void 0,oo="function"==typeof clearTimeout?clearTimeout:void 0,ao="function"==typeof Promise?Promise:void 0,lo="function"==typeof queueMicrotask?queueMicrotask:void 0!==ao?function(e){return ao.resolve(null).then(e).catch(uo)}:ro;function uo(e){setTimeout((function(){throw e}))}function io(e,t){var n=t,r=0;do{var o=n.nextSibling;if(e.removeChild(n),o&&8===o.nodeType)if("/$"===(n=o.data)){if(0===r)return e.removeChild(o),void Vt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=o}while(n);Vt(t)}function co(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function so(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var fo=Math.random().toString(36).slice(2),po="__reactFiber$"+fo,ho="__reactProps$"+fo,vo="__reactContainer$"+fo,mo="__reactEvents$"+fo,yo="__reactListeners$"+fo,go="__reactHandles$"+fo;function bo(e){var t=e[po];if(t)return t;for(var n=e.parentNode;n;){if(t=n[vo]||n[po]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=so(e);null!==e;){if(n=e[po])return n;e=so(e)}return t}n=(e=n).parentNode}return null}function wo(e){return!(e=e[po]||e[vo])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function So(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function ko(e){return e[ho]||null}var xo=[],Eo=-1;function _o(e){return{current:e}}function Po(e){0>Eo||(e.current=xo[Eo],xo[Eo]=null,Eo--)}function Co(e,t){Eo++,xo[Eo]=e.current,e.current=t}var Oo={},No=_o(Oo),zo=_o(!1),To=Oo;function Lo(e,t){var n=e.type.contextTypes;if(!n)return Oo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Ro(e){return null!=e.childContextTypes}function Mo(){Po(zo),Po(No)}function jo(e,t,n){if(No.current!==Oo)throw Error(a(168));Co(No,t),Co(zo,n)}function Io(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in t))throw Error(a(108,W(e)||"Unknown",o));return D({},n,r)}function Do(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Oo,To=No.current,Co(No,e),Co(zo,zo.current),!0}function Fo(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=Io(e,t,To),r.__reactInternalMemoizedMergedChildContext=e,Po(zo),Po(No),Co(No,e)):Po(zo),Co(zo,n)}var Ao=null,Uo=!1,$o=!1;function Vo(e){null===Ao?Ao=[e]:Ao.push(e)}function Wo(){if(!$o&&null!==Ao){$o=!0;var e=0,t=bt;try{var n=Ao;for(bt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Ao=null,Uo=!1}catch(t){throw null!==Ao&&(Ao=Ao.slice(e+1)),qe(Je,Wo),t}finally{bt=t,$o=!1}}return null}var Bo=[],Ho=0,Qo=null,qo=0,Ko=[],Xo=0,Yo=null,Go=1,Zo="";function Jo(e,t){Bo[Ho++]=qo,Bo[Ho++]=Qo,Qo=e,qo=t}function ea(e,t,n){Ko[Xo++]=Go,Ko[Xo++]=Zo,Ko[Xo++]=Yo,Yo=e;var r=Go;e=Zo;var o=32-lt(r)-1;r&=~(1<<o),n+=1;var a=32-lt(t)+o;if(30<a){var l=o-o%5;a=(r&(1<<l)-1).toString(32),r>>=l,o-=l,Go=1<<32-lt(t)+o|n<<o|r,Zo=a+e}else Go=1<<a|n<<o|r,Zo=e}function ta(e){null!==e.return&&(Jo(e,1),ea(e,1,0))}function na(e){for(;e===Qo;)Qo=Bo[--Ho],Bo[Ho]=null,qo=Bo[--Ho],Bo[Ho]=null;for(;e===Yo;)Yo=Ko[--Xo],Ko[Xo]=null,Zo=Ko[--Xo],Ko[Xo]=null,Go=Ko[--Xo],Ko[Xo]=null}var ra=null,oa=null,aa=!1,la=null;function ua(e,t){var n=Tc(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function ia(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ra=e,oa=co(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ra=e,oa=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Yo?{id:Go,overflow:Zo}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Tc(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ra=e,oa=null,!0);default:return!1}}function ca(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function sa(e){if(aa){var t=oa;if(t){var n=t;if(!ia(e,t)){if(ca(e))throw Error(a(418));t=co(n.nextSibling);var r=ra;t&&ia(e,t)?ua(r,n):(e.flags=-4097&e.flags|2,aa=!1,ra=e)}}else{if(ca(e))throw Error(a(418));e.flags=-4097&e.flags|2,aa=!1,ra=e}}}function fa(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ra=e}function da(e){if(e!==ra)return!1;if(!aa)return fa(e),aa=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!no(e.type,e.memoizedProps)),t&&(t=oa)){if(ca(e))throw pa(),Error(a(418));for(;t;)ua(e,t),t=co(t.nextSibling)}if(fa(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){oa=co(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}oa=null}}else oa=ra?co(e.stateNode.nextSibling):null;return!0}function pa(){for(var e=oa;e;)e=co(e.nextSibling)}function ha(){oa=ra=null,aa=!1}function va(e){null===la?la=[e]:la.push(e)}var ma=w.ReactCurrentBatchConfig;function ya(e,t){if(e&&e.defaultProps){for(var n in t=D({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var ga=_o(null),ba=null,wa=null,Sa=null;function ka(){Sa=wa=ba=null}function xa(e){var t=ga.current;Po(ga),e._currentValue=t}function Ea(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function _a(e,t){ba=e,Sa=wa=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(wu=!0),e.firstContext=null)}function Pa(e){var t=e._currentValue;if(Sa!==e)if(e={context:e,memoizedValue:t,next:null},null===wa){if(null===ba)throw Error(a(308));wa=e,ba.dependencies={lanes:0,firstContext:e}}else wa=wa.next=e;return t}var Ca=null;function Oa(e){null===Ca?Ca=[e]:Ca.push(e)}function Na(e,t,n,r){var o=t.interleaved;return null===o?(n.next=n,Oa(t)):(n.next=o.next,o.next=n),t.interleaved=n,za(e,r)}function za(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Ta=!1;function La(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ra(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ma(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ja(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Oi)){var o=r.pending;return null===o?t.next=t:(t.next=o.next,o.next=t),r.pending=t,za(e,n)}return null===(o=r.interleaved)?(t.next=t,Oa(r)):(t.next=o.next,o.next=t),r.interleaved=t,za(e,n)}function Ia(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,gt(e,n)}}function Da(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var o=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var l={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?o=a=l:a=a.next=l,n=n.next}while(null!==n);null===a?o=a=t:a=a.next=t}else o=a=t;return n={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Fa(e,t,n,r){var o=e.updateQueue;Ta=!1;var a=o.firstBaseUpdate,l=o.lastBaseUpdate,u=o.shared.pending;if(null!==u){o.shared.pending=null;var i=u,c=i.next;i.next=null,null===l?a=c:l.next=c,l=i;var s=e.alternate;null!==s&&(u=(s=s.updateQueue).lastBaseUpdate)!==l&&(null===u?s.firstBaseUpdate=c:u.next=c,s.lastBaseUpdate=i)}if(null!==a){var f=o.baseState;for(l=0,s=c=i=null,u=a;;){var d=u.lane,p=u.eventTime;if((r&d)===d){null!==s&&(s=s.next={eventTime:p,lane:0,tag:u.tag,payload:u.payload,callback:u.callback,next:null});e:{var h=e,v=u;switch(d=t,p=n,v.tag){case 1:if("function"==typeof(h=v.payload)){f=h.call(p,f,d);break e}f=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(d="function"==typeof(h=v.payload)?h.call(p,f,d):h))break e;f=D({},f,d);break e;case 2:Ta=!0}}null!==u.callback&&0!==u.lane&&(e.flags|=64,null===(d=o.effects)?o.effects=[u]:d.push(u))}else p={eventTime:p,lane:d,tag:u.tag,payload:u.payload,callback:u.callback,next:null},null===s?(c=s=p,i=f):s=s.next=p,l|=d;if(null===(u=u.next)){if(null===(u=o.shared.pending))break;u=(d=u).next,d.next=null,o.lastBaseUpdate=d,o.shared.pending=null}}if(null===s&&(i=f),o.baseState=i,o.firstBaseUpdate=c,o.lastBaseUpdate=s,null!==(t=o.shared.interleaved)){o=t;do{l|=o.lane,o=o.next}while(o!==t)}else null===a&&(o.shared.lanes=0);Ii|=l,e.lanes=l,e.memoizedState=f}}function Aa(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=n,"function"!=typeof o)throw Error(a(191,o));o.call(r)}}}var Ua=(new r.Component).refs;function $a(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:D({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Va={isMounted:function(e){return!!(e=e._reactInternals)&&Ve(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ec(),o=tc(e),a=Ma(r,o);a.payload=t,null!=n&&(a.callback=n),null!==(t=ja(e,a,o))&&(nc(t,e,o,r),Ia(t,e,o))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ec(),o=tc(e),a=Ma(r,o);a.tag=1,a.payload=t,null!=n&&(a.callback=n),null!==(t=ja(e,a,o))&&(nc(t,e,o,r),Ia(t,e,o))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ec(),r=tc(e),o=Ma(n,r);o.tag=2,null!=t&&(o.callback=t),null!==(t=ja(e,o,r))&&(nc(t,e,r,n),Ia(t,e,r))}};function Wa(e,t,n,r,o,a,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,l):!(t.prototype&&t.prototype.isPureReactComponent&&ir(n,r)&&ir(o,a))}function Ba(e,t,n){var r=!1,o=Oo,a=t.contextType;return"object"==typeof a&&null!==a?a=Pa(a):(o=Ro(t)?To:No.current,a=(r=null!=(r=t.contextTypes))?Lo(e,o):Oo),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Va,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function Ha(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Va.enqueueReplaceState(t,t.state,null)}function Qa(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=Ua,La(e);var a=t.contextType;"object"==typeof a&&null!==a?o.context=Pa(a):(a=Ro(t)?To:No.current,o.context=Lo(e,a)),o.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&($a(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&Va.enqueueReplaceState(o,o.state,null),Fa(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4194308)}function qa(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var o=r,l=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===l?t.ref:(t=function(e){var t=o.refs;t===Ua&&(t=o.refs={}),null===e?delete t[l]:t[l]=e},t._stringRef=l,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function Ka(e,t){throw e=Object.prototype.toString.call(t),Error(a(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Xa(e){return(0,e._init)(e._payload)}function Ya(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Rc(e,t)).index=0,e.sibling=null,e}function l(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function u(t){return e&&null===t.alternate&&(t.flags|=2),t}function i(e,t,n,r){return null===t||6!==t.tag?((t=Dc(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){var a=n.type;return a===x?f(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===a||"object"==typeof a&&null!==a&&a.$$typeof===L&&Xa(a)===t.type)?((r=o(t,n.props)).ref=qa(e,t,n),r.return=e,r):((r=Mc(n.type,n.key,n.props,null,e.mode,r)).ref=qa(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Fc(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=jc(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Dc(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case S:return(n=Mc(t.type,t.key,t.props,null,e.mode,n)).ref=qa(e,null,t),n.return=e,n;case k:return(t=Fc(t,e.mode,n)).return=e,t;case L:return d(e,(0,t._init)(t._payload),n)}if(te(t)||j(t))return(t=jc(t,e.mode,n,null)).return=e,t;Ka(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==o?null:i(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case S:return n.key===o?c(e,t,n,r):null;case k:return n.key===o?s(e,t,n,r):null;case L:return p(e,t,(o=n._init)(n._payload),r)}if(te(n)||j(n))return null!==o?null:f(e,t,n,r,null);Ka(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r&&""!==r||"number"==typeof r)return i(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case S:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o);case k:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o);case L:return h(e,t,n,(0,r._init)(r._payload),o)}if(te(r)||j(r))return f(t,e=e.get(n)||null,r,o,null);Ka(t,r)}return null}function v(o,a,u,i){for(var c=null,s=null,f=a,v=a=0,m=null;null!==f&&v<u.length;v++){f.index>v?(m=f,f=null):m=f.sibling;var y=p(o,f,u[v],i);if(null===y){null===f&&(f=m);break}e&&f&&null===y.alternate&&t(o,f),a=l(y,a,v),null===s?c=y:s.sibling=y,s=y,f=m}if(v===u.length)return n(o,f),aa&&Jo(o,v),c;if(null===f){for(;v<u.length;v++)null!==(f=d(o,u[v],i))&&(a=l(f,a,v),null===s?c=f:s.sibling=f,s=f);return aa&&Jo(o,v),c}for(f=r(o,f);v<u.length;v++)null!==(m=h(f,o,v,u[v],i))&&(e&&null!==m.alternate&&f.delete(null===m.key?v:m.key),a=l(m,a,v),null===s?c=m:s.sibling=m,s=m);return e&&f.forEach((function(e){return t(o,e)})),aa&&Jo(o,v),c}function m(o,u,i,c){var s=j(i);if("function"!=typeof s)throw Error(a(150));if(null==(i=s.call(i)))throw Error(a(151));for(var f=s=null,v=u,m=u=0,y=null,g=i.next();null!==v&&!g.done;m++,g=i.next()){v.index>m?(y=v,v=null):y=v.sibling;var b=p(o,v,g.value,c);if(null===b){null===v&&(v=y);break}e&&v&&null===b.alternate&&t(o,v),u=l(b,u,m),null===f?s=b:f.sibling=b,f=b,v=y}if(g.done)return n(o,v),aa&&Jo(o,m),s;if(null===v){for(;!g.done;m++,g=i.next())null!==(g=d(o,g.value,c))&&(u=l(g,u,m),null===f?s=g:f.sibling=g,f=g);return aa&&Jo(o,m),s}for(v=r(o,v);!g.done;m++,g=i.next())null!==(g=h(v,o,m,g.value,c))&&(e&&null!==g.alternate&&v.delete(null===g.key?m:g.key),u=l(g,u,m),null===f?s=g:f.sibling=g,f=g);return e&&v.forEach((function(e){return t(o,e)})),aa&&Jo(o,m),s}return function e(r,a,l,i){if("object"==typeof l&&null!==l&&l.type===x&&null===l.key&&(l=l.props.children),"object"==typeof l&&null!==l){switch(l.$$typeof){case S:e:{for(var c=l.key,s=a;null!==s;){if(s.key===c){if((c=l.type)===x){if(7===s.tag){n(r,s.sibling),(a=o(s,l.props.children)).return=r,r=a;break e}}else if(s.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===L&&Xa(c)===s.type){n(r,s.sibling),(a=o(s,l.props)).ref=qa(r,s,l),a.return=r,r=a;break e}n(r,s);break}t(r,s),s=s.sibling}l.type===x?((a=jc(l.props.children,r.mode,i,l.key)).return=r,r=a):((i=Mc(l.type,l.key,l.props,null,r.mode,i)).ref=qa(r,a,l),i.return=r,r=i)}return u(r);case k:e:{for(s=l.key;null!==a;){if(a.key===s){if(4===a.tag&&a.stateNode.containerInfo===l.containerInfo&&a.stateNode.implementation===l.implementation){n(r,a.sibling),(a=o(a,l.children||[])).return=r,r=a;break e}n(r,a);break}t(r,a),a=a.sibling}(a=Fc(l,r.mode,i)).return=r,r=a}return u(r);case L:return e(r,a,(s=l._init)(l._payload),i)}if(te(l))return v(r,a,l,i);if(j(l))return m(r,a,l,i);Ka(r,l)}return"string"==typeof l&&""!==l||"number"==typeof l?(l=""+l,null!==a&&6===a.tag?(n(r,a.sibling),(a=o(a,l)).return=r,r=a):(n(r,a),(a=Dc(l,r.mode,i)).return=r,r=a),u(r)):n(r,a)}}var Ga=Ya(!0),Za=Ya(!1),Ja={},el=_o(Ja),tl=_o(Ja),nl=_o(Ja);function rl(e){if(e===Ja)throw Error(a(174));return e}function ol(e,t){switch(Co(nl,t),Co(tl,e),Co(el,Ja),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ie(null,"");break;default:t=ie(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Po(el),Co(el,t)}function al(){Po(el),Po(tl),Po(nl)}function ll(e){rl(nl.current);var t=rl(el.current),n=ie(t,e.type);t!==n&&(Co(tl,e),Co(el,n))}function ul(e){tl.current===e&&(Po(el),Po(tl))}var il=_o(0);function cl(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var sl=[];function fl(){for(var e=0;e<sl.length;e++)sl[e]._workInProgressVersionPrimary=null;sl.length=0}var dl=w.ReactCurrentDispatcher,pl=w.ReactCurrentBatchConfig,hl=0,vl=null,ml=null,yl=null,gl=!1,bl=!1,wl=0,Sl=0;function kl(){throw Error(a(321))}function xl(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ur(e[n],t[n]))return!1;return!0}function El(e,t,n,r,o,l){if(hl=l,vl=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,dl.current=null===e||null===e.memoizedState?uu:iu,e=n(r,o),bl){l=0;do{if(bl=!1,wl=0,25<=l)throw Error(a(301));l+=1,yl=ml=null,t.updateQueue=null,dl.current=cu,e=n(r,o)}while(bl)}if(dl.current=lu,t=null!==ml&&null!==ml.next,hl=0,yl=ml=vl=null,gl=!1,t)throw Error(a(300));return e}function _l(){var e=0!==wl;return wl=0,e}function Pl(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===yl?vl.memoizedState=yl=e:yl=yl.next=e,yl}function Cl(){if(null===ml){var e=vl.alternate;e=null!==e?e.memoizedState:null}else e=ml.next;var t=null===yl?vl.memoizedState:yl.next;if(null!==t)yl=t,ml=e;else{if(null===e)throw Error(a(310));e={memoizedState:(ml=e).memoizedState,baseState:ml.baseState,baseQueue:ml.baseQueue,queue:ml.queue,next:null},null===yl?vl.memoizedState=yl=e:yl=yl.next=e}return yl}function Ol(e,t){return"function"==typeof t?t(e):t}function Nl(e){var t=Cl(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=ml,o=r.baseQueue,l=n.pending;if(null!==l){if(null!==o){var u=o.next;o.next=l.next,l.next=u}r.baseQueue=o=l,n.pending=null}if(null!==o){l=o.next,r=r.baseState;var i=u=null,c=null,s=l;do{var f=s.lane;if((hl&f)===f)null!==c&&(c=c.next={lane:0,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null}),r=s.hasEagerState?s.eagerState:e(r,s.action);else{var d={lane:f,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null};null===c?(i=c=d,u=r):c=c.next=d,vl.lanes|=f,Ii|=f}s=s.next}while(null!==s&&s!==l);null===c?u=r:c.next=i,ur(r,t.memoizedState)||(wu=!0),t.memoizedState=r,t.baseState=u,t.baseQueue=c,n.lastRenderedState=r}if(null!==(e=n.interleaved)){o=e;do{l=o.lane,vl.lanes|=l,Ii|=l,o=o.next}while(o!==e)}else null===o&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function zl(e){var t=Cl(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,l=t.memoizedState;if(null!==o){n.pending=null;var u=o=o.next;do{l=e(l,u.action),u=u.next}while(u!==o);ur(l,t.memoizedState)||(wu=!0),t.memoizedState=l,null===t.baseQueue&&(t.baseState=l),n.lastRenderedState=l}return[l,r]}function Tl(){}function Ll(e,t){var n=vl,r=Cl(),o=t(),l=!ur(r.memoizedState,o);if(l&&(r.memoizedState=o,wu=!0),r=r.queue,Bl(jl.bind(null,n,r,e),[e]),r.getSnapshot!==t||l||null!==yl&&1&yl.memoizedState.tag){if(n.flags|=2048,Al(9,Ml.bind(null,n,r,o,t),void 0,null),null===Ni)throw Error(a(349));0!=(30&hl)||Rl(n,t,o)}return o}function Rl(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=vl.updateQueue)?(t={lastEffect:null,stores:null},vl.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ml(e,t,n,r){t.value=n,t.getSnapshot=r,Il(t)&&Dl(e)}function jl(e,t,n){return n((function(){Il(t)&&Dl(e)}))}function Il(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ur(e,n)}catch(e){return!0}}function Dl(e){var t=za(e,1);null!==t&&nc(t,e,1,-1)}function Fl(e){var t=Pl();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ol,lastRenderedState:e},t.queue=e,e=e.dispatch=nu.bind(null,vl,e),[t.memoizedState,e]}function Al(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=vl.updateQueue)?(t={lastEffect:null,stores:null},vl.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Ul(){return Cl().memoizedState}function $l(e,t,n,r){var o=Pl();vl.flags|=e,o.memoizedState=Al(1|t,n,void 0,void 0===r?null:r)}function Vl(e,t,n,r){var o=Cl();r=void 0===r?null:r;var a=void 0;if(null!==ml){var l=ml.memoizedState;if(a=l.destroy,null!==r&&xl(r,l.deps))return void(o.memoizedState=Al(t,n,a,r))}vl.flags|=e,o.memoizedState=Al(1|t,n,a,r)}function Wl(e,t){return $l(8390656,8,e,t)}function Bl(e,t){return Vl(2048,8,e,t)}function Hl(e,t){return Vl(4,2,e,t)}function Ql(e,t){return Vl(4,4,e,t)}function ql(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Kl(e,t,n){return n=null!=n?n.concat([e]):null,Vl(4,4,ql.bind(null,t,e),n)}function Xl(){}function Yl(e,t){var n=Cl();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&xl(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Gl(e,t){var n=Cl();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&xl(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Zl(e,t,n){return 0==(21&hl)?(e.baseState&&(e.baseState=!1,wu=!0),e.memoizedState=n):(ur(n,t)||(n=vt(),vl.lanes|=n,Ii|=n,e.baseState=!0),t)}function Jl(e,t){var n=bt;bt=0!==n&&4>n?n:4,e(!0);var r=pl.transition;pl.transition={};try{e(!1),t()}finally{bt=n,pl.transition=r}}function eu(){return Cl().memoizedState}function tu(e,t,n){var r=tc(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},ru(e)?ou(t,n):null!==(n=Na(e,t,n,r))&&(nc(n,e,r,ec()),au(n,t,r))}function nu(e,t,n){var r=tc(e),o={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(ru(e))ou(t,o);else{var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=a(l,n);if(o.hasEagerState=!0,o.eagerState=u,ur(u,l)){var i=t.interleaved;return null===i?(o.next=o,Oa(t)):(o.next=i.next,i.next=o),void(t.interleaved=o)}}catch(e){}null!==(n=Na(e,t,o,r))&&(nc(n,e,r,o=ec()),au(n,t,r))}}function ru(e){var t=e.alternate;return e===vl||null!==t&&t===vl}function ou(e,t){bl=gl=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function au(e,t,n){if(0!=(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,gt(e,n)}}var lu={readContext:Pa,useCallback:kl,useContext:kl,useEffect:kl,useImperativeHandle:kl,useInsertionEffect:kl,useLayoutEffect:kl,useMemo:kl,useReducer:kl,useRef:kl,useState:kl,useDebugValue:kl,useDeferredValue:kl,useTransition:kl,useMutableSource:kl,useSyncExternalStore:kl,useId:kl,unstable_isNewReconciler:!1},uu={readContext:Pa,useCallback:function(e,t){return Pl().memoizedState=[e,void 0===t?null:t],e},useContext:Pa,useEffect:Wl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,$l(4194308,4,ql.bind(null,t,e),n)},useLayoutEffect:function(e,t){return $l(4194308,4,e,t)},useInsertionEffect:function(e,t){return $l(4,2,e,t)},useMemo:function(e,t){var n=Pl();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Pl();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=tu.bind(null,vl,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Pl().memoizedState=e},useState:Fl,useDebugValue:Xl,useDeferredValue:function(e){return Pl().memoizedState=e},useTransition:function(){var e=Fl(!1),t=e[0];return e=Jl.bind(null,e[1]),Pl().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=vl,o=Pl();if(aa){if(void 0===n)throw Error(a(407));n=n()}else{if(n=t(),null===Ni)throw Error(a(349));0!=(30&hl)||Rl(r,t,n)}o.memoizedState=n;var l={value:n,getSnapshot:t};return o.queue=l,Wl(jl.bind(null,r,l,e),[e]),r.flags|=2048,Al(9,Ml.bind(null,r,l,n,t),void 0,null),n},useId:function(){var e=Pl(),t=Ni.identifierPrefix;if(aa){var n=Zo;t=":"+t+"R"+(n=(Go&~(1<<32-lt(Go)-1)).toString(32)+n),0<(n=wl++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=Sl++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},iu={readContext:Pa,useCallback:Yl,useContext:Pa,useEffect:Bl,useImperativeHandle:Kl,useInsertionEffect:Hl,useLayoutEffect:Ql,useMemo:Gl,useReducer:Nl,useRef:Ul,useState:function(){return Nl(Ol)},useDebugValue:Xl,useDeferredValue:function(e){return Zl(Cl(),ml.memoizedState,e)},useTransition:function(){return[Nl(Ol)[0],Cl().memoizedState]},useMutableSource:Tl,useSyncExternalStore:Ll,useId:eu,unstable_isNewReconciler:!1},cu={readContext:Pa,useCallback:Yl,useContext:Pa,useEffect:Bl,useImperativeHandle:Kl,useInsertionEffect:Hl,useLayoutEffect:Ql,useMemo:Gl,useReducer:zl,useRef:Ul,useState:function(){return zl(Ol)},useDebugValue:Xl,useDeferredValue:function(e){var t=Cl();return null===ml?t.memoizedState=e:Zl(t,ml.memoizedState,e)},useTransition:function(){return[zl(Ol)[0],Cl().memoizedState]},useMutableSource:Tl,useSyncExternalStore:Ll,useId:eu,unstable_isNewReconciler:!1};function su(e,t){try{var n="",r=t;do{n+=$(r),r=r.return}while(r);var o=n}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:o,digest:null}}function fu(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function du(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var pu="function"==typeof WeakMap?WeakMap:Map;function hu(e,t,n){(n=Ma(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Bi||(Bi=!0,Hi=r),du(0,t)},n}function vu(e,t,n){(n=Ma(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)},n.callback=function(){du(0,t)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){du(0,t),"function"!=typeof r&&(null===Qi?Qi=new Set([this]):Qi.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function mu(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new pu;var o=new Set;r.set(t,o)}else void 0===(o=r.get(t))&&(o=new Set,r.set(t,o));o.has(n)||(o.add(n),e=_c.bind(null,e,t,n),t.then(e,e))}function yu(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function gu(e,t,n,r,o){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Ma(-1,1)).tag=2,ja(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=o,e)}var bu=w.ReactCurrentOwner,wu=!1;function Su(e,t,n,r){t.child=null===e?Za(t,null,n,r):Ga(t,e.child,n,r)}function ku(e,t,n,r,o){n=n.render;var a=t.ref;return _a(t,o),r=El(e,t,n,r,a,o),n=_l(),null===e||wu?(aa&&n&&ta(t),t.flags|=1,Su(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~o,Bu(e,t,o))}function xu(e,t,n,r,o){if(null===e){var a=n.type;return"function"!=typeof a||Lc(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Mc(n.type,null,r,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Eu(e,t,a,r,o))}if(a=e.child,0==(e.lanes&o)){var l=a.memoizedProps;if((n=null!==(n=n.compare)?n:ir)(l,r)&&e.ref===t.ref)return Bu(e,t,o)}return t.flags|=1,(e=Rc(a,r)).ref=t.ref,e.return=t,t.child=e}function Eu(e,t,n,r,o){if(null!==e){var a=e.memoizedProps;if(ir(a,r)&&e.ref===t.ref){if(wu=!1,t.pendingProps=r=a,0==(e.lanes&o))return t.lanes=e.lanes,Bu(e,t,o);0!=(131072&e.flags)&&(wu=!0)}}return Cu(e,t,n,r,o)}function _u(e,t,n){var r=t.pendingProps,o=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Co(Ri,Li),Li|=n;else{if(0==(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Co(Ri,Li),Li|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==a?a.baseLanes:n,Co(Ri,Li),Li|=r}else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,Co(Ri,Li),Li|=r;return Su(e,t,o,n),t.child}function Pu(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Cu(e,t,n,r,o){var a=Ro(n)?To:No.current;return a=Lo(t,a),_a(t,o),n=El(e,t,n,r,a,o),r=_l(),null===e||wu?(aa&&r&&ta(t),t.flags|=1,Su(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~o,Bu(e,t,o))}function Ou(e,t,n,r,o){if(Ro(n)){var a=!0;Do(t)}else a=!1;if(_a(t,o),null===t.stateNode)Wu(e,t),Ba(t,n,r),Qa(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,u=t.memoizedProps;l.props=u;var i=l.context,c=n.contextType;c="object"==typeof c&&null!==c?Pa(c):Lo(t,c=Ro(n)?To:No.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(u!==r||i!==c)&&Ha(t,l,r,c),Ta=!1;var d=t.memoizedState;l.state=d,Fa(t,r,l,o),i=t.memoizedState,u!==r||d!==i||zo.current||Ta?("function"==typeof s&&($a(t,n,s,r),i=t.memoizedState),(u=Ta||Wa(t,n,u,r,d,i,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.flags|=4194308)):("function"==typeof l.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=i),l.props=r,l.state=i,l.context=c,r=u):("function"==typeof l.componentDidMount&&(t.flags|=4194308),r=!1)}else{l=t.stateNode,Ra(e,t),u=t.memoizedProps,c=t.type===t.elementType?u:ya(t.type,u),l.props=c,f=t.pendingProps,d=l.context,i="object"==typeof(i=n.contextType)&&null!==i?Pa(i):Lo(t,i=Ro(n)?To:No.current);var p=n.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(u!==f||d!==i)&&Ha(t,l,r,i),Ta=!1,d=t.memoizedState,l.state=d,Fa(t,r,l,o);var h=t.memoizedState;u!==f||d!==h||zo.current||Ta?("function"==typeof p&&($a(t,n,p,r),h=t.memoizedState),(c=Ta||Wa(t,n,c,r,d,h,i)||!1)?(s||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,h,i),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,h,i)),"function"==typeof l.componentDidUpdate&&(t.flags|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof l.componentDidUpdate||u===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||u===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=h),l.props=r,l.state=h,l.context=i,r=c):("function"!=typeof l.componentDidUpdate||u===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||u===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),r=!1)}return Nu(e,t,n,r,a,o)}function Nu(e,t,n,r,o,a){Pu(e,t);var l=0!=(128&t.flags);if(!r&&!l)return o&&Fo(t,n,!1),Bu(e,t,a);r=t.stateNode,bu.current=t;var u=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&l?(t.child=Ga(t,e.child,null,a),t.child=Ga(t,null,u,a)):Su(e,t,u,a),t.memoizedState=r.state,o&&Fo(t,n,!0),t.child}function zu(e){var t=e.stateNode;t.pendingContext?jo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&jo(0,t.context,!1),ol(e,t.containerInfo)}function Tu(e,t,n,r,o){return ha(),va(o),t.flags|=256,Su(e,t,n,r),t.child}var Lu,Ru,Mu,ju={dehydrated:null,treeContext:null,retryLane:0};function Iu(e){return{baseLanes:e,cachePool:null,transitions:null}}function Du(e,t,n){var r,o=t.pendingProps,l=il.current,u=!1,i=0!=(128&t.flags);if((r=i)||(r=(null===e||null!==e.memoizedState)&&0!=(2&l)),r?(u=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(l|=1),Co(il,1&l),null===e)return sa(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(i=o.children,e=o.fallback,u?(o=t.mode,u=t.child,i={mode:"hidden",children:i},0==(1&o)&&null!==u?(u.childLanes=0,u.pendingProps=i):u=Ic(i,o,0,null),e=jc(e,o,n,null),u.return=t,e.return=t,u.sibling=e,t.child=u,t.child.memoizedState=Iu(n),t.memoizedState=ju,e):Fu(t,i));if(null!==(l=e.memoizedState)&&null!==(r=l.dehydrated))return function(e,t,n,r,o,l,u){if(n)return 256&t.flags?(t.flags&=-257,Au(e,t,u,r=fu(Error(a(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(l=r.fallback,o=t.mode,r=Ic({mode:"visible",children:r.children},o,0,null),(l=jc(l,o,u,null)).flags|=2,r.return=t,l.return=t,r.sibling=l,t.child=r,0!=(1&t.mode)&&Ga(t,e.child,null,u),t.child.memoizedState=Iu(u),t.memoizedState=ju,l);if(0==(1&t.mode))return Au(e,t,u,null);if("$!"===o.data){if(r=o.nextSibling&&o.nextSibling.dataset)var i=r.dgst;return r=i,Au(e,t,u,r=fu(l=Error(a(419)),r,void 0))}if(i=0!=(u&e.childLanes),wu||i){if(null!==(r=Ni)){switch(u&-u){case 4:o=2;break;case 16:o=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:o=32;break;case 536870912:o=268435456;break;default:o=0}0!==(o=0!=(o&(r.suspendedLanes|u))?0:o)&&o!==l.retryLane&&(l.retryLane=o,za(e,o),nc(r,e,o,-1))}return vc(),Au(e,t,u,r=fu(Error(a(421))))}return"$?"===o.data?(t.flags|=128,t.child=e.child,t=Cc.bind(null,e),o._reactRetry=t,null):(e=l.treeContext,oa=co(o.nextSibling),ra=t,aa=!0,la=null,null!==e&&(Ko[Xo++]=Go,Ko[Xo++]=Zo,Ko[Xo++]=Yo,Go=e.id,Zo=e.overflow,Yo=t),(t=Fu(t,r.children)).flags|=4096,t)}(e,t,i,o,r,l,n);if(u){u=o.fallback,i=t.mode,r=(l=e.child).sibling;var c={mode:"hidden",children:o.children};return 0==(1&i)&&t.child!==l?((o=t.child).childLanes=0,o.pendingProps=c,t.deletions=null):(o=Rc(l,c)).subtreeFlags=14680064&l.subtreeFlags,null!==r?u=Rc(r,u):(u=jc(u,i,n,null)).flags|=2,u.return=t,o.return=t,o.sibling=u,t.child=o,o=u,u=t.child,i=null===(i=e.child.memoizedState)?Iu(n):{baseLanes:i.baseLanes|n,cachePool:null,transitions:i.transitions},u.memoizedState=i,u.childLanes=e.childLanes&~n,t.memoizedState=ju,o}return e=(u=e.child).sibling,o=Rc(u,{mode:"visible",children:o.children}),0==(1&t.mode)&&(o.lanes=n),o.return=t,o.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=o,t.memoizedState=null,o}function Fu(e,t){return(t=Ic({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Au(e,t,n,r){return null!==r&&va(r),Ga(t,e.child,null,n),(e=Fu(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Uu(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Ea(e.return,t,n)}function $u(e,t,n,r,o){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:o}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailMode=o)}function Vu(e,t,n){var r=t.pendingProps,o=r.revealOrder,a=r.tail;if(Su(e,t,r.children,n),0!=(2&(r=il.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Uu(e,n,t);else if(19===e.tag)Uu(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Co(il,r),0==(1&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===cl(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),$u(t,!1,o,n,a);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===cl(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}$u(t,!0,n,null,a);break;case"together":$u(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Wu(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Bu(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ii|=t.lanes,0==(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Rc(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Rc(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Hu(e,t){if(!aa)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Qu(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var o=e.child;null!==o;)n|=o.lanes|o.childLanes,r|=14680064&o.subtreeFlags,r|=14680064&o.flags,o.return=e,o=o.sibling;else for(o=e.child;null!==o;)n|=o.lanes|o.childLanes,r|=o.subtreeFlags,r|=o.flags,o.return=e,o=o.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function qu(e,t,n){var r=t.pendingProps;switch(na(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Qu(t),null;case 1:case 17:return Ro(t.type)&&Mo(),Qu(t),null;case 3:return r=t.stateNode,al(),Po(zo),Po(No),fl(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(da(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==la&&(lc(la),la=null))),Qu(t),null;case 5:ul(t);var o=rl(nl.current);if(n=t.type,null!==e&&null!=t.stateNode)Ru(e,t,n,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(a(166));return Qu(t),null}if(e=rl(el.current),da(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[po]=t,r[ho]=l,e=0!=(1&t.mode),n){case"dialog":Ar("cancel",r),Ar("close",r);break;case"iframe":case"object":case"embed":Ar("load",r);break;case"video":case"audio":for(o=0;o<jr.length;o++)Ar(jr[o],r);break;case"source":Ar("error",r);break;case"img":case"image":case"link":Ar("error",r),Ar("load",r);break;case"details":Ar("toggle",r);break;case"input":Y(r,l),Ar("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Ar("invalid",r);break;case"textarea":oe(r,l),Ar("invalid",r)}for(var i in ge(n,l),o=null,l)if(l.hasOwnProperty(i)){var c=l[i];"children"===i?"string"==typeof c?r.textContent!==c&&(!0!==l.suppressHydrationWarning&&Zr(r.textContent,c,e),o=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(!0!==l.suppressHydrationWarning&&Zr(r.textContent,c,e),o=["children",""+c]):u.hasOwnProperty(i)&&null!=c&&"onScroll"===i&&Ar("scroll",r)}switch(n){case"input":Q(r),J(r,l,!0);break;case"textarea":Q(r),le(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Jr)}r=o,t.updateQueue=r,null!==r&&(t.flags|=4)}else{i=9===o.nodeType?o:o.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ue(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=i.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=i.createElement(n,{is:r.is}):(e=i.createElement(n),"select"===n&&(i=e,r.multiple?i.multiple=!0:r.size&&(i.size=r.size))):e=i.createElementNS(e,n),e[po]=t,e[ho]=r,Lu(e,t),t.stateNode=e;e:{switch(i=be(n,r),n){case"dialog":Ar("cancel",e),Ar("close",e),o=r;break;case"iframe":case"object":case"embed":Ar("load",e),o=r;break;case"video":case"audio":for(o=0;o<jr.length;o++)Ar(jr[o],e);o=r;break;case"source":Ar("error",e),o=r;break;case"img":case"image":case"link":Ar("error",e),Ar("load",e),o=r;break;case"details":Ar("toggle",e),o=r;break;case"input":Y(e,r),o=X(e,r),Ar("invalid",e);break;case"option":default:o=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=D({},r,{value:void 0}),Ar("invalid",e);break;case"textarea":oe(e,r),o=re(e,r),Ar("invalid",e)}for(l in ge(n,o),c=o)if(c.hasOwnProperty(l)){var s=c[l];"style"===l?me(e,s):"dangerouslySetInnerHTML"===l?null!=(s=s?s.__html:void 0)&&fe(e,s):"children"===l?"string"==typeof s?("textarea"!==n||""!==s)&&de(e,s):"number"==typeof s&&de(e,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=s&&"onScroll"===l&&Ar("scroll",e):null!=s&&b(e,l,s,i))}switch(n){case"input":Q(e),J(e,r,!1);break;case"textarea":Q(e),le(e);break;case"option":null!=r.value&&e.setAttribute("value",""+B(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ne(e,!!r.multiple,l,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=Jr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Qu(t),null;case 6:if(e&&null!=t.stateNode)Mu(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));if(n=rl(nl.current),rl(el.current),da(t)){if(r=t.stateNode,n=t.memoizedProps,r[po]=t,(l=r.nodeValue!==n)&&null!==(e=ra))switch(e.tag){case 3:Zr(r.nodeValue,n,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Zr(r.nodeValue,n,0!=(1&e.mode))}l&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[po]=t,t.stateNode=r}return Qu(t),null;case 13:if(Po(il),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(aa&&null!==oa&&0!=(1&t.mode)&&0==(128&t.flags))pa(),ha(),t.flags|=98560,l=!1;else if(l=da(t),null!==r&&null!==r.dehydrated){if(null===e){if(!l)throw Error(a(318));if(!(l=null!==(l=t.memoizedState)?l.dehydrated:null))throw Error(a(317));l[po]=t}else ha(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Qu(t),l=!1}else null!==la&&(lc(la),la=null),l=!0;if(!l)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=n,t):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&il.current)?0===Mi&&(Mi=3):vc())),null!==t.updateQueue&&(t.flags|=4),Qu(t),null);case 4:return al(),null===e&&Vr(t.stateNode.containerInfo),Qu(t),null;case 10:return xa(t.type._context),Qu(t),null;case 19:if(Po(il),null===(l=t.memoizedState))return Qu(t),null;if(r=0!=(128&t.flags),null===(i=l.rendering))if(r)Hu(l,!1);else{if(0!==Mi||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(i=cl(e))){for(t.flags|=128,Hu(l,!1),null!==(r=i.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=14680066,null===(i=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.subtreeFlags=0,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=i.childLanes,l.lanes=i.lanes,l.child=i.child,l.subtreeFlags=0,l.deletions=null,l.memoizedProps=i.memoizedProps,l.memoizedState=i.memoizedState,l.updateQueue=i.updateQueue,l.type=i.type,e=i.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Co(il,1&il.current|2),t.child}e=e.sibling}null!==l.tail&&Ge()>Vi&&(t.flags|=128,r=!0,Hu(l,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=cl(i))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Hu(l,!0),null===l.tail&&"hidden"===l.tailMode&&!i.alternate&&!aa)return Qu(t),null}else 2*Ge()-l.renderingStartTime>Vi&&1073741824!==n&&(t.flags|=128,r=!0,Hu(l,!1),t.lanes=4194304);l.isBackwards?(i.sibling=t.child,t.child=i):(null!==(n=l.last)?n.sibling=i:t.child=i,l.last=i)}return null!==l.tail?(t=l.tail,l.rendering=t,l.tail=t.sibling,l.renderingStartTime=Ge(),t.sibling=null,n=il.current,Co(il,r?1&n|2:1&n),t):(Qu(t),null);case 22:case 23:return fc(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!=(1&t.mode)?0!=(1073741824&Li)&&(Qu(t),6&t.subtreeFlags&&(t.flags|=8192)):Qu(t),null;case 24:case 25:return null}throw Error(a(156,t.tag))}function Ku(e,t){switch(na(t),t.tag){case 1:return Ro(t.type)&&Mo(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return al(),Po(zo),Po(No),fl(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return ul(t),null;case 13:if(Po(il),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(a(340));ha()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Po(il),null;case 4:return al(),null;case 10:return xa(t.type._context),null;case 22:case 23:return fc(),null;default:return null}}Lu=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ru=function(e,t,n,r){var o=e.memoizedProps;if(o!==r){e=t.stateNode,rl(el.current);var a,l=null;switch(n){case"input":o=X(e,o),r=X(e,r),l=[];break;case"select":o=D({},o,{value:void 0}),r=D({},r,{value:void 0}),l=[];break;case"textarea":o=re(e,o),r=re(e,r),l=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=Jr)}for(s in ge(n,r),n=null,o)if(!r.hasOwnProperty(s)&&o.hasOwnProperty(s)&&null!=o[s])if("style"===s){var i=o[s];for(a in i)i.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else"dangerouslySetInnerHTML"!==s&&"children"!==s&&"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(u.hasOwnProperty(s)?l||(l=[]):(l=l||[]).push(s,null));for(s in r){var c=r[s];if(i=null!=o?o[s]:void 0,r.hasOwnProperty(s)&&c!==i&&(null!=c||null!=i))if("style"===s)if(i){for(a in i)!i.hasOwnProperty(a)||c&&c.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in c)c.hasOwnProperty(a)&&i[a]!==c[a]&&(n||(n={}),n[a]=c[a])}else n||(l||(l=[]),l.push(s,n)),n=c;else"dangerouslySetInnerHTML"===s?(c=c?c.__html:void 0,i=i?i.__html:void 0,null!=c&&i!==c&&(l=l||[]).push(s,c)):"children"===s?"string"!=typeof c&&"number"!=typeof c||(l=l||[]).push(s,""+c):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&(u.hasOwnProperty(s)?(null!=c&&"onScroll"===s&&Ar("scroll",e),l||i===c||(l=[])):(l=l||[]).push(s,c))}n&&(l=l||[]).push("style",n);var s=l;(t.updateQueue=s)&&(t.flags|=4)}},Mu=function(e,t,n,r){n!==r&&(t.flags|=4)};var Xu=!1,Yu=!1,Gu="function"==typeof WeakSet?WeakSet:Set,Zu=null;function Ju(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Ec(e,t,n)}else n.current=null}function ei(e,t,n){try{n()}catch(n){Ec(e,t,n)}}var ti=!1;function ni(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var o=r=r.next;do{if((o.tag&e)===e){var a=o.destroy;o.destroy=void 0,void 0!==a&&ei(t,n,a)}o=o.next}while(o!==r)}}function ri(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function oi(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function ai(e){var t=e.alternate;null!==t&&(e.alternate=null,ai(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[po],delete t[ho],delete t[mo],delete t[yo],delete t[go]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function li(e){return 5===e.tag||3===e.tag||4===e.tag}function ui(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||li(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ii(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(ii(e,t,n),e=e.sibling;null!==e;)ii(e,t,n),e=e.sibling}function ci(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ci(e,t,n),e=e.sibling;null!==e;)ci(e,t,n),e=e.sibling}var si=null,fi=!1;function di(e,t,n){for(n=n.child;null!==n;)pi(e,t,n),n=n.sibling}function pi(e,t,n){if(at&&"function"==typeof at.onCommitFiberUnmount)try{at.onCommitFiberUnmount(ot,n)}catch(e){}switch(n.tag){case 5:Yu||Ju(n,t);case 6:var r=si,o=fi;si=null,di(e,t,n),fi=o,null!==(si=r)&&(fi?(e=si,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):si.removeChild(n.stateNode));break;case 18:null!==si&&(fi?(e=si,n=n.stateNode,8===e.nodeType?io(e.parentNode,n):1===e.nodeType&&io(e,n),Vt(e)):io(si,n.stateNode));break;case 4:r=si,o=fi,si=n.stateNode.containerInfo,fi=!0,di(e,t,n),si=r,fi=o;break;case 0:case 11:case 14:case 15:if(!Yu&&null!==(r=n.updateQueue)&&null!==(r=r.lastEffect)){o=r=r.next;do{var a=o,l=a.destroy;a=a.tag,void 0!==l&&(0!=(2&a)||0!=(4&a))&&ei(n,t,l),o=o.next}while(o!==r)}di(e,t,n);break;case 1:if(!Yu&&(Ju(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(e){Ec(n,t,e)}di(e,t,n);break;case 21:di(e,t,n);break;case 22:1&n.mode?(Yu=(r=Yu)||null!==n.memoizedState,di(e,t,n),Yu=r):di(e,t,n);break;default:di(e,t,n)}}function hi(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Gu),t.forEach((function(t){var r=Oc.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function vi(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var o=n[r];try{var l=e,u=t,i=u;e:for(;null!==i;){switch(i.tag){case 5:si=i.stateNode,fi=!1;break e;case 3:case 4:si=i.stateNode.containerInfo,fi=!0;break e}i=i.return}if(null===si)throw Error(a(160));pi(l,u,o),si=null,fi=!1;var c=o.alternate;null!==c&&(c.return=null),o.return=null}catch(e){Ec(o,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)mi(t,e),t=t.sibling}function mi(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(vi(t,e),yi(e),4&r){try{ni(3,e,e.return),ri(3,e)}catch(t){Ec(e,e.return,t)}try{ni(5,e,e.return)}catch(t){Ec(e,e.return,t)}}break;case 1:vi(t,e),yi(e),512&r&&null!==n&&Ju(n,n.return);break;case 5:if(vi(t,e),yi(e),512&r&&null!==n&&Ju(n,n.return),32&e.flags){var o=e.stateNode;try{de(o,"")}catch(t){Ec(e,e.return,t)}}if(4&r&&null!=(o=e.stateNode)){var l=e.memoizedProps,u=null!==n?n.memoizedProps:l,i=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===i&&"radio"===l.type&&null!=l.name&&G(o,l),be(i,u);var s=be(i,l);for(u=0;u<c.length;u+=2){var f=c[u],d=c[u+1];"style"===f?me(o,d):"dangerouslySetInnerHTML"===f?fe(o,d):"children"===f?de(o,d):b(o,f,d,s)}switch(i){case"input":Z(o,l);break;case"textarea":ae(o,l);break;case"select":var p=o._wrapperState.wasMultiple;o._wrapperState.wasMultiple=!!l.multiple;var h=l.value;null!=h?ne(o,!!l.multiple,h,!1):p!==!!l.multiple&&(null!=l.defaultValue?ne(o,!!l.multiple,l.defaultValue,!0):ne(o,!!l.multiple,l.multiple?[]:"",!1))}o[ho]=l}catch(t){Ec(e,e.return,t)}}break;case 6:if(vi(t,e),yi(e),4&r){if(null===e.stateNode)throw Error(a(162));o=e.stateNode,l=e.memoizedProps;try{o.nodeValue=l}catch(t){Ec(e,e.return,t)}}break;case 3:if(vi(t,e),yi(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Vt(t.containerInfo)}catch(t){Ec(e,e.return,t)}break;case 4:default:vi(t,e),yi(e);break;case 13:vi(t,e),yi(e),8192&(o=e.child).flags&&(l=null!==o.memoizedState,o.stateNode.isHidden=l,!l||null!==o.alternate&&null!==o.alternate.memoizedState||($i=Ge())),4&r&&hi(e);break;case 22:if(f=null!==n&&null!==n.memoizedState,1&e.mode?(Yu=(s=Yu)||f,vi(t,e),Yu=s):vi(t,e),yi(e),8192&r){if(s=null!==e.memoizedState,(e.stateNode.isHidden=s)&&!f&&0!=(1&e.mode))for(Zu=e,f=e.child;null!==f;){for(d=Zu=f;null!==Zu;){switch(h=(p=Zu).child,p.tag){case 0:case 11:case 14:case 15:ni(4,p,p.return);break;case 1:Ju(p,p.return);var v=p.stateNode;if("function"==typeof v.componentWillUnmount){r=p,n=p.return;try{t=r,v.props=t.memoizedProps,v.state=t.memoizedState,v.componentWillUnmount()}catch(e){Ec(r,n,e)}}break;case 5:Ju(p,p.return);break;case 22:if(null!==p.memoizedState){Si(d);continue}}null!==h?(h.return=p,Zu=h):Si(d)}f=f.sibling}e:for(f=null,d=e;;){if(5===d.tag){if(null===f){f=d;try{o=d.stateNode,s?"function"==typeof(l=o.style).setProperty?l.setProperty("display","none","important"):l.display="none":(i=d.stateNode,u=null!=(c=d.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,i.style.display=ve("display",u))}catch(t){Ec(e,e.return,t)}}}else if(6===d.tag){if(null===f)try{d.stateNode.nodeValue=s?"":d.memoizedProps}catch(t){Ec(e,e.return,t)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;f===d&&(f=null),d=d.return}f===d&&(f=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:vi(t,e),yi(e),4&r&&hi(e);case 21:}}function yi(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(li(n)){var r=n;break e}n=n.return}throw Error(a(160))}switch(r.tag){case 5:var o=r.stateNode;32&r.flags&&(de(o,""),r.flags&=-33),ci(e,ui(e),o);break;case 3:case 4:var l=r.stateNode.containerInfo;ii(e,ui(e),l);break;default:throw Error(a(161))}}catch(t){Ec(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function gi(e,t,n){Zu=e,bi(e,t,n)}function bi(e,t,n){for(var r=0!=(1&e.mode);null!==Zu;){var o=Zu,a=o.child;if(22===o.tag&&r){var l=null!==o.memoizedState||Xu;if(!l){var u=o.alternate,i=null!==u&&null!==u.memoizedState||Yu;u=Xu;var c=Yu;if(Xu=l,(Yu=i)&&!c)for(Zu=o;null!==Zu;)i=(l=Zu).child,22===l.tag&&null!==l.memoizedState?ki(o):null!==i?(i.return=l,Zu=i):ki(o);for(;null!==a;)Zu=a,bi(a,t,n),a=a.sibling;Zu=o,Xu=u,Yu=c}wi(e)}else 0!=(8772&o.subtreeFlags)&&null!==a?(a.return=o,Zu=a):wi(e)}}function wi(e){for(;null!==Zu;){var t=Zu;if(0!=(8772&t.flags)){var n=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Yu||ri(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Yu)if(null===n)r.componentDidMount();else{var o=t.elementType===t.type?n.memoizedProps:ya(t.type,n.memoizedProps);r.componentDidUpdate(o,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var l=t.updateQueue;null!==l&&Aa(t,l,r);break;case 3:var u=t.updateQueue;if(null!==u){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Aa(t,u,n)}break;case 5:var i=t.stateNode;if(null===n&&4&t.flags){n=i;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&n.focus();break;case"img":c.src&&(n.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var s=t.alternate;if(null!==s){var f=s.memoizedState;if(null!==f){var d=f.dehydrated;null!==d&&Vt(d)}}}break;default:throw Error(a(163))}Yu||512&t.flags&&oi(t)}catch(e){Ec(t,t.return,e)}}if(t===e){Zu=null;break}if(null!==(n=t.sibling)){n.return=t.return,Zu=n;break}Zu=t.return}}function Si(e){for(;null!==Zu;){var t=Zu;if(t===e){Zu=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Zu=n;break}Zu=t.return}}function ki(e){for(;null!==Zu;){var t=Zu;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{ri(4,t)}catch(e){Ec(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var o=t.return;try{r.componentDidMount()}catch(e){Ec(t,o,e)}}var a=t.return;try{oi(t)}catch(e){Ec(t,a,e)}break;case 5:var l=t.return;try{oi(t)}catch(e){Ec(t,l,e)}}}catch(e){Ec(t,t.return,e)}if(t===e){Zu=null;break}var u=t.sibling;if(null!==u){u.return=t.return,Zu=u;break}Zu=t.return}}var xi,Ei=Math.ceil,_i=w.ReactCurrentDispatcher,Pi=w.ReactCurrentOwner,Ci=w.ReactCurrentBatchConfig,Oi=0,Ni=null,zi=null,Ti=0,Li=0,Ri=_o(0),Mi=0,ji=null,Ii=0,Di=0,Fi=0,Ai=null,Ui=null,$i=0,Vi=1/0,Wi=null,Bi=!1,Hi=null,Qi=null,qi=!1,Ki=null,Xi=0,Yi=0,Gi=null,Zi=-1,Ji=0;function ec(){return 0!=(6&Oi)?Ge():-1!==Zi?Zi:Zi=Ge()}function tc(e){return 0==(1&e.mode)?1:0!=(2&Oi)&&0!==Ti?Ti&-Ti:null!==ma.transition?(0===Ji&&(Ji=vt()),Ji):0!==(e=bt)?e:e=void 0===(e=window.event)?16:Yt(e.type)}function nc(e,t,n,r){if(50<Yi)throw Yi=0,Gi=null,Error(a(185));yt(e,n,r),0!=(2&Oi)&&e===Ni||(e===Ni&&(0==(2&Oi)&&(Di|=n),4===Mi&&uc(e,Ti)),rc(e,r),1===n&&0===Oi&&0==(1&t.mode)&&(Vi=Ge()+500,Uo&&Wo()))}function rc(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,o=e.expirationTimes,a=e.pendingLanes;0<a;){var l=31-lt(a),u=1<<l,i=o[l];-1===i?0!=(u&n)&&0==(u&r)||(o[l]=pt(u,t)):i<=t&&(e.expiredLanes|=u),a&=~u}}(e,t);var r=dt(e,e===Ni?Ti:0);if(0===r)null!==n&&Ke(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ke(n),1===t)0===e.tag?function(e){Uo=!0,Vo(e)}(ic.bind(null,e)):Vo(ic.bind(null,e)),lo((function(){0==(6&Oi)&&Wo()})),n=null;else{switch(wt(r)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Nc(n,oc.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function oc(e,t){if(Zi=-1,Ji=0,0!=(6&Oi))throw Error(a(327));var n=e.callbackNode;if(kc()&&e.callbackNode!==n)return null;var r=dt(e,e===Ni?Ti:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||t)t=mc(e,r);else{t=r;var o=Oi;Oi|=2;var l=hc();for(Ni===e&&Ti===t||(Wi=null,Vi=Ge()+500,dc(e,t));;)try{gc();break}catch(t){pc(e,t)}ka(),_i.current=l,Oi=o,null!==zi?t=0:(Ni=null,Ti=0,t=Mi)}if(0!==t){if(2===t&&0!==(o=ht(e))&&(r=o,t=ac(e,o)),1===t)throw n=ji,dc(e,0),uc(e,r),rc(e,Ge()),n;if(6===t)uc(e,r);else{if(o=e.current.alternate,0==(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var o=n[r],a=o.getSnapshot;o=o.value;try{if(!ur(a(),o))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(o)&&(2===(t=mc(e,r))&&0!==(l=ht(e))&&(r=l,t=ac(e,l)),1===t))throw n=ji,dc(e,0),uc(e,r),rc(e,Ge()),n;switch(e.finishedWork=o,e.finishedLanes=r,t){case 0:case 1:throw Error(a(345));case 2:case 5:Sc(e,Ui,Wi);break;case 3:if(uc(e,r),(130023424&r)===r&&10<(t=$i+500-Ge())){if(0!==dt(e,0))break;if(((o=e.suspendedLanes)&r)!==r){ec(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=ro(Sc.bind(null,e,Ui,Wi),t);break}Sc(e,Ui,Wi);break;case 4:if(uc(e,r),(4194240&r)===r)break;for(t=e.eventTimes,o=-1;0<r;){var u=31-lt(r);l=1<<u,(u=t[u])>o&&(o=u),r&=~l}if(r=o,10<(r=(120>(r=Ge()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Ei(r/1960))-r)){e.timeoutHandle=ro(Sc.bind(null,e,Ui,Wi),r);break}Sc(e,Ui,Wi);break;default:throw Error(a(329))}}}return rc(e,Ge()),e.callbackNode===n?oc.bind(null,e):null}function ac(e,t){var n=Ai;return e.current.memoizedState.isDehydrated&&(dc(e,t).flags|=256),2!==(e=mc(e,t))&&(t=Ui,Ui=n,null!==t&&lc(t)),e}function lc(e){null===Ui?Ui=e:Ui.push.apply(Ui,e)}function uc(e,t){for(t&=~Fi,t&=~Di,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-lt(t),r=1<<n;e[n]=-1,t&=~r}}function ic(e){if(0!=(6&Oi))throw Error(a(327));kc();var t=dt(e,0);if(0==(1&t))return rc(e,Ge()),null;var n=mc(e,t);if(0!==e.tag&&2===n){var r=ht(e);0!==r&&(t=r,n=ac(e,r))}if(1===n)throw n=ji,dc(e,0),uc(e,t),rc(e,Ge()),n;if(6===n)throw Error(a(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Sc(e,Ui,Wi),rc(e,Ge()),null}function cc(e,t){var n=Oi;Oi|=1;try{return e(t)}finally{0===(Oi=n)&&(Vi=Ge()+500,Uo&&Wo())}}function sc(e){null!==Ki&&0===Ki.tag&&0==(6&Oi)&&kc();var t=Oi;Oi|=1;var n=Ci.transition,r=bt;try{if(Ci.transition=null,bt=1,e)return e()}finally{bt=r,Ci.transition=n,0==(6&(Oi=t))&&Wo()}}function fc(){Li=Ri.current,Po(Ri)}function dc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,oo(n)),null!==zi)for(n=zi.return;null!==n;){var r=n;switch(na(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Mo();break;case 3:al(),Po(zo),Po(No),fl();break;case 5:ul(r);break;case 4:al();break;case 13:case 19:Po(il);break;case 10:xa(r.type._context);break;case 22:case 23:fc()}n=n.return}if(Ni=e,zi=e=Rc(e.current,null),Ti=Li=t,Mi=0,ji=null,Fi=Di=Ii=0,Ui=Ai=null,null!==Ca){for(t=0;t<Ca.length;t++)if(null!==(r=(n=Ca[t]).interleaved)){n.interleaved=null;var o=r.next,a=n.pending;if(null!==a){var l=a.next;a.next=o,r.next=l}n.pending=r}Ca=null}return e}function pc(e,t){for(;;){var n=zi;try{if(ka(),dl.current=lu,gl){for(var r=vl.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}gl=!1}if(hl=0,yl=ml=vl=null,bl=!1,wl=0,Pi.current=null,null===n||null===n.return){Mi=1,ji=t,zi=null;break}e:{var l=e,u=n.return,i=n,c=t;if(t=Ti,i.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var s=c,f=i,d=f.tag;if(0==(1&f.mode)&&(0===d||11===d||15===d)){var p=f.alternate;p?(f.updateQueue=p.updateQueue,f.memoizedState=p.memoizedState,f.lanes=p.lanes):(f.updateQueue=null,f.memoizedState=null)}var h=yu(u);if(null!==h){h.flags&=-257,gu(h,u,i,0,t),1&h.mode&&mu(l,s,t),c=s;var v=(t=h).updateQueue;if(null===v){var m=new Set;m.add(c),t.updateQueue=m}else v.add(c);break e}if(0==(1&t)){mu(l,s,t),vc();break e}c=Error(a(426))}else if(aa&&1&i.mode){var y=yu(u);if(null!==y){0==(65536&y.flags)&&(y.flags|=256),gu(y,u,i,0,t),va(su(c,i));break e}}l=c=su(c,i),4!==Mi&&(Mi=2),null===Ai?Ai=[l]:Ai.push(l),l=u;do{switch(l.tag){case 3:l.flags|=65536,t&=-t,l.lanes|=t,Da(l,hu(0,c,t));break e;case 1:i=c;var g=l.type,b=l.stateNode;if(0==(128&l.flags)&&("function"==typeof g.getDerivedStateFromError||null!==b&&"function"==typeof b.componentDidCatch&&(null===Qi||!Qi.has(b)))){l.flags|=65536,t&=-t,l.lanes|=t,Da(l,vu(l,i,t));break e}}l=l.return}while(null!==l)}wc(n)}catch(e){t=e,zi===n&&null!==n&&(zi=n=n.return);continue}break}}function hc(){var e=_i.current;return _i.current=lu,null===e?lu:e}function vc(){0!==Mi&&3!==Mi&&2!==Mi||(Mi=4),null===Ni||0==(268435455&Ii)&&0==(268435455&Di)||uc(Ni,Ti)}function mc(e,t){var n=Oi;Oi|=2;var r=hc();for(Ni===e&&Ti===t||(Wi=null,dc(e,t));;)try{yc();break}catch(t){pc(e,t)}if(ka(),Oi=n,_i.current=r,null!==zi)throw Error(a(261));return Ni=null,Ti=0,Mi}function yc(){for(;null!==zi;)bc(zi)}function gc(){for(;null!==zi&&!Xe();)bc(zi)}function bc(e){var t=xi(e.alternate,e,Li);e.memoizedProps=e.pendingProps,null===t?wc(e):zi=t,Pi.current=null}function wc(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=qu(n,t,Li)))return void(zi=n)}else{if(null!==(n=Ku(n,t)))return n.flags&=32767,void(zi=n);if(null===e)return Mi=6,void(zi=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(zi=t);zi=t=e}while(null!==t);0===Mi&&(Mi=5)}function Sc(e,t,n){var r=bt,o=Ci.transition;try{Ci.transition=null,bt=1,function(e,t,n,r){do{kc()}while(null!==Ki);if(0!=(6&Oi))throw Error(a(327));n=e.finishedWork;var o=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackPriority=0;var l=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var o=31-lt(n),a=1<<o;t[o]=0,r[o]=-1,e[o]=-1,n&=~a}}(e,l),e===Ni&&(zi=Ni=null,Ti=0),0==(2064&n.subtreeFlags)&&0==(2064&n.flags)||qi||(qi=!0,Nc(tt,(function(){return kc(),null}))),l=0!=(15990&n.flags),0!=(15990&n.subtreeFlags)||l){l=Ci.transition,Ci.transition=null;var u=bt;bt=1;var i=Oi;Oi|=4,Pi.current=null,function(e,t){if(eo=Bt,pr(e=dr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var o=r.anchorOffset,l=r.focusNode;r=r.focusOffset;try{n.nodeType,l.nodeType}catch(e){n=null;break e}var u=0,i=-1,c=-1,s=0,f=0,d=e,p=null;t:for(;;){for(var h;d!==n||0!==o&&3!==d.nodeType||(i=u+o),d!==l||0!==r&&3!==d.nodeType||(c=u+r),3===d.nodeType&&(u+=d.nodeValue.length),null!==(h=d.firstChild);)p=d,d=h;for(;;){if(d===e)break t;if(p===n&&++s===o&&(i=u),p===l&&++f===r&&(c=u),null!==(h=d.nextSibling))break;p=(d=p).parentNode}d=h}n=-1===i||-1===c?null:{start:i,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(to={focusedElem:e,selectionRange:n},Bt=!1,Zu=t;null!==Zu;)if(e=(t=Zu).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Zu=e;else for(;null!==Zu;){t=Zu;try{var v=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==v){var m=v.memoizedProps,y=v.memoizedState,g=t.stateNode,b=g.getSnapshotBeforeUpdate(t.elementType===t.type?m:ya(t.type,m),y);g.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var w=t.stateNode.containerInfo;1===w.nodeType?w.textContent="":9===w.nodeType&&w.documentElement&&w.removeChild(w.documentElement);break;default:throw Error(a(163))}}catch(e){Ec(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Zu=e;break}Zu=t.return}v=ti,ti=!1}(e,n),mi(n,e),hr(to),Bt=!!eo,to=eo=null,e.current=n,gi(n,e,o),Ye(),Oi=i,bt=u,Ci.transition=l}else e.current=n;if(qi&&(qi=!1,Ki=e,Xi=o),0===(l=e.pendingLanes)&&(Qi=null),function(e){if(at&&"function"==typeof at.onCommitFiberRoot)try{at.onCommitFiberRoot(ot,e,void 0,128==(128&e.current.flags))}catch(e){}}(n.stateNode),rc(e,Ge()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)r((o=t[n]).value,{componentStack:o.stack,digest:o.digest});if(Bi)throw Bi=!1,e=Hi,Hi=null,e;0!=(1&Xi)&&0!==e.tag&&kc(),0!=(1&(l=e.pendingLanes))?e===Gi?Yi++:(Yi=0,Gi=e):Yi=0,Wo()}(e,t,n,r)}finally{Ci.transition=o,bt=r}return null}function kc(){if(null!==Ki){var e=wt(Xi),t=Ci.transition,n=bt;try{if(Ci.transition=null,bt=16>e?16:e,null===Ki)var r=!1;else{if(e=Ki,Ki=null,Xi=0,0!=(6&Oi))throw Error(a(331));var o=Oi;for(Oi|=4,Zu=e.current;null!==Zu;){var l=Zu,u=l.child;if(0!=(16&Zu.flags)){var i=l.deletions;if(null!==i){for(var c=0;c<i.length;c++){var s=i[c];for(Zu=s;null!==Zu;){var f=Zu;switch(f.tag){case 0:case 11:case 15:ni(8,f,l)}var d=f.child;if(null!==d)d.return=f,Zu=d;else for(;null!==Zu;){var p=(f=Zu).sibling,h=f.return;if(ai(f),f===s){Zu=null;break}if(null!==p){p.return=h,Zu=p;break}Zu=h}}}var v=l.alternate;if(null!==v){var m=v.child;if(null!==m){v.child=null;do{var y=m.sibling;m.sibling=null,m=y}while(null!==m)}}Zu=l}}if(0!=(2064&l.subtreeFlags)&&null!==u)u.return=l,Zu=u;else e:for(;null!==Zu;){if(0!=(2048&(l=Zu).flags))switch(l.tag){case 0:case 11:case 15:ni(9,l,l.return)}var g=l.sibling;if(null!==g){g.return=l.return,Zu=g;break e}Zu=l.return}}var b=e.current;for(Zu=b;null!==Zu;){var w=(u=Zu).child;if(0!=(2064&u.subtreeFlags)&&null!==w)w.return=u,Zu=w;else e:for(u=b;null!==Zu;){if(0!=(2048&(i=Zu).flags))try{switch(i.tag){case 0:case 11:case 15:ri(9,i)}}catch(e){Ec(i,i.return,e)}if(i===u){Zu=null;break e}var S=i.sibling;if(null!==S){S.return=i.return,Zu=S;break e}Zu=i.return}}if(Oi=o,Wo(),at&&"function"==typeof at.onPostCommitFiberRoot)try{at.onPostCommitFiberRoot(ot,e)}catch(e){}r=!0}return r}finally{bt=n,Ci.transition=t}}return!1}function xc(e,t,n){e=ja(e,t=hu(0,t=su(n,t),1),1),t=ec(),null!==e&&(yt(e,1,t),rc(e,t))}function Ec(e,t,n){if(3===e.tag)xc(e,e,n);else for(;null!==t;){if(3===t.tag){xc(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Qi||!Qi.has(r))){t=ja(t,e=vu(t,e=su(n,e),1),1),e=ec(),null!==t&&(yt(t,1,e),rc(t,e));break}}t=t.return}}function _c(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ec(),e.pingedLanes|=e.suspendedLanes&n,Ni===e&&(Ti&n)===n&&(4===Mi||3===Mi&&(130023424&Ti)===Ti&&500>Ge()-$i?dc(e,0):Fi|=n),rc(e,t)}function Pc(e,t){0===t&&(0==(1&e.mode)?t=1:(t=st,0==(130023424&(st<<=1))&&(st=4194304)));var n=ec();null!==(e=za(e,t))&&(yt(e,t,n),rc(e,n))}function Cc(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Pc(e,n)}function Oc(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,o=e.memoizedState;null!==o&&(n=o.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(a(314))}null!==r&&r.delete(t),Pc(e,n)}function Nc(e,t){return qe(e,t)}function zc(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Tc(e,t,n,r){return new zc(e,t,n,r)}function Lc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Rc(e,t){var n=e.alternate;return null===n?((n=Tc(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Mc(e,t,n,r,o,l){var u=2;if(r=e,"function"==typeof e)Lc(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case x:return jc(n.children,o,l,t);case E:u=8,o|=8;break;case _:return(e=Tc(12,n,t,2|o)).elementType=_,e.lanes=l,e;case N:return(e=Tc(13,n,t,o)).elementType=N,e.lanes=l,e;case z:return(e=Tc(19,n,t,o)).elementType=z,e.lanes=l,e;case R:return Ic(n,o,l,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case P:u=10;break e;case C:u=9;break e;case O:u=11;break e;case T:u=14;break e;case L:u=16,r=null;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Tc(u,n,t,o)).elementType=e,t.type=r,t.lanes=l,t}function jc(e,t,n,r){return(e=Tc(7,e,r,t)).lanes=n,e}function Ic(e,t,n,r){return(e=Tc(22,e,r,t)).elementType=R,e.lanes=n,e.stateNode={isHidden:!1},e}function Dc(e,t,n){return(e=Tc(6,e,null,t)).lanes=n,e}function Fc(e,t,n){return(t=Tc(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ac(e,t,n,r,o){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=mt(0),this.expirationTimes=mt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=mt(0),this.identifierPrefix=r,this.onRecoverableError=o,this.mutableSourceEagerHydrationData=null}function Uc(e,t,n,r,o,a,l,u,i){return e=new Ac(e,t,n,u,i),1===t?(t=1,!0===a&&(t|=8)):t=0,a=Tc(3,null,null,t),e.current=a,a.stateNode=e,a.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},La(a),e}function $c(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Vc(e){if(!e)return Oo;e:{if(Ve(e=e._reactInternals)!==e||1!==e.tag)throw Error(a(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ro(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(a(171))}if(1===e.tag){var n=e.type;if(Ro(n))return Io(e,n,t)}return t}function Wc(e,t,n,r,o,a,l,u,i){return(e=Uc(n,r,!0,e,0,a,0,u,i)).context=Vc(null),n=e.current,(a=Ma(r=ec(),o=tc(n))).callback=null!=t?t:null,ja(n,a,o),e.current.lanes=o,yt(e,o,r),rc(e,r),e}function Bc(e,t,n,r){var o=t.current,a=ec(),l=tc(o);return n=Vc(n),null===t.context?t.context=n:t.pendingContext=n,(t=Ma(a,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=ja(o,t,l))&&(nc(e,o,l,a),Ia(e,o,l)),l}function Hc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Qc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function qc(e,t){Qc(e,t),(e=e.alternate)&&Qc(e,t)}xi=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||zo.current)wu=!0;else{if(0==(e.lanes&n)&&0==(128&t.flags))return wu=!1,function(e,t,n){switch(t.tag){case 3:zu(t),ha();break;case 5:ll(t);break;case 1:Ro(t.type)&&Do(t);break;case 4:ol(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,o=t.memoizedProps.value;Co(ga,r._currentValue),r._currentValue=o;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(Co(il,1&il.current),t.flags|=128,null):0!=(n&t.child.childLanes)?Du(e,t,n):(Co(il,1&il.current),null!==(e=Bu(e,t,n))?e.sibling:null);Co(il,1&il.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(128&e.flags)){if(r)return Vu(e,t,n);t.flags|=128}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),Co(il,il.current),r)break;return null;case 22:case 23:return t.lanes=0,_u(e,t,n)}return Bu(e,t,n)}(e,t,n);wu=0!=(131072&e.flags)}else wu=!1,aa&&0!=(1048576&t.flags)&&ea(t,qo,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Wu(e,t),e=t.pendingProps;var o=Lo(t,No.current);_a(t,n),o=El(null,t,r,e,o,n);var l=_l();return t.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ro(r)?(l=!0,Do(t)):l=!1,t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,La(t),o.updater=Va,t.stateNode=o,o._reactInternals=t,Qa(t,r,e,n),t=Nu(null,t,r,!0,l,n)):(t.tag=0,aa&&l&&ta(t),Su(null,t,o,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Wu(e,t),e=t.pendingProps,r=(o=r._init)(r._payload),t.type=r,o=t.tag=function(e){if("function"==typeof e)return Lc(e)?1:0;if(null!=e){if((e=e.$$typeof)===O)return 11;if(e===T)return 14}return 2}(r),e=ya(r,e),o){case 0:t=Cu(null,t,r,e,n);break e;case 1:t=Ou(null,t,r,e,n);break e;case 11:t=ku(null,t,r,e,n);break e;case 14:t=xu(null,t,r,ya(r.type,e),n);break e}throw Error(a(306,r,""))}return t;case 0:return r=t.type,o=t.pendingProps,Cu(e,t,r,o=t.elementType===r?o:ya(r,o),n);case 1:return r=t.type,o=t.pendingProps,Ou(e,t,r,o=t.elementType===r?o:ya(r,o),n);case 3:e:{if(zu(t),null===e)throw Error(a(387));r=t.pendingProps,o=(l=t.memoizedState).element,Ra(e,t),Fa(t,r,null,n);var u=t.memoizedState;if(r=u.element,l.isDehydrated){if(l={element:r,isDehydrated:!1,cache:u.cache,pendingSuspenseBoundaries:u.pendingSuspenseBoundaries,transitions:u.transitions},t.updateQueue.baseState=l,t.memoizedState=l,256&t.flags){t=Tu(e,t,r,n,o=su(Error(a(423)),t));break e}if(r!==o){t=Tu(e,t,r,n,o=su(Error(a(424)),t));break e}for(oa=co(t.stateNode.containerInfo.firstChild),ra=t,aa=!0,la=null,n=Za(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ha(),r===o){t=Bu(e,t,n);break e}Su(e,t,r,n)}t=t.child}return t;case 5:return ll(t),null===e&&sa(t),r=t.type,o=t.pendingProps,l=null!==e?e.memoizedProps:null,u=o.children,no(r,o)?u=null:null!==l&&no(r,l)&&(t.flags|=32),Pu(e,t),Su(e,t,u,n),t.child;case 6:return null===e&&sa(t),null;case 13:return Du(e,t,n);case 4:return ol(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ga(t,null,r,n):Su(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,ku(e,t,r,o=t.elementType===r?o:ya(r,o),n);case 7:return Su(e,t,t.pendingProps,n),t.child;case 8:case 12:return Su(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,u=o.value,Co(ga,r._currentValue),r._currentValue=u,null!==l)if(ur(l.value,u)){if(l.children===o.children&&!zo.current){t=Bu(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var i=l.dependencies;if(null!==i){u=l.child;for(var c=i.firstContext;null!==c;){if(c.context===r){if(1===l.tag){(c=Ma(-1,n&-n)).tag=2;var s=l.updateQueue;if(null!==s){var f=(s=s.shared).pending;null===f?c.next=c:(c.next=f.next,f.next=c),s.pending=c}}l.lanes|=n,null!==(c=l.alternate)&&(c.lanes|=n),Ea(l.return,n,t),i.lanes|=n;break}c=c.next}}else if(10===l.tag)u=l.type===t.type?null:l.child;else if(18===l.tag){if(null===(u=l.return))throw Error(a(341));u.lanes|=n,null!==(i=u.alternate)&&(i.lanes|=n),Ea(u,n,t),u=l.sibling}else u=l.child;if(null!==u)u.return=l;else for(u=l;null!==u;){if(u===t){u=null;break}if(null!==(l=u.sibling)){l.return=u.return,u=l;break}u=u.return}l=u}Su(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=t.pendingProps.children,_a(t,n),r=r(o=Pa(o)),t.flags|=1,Su(e,t,r,n),t.child;case 14:return o=ya(r=t.type,t.pendingProps),xu(e,t,r,o=ya(r.type,o),n);case 15:return Eu(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:ya(r,o),Wu(e,t),t.tag=1,Ro(r)?(e=!0,Do(t)):e=!1,_a(t,n),Ba(t,r,o),Qa(t,r,o,n),Nu(null,t,r,!0,e,n);case 19:return Vu(e,t,n);case 22:return _u(e,t,n)}throw Error(a(156,t.tag))};var Kc="function"==typeof reportError?reportError:function(e){console.error(e)};function Xc(e){this._internalRoot=e}function Yc(e){this._internalRoot=e}function Gc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jc(){}function es(e,t,n,r,o){var a=n._reactRootContainer;if(a){var l=a;if("function"==typeof o){var u=o;o=function(){var e=Hc(l);u.call(e)}}Bc(t,l,e,o)}else l=function(e,t,n,r,o){if(o){if("function"==typeof r){var a=r;r=function(){var e=Hc(l);a.call(e)}}var l=Wc(t,r,e,0,null,!1,0,"",Jc);return e._reactRootContainer=l,e[vo]=l.current,Vr(8===e.nodeType?e.parentNode:e),sc(),l}for(;o=e.lastChild;)e.removeChild(o);if("function"==typeof r){var u=r;r=function(){var e=Hc(i);u.call(e)}}var i=Uc(e,0,!1,null,0,!1,0,"",Jc);return e._reactRootContainer=i,e[vo]=i.current,Vr(8===e.nodeType?e.parentNode:e),sc((function(){Bc(t,i,n,r)})),i}(n,t,e,o,r);return Hc(l)}Yc.prototype.render=Xc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(a(409));Bc(e,t,null,null)},Yc.prototype.unmount=Xc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;sc((function(){Bc(null,e,null,null)})),t[vo]=null}},Yc.prototype.unstable_scheduleHydration=function(e){if(e){var t=Et();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Rt.length&&0!==t&&t<Rt[n].priority;n++);Rt.splice(n,0,e),0===n&&Dt(e)}},St=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ft(t.pendingLanes);0!==n&&(gt(t,1|n),rc(t,Ge()),0==(6&Oi)&&(Vi=Ge()+500,Wo()))}break;case 13:sc((function(){var t=za(e,1);if(null!==t){var n=ec();nc(t,e,1,n)}})),qc(e,1)}},kt=function(e){if(13===e.tag){var t=za(e,134217728);null!==t&&nc(t,e,134217728,ec()),qc(e,134217728)}},xt=function(e){if(13===e.tag){var t=tc(e),n=za(e,t);null!==n&&nc(n,e,t,ec()),qc(e,t)}},Et=function(){return bt},_t=function(e,t){var n=bt;try{return bt=e,t()}finally{bt=n}},ke=function(e,t,n){switch(t){case"input":if(Z(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=ko(r);if(!o)throw Error(a(90));q(r),Z(r,o)}}}break;case"textarea":ae(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Oe=cc,Ne=sc;var ts={usingClientEntryPoint:!1,Events:[wo,So,ko,Pe,Ce,cc]},ns={findFiberByHostInstance:bo,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rs={bundleType:ns.bundleType,version:ns.version,rendererPackageName:ns.rendererPackageName,rendererConfig:ns.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:ns.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var os=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!os.isDisabled&&os.supportsFiber)try{ot=os.inject(rs),at=os}catch(se){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ts,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Gc(t))throw Error(a(200));return $c(e,t,null,n)},t.createRoot=function(e,t){if(!Gc(e))throw Error(a(299));var n=!1,r="",o=Kc;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(o=t.onRecoverableError)),t=Uc(e,1,!1,null,0,n,0,r,o),e[vo]=t.current,Vr(8===e.nodeType?e.parentNode:e),new Xc(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw e=Object.keys(e).join(","),Error(a(268,e))}return null===(e=He(t))?null:e.stateNode},t.flushSync=function(e){return sc(e)},t.hydrate=function(e,t,n){if(!Zc(t))throw Error(a(200));return es(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Gc(e))throw Error(a(405));var r=null!=n&&n.hydratedSources||null,o=!1,l="",u=Kc;if(null!=n&&(!0===n.unstable_strictMode&&(o=!0),void 0!==n.identifierPrefix&&(l=n.identifierPrefix),void 0!==n.onRecoverableError&&(u=n.onRecoverableError)),t=Wc(t,null,e,1,null!=n?n:null,o,0,l,u),e[vo]=t.current,Vr(e),r)for(e=0;e<r.length;e++)o=(o=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,o]:t.mutableSourceEagerHydrationData.push(n,o);return new Yc(t)},t.render=function(e,t,n){if(!Zc(t))throw Error(a(200));return es(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zc(e))throw Error(a(40));return!!e._reactRootContainer&&(sc((function(){es(null,null,e,!1,(function(){e._reactRootContainer=null,e[vo]=null}))})),!0)},t.unstable_batchedUpdates=cc,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Zc(n))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return es(e,t,n,!1,r)},t.version="18.2.0-next-9e3b772b8-20220608"},745:(e,t,n)=>{"use strict";var r=n(935);t.createRoot=r.createRoot,t.hydrateRoot=r.hydrateRoot},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,o=n?Symbol.for("react.portal"):60106,a=n?Symbol.for("react.fragment"):60107,l=n?Symbol.for("react.strict_mode"):60108,u=n?Symbol.for("react.profiler"):60114,i=n?Symbol.for("react.provider"):60109,c=n?Symbol.for("react.context"):60110,s=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,v=n?Symbol.for("react.memo"):60115,m=n?Symbol.for("react.lazy"):60116,y=n?Symbol.for("react.block"):60121,g=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function S(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case s:case f:case a:case u:case l:case p:return e;default:switch(e=e&&e.$$typeof){case c:case d:case m:case v:case i:return e;default:return t}}case o:return t}}}function k(e){return S(e)===f}t.AsyncMode=s,t.ConcurrentMode=f,t.ContextConsumer=c,t.ContextProvider=i,t.Element=r,t.ForwardRef=d,t.Fragment=a,t.Lazy=m,t.Memo=v,t.Portal=o,t.Profiler=u,t.StrictMode=l,t.Suspense=p,t.isAsyncMode=function(e){return k(e)||S(e)===s},t.isConcurrentMode=k,t.isContextConsumer=function(e){return S(e)===c},t.isContextProvider=function(e){return S(e)===i},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return S(e)===d},t.isFragment=function(e){return S(e)===a},t.isLazy=function(e){return S(e)===m},t.isMemo=function(e){return S(e)===v},t.isPortal=function(e){return S(e)===o},t.isProfiler=function(e){return S(e)===u},t.isStrictMode=function(e){return S(e)===l},t.isSuspense=function(e){return S(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===f||e===u||e===l||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===m||e.$$typeof===v||e.$$typeof===i||e.$$typeof===c||e.$$typeof===d||e.$$typeof===g||e.$$typeof===b||e.$$typeof===w||e.$$typeof===y)},t.typeOf=S},864:(e,t,n)=>{"use strict";e.exports=n(921)},998:(e,t,n)=>{"use strict";n.d(t,{zt:()=>g,I0:()=>k,v9:()=>h});var r=n(688),o=n(798),a=n(935);let l=function(e){e()};const u=()=>l;var i=n(294);const c=i.createContext(null);function s(){return(0,i.useContext)(c)}let f=()=>{throw new Error("uSES not initialized!")};const d=(e,t)=>e===t;function p(e=c){const t=e===c?s:()=>(0,i.useContext)(e);return function(e,n=d){const{store:r,subscription:o,getServerState:a}=t(),l=f(o.addNestedSub,r.getState,a||r.getState,e,n);return(0,i.useDebugValue)(l),l}}const h=p();n(679),n(973);const v={notify(){},get:()=>[]};const m="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?i.useLayoutEffect:i.useEffect;let y=null;const g=function({store:e,context:t,children:n,serverState:r}){const o=(0,i.useMemo)((()=>{const t=function(e,t){let n,r=v;function o(){l.onStateChange&&l.onStateChange()}function a(){n||(n=t?t.addNestedSub(o):e.subscribe(o),r=function(){const e=u();let t=null,n=null;return{clear(){t=null,n=null},notify(){e((()=>{let e=t;for(;e;)e.callback(),e=e.next}))},get(){let e=[],n=t;for(;n;)e.push(n),n=n.next;return e},subscribe(e){let r=!0,o=n={callback:e,next:null,prev:n};return o.prev?o.prev.next=o:t=o,function(){r&&null!==t&&(r=!1,o.next?o.next.prev=o.prev:n=o.prev,o.prev?o.prev.next=o.next:t=o.next)}}}}())}const l={addNestedSub:function(e){return a(),r.subscribe(e)},notifyNestedSubs:function(){r.notify()},handleChangeWrapper:o,isSubscribed:function(){return Boolean(n)},trySubscribe:a,tryUnsubscribe:function(){n&&(n(),n=void 0,r.clear(),r=v)},getListeners:()=>r};return l}(e);return{store:e,subscription:t,getServerState:r?()=>r:void 0}}),[e,r]),a=(0,i.useMemo)((()=>e.getState()),[e]);m((()=>{const{subscription:t}=o;return t.onStateChange=t.notifyNestedSubs,t.trySubscribe(),a!==e.getState()&&t.notifyNestedSubs(),()=>{t.tryUnsubscribe(),t.onStateChange=void 0}}),[o,a]);const l=t||c;return i.createElement(l.Provider,{value:o},n)};function b(e=c){const t=e===c?s:()=>(0,i.useContext)(e);return function(){const{store:e}=t();return e}}const w=b();function S(e=c){const t=e===c?w:b(e);return function(){return t().dispatch}}const k=S();var x,E;x=o.useSyncExternalStoreWithSelector,f=x,(e=>{y=e})(r.useSyncExternalStore),E=a.unstable_batchedUpdates,l=E},359:(e,t)=>{"use strict";Symbol.for("react.element"),Symbol.for("react.portal"),Symbol.for("react.fragment"),Symbol.for("react.strict_mode"),Symbol.for("react.profiler"),Symbol.for("react.provider"),Symbol.for("react.context"),Symbol.for("react.server_context"),Symbol.for("react.forward_ref"),Symbol.for("react.suspense"),Symbol.for("react.suspense_list"),Symbol.for("react.memo"),Symbol.for("react.lazy"),Symbol.for("react.offscreen");Symbol.for("react.module.reference")},973:(e,t,n)=>{"use strict";n(359)},408:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),o=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),l=Symbol.for("react.profiler"),u=Symbol.for("react.provider"),i=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),s=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator,h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v=Object.assign,m={};function y(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function g(){}function b(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},g.prototype=y.prototype;var w=b.prototype=new g;w.constructor=b,v(w,y.prototype),w.isPureReactComponent=!0;var S=Array.isArray,k=Object.prototype.hasOwnProperty,x={current:null},E={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,r){var o,a={},l=null,u=null;if(null!=t)for(o in void 0!==t.ref&&(u=t.ref),void 0!==t.key&&(l=""+t.key),t)k.call(t,o)&&!E.hasOwnProperty(o)&&(a[o]=t[o]);var i=arguments.length-2;if(1===i)a.children=r;else if(1<i){for(var c=Array(i),s=0;s<i;s++)c[s]=arguments[s+2];a.children=c}if(e&&e.defaultProps)for(o in i=e.defaultProps)void 0===a[o]&&(a[o]=i[o]);return{$$typeof:n,type:e,key:l,ref:u,props:a,_owner:x.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var C=/\/+/g;function O(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function N(e,t,o,a,l){var u=typeof e;"undefined"!==u&&"boolean"!==u||(e=null);var i=!1;if(null===e)i=!0;else switch(u){case"string":case"number":i=!0;break;case"object":switch(e.$$typeof){case n:case r:i=!0}}if(i)return l=l(i=e),e=""===a?"."+O(i,0):a,S(l)?(o="",null!=e&&(o=e.replace(C,"$&/")+"/"),N(l,t,o,"",(function(e){return e}))):null!=l&&(P(l)&&(l=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(l,o+(!l.key||i&&i.key===l.key?"":(""+l.key).replace(C,"$&/")+"/")+e)),t.push(l)),1;if(i=0,a=""===a?".":a+":",S(e))for(var c=0;c<e.length;c++){var s=a+O(u=e[c],c);i+=N(u,t,o,s,l)}else if(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof s)for(e=s.call(e),c=0;!(u=e.next()).done;)i+=N(u=u.value,t,o,s=a+O(u,c++),l);else if("object"===u)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return i}function z(e,t,n){if(null==e)return e;var r=[],o=0;return N(e,r,"","",(function(e){return t.call(n,e,o++)})),r}function T(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var L={current:null},R={transition:null},M={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:R,ReactCurrentOwner:x};t.Children={map:z,forEach:function(e,t,n){z(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return z(e,(function(){t++})),t},toArray:function(e){return z(e,(function(e){return e}))||[]},only:function(e){if(!P(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=o,t.Profiler=l,t.PureComponent=b,t.StrictMode=a,t.Suspense=s,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=M,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var o=v({},e.props),a=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=x.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var i=e.type.defaultProps;for(c in t)k.call(t,c)&&!E.hasOwnProperty(c)&&(o[c]=void 0===t[c]&&void 0!==i?i[c]:t[c])}var c=arguments.length-2;if(1===c)o.children=r;else if(1<c){i=Array(c);for(var s=0;s<c;s++)i[s]=arguments[s+2];o.children=i}return{$$typeof:n,type:e.type,key:a,ref:l,props:o,_owner:u}},t.createContext=function(e){return(e={$$typeof:i,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:u,_context:e},e.Consumer=e},t.createElement=_,t.createFactory=function(e){var t=_.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=P,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:T}},t.memo=function(e,t){return{$$typeof:f,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=R.transition;R.transition={};try{e()}finally{R.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return L.current.useCallback(e,t)},t.useContext=function(e){return L.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return L.current.useDeferredValue(e)},t.useEffect=function(e,t){return L.current.useEffect(e,t)},t.useId=function(){return L.current.useId()},t.useImperativeHandle=function(e,t,n){return L.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return L.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return L.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return L.current.useMemo(e,t)},t.useReducer=function(e,t,n){return L.current.useReducer(e,t,n)},t.useRef=function(e){return L.current.useRef(e)},t.useState=function(e){return L.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return L.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return L.current.useTransition()},t.version="18.2.0"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,o=e[r];if(!(0<a(o,t)))break e;e[r]=t,e[n]=o,n=r}}function r(e){return 0===e.length?null:e[0]}function o(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length,l=o>>>1;r<l;){var u=2*(r+1)-1,i=e[u],c=u+1,s=e[c];if(0>a(i,n))c<o&&0>a(s,i)?(e[r]=s,e[c]=n,r=c):(e[r]=i,e[u]=n,r=u);else{if(!(c<o&&0>a(s,n)))break e;e[r]=s,e[c]=n,r=c}}}return t}function a(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var u=Date,i=u.now();t.unstable_now=function(){return u.now()-i}}var c=[],s=[],f=1,d=null,p=3,h=!1,v=!1,m=!1,y="function"==typeof setTimeout?setTimeout:null,g="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function w(e){for(var t=r(s);null!==t;){if(null===t.callback)o(s);else{if(!(t.startTime<=e))break;o(s),t.sortIndex=t.expirationTime,n(c,t)}t=r(s)}}function S(e){if(m=!1,w(e),!v)if(null!==r(c))v=!0,R(k);else{var t=r(s);null!==t&&M(S,t.startTime-e)}}function k(e,n){v=!1,m&&(m=!1,g(P),P=-1),h=!0;var a=p;try{for(w(n),d=r(c);null!==d&&(!(d.expirationTime>n)||e&&!N());){var l=d.callback;if("function"==typeof l){d.callback=null,p=d.priorityLevel;var u=l(d.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?d.callback=u:d===r(c)&&o(c),w(n)}else o(c);d=r(c)}if(null!==d)var i=!0;else{var f=r(s);null!==f&&M(S,f.startTime-n),i=!1}return i}finally{d=null,p=a,h=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var x,E=!1,_=null,P=-1,C=5,O=-1;function N(){return!(t.unstable_now()-O<C)}function z(){if(null!==_){var e=t.unstable_now();O=e;var n=!0;try{n=_(!0,e)}finally{n?x():(E=!1,_=null)}}else E=!1}if("function"==typeof b)x=function(){b(z)};else if("undefined"!=typeof MessageChannel){var T=new MessageChannel,L=T.port2;T.port1.onmessage=z,x=function(){L.postMessage(null)}}else x=function(){y(z,0)};function R(e){_=e,E||(E=!0,x())}function M(e,n){P=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){v||h||(v=!0,R(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(c)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,o,a){var l=t.unstable_now();switch(a="object"==typeof a&&null!==a&&"number"==typeof(a=a.delay)&&0<a?l+a:l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:f++,callback:o,priorityLevel:e,startTime:a,expirationTime:u=a+u,sortIndex:-1},a>l?(e.sortIndex=a,n(s,e),null===r(c)&&e===r(s)&&(m?(g(P),P=-1):m=!0,M(S,a-l))):(e.sortIndex=u,n(c,e),v||h||(v=!0,R(k))),e},t.unstable_shouldYield=N,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},l=[],u=0;u<e.length;u++){var i=e[u],c=r.base?i[0]+r.base:i[0],s=a[c]||0,f="".concat(c," ").concat(s);a[c]=s+1;var d=n(f),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var h=o(p,r);r.byIndex=u,t.splice(u,0,{identifier:f,updater:h,references:1})}l.push(f)}return l}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var l=0;l<a.length;l++){var u=n(a[l]);t[u].references--}for(var i=r(e,o),c=0;c<a.length;c++){var s=n(a[c]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}a=i}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},250:(e,t,n)=>{"use strict";var r=n(294),o="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},a=r.useState,l=r.useEffect,u=r.useLayoutEffect,i=r.useDebugValue;function c(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!o(e,n)}catch(e){return!0}}var s="undefined"==typeof window||void 0===window.document||void 0===window.document.createElement?function(e,t){return t()}:function(e,t){var n=t(),r=a({inst:{value:n,getSnapshot:t}}),o=r[0].inst,s=r[1];return u((function(){o.value=n,o.getSnapshot=t,c(o)&&s({inst:o})}),[e,n,t]),l((function(){return c(o)&&s({inst:o}),e((function(){c(o)&&s({inst:o})}))}),[e]),i(n),n};t.useSyncExternalStore=void 0!==r.useSyncExternalStore?r.useSyncExternalStore:s},139:(e,t,n)=>{"use strict";var r=n(294),o=n(688),a="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},l=o.useSyncExternalStore,u=r.useRef,i=r.useEffect,c=r.useMemo,s=r.useDebugValue;t.useSyncExternalStoreWithSelector=function(e,t,n,r,o){var f=u(null);if(null===f.current){var d={hasValue:!1,value:null};f.current=d}else d=f.current;f=c((function(){function e(e){if(!i){if(i=!0,l=e,e=r(e),void 0!==o&&d.hasValue){var t=d.value;if(o(t,e))return u=t}return u=e}if(t=u,a(l,e))return t;var n=r(e);return void 0!==o&&o(t,n)?t:(l=e,u=n)}var l,u,i=!1,c=void 0===n?null:n;return[function(){return e(t())},null===c?void 0:function(){return e(c())}]}),[t,n,r,o]);var p=l(e,f[0],f[1]);return i((function(){d.hasValue=!0,d.value=p}),[p]),s(p),p}},688:(e,t,n)=>{"use strict";e.exports=n(250)},798:(e,t,n)=>{"use strict";e.exports=n(139)},61:(e,t,n)=>{var r=n(698).default;function o(){"use strict";e.exports=o=function(){return t},e.exports.__esModule=!0,e.exports.default=e.exports;var t={},n=Object.prototype,a=n.hasOwnProperty,l="function"==typeof Symbol?Symbol:{},u=l.iterator||"@@iterator",i=l.asyncIterator||"@@asyncIterator",c=l.toStringTag||"@@toStringTag";function s(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,n){return e[t]=n}}function f(e,t,n,r){var o=t&&t.prototype instanceof h?t:h,a=Object.create(o.prototype),l=new P(r||[]);return a._invoke=function(e,t,n){var r="suspendedStart";return function(o,a){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw a;return{value:void 0,done:!0}}for(n.method=o,n.arg=a;;){var l=n.delegate;if(l){var u=x(l,n);if(u){if(u===p)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var i=d(e,t,n);if("normal"===i.type){if(r=n.done?"completed":"suspendedYield",i.arg===p)continue;return{value:i.arg,done:n.done}}"throw"===i.type&&(r="completed",n.method="throw",n.arg=i.arg)}}}(e,n,l),a}function d(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=f;var p={};function h(){}function v(){}function m(){}var y={};s(y,u,(function(){return this}));var g=Object.getPrototypeOf,b=g&&g(g(C([])));b&&b!==n&&a.call(b,u)&&(y=b);var w=m.prototype=h.prototype=Object.create(y);function S(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function k(e,t){function n(o,l,u,i){var c=d(e[o],e,l);if("throw"!==c.type){var s=c.arg,f=s.value;return f&&"object"==r(f)&&a.call(f,"__await")?t.resolve(f.__await).then((function(e){n("next",e,u,i)}),(function(e){n("throw",e,u,i)})):t.resolve(f).then((function(e){s.value=e,u(s)}),(function(e){return n("throw",e,u,i)}))}i(c.arg)}var o;this._invoke=function(e,r){function a(){return new t((function(t,o){n(e,r,t,o)}))}return o=o?o.then(a,a):a()}}function x(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,x(e,t),"throw"===t.method))return p;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return p}var r=d(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,p;var o=r.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,p):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,p)}function E(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function _(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function P(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(E,this),this.reset(!0)}function C(e){if(e){var t=e[u];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,r=function t(){for(;++n<e.length;)if(a.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t};return r.next=r}}return{next:O}}function O(){return{value:void 0,done:!0}}return v.prototype=m,s(w,"constructor",m),s(m,"constructor",v),v.displayName=s(m,c,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,m):(e.__proto__=m,s(e,c,"GeneratorFunction")),e.prototype=Object.create(w),e},t.awrap=function(e){return{__await:e}},S(k.prototype),s(k.prototype,i,(function(){return this})),t.AsyncIterator=k,t.async=function(e,n,r,o,a){void 0===a&&(a=Promise);var l=new k(f(e,n,r,o),a);return t.isGeneratorFunction(n)?l:l.next().then((function(e){return e.done?e.value:l.next()}))},S(w),s(w,c,"Generator"),s(w,u,(function(){return this})),s(w,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},t.values=C,P.prototype={constructor:P,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(_),!e)for(var t in this)"t"===t.charAt(0)&&a.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(n,r){return l.type="throw",l.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r],l=o.completion;if("root"===o.tryLoc)return n("end");if(o.tryLoc<=this.prev){var u=a.call(o,"catchLoc"),i=a.call(o,"finallyLoc");if(u&&i){if(this.prev<o.catchLoc)return n(o.catchLoc,!0);if(this.prev<o.finallyLoc)return n(o.finallyLoc)}else if(u){if(this.prev<o.catchLoc)return n(o.catchLoc,!0)}else{if(!i)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return n(o.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&a.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var o=r;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var l=o?o.completion:{};return l.type=e,l.arg=t,o?(this.method="next",this.next=o.finallyLoc,p):this.complete(l)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),p},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),_(n),p}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var o=r.arg;_(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:C(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),p}},t}e.exports=o,e.exports.__esModule=!0,e.exports.default=e.exports},698:e=>{function t(n){return e.exports=t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,t(n)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},687:(e,t,n)=>{var r=n(61)();e.exports=r;try{regeneratorRuntime=r}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=r:Function("r","regeneratorRuntime = r")(r)}},907:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}n.d(t,{Z:()=>r})},861:(e,t,n)=>{"use strict";function r(e,t,n,r,o,a,l){try{var u=e[a](l),i=u.value}catch(e){return void n(e)}u.done?t(i):Promise.resolve(i).then(r,o)}function o(e){return function(){var t=this,n=arguments;return new Promise((function(o,a){var l=e.apply(t,n);function u(e){r(l,o,a,u,i,"next",e)}function i(e){r(l,o,a,u,i,"throw",e)}u(void 0)}))}}n.d(t,{Z:()=>o})},885:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var r=n(181);function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a=[],l=!0,u=!1;try{for(n=n.call(e);!(l=(r=n.next()).done)&&(a.push(r.value),!t||a.length!==t);l=!0);}catch(e){u=!0,o=e}finally{try{l||null==n.return||n.return()}finally{if(u)throw o}}return a}}(e,t)||(0,r.Z)(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},982:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(907),o=n(181);function a(e){return function(e){if(Array.isArray(e))return(0,r.Z)(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||(0,o.Z)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},181:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var r=n(907);function o(e,t){if(e){if("string"==typeof e)return(0,r.Z)(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?(0,r.Z)(e,t):void 0}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUlGZSxTQUFTa2xELEVBQW1CdGpELEdBQ3pDLE9DSmEsU0FBNEJBLEdBQ3pDLEdBQUlyTyxNQUFNYyxRQUFRdU4sR0FBTSxPQUFPLEVBQUF1akQsRUFBQSxHQUFpQnZqRCxFQUNsRCxDREVTLENBQWtCQSxJRUxaLFNBQTBCb2hELEdBQ3ZDLEdBQXNCLG9CQUFYOXBELFFBQW1ELE1BQXpCOHBELEVBQUs5cEQsT0FBT0ksV0FBMkMsTUFBdEIwcEQsRUFBSyxjQUF1QixPQUFPenZELE1BQU13RixLQUFLaXFELEVBQ3RILENGR21DLENBQWdCcGhELEtBQVEsRUFBQXFqRCxFQUFBLEdBQTJCcmpELElHTHZFLFdBQ2IsTUFBTSxJQUFJNUIsVUFBVSx1SUFDdEIsQ0hHOEYsRUFDOUYsNERJTGUsU0FBU29sRCxFQUE0QjF3RCxFQUFHMndELEdBQ3JELEdBQUszd0QsRUFBTCxDQUNBLEdBQWlCLGlCQUFOQSxFQUFnQixPQUFPLE9BQWlCQSxFQUFHMndELEdBQ3RELElBQUlueUQsRUFBSVcsT0FBT21CLFVBQVViLFNBQVNILEtBQUtVLEdBQUdrQixNQUFNLEdBQUksR0FFcEQsTUFEVSxXQUFOMUMsR0FBa0J3QixFQUFFVCxjQUFhZixFQUFJd0IsRUFBRVQsWUFBWXFSLE1BQzdDLFFBQU5wUyxHQUFxQixRQUFOQSxFQUFvQkssTUFBTXdGLEtBQUtyRSxHQUN4QyxjQUFOeEIsR0FBcUIsMkNBQTJDMFosS0FBSzFaLElBQVcsT0FBaUJ3QixFQUFHMndELFFBQXhHLENBTGMsQ0FNaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9pbW1lci9kaXN0L2ltbWVyLmVzbS5tanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9yZWR1eC9lcy9yZWR1eC5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9yZWR1eC10aHVuay9lcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9AcmVkdXhqcy90b29sa2l0L2Rpc3QvcmVkdXgtdG9vbGtpdC5lc20uanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL2RlYm91bmNlL2luZGV4LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9jbGllbnQuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9iYXRjaC5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL0NvbnRleHQuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvaG9va3MvdXNlUmVkdXhDb250ZXh0LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2hvb2tzL3VzZVNlbGVjdG9yLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL3VzZVN5bmNFeHRlcm5hbFN0b3JlLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL1N1YnNjcmlwdGlvbi5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2NvbXBvbmVudHMvY29ubmVjdC5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL1Byb3ZpZGVyLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2hvb2tzL3VzZVN0b3JlLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2hvb2tzL3VzZURpc3BhdGNoLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2luZGV4LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS93aXRoLXNlbGVjdG9yLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL3NoaW0vaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS93aXRoLXNlbGVjdG9yLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvcmVnZW5lcmF0b3JSdW50aW1lLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5TGlrZVRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aEhvbGVzLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2l0ZXJhYmxlVG9BcnJheUxpbWl0LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL25vbkl0ZXJhYmxlUmVzdC5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheS5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheVdpdGhvdXRIb2xlcy5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pdGVyYWJsZVRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vbm9uSXRlcmFibGVTcHJlYWQuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gbihuKXtmb3IodmFyIHI9YXJndW1lbnRzLmxlbmd0aCx0PUFycmF5KHI+MT9yLTE6MCksZT0xO2U8cjtlKyspdFtlLTFdPWFyZ3VtZW50c1tlXTtpZihcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WKXt2YXIgaT1ZW25dLG89aT9cImZ1bmN0aW9uXCI9PXR5cGVvZiBpP2kuYXBwbHkobnVsbCx0KTppOlwidW5rbm93biBlcnJvciBucjogXCIrbjt0aHJvdyBFcnJvcihcIltJbW1lcl0gXCIrbyl9dGhyb3cgRXJyb3IoXCJbSW1tZXJdIG1pbmlmaWVkIGVycm9yIG5yOiBcIituKyh0Lmxlbmd0aD9cIiBcIit0Lm1hcCgoZnVuY3Rpb24obil7cmV0dXJuXCInXCIrbitcIidcIn0pKS5qb2luKFwiLFwiKTpcIlwiKStcIi4gRmluZCB0aGUgZnVsbCBlcnJvciBhdDogaHR0cHM6Ly9iaXQubHkvM2NYRUtXZlwiKX1mdW5jdGlvbiByKG4pe3JldHVybiEhbiYmISFuW1FdfWZ1bmN0aW9uIHQobil7cmV0dXJuISFuJiYoZnVuY3Rpb24obil7aWYoIW58fFwib2JqZWN0XCIhPXR5cGVvZiBuKXJldHVybiExO3ZhciByPU9iamVjdC5nZXRQcm90b3R5cGVPZihuKTtpZihudWxsPT09cilyZXR1cm4hMDt2YXIgdD1PYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChyLFwiY29uc3RydWN0b3JcIikmJnIuY29uc3RydWN0b3I7cmV0dXJuIHQ9PT1PYmplY3R8fFwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJkZ1bmN0aW9uLnRvU3RyaW5nLmNhbGwodCk9PT1afShuKXx8QXJyYXkuaXNBcnJheShuKXx8ISFuW0xdfHwhIW4uY29uc3RydWN0b3JbTF18fHMobil8fHYobikpfWZ1bmN0aW9uIGUodCl7cmV0dXJuIHIodCl8fG4oMjMsdCksdFtRXS50fWZ1bmN0aW9uIGkobixyLHQpe3ZvaWQgMD09PXQmJih0PSExKSwwPT09byhuKT8odD9PYmplY3Qua2V5czpubikobikuZm9yRWFjaCgoZnVuY3Rpb24oZSl7dCYmXCJzeW1ib2xcIj09dHlwZW9mIGV8fHIoZSxuW2VdLG4pfSkpOm4uZm9yRWFjaCgoZnVuY3Rpb24odCxlKXtyZXR1cm4gcihlLHQsbil9KSl9ZnVuY3Rpb24gbyhuKXt2YXIgcj1uW1FdO3JldHVybiByP3IuaT4zP3IuaS00OnIuaTpBcnJheS5pc0FycmF5KG4pPzE6cyhuKT8yOnYobik/MzowfWZ1bmN0aW9uIHUobixyKXtyZXR1cm4gMj09PW8obik/bi5oYXMocik6T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scil9ZnVuY3Rpb24gYShuLHIpe3JldHVybiAyPT09byhuKT9uLmdldChyKTpuW3JdfWZ1bmN0aW9uIGYobixyLHQpe3ZhciBlPW8obik7Mj09PWU/bi5zZXQocix0KTozPT09ZT8obi5kZWxldGUociksbi5hZGQodCkpOm5bcl09dH1mdW5jdGlvbiBjKG4scil7cmV0dXJuIG49PT1yPzAhPT1ufHwxL249PTEvcjpuIT1uJiZyIT1yfWZ1bmN0aW9uIHMobil7cmV0dXJuIFgmJm4gaW5zdGFuY2VvZiBNYXB9ZnVuY3Rpb24gdihuKXtyZXR1cm4gcSYmbiBpbnN0YW5jZW9mIFNldH1mdW5jdGlvbiBwKG4pe3JldHVybiBuLm98fG4udH1mdW5jdGlvbiBsKG4pe2lmKEFycmF5LmlzQXJyYXkobikpcmV0dXJuIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKG4pO3ZhciByPXJuKG4pO2RlbGV0ZSByW1FdO2Zvcih2YXIgdD1ubihyKSxlPTA7ZTx0Lmxlbmd0aDtlKyspe3ZhciBpPXRbZV0sbz1yW2ldOyExPT09by53cml0YWJsZSYmKG8ud3JpdGFibGU9ITAsby5jb25maWd1cmFibGU9ITApLChvLmdldHx8by5zZXQpJiYocltpXT17Y29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLGVudW1lcmFibGU6by5lbnVtZXJhYmxlLHZhbHVlOm5baV19KX1yZXR1cm4gT2JqZWN0LmNyZWF0ZShPYmplY3QuZ2V0UHJvdG90eXBlT2Yobikscil9ZnVuY3Rpb24gZChuLGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT0hMSkseShuKXx8cihuKXx8IXQobik/bjoobyhuKT4xJiYobi5zZXQ9bi5hZGQ9bi5jbGVhcj1uLmRlbGV0ZT1oKSxPYmplY3QuZnJlZXplKG4pLGUmJmkobiwoZnVuY3Rpb24obixyKXtyZXR1cm4gZChyLCEwKX0pLCEwKSxuKX1mdW5jdGlvbiBoKCl7bigyKX1mdW5jdGlvbiB5KG4pe3JldHVybiBudWxsPT1ufHxcIm9iamVjdFwiIT10eXBlb2Ygbnx8T2JqZWN0LmlzRnJvemVuKG4pfWZ1bmN0aW9uIGIocil7dmFyIHQ9dG5bcl07cmV0dXJuIHR8fG4oMTgsciksdH1mdW5jdGlvbiBtKG4scil7dG5bbl18fCh0bltuXT1yKX1mdW5jdGlvbiBfKCl7cmV0dXJuXCJwcm9kdWN0aW9uXCI9PT1wcm9jZXNzLmVudi5OT0RFX0VOVnx8VXx8bigwKSxVfWZ1bmN0aW9uIGoobixyKXtyJiYoYihcIlBhdGNoZXNcIiksbi51PVtdLG4ucz1bXSxuLnY9cil9ZnVuY3Rpb24gTyhuKXtnKG4pLG4ucC5mb3JFYWNoKFMpLG4ucD1udWxsfWZ1bmN0aW9uIGcobil7bj09PVUmJihVPW4ubCl9ZnVuY3Rpb24gdyhuKXtyZXR1cm4gVT17cDpbXSxsOlUsaDpuLG06ITAsXzowfX1mdW5jdGlvbiBTKG4pe3ZhciByPW5bUV07MD09PXIuaXx8MT09PXIuaT9yLmooKTpyLk89ITB9ZnVuY3Rpb24gUChyLGUpe2UuXz1lLnAubGVuZ3RoO3ZhciBpPWUucFswXSxvPXZvaWQgMCE9PXImJnIhPT1pO3JldHVybiBlLmguZ3x8YihcIkVTNVwiKS5TKGUscixvKSxvPyhpW1FdLlAmJihPKGUpLG4oNCkpLHQocikmJihyPU0oZSxyKSxlLmx8fHgoZSxyKSksZS51JiZiKFwiUGF0Y2hlc1wiKS5NKGlbUV0udCxyLGUudSxlLnMpKTpyPU0oZSxpLFtdKSxPKGUpLGUudSYmZS52KGUudSxlLnMpLHIhPT1IP3I6dm9pZCAwfWZ1bmN0aW9uIE0obixyLHQpe2lmKHkocikpcmV0dXJuIHI7dmFyIGU9cltRXTtpZighZSlyZXR1cm4gaShyLChmdW5jdGlvbihpLG8pe3JldHVybiBBKG4sZSxyLGksbyx0KX0pLCEwKSxyO2lmKGUuQSE9PW4pcmV0dXJuIHI7aWYoIWUuUClyZXR1cm4geChuLGUudCwhMCksZS50O2lmKCFlLkkpe2UuST0hMCxlLkEuXy0tO3ZhciBvPTQ9PT1lLml8fDU9PT1lLmk/ZS5vPWwoZS5rKTplLm87aSgzPT09ZS5pP25ldyBTZXQobyk6bywoZnVuY3Rpb24ocixpKXtyZXR1cm4gQShuLGUsbyxyLGksdCl9KSkseChuLG8sITEpLHQmJm4udSYmYihcIlBhdGNoZXNcIikuUihlLHQsbi51LG4ucyl9cmV0dXJuIGUub31mdW5jdGlvbiBBKGUsaSxvLGEsYyxzKXtpZihcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZjPT09byYmbig1KSxyKGMpKXt2YXIgdj1NKGUsYyxzJiZpJiYzIT09aS5pJiYhdShpLkQsYSk/cy5jb25jYXQoYSk6dm9pZCAwKTtpZihmKG8sYSx2KSwhcih2KSlyZXR1cm47ZS5tPSExfWlmKHQoYykmJiF5KGMpKXtpZighZS5oLkYmJmUuXzwxKXJldHVybjtNKGUsYyksaSYmaS5BLmx8fHgoZSxjKX19ZnVuY3Rpb24geChuLHIsdCl7dm9pZCAwPT09dCYmKHQ9ITEpLG4uaC5GJiZuLm0mJmQocix0KX1mdW5jdGlvbiB6KG4scil7dmFyIHQ9bltRXTtyZXR1cm4odD9wKHQpOm4pW3JdfWZ1bmN0aW9uIEkobixyKXtpZihyIGluIG4pZm9yKHZhciB0PU9iamVjdC5nZXRQcm90b3R5cGVPZihuKTt0Oyl7dmFyIGU9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LHIpO2lmKGUpcmV0dXJuIGU7dD1PYmplY3QuZ2V0UHJvdG90eXBlT2YodCl9fWZ1bmN0aW9uIGsobil7bi5QfHwobi5QPSEwLG4ubCYmayhuLmwpKX1mdW5jdGlvbiBFKG4pe24ub3x8KG4ubz1sKG4udCkpfWZ1bmN0aW9uIFIobixyLHQpe3ZhciBlPXMocik/YihcIk1hcFNldFwiKS5OKHIsdCk6dihyKT9iKFwiTWFwU2V0XCIpLlQocix0KTpuLmc/ZnVuY3Rpb24obixyKXt2YXIgdD1BcnJheS5pc0FycmF5KG4pLGU9e2k6dD8xOjAsQTpyP3IuQTpfKCksUDohMSxJOiExLEQ6e30sbDpyLHQ6bixrOm51bGwsbzpudWxsLGo6bnVsbCxDOiExfSxpPWUsbz1lbjt0JiYoaT1bZV0sbz1vbik7dmFyIHU9UHJveHkucmV2b2NhYmxlKGksbyksYT11LnJldm9rZSxmPXUucHJveHk7cmV0dXJuIGUuaz1mLGUuaj1hLGZ9KHIsdCk6YihcIkVTNVwiKS5KKHIsdCk7cmV0dXJuKHQ/dC5BOl8oKSkucC5wdXNoKGUpLGV9ZnVuY3Rpb24gRChlKXtyZXR1cm4gcihlKXx8bigyMixlKSxmdW5jdGlvbiBuKHIpe2lmKCF0KHIpKXJldHVybiByO3ZhciBlLHU9cltRXSxjPW8ocik7aWYodSl7aWYoIXUuUCYmKHUuaTw0fHwhYihcIkVTNVwiKS5LKHUpKSlyZXR1cm4gdS50O3UuST0hMCxlPUYocixjKSx1Lkk9ITF9ZWxzZSBlPUYocixjKTtyZXR1cm4gaShlLChmdW5jdGlvbihyLHQpe3UmJmEodS50LHIpPT09dHx8ZihlLHIsbih0KSl9KSksMz09PWM/bmV3IFNldChlKTplfShlKX1mdW5jdGlvbiBGKG4scil7c3dpdGNoKHIpe2Nhc2UgMjpyZXR1cm4gbmV3IE1hcChuKTtjYXNlIDM6cmV0dXJuIEFycmF5LmZyb20obil9cmV0dXJuIGwobil9ZnVuY3Rpb24gTigpe2Z1bmN0aW9uIHQobixyKXt2YXIgdD1zW25dO3JldHVybiB0P3QuZW51bWVyYWJsZT1yOnNbbl09dD17Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6cixnZXQ6ZnVuY3Rpb24oKXt2YXIgcj10aGlzW1FdO3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJmYociksZW4uZ2V0KHIsbil9LHNldDpmdW5jdGlvbihyKXt2YXIgdD10aGlzW1FdO1wicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJmYodCksZW4uc2V0KHQsbixyKX19LHR9ZnVuY3Rpb24gZShuKXtmb3IodmFyIHI9bi5sZW5ndGgtMTtyPj0wO3ItLSl7dmFyIHQ9bltyXVtRXTtpZighdC5QKXN3aXRjaCh0Lmkpe2Nhc2UgNTphKHQpJiZrKHQpO2JyZWFrO2Nhc2UgNDpvKHQpJiZrKHQpfX19ZnVuY3Rpb24gbyhuKXtmb3IodmFyIHI9bi50LHQ9bi5rLGU9bm4odCksaT1lLmxlbmd0aC0xO2k+PTA7aS0tKXt2YXIgbz1lW2ldO2lmKG8hPT1RKXt2YXIgYT1yW29dO2lmKHZvaWQgMD09PWEmJiF1KHIsbykpcmV0dXJuITA7dmFyIGY9dFtvXSxzPWYmJmZbUV07aWYocz9zLnQhPT1hOiFjKGYsYSkpcmV0dXJuITB9fXZhciB2PSEhcltRXTtyZXR1cm4gZS5sZW5ndGghPT1ubihyKS5sZW5ndGgrKHY/MDoxKX1mdW5jdGlvbiBhKG4pe3ZhciByPW4uaztpZihyLmxlbmd0aCE9PW4udC5sZW5ndGgpcmV0dXJuITA7dmFyIHQ9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihyLHIubGVuZ3RoLTEpO2lmKHQmJiF0LmdldClyZXR1cm4hMDtmb3IodmFyIGU9MDtlPHIubGVuZ3RoO2UrKylpZighci5oYXNPd25Qcm9wZXJ0eShlKSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBmKHIpe3IuTyYmbigzLEpTT04uc3RyaW5naWZ5KHAocikpKX12YXIgcz17fTttKFwiRVM1XCIse0o6ZnVuY3Rpb24obixyKXt2YXIgZT1BcnJheS5pc0FycmF5KG4pLGk9ZnVuY3Rpb24obixyKXtpZihuKXtmb3IodmFyIGU9QXJyYXkoci5sZW5ndGgpLGk9MDtpPHIubGVuZ3RoO2krKylPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIlwiK2ksdChpLCEwKSk7cmV0dXJuIGV9dmFyIG89cm4ocik7ZGVsZXRlIG9bUV07Zm9yKHZhciB1PW5uKG8pLGE9MDthPHUubGVuZ3RoO2ErKyl7dmFyIGY9dVthXTtvW2ZdPXQoZixufHwhIW9bZl0uZW51bWVyYWJsZSl9cmV0dXJuIE9iamVjdC5jcmVhdGUoT2JqZWN0LmdldFByb3RvdHlwZU9mKHIpLG8pfShlLG4pLG89e2k6ZT81OjQsQTpyP3IuQTpfKCksUDohMSxJOiExLEQ6e30sbDpyLHQ6bixrOmksbzpudWxsLE86ITEsQzohMX07cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpLFEse3ZhbHVlOm8sd3JpdGFibGU6ITB9KSxpfSxTOmZ1bmN0aW9uKG4sdCxvKXtvP3IodCkmJnRbUV0uQT09PW4mJmUobi5wKToobi51JiZmdW5jdGlvbiBuKHIpe2lmKHImJlwib2JqZWN0XCI9PXR5cGVvZiByKXt2YXIgdD1yW1FdO2lmKHQpe3ZhciBlPXQudCxvPXQuayxmPXQuRCxjPXQuaTtpZig0PT09YylpKG8sKGZ1bmN0aW9uKHIpe3IhPT1RJiYodm9pZCAwIT09ZVtyXXx8dShlLHIpP2Zbcl18fG4ob1tyXSk6KGZbcl09ITAsayh0KSkpfSkpLGkoZSwoZnVuY3Rpb24obil7dm9pZCAwIT09b1tuXXx8dShvLG4pfHwoZltuXT0hMSxrKHQpKX0pKTtlbHNlIGlmKDU9PT1jKXtpZihhKHQpJiYoayh0KSxmLmxlbmd0aD0hMCksby5sZW5ndGg8ZS5sZW5ndGgpZm9yKHZhciBzPW8ubGVuZ3RoO3M8ZS5sZW5ndGg7cysrKWZbc109ITE7ZWxzZSBmb3IodmFyIHY9ZS5sZW5ndGg7djxvLmxlbmd0aDt2KyspZlt2XT0hMDtmb3IodmFyIHA9TWF0aC5taW4oby5sZW5ndGgsZS5sZW5ndGgpLGw9MDtsPHA7bCsrKW8uaGFzT3duUHJvcGVydHkobCl8fChmW2xdPSEwKSx2b2lkIDA9PT1mW2xdJiZuKG9bbF0pfX19fShuLnBbMF0pLGUobi5wKSl9LEs6ZnVuY3Rpb24obil7cmV0dXJuIDQ9PT1uLmk/byhuKTphKG4pfX0pfWZ1bmN0aW9uIFQoKXtmdW5jdGlvbiBlKG4pe2lmKCF0KG4pKXJldHVybiBuO2lmKEFycmF5LmlzQXJyYXkobikpcmV0dXJuIG4ubWFwKGUpO2lmKHMobikpcmV0dXJuIG5ldyBNYXAoQXJyYXkuZnJvbShuLmVudHJpZXMoKSkubWFwKChmdW5jdGlvbihuKXtyZXR1cm5bblswXSxlKG5bMV0pXX0pKSk7aWYodihuKSlyZXR1cm4gbmV3IFNldChBcnJheS5mcm9tKG4pLm1hcChlKSk7dmFyIHI9T2JqZWN0LmNyZWF0ZShPYmplY3QuZ2V0UHJvdG90eXBlT2YobikpO2Zvcih2YXIgaSBpbiBuKXJbaV09ZShuW2ldKTtyZXR1cm4gdShuLEwpJiYocltMXT1uW0xdKSxyfWZ1bmN0aW9uIGYobil7cmV0dXJuIHIobik/ZShuKTpufXZhciBjPVwiYWRkXCI7bShcIlBhdGNoZXNcIix7JDpmdW5jdGlvbihyLHQpe3JldHVybiB0LmZvckVhY2goKGZ1bmN0aW9uKHQpe2Zvcih2YXIgaT10LnBhdGgsdT10Lm9wLGY9cixzPTA7czxpLmxlbmd0aC0xO3MrKyl7dmFyIHY9byhmKSxwPVwiXCIraVtzXTswIT09diYmMSE9PXZ8fFwiX19wcm90b19fXCIhPT1wJiZcImNvbnN0cnVjdG9yXCIhPT1wfHxuKDI0KSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBmJiZcInByb3RvdHlwZVwiPT09cCYmbigyNCksXCJvYmplY3RcIiE9dHlwZW9mKGY9YShmLHApKSYmbigxNSxpLmpvaW4oXCIvXCIpKX12YXIgbD1vKGYpLGQ9ZSh0LnZhbHVlKSxoPWlbaS5sZW5ndGgtMV07c3dpdGNoKHUpe2Nhc2VcInJlcGxhY2VcIjpzd2l0Y2gobCl7Y2FzZSAyOnJldHVybiBmLnNldChoLGQpO2Nhc2UgMzpuKDE2KTtkZWZhdWx0OnJldHVybiBmW2hdPWR9Y2FzZSBjOnN3aXRjaChsKXtjYXNlIDE6cmV0dXJuXCItXCI9PT1oP2YucHVzaChkKTpmLnNwbGljZShoLDAsZCk7Y2FzZSAyOnJldHVybiBmLnNldChoLGQpO2Nhc2UgMzpyZXR1cm4gZi5hZGQoZCk7ZGVmYXVsdDpyZXR1cm4gZltoXT1kfWNhc2VcInJlbW92ZVwiOnN3aXRjaChsKXtjYXNlIDE6cmV0dXJuIGYuc3BsaWNlKGgsMSk7Y2FzZSAyOnJldHVybiBmLmRlbGV0ZShoKTtjYXNlIDM6cmV0dXJuIGYuZGVsZXRlKHQudmFsdWUpO2RlZmF1bHQ6cmV0dXJuIGRlbGV0ZSBmW2hdfWRlZmF1bHQ6bigxNyx1KX19KSkscn0sUjpmdW5jdGlvbihuLHIsdCxlKXtzd2l0Y2gobi5pKXtjYXNlIDA6Y2FzZSA0OmNhc2UgMjpyZXR1cm4gZnVuY3Rpb24obixyLHQsZSl7dmFyIG89bi50LHM9bi5vO2kobi5ELChmdW5jdGlvbihuLGkpe3ZhciB2PWEobyxuKSxwPWEocyxuKSxsPWk/dShvLG4pP1wicmVwbGFjZVwiOmM6XCJyZW1vdmVcIjtpZih2IT09cHx8XCJyZXBsYWNlXCIhPT1sKXt2YXIgZD1yLmNvbmNhdChuKTt0LnB1c2goXCJyZW1vdmVcIj09PWw/e29wOmwscGF0aDpkfTp7b3A6bCxwYXRoOmQsdmFsdWU6cH0pLGUucHVzaChsPT09Yz97b3A6XCJyZW1vdmVcIixwYXRoOmR9OlwicmVtb3ZlXCI9PT1sP3tvcDpjLHBhdGg6ZCx2YWx1ZTpmKHYpfTp7b3A6XCJyZXBsYWNlXCIscGF0aDpkLHZhbHVlOmYodil9KX19KSl9KG4scix0LGUpO2Nhc2UgNTpjYXNlIDE6cmV0dXJuIGZ1bmN0aW9uKG4scix0LGUpe3ZhciBpPW4udCxvPW4uRCx1PW4ubztpZih1Lmxlbmd0aDxpLmxlbmd0aCl7dmFyIGE9W3UsaV07aT1hWzBdLHU9YVsxXTt2YXIgcz1bZSx0XTt0PXNbMF0sZT1zWzFdfWZvcih2YXIgdj0wO3Y8aS5sZW5ndGg7disrKWlmKG9bdl0mJnVbdl0hPT1pW3ZdKXt2YXIgcD1yLmNvbmNhdChbdl0pO3QucHVzaCh7b3A6XCJyZXBsYWNlXCIscGF0aDpwLHZhbHVlOmYodVt2XSl9KSxlLnB1c2goe29wOlwicmVwbGFjZVwiLHBhdGg6cCx2YWx1ZTpmKGlbdl0pfSl9Zm9yKHZhciBsPWkubGVuZ3RoO2w8dS5sZW5ndGg7bCsrKXt2YXIgZD1yLmNvbmNhdChbbF0pO3QucHVzaCh7b3A6YyxwYXRoOmQsdmFsdWU6Zih1W2xdKX0pfWkubGVuZ3RoPHUubGVuZ3RoJiZlLnB1c2goe29wOlwicmVwbGFjZVwiLHBhdGg6ci5jb25jYXQoW1wibGVuZ3RoXCJdKSx2YWx1ZTppLmxlbmd0aH0pfShuLHIsdCxlKTtjYXNlIDM6cmV0dXJuIGZ1bmN0aW9uKG4scix0LGUpe3ZhciBpPW4udCxvPW4ubyx1PTA7aS5mb3JFYWNoKChmdW5jdGlvbihuKXtpZighby5oYXMobikpe3ZhciBpPXIuY29uY2F0KFt1XSk7dC5wdXNoKHtvcDpcInJlbW92ZVwiLHBhdGg6aSx2YWx1ZTpufSksZS51bnNoaWZ0KHtvcDpjLHBhdGg6aSx2YWx1ZTpufSl9dSsrfSkpLHU9MCxvLmZvckVhY2goKGZ1bmN0aW9uKG4pe2lmKCFpLmhhcyhuKSl7dmFyIG89ci5jb25jYXQoW3VdKTt0LnB1c2goe29wOmMscGF0aDpvLHZhbHVlOm59KSxlLnVuc2hpZnQoe29wOlwicmVtb3ZlXCIscGF0aDpvLHZhbHVlOm59KX11Kyt9KSl9KG4scix0LGUpfX0sTTpmdW5jdGlvbihuLHIsdCxlKXt0LnB1c2goe29wOlwicmVwbGFjZVwiLHBhdGg6W10sdmFsdWU6cj09PUg/dm9pZCAwOnJ9KSxlLnB1c2goe29wOlwicmVwbGFjZVwiLHBhdGg6W10sdmFsdWU6bn0pfX0pfWZ1bmN0aW9uIEMoKXtmdW5jdGlvbiByKG4scil7ZnVuY3Rpb24gdCgpe3RoaXMuY29uc3RydWN0b3I9bn1hKG4sciksbi5wcm90b3R5cGU9KHQucHJvdG90eXBlPXIucHJvdG90eXBlLG5ldyB0KX1mdW5jdGlvbiBlKG4pe24ub3x8KG4uRD1uZXcgTWFwLG4ubz1uZXcgTWFwKG4udCkpfWZ1bmN0aW9uIG8obil7bi5vfHwobi5vPW5ldyBTZXQsbi50LmZvckVhY2goKGZ1bmN0aW9uKHIpe2lmKHQocikpe3ZhciBlPVIobi5BLmgscixuKTtuLnAuc2V0KHIsZSksbi5vLmFkZChlKX1lbHNlIG4uby5hZGQocil9KSkpfWZ1bmN0aW9uIHUocil7ci5PJiZuKDMsSlNPTi5zdHJpbmdpZnkocChyKSkpfXZhciBhPWZ1bmN0aW9uKG4scil7cmV0dXJuKGE9T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKG4scil7bi5fX3Byb3RvX189cn18fGZ1bmN0aW9uKG4scil7Zm9yKHZhciB0IGluIHIpci5oYXNPd25Qcm9wZXJ0eSh0KSYmKG5bdF09clt0XSl9KShuLHIpfSxmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihuLHIpe3JldHVybiB0aGlzW1FdPXtpOjIsbDpyLEE6cj9yLkE6XygpLFA6ITEsSTohMSxvOnZvaWQgMCxEOnZvaWQgMCx0Om4sazp0aGlzLEM6ITEsTzohMX0sdGhpc31yKG4sTWFwKTt2YXIgbz1uLnByb3RvdHlwZTtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sXCJzaXplXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBwKHRoaXNbUV0pLnNpemV9fSksby5oYXM9ZnVuY3Rpb24obil7cmV0dXJuIHAodGhpc1tRXSkuaGFzKG4pfSxvLnNldD1mdW5jdGlvbihuLHIpe3ZhciB0PXRoaXNbUV07cmV0dXJuIHUodCkscCh0KS5oYXMobikmJnAodCkuZ2V0KG4pPT09cnx8KGUodCksayh0KSx0LkQuc2V0KG4sITApLHQuby5zZXQobixyKSx0LkQuc2V0KG4sITApKSx0aGlzfSxvLmRlbGV0ZT1mdW5jdGlvbihuKXtpZighdGhpcy5oYXMobikpcmV0dXJuITE7dmFyIHI9dGhpc1tRXTtyZXR1cm4gdShyKSxlKHIpLGsociksci50LmhhcyhuKT9yLkQuc2V0KG4sITEpOnIuRC5kZWxldGUobiksci5vLmRlbGV0ZShuKSwhMH0sby5jbGVhcj1mdW5jdGlvbigpe3ZhciBuPXRoaXNbUV07dShuKSxwKG4pLnNpemUmJihlKG4pLGsobiksbi5EPW5ldyBNYXAsaShuLnQsKGZ1bmN0aW9uKHIpe24uRC5zZXQociwhMSl9KSksbi5vLmNsZWFyKCkpfSxvLmZvckVhY2g9ZnVuY3Rpb24obixyKXt2YXIgdD10aGlzO3AodGhpc1tRXSkuZm9yRWFjaCgoZnVuY3Rpb24oZSxpKXtuLmNhbGwocix0LmdldChpKSxpLHQpfSkpfSxvLmdldD1mdW5jdGlvbihuKXt2YXIgcj10aGlzW1FdO3Uocik7dmFyIGk9cChyKS5nZXQobik7aWYoci5JfHwhdChpKSlyZXR1cm4gaTtpZihpIT09ci50LmdldChuKSlyZXR1cm4gaTt2YXIgbz1SKHIuQS5oLGkscik7cmV0dXJuIGUociksci5vLnNldChuLG8pLG99LG8ua2V5cz1mdW5jdGlvbigpe3JldHVybiBwKHRoaXNbUV0pLmtleXMoKX0sby52YWx1ZXM9ZnVuY3Rpb24oKXt2YXIgbixyPXRoaXMsdD10aGlzLmtleXMoKTtyZXR1cm4obj17fSlbVl09ZnVuY3Rpb24oKXtyZXR1cm4gci52YWx1ZXMoKX0sbi5uZXh0PWZ1bmN0aW9uKCl7dmFyIG49dC5uZXh0KCk7cmV0dXJuIG4uZG9uZT9uOntkb25lOiExLHZhbHVlOnIuZ2V0KG4udmFsdWUpfX0sbn0sby5lbnRyaWVzPWZ1bmN0aW9uKCl7dmFyIG4scj10aGlzLHQ9dGhpcy5rZXlzKCk7cmV0dXJuKG49e30pW1ZdPWZ1bmN0aW9uKCl7cmV0dXJuIHIuZW50cmllcygpfSxuLm5leHQ9ZnVuY3Rpb24oKXt2YXIgbj10Lm5leHQoKTtpZihuLmRvbmUpcmV0dXJuIG47dmFyIGU9ci5nZXQobi52YWx1ZSk7cmV0dXJue2RvbmU6ITEsdmFsdWU6W24udmFsdWUsZV19fSxufSxvW1ZdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZW50cmllcygpfSxufSgpLGM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4scil7cmV0dXJuIHRoaXNbUV09e2k6MyxsOnIsQTpyP3IuQTpfKCksUDohMSxJOiExLG86dm9pZCAwLHQ6bixrOnRoaXMscDpuZXcgTWFwLE86ITEsQzohMX0sdGhpc31yKG4sU2V0KTt2YXIgdD1uLnByb3RvdHlwZTtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJzaXplXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBwKHRoaXNbUV0pLnNpemV9fSksdC5oYXM9ZnVuY3Rpb24obil7dmFyIHI9dGhpc1tRXTtyZXR1cm4gdShyKSxyLm8/ISFyLm8uaGFzKG4pfHwhKCFyLnAuaGFzKG4pfHwhci5vLmhhcyhyLnAuZ2V0KG4pKSk6ci50LmhhcyhuKX0sdC5hZGQ9ZnVuY3Rpb24obil7dmFyIHI9dGhpc1tRXTtyZXR1cm4gdShyKSx0aGlzLmhhcyhuKXx8KG8ociksayhyKSxyLm8uYWRkKG4pKSx0aGlzfSx0LmRlbGV0ZT1mdW5jdGlvbihuKXtpZighdGhpcy5oYXMobikpcmV0dXJuITE7dmFyIHI9dGhpc1tRXTtyZXR1cm4gdShyKSxvKHIpLGsociksci5vLmRlbGV0ZShuKXx8ISFyLnAuaGFzKG4pJiZyLm8uZGVsZXRlKHIucC5nZXQobikpfSx0LmNsZWFyPWZ1bmN0aW9uKCl7dmFyIG49dGhpc1tRXTt1KG4pLHAobikuc2l6ZSYmKG8obiksayhuKSxuLm8uY2xlYXIoKSl9LHQudmFsdWVzPWZ1bmN0aW9uKCl7dmFyIG49dGhpc1tRXTtyZXR1cm4gdShuKSxvKG4pLG4uby52YWx1ZXMoKX0sdC5lbnRyaWVzPWZ1bmN0aW9uKCl7dmFyIG49dGhpc1tRXTtyZXR1cm4gdShuKSxvKG4pLG4uby5lbnRyaWVzKCl9LHQua2V5cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnZhbHVlcygpfSx0W1ZdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmFsdWVzKCl9LHQuZm9yRWFjaD1mdW5jdGlvbihuLHIpe2Zvcih2YXIgdD10aGlzLnZhbHVlcygpLGU9dC5uZXh0KCk7IWUuZG9uZTspbi5jYWxsKHIsZS52YWx1ZSxlLnZhbHVlLHRoaXMpLGU9dC5uZXh0KCl9LG59KCk7bShcIk1hcFNldFwiLHtOOmZ1bmN0aW9uKG4scil7cmV0dXJuIG5ldyBmKG4scil9LFQ6ZnVuY3Rpb24obixyKXtyZXR1cm4gbmV3IGMobixyKX19KX1mdW5jdGlvbiBKKCl7TigpLEMoKSxUKCl9ZnVuY3Rpb24gSyhuKXtyZXR1cm4gbn1mdW5jdGlvbiAkKG4pe3JldHVybiBufXZhciBHLFUsVz1cInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sKFwieFwiKSxYPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBNYXAscT1cInVuZGVmaW5lZFwiIT10eXBlb2YgU2V0LEI9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFByb3h5JiZ2b2lkIDAhPT1Qcm94eS5yZXZvY2FibGUmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBSZWZsZWN0LEg9Vz9TeW1ib2wuZm9yKFwiaW1tZXItbm90aGluZ1wiKTooKEc9e30pW1wiaW1tZXItbm90aGluZ1wiXT0hMCxHKSxMPVc/U3ltYm9sLmZvcihcImltbWVyLWRyYWZ0YWJsZVwiKTpcIl9fJGltbWVyX2RyYWZ0YWJsZVwiLFE9Vz9TeW1ib2wuZm9yKFwiaW1tZXItc3RhdGVcIik6XCJfXyRpbW1lcl9zdGF0ZVwiLFY9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yfHxcIkBAaXRlcmF0b3JcIixZPXswOlwiSWxsZWdhbCBzdGF0ZVwiLDE6XCJJbW1lciBkcmFmdHMgY2Fubm90IGhhdmUgY29tcHV0ZWQgcHJvcGVydGllc1wiLDI6XCJUaGlzIG9iamVjdCBoYXMgYmVlbiBmcm96ZW4gYW5kIHNob3VsZCBub3QgYmUgbXV0YXRlZFwiLDM6ZnVuY3Rpb24obil7cmV0dXJuXCJDYW5ub3QgdXNlIGEgcHJveHkgdGhhdCBoYXMgYmVlbiByZXZva2VkLiBEaWQgeW91IHBhc3MgYW4gb2JqZWN0IGZyb20gaW5zaWRlIGFuIGltbWVyIGZ1bmN0aW9uIHRvIGFuIGFzeW5jIHByb2Nlc3M/IFwiK259LDQ6XCJBbiBpbW1lciBwcm9kdWNlciByZXR1cm5lZCBhIG5ldyB2YWx1ZSAqYW5kKiBtb2RpZmllZCBpdHMgZHJhZnQuIEVpdGhlciByZXR1cm4gYSBuZXcgdmFsdWUgKm9yKiBtb2RpZnkgdGhlIGRyYWZ0LlwiLDU6XCJJbW1lciBmb3JiaWRzIGNpcmN1bGFyIHJlZmVyZW5jZXNcIiw2OlwiVGhlIGZpcnN0IG9yIHNlY29uZCBhcmd1bWVudCB0byBgcHJvZHVjZWAgbXVzdCBiZSBhIGZ1bmN0aW9uXCIsNzpcIlRoZSB0aGlyZCBhcmd1bWVudCB0byBgcHJvZHVjZWAgbXVzdCBiZSBhIGZ1bmN0aW9uIG9yIHVuZGVmaW5lZFwiLDg6XCJGaXJzdCBhcmd1bWVudCB0byBgY3JlYXRlRHJhZnRgIG11c3QgYmUgYSBwbGFpbiBvYmplY3QsIGFuIGFycmF5LCBvciBhbiBpbW1lcmFibGUgb2JqZWN0XCIsOTpcIkZpcnN0IGFyZ3VtZW50IHRvIGBmaW5pc2hEcmFmdGAgbXVzdCBiZSBhIGRyYWZ0IHJldHVybmVkIGJ5IGBjcmVhdGVEcmFmdGBcIiwxMDpcIlRoZSBnaXZlbiBkcmFmdCBpcyBhbHJlYWR5IGZpbmFsaXplZFwiLDExOlwiT2JqZWN0LmRlZmluZVByb3BlcnR5KCkgY2Fubm90IGJlIHVzZWQgb24gYW4gSW1tZXIgZHJhZnRcIiwxMjpcIk9iamVjdC5zZXRQcm90b3R5cGVPZigpIGNhbm5vdCBiZSB1c2VkIG9uIGFuIEltbWVyIGRyYWZ0XCIsMTM6XCJJbW1lciBvbmx5IHN1cHBvcnRzIGRlbGV0aW5nIGFycmF5IGluZGljZXNcIiwxNDpcIkltbWVyIG9ubHkgc3VwcG9ydHMgc2V0dGluZyBhcnJheSBpbmRpY2VzIGFuZCB0aGUgJ2xlbmd0aCcgcHJvcGVydHlcIiwxNTpmdW5jdGlvbihuKXtyZXR1cm5cIkNhbm5vdCBhcHBseSBwYXRjaCwgcGF0aCBkb2Vzbid0IHJlc29sdmU6IFwiK259LDE2OidTZXRzIGNhbm5vdCBoYXZlIFwicmVwbGFjZVwiIHBhdGNoZXMuJywxNzpmdW5jdGlvbihuKXtyZXR1cm5cIlVuc3VwcG9ydGVkIHBhdGNoIG9wZXJhdGlvbjogXCIrbn0sMTg6ZnVuY3Rpb24obil7cmV0dXJuXCJUaGUgcGx1Z2luIGZvciAnXCIrbitcIicgaGFzIG5vdCBiZWVuIGxvYWRlZCBpbnRvIEltbWVyLiBUbyBlbmFibGUgdGhlIHBsdWdpbiwgaW1wb3J0IGFuZCBjYWxsIGBlbmFibGVcIituK1wiKClgIHdoZW4gaW5pdGlhbGl6aW5nIHlvdXIgYXBwbGljYXRpb24uXCJ9LDIwOlwiQ2Fubm90IHVzZSBwcm94aWVzIGlmIFByb3h5LCBQcm94eS5yZXZvY2FibGUgb3IgUmVmbGVjdCBhcmUgbm90IGF2YWlsYWJsZVwiLDIxOmZ1bmN0aW9uKG4pe3JldHVyblwicHJvZHVjZSBjYW4gb25seSBiZSBjYWxsZWQgb24gdGhpbmdzIHRoYXQgYXJlIGRyYWZ0YWJsZTogcGxhaW4gb2JqZWN0cywgYXJyYXlzLCBNYXAsIFNldCBvciBjbGFzc2VzIHRoYXQgYXJlIG1hcmtlZCB3aXRoICdbaW1tZXJhYmxlXTogdHJ1ZScuIEdvdCAnXCIrbitcIidcIn0sMjI6ZnVuY3Rpb24obil7cmV0dXJuXCInY3VycmVudCcgZXhwZWN0cyBhIGRyYWZ0LCBnb3Q6IFwiK259LDIzOmZ1bmN0aW9uKG4pe3JldHVyblwiJ29yaWdpbmFsJyBleHBlY3RzIGEgZHJhZnQsIGdvdDogXCIrbn0sMjQ6XCJQYXRjaGluZyByZXNlcnZlZCBhdHRyaWJ1dGVzIGxpa2UgX19wcm90b19fLCBwcm90b3R5cGUgYW5kIGNvbnN0cnVjdG9yIGlzIG5vdCBhbGxvd2VkXCJ9LFo9XCJcIitPYmplY3QucHJvdG90eXBlLmNvbnN0cnVjdG9yLG5uPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0Lm93bktleXM/UmVmbGVjdC5vd25LZXlzOnZvaWQgMCE9PU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM/ZnVuY3Rpb24obil7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG4pLmNvbmNhdChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG4pKX06T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMscm49T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnN8fGZ1bmN0aW9uKG4pe3ZhciByPXt9O3JldHVybiBubihuKS5mb3JFYWNoKChmdW5jdGlvbih0KXtyW3RdPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iobix0KX0pKSxyfSx0bj17fSxlbj17Z2V0OmZ1bmN0aW9uKG4scil7aWYocj09PVEpcmV0dXJuIG47dmFyIGU9cChuKTtpZighdShlLHIpKXJldHVybiBmdW5jdGlvbihuLHIsdCl7dmFyIGUsaT1JKHIsdCk7cmV0dXJuIGk/XCJ2YWx1ZVwiaW4gaT9pLnZhbHVlOm51bGw9PT0oZT1pLmdldCl8fHZvaWQgMD09PWU/dm9pZCAwOmUuY2FsbChuLmspOnZvaWQgMH0obixlLHIpO3ZhciBpPWVbcl07cmV0dXJuIG4uSXx8IXQoaSk/aTppPT09eihuLnQscik/KEUobiksbi5vW3JdPVIobi5BLmgsaSxuKSk6aX0saGFzOmZ1bmN0aW9uKG4scil7cmV0dXJuIHIgaW4gcChuKX0sb3duS2V5czpmdW5jdGlvbihuKXtyZXR1cm4gUmVmbGVjdC5vd25LZXlzKHAobikpfSxzZXQ6ZnVuY3Rpb24obixyLHQpe3ZhciBlPUkocChuKSxyKTtpZihudWxsPT1lP3ZvaWQgMDplLnNldClyZXR1cm4gZS5zZXQuY2FsbChuLmssdCksITA7aWYoIW4uUCl7dmFyIGk9eihwKG4pLHIpLG89bnVsbD09aT92b2lkIDA6aVtRXTtpZihvJiZvLnQ9PT10KXJldHVybiBuLm9bcl09dCxuLkRbcl09ITEsITA7aWYoYyh0LGkpJiYodm9pZCAwIT09dHx8dShuLnQscikpKXJldHVybiEwO0UobiksayhuKX1yZXR1cm4gbi5vW3JdPT09dCYmXCJudW1iZXJcIiE9dHlwZW9mIHQmJih2b2lkIDAhPT10fHxyIGluIG4ubyl8fChuLm9bcl09dCxuLkRbcl09ITAsITApfSxkZWxldGVQcm9wZXJ0eTpmdW5jdGlvbihuLHIpe3JldHVybiB2b2lkIDAhPT16KG4udCxyKXx8ciBpbiBuLnQ/KG4uRFtyXT0hMSxFKG4pLGsobikpOmRlbGV0ZSBuLkRbcl0sbi5vJiZkZWxldGUgbi5vW3JdLCEwfSxnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6ZnVuY3Rpb24obixyKXt2YXIgdD1wKG4pLGU9UmVmbGVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxyKTtyZXR1cm4gZT97d3JpdGFibGU6ITAsY29uZmlndXJhYmxlOjEhPT1uLml8fFwibGVuZ3RoXCIhPT1yLGVudW1lcmFibGU6ZS5lbnVtZXJhYmxlLHZhbHVlOnRbcl19OmV9LGRlZmluZVByb3BlcnR5OmZ1bmN0aW9uKCl7bigxMSl9LGdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKG4pe3JldHVybiBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobi50KX0sc2V0UHJvdG90eXBlT2Y6ZnVuY3Rpb24oKXtuKDEyKX19LG9uPXt9O2koZW4sKGZ1bmN0aW9uKG4scil7b25bbl09ZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzWzBdPWFyZ3VtZW50c1swXVswXSxyLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19KSksb24uZGVsZXRlUHJvcGVydHk9ZnVuY3Rpb24ocix0KXtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZpc05hTihwYXJzZUludCh0KSkmJm4oMTMpLG9uLnNldC5jYWxsKHRoaXMscix0LHZvaWQgMCl9LG9uLnNldD1mdW5jdGlvbihyLHQsZSl7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmXCJsZW5ndGhcIiE9PXQmJmlzTmFOKHBhcnNlSW50KHQpKSYmbigxNCksZW4uc2V0LmNhbGwodGhpcyxyWzBdLHQsZSxyWzBdKX07dmFyIHVuPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShyKXt2YXIgZT10aGlzO3RoaXMuZz1CLHRoaXMuRj0hMCx0aGlzLnByb2R1Y2U9ZnVuY3Rpb24ocixpLG8pe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHImJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGkpe3ZhciB1PWk7aT1yO3ZhciBhPWU7cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciByPXRoaXM7dm9pZCAwPT09biYmKG49dSk7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsZT1BcnJheSh0PjE/dC0xOjApLG89MTtvPHQ7bysrKWVbby0xXT1hcmd1bWVudHNbb107cmV0dXJuIGEucHJvZHVjZShuLChmdW5jdGlvbihuKXt2YXIgdDtyZXR1cm4odD1pKS5jYWxsLmFwcGx5KHQsW3Isbl0uY29uY2F0KGUpKX0pKX19dmFyIGY7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgaSYmbig2KSx2b2lkIDAhPT1vJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBvJiZuKDcpLHQocikpe3ZhciBjPXcoZSkscz1SKGUscix2b2lkIDApLHY9ITA7dHJ5e2Y9aShzKSx2PSExfWZpbmFsbHl7dj9PKGMpOmcoYyl9cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFByb21pc2UmJmYgaW5zdGFuY2VvZiBQcm9taXNlP2YudGhlbigoZnVuY3Rpb24obil7cmV0dXJuIGooYyxvKSxQKG4sYyl9KSwoZnVuY3Rpb24obil7dGhyb3cgTyhjKSxufSkpOihqKGMsbyksUChmLGMpKX1pZighcnx8XCJvYmplY3RcIiE9dHlwZW9mIHIpe2lmKHZvaWQgMD09PShmPWkocikpJiYoZj1yKSxmPT09SCYmKGY9dm9pZCAwKSxlLkYmJmQoZiwhMCksbyl7dmFyIHA9W10sbD1bXTtiKFwiUGF0Y2hlc1wiKS5NKHIsZixwLGwpLG8ocCxsKX1yZXR1cm4gZn1uKDIxLHIpfSx0aGlzLnByb2R1Y2VXaXRoUGF0Y2hlcz1mdW5jdGlvbihuLHIpe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG4pcmV0dXJuIGZ1bmN0aW9uKHIpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLGk9QXJyYXkodD4xP3QtMTowKSxvPTE7bzx0O28rKylpW28tMV09YXJndW1lbnRzW29dO3JldHVybiBlLnByb2R1Y2VXaXRoUGF0Y2hlcyhyLChmdW5jdGlvbihyKXtyZXR1cm4gbi5hcHBseSh2b2lkIDAsW3JdLmNvbmNhdChpKSl9KSl9O3ZhciB0LGksbz1lLnByb2R1Y2UobixyLChmdW5jdGlvbihuLHIpe3Q9bixpPXJ9KSk7cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFByb21pc2UmJm8gaW5zdGFuY2VvZiBQcm9taXNlP28udGhlbigoZnVuY3Rpb24obil7cmV0dXJuW24sdCxpXX0pKTpbbyx0LGldfSxcImJvb2xlYW5cIj09dHlwZW9mKG51bGw9PXI/dm9pZCAwOnIudXNlUHJveGllcykmJnRoaXMuc2V0VXNlUHJveGllcyhyLnVzZVByb3hpZXMpLFwiYm9vbGVhblwiPT10eXBlb2YobnVsbD09cj92b2lkIDA6ci5hdXRvRnJlZXplKSYmdGhpcy5zZXRBdXRvRnJlZXplKHIuYXV0b0ZyZWV6ZSl9dmFyIGk9ZS5wcm90b3R5cGU7cmV0dXJuIGkuY3JlYXRlRHJhZnQ9ZnVuY3Rpb24oZSl7dChlKXx8big4KSxyKGUpJiYoZT1EKGUpKTt2YXIgaT13KHRoaXMpLG89Uih0aGlzLGUsdm9pZCAwKTtyZXR1cm4gb1tRXS5DPSEwLGcoaSksb30saS5maW5pc2hEcmFmdD1mdW5jdGlvbihyLHQpe3ZhciBlPXImJnJbUV07XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKGUmJmUuQ3x8big5KSxlLkkmJm4oMTApKTt2YXIgaT1lLkE7cmV0dXJuIGooaSx0KSxQKHZvaWQgMCxpKX0saS5zZXRBdXRvRnJlZXplPWZ1bmN0aW9uKG4pe3RoaXMuRj1ufSxpLnNldFVzZVByb3hpZXM9ZnVuY3Rpb24ocil7ciYmIUImJm4oMjApLHRoaXMuZz1yfSxpLmFwcGx5UGF0Y2hlcz1mdW5jdGlvbihuLHQpe3ZhciBlO2ZvcihlPXQubGVuZ3RoLTE7ZT49MDtlLS0pe3ZhciBpPXRbZV07aWYoMD09PWkucGF0aC5sZW5ndGgmJlwicmVwbGFjZVwiPT09aS5vcCl7bj1pLnZhbHVlO2JyZWFrfX1lPi0xJiYodD10LnNsaWNlKGUrMSkpO3ZhciBvPWIoXCJQYXRjaGVzXCIpLiQ7cmV0dXJuIHIobik/byhuLHQpOnRoaXMucHJvZHVjZShuLChmdW5jdGlvbihuKXtyZXR1cm4gbyhuLHQpfSkpfSxlfSgpLGFuPW5ldyB1bixmbj1hbi5wcm9kdWNlLGNuPWFuLnByb2R1Y2VXaXRoUGF0Y2hlcy5iaW5kKGFuKSxzbj1hbi5zZXRBdXRvRnJlZXplLmJpbmQoYW4pLHZuPWFuLnNldFVzZVByb3hpZXMuYmluZChhbikscG49YW4uYXBwbHlQYXRjaGVzLmJpbmQoYW4pLGxuPWFuLmNyZWF0ZURyYWZ0LmJpbmQoYW4pLGRuPWFuLmZpbmlzaERyYWZ0LmJpbmQoYW4pO2V4cG9ydCBkZWZhdWx0IGZuO2V4cG9ydHt1biBhcyBJbW1lcixwbiBhcyBhcHBseVBhdGNoZXMsSyBhcyBjYXN0RHJhZnQsJCBhcyBjYXN0SW1tdXRhYmxlLGxuIGFzIGNyZWF0ZURyYWZ0LEQgYXMgY3VycmVudCxKIGFzIGVuYWJsZUFsbFBsdWdpbnMsTiBhcyBlbmFibGVFUzUsQyBhcyBlbmFibGVNYXBTZXQsVCBhcyBlbmFibGVQYXRjaGVzLGRuIGFzIGZpbmlzaERyYWZ0LGQgYXMgZnJlZXplLEwgYXMgaW1tZXJhYmxlLHIgYXMgaXNEcmFmdCx0IGFzIGlzRHJhZnRhYmxlLEggYXMgbm90aGluZyxlIGFzIG9yaWdpbmFsLGZuIGFzIHByb2R1Y2UsY24gYXMgcHJvZHVjZVdpdGhQYXRjaGVzLHNuIGFzIHNldEF1dG9GcmVlemUsdm4gYXMgc2V0VXNlUHJveGllc307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbW1lci5lc20uanMubWFwXG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn0iLCJpbXBvcnQgZGVmaW5lUHJvcGVydHkgZnJvbSBcIi4vZGVmaW5lUHJvcGVydHkuanNcIjtcblxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7XG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTtcblxuICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgIHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpO1xuICAgIGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkge1xuICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7XG4gICAgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7XG4gIH1cblxuICByZXR1cm4ga2V5cztcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFNwcmVhZDIodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IG51bGwgIT0gYXJndW1lbnRzW2ldID8gYXJndW1lbnRzW2ldIDoge307XG4gICAgaSAlIDIgPyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pO1xuICAgIH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwiaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMic7XG5cbi8qKlxuICogQWRhcHRlZCBmcm9tIFJlYWN0OiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi9tYXN0ZXIvcGFja2FnZXMvc2hhcmVkL2Zvcm1hdFByb2RFcnJvck1lc3NhZ2UuanNcbiAqXG4gKiBEbyBub3QgcmVxdWlyZSB0aGlzIG1vZHVsZSBkaXJlY3RseSEgVXNlIG5vcm1hbCB0aHJvdyBlcnJvciBjYWxscy4gVGhlc2UgbWVzc2FnZXMgd2lsbCBiZSByZXBsYWNlZCB3aXRoIGVycm9yIGNvZGVzXG4gKiBkdXJpbmcgYnVpbGQuXG4gKiBAcGFyYW0ge251bWJlcn0gY29kZVxuICovXG5mdW5jdGlvbiBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKGNvZGUpIHtcbiAgcmV0dXJuIFwiTWluaWZpZWQgUmVkdXggZXJyb3IgI1wiICsgY29kZSArIFwiOyB2aXNpdCBodHRwczovL3JlZHV4LmpzLm9yZy9FcnJvcnM/Y29kZT1cIiArIGNvZGUgKyBcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciBcIiArICd1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzLiAnO1xufVxuXG4vLyBJbmxpbmVkIHZlcnNpb24gb2YgdGhlIGBzeW1ib2wtb2JzZXJ2YWJsZWAgcG9seWZpbGxcbnZhciAkJG9ic2VydmFibGUgPSAoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wub2JzZXJ2YWJsZSB8fCAnQEBvYnNlcnZhYmxlJztcbn0pKCk7XG5cbi8qKlxuICogVGhlc2UgYXJlIHByaXZhdGUgYWN0aW9uIHR5cGVzIHJlc2VydmVkIGJ5IFJlZHV4LlxuICogRm9yIGFueSB1bmtub3duIGFjdGlvbnMsIHlvdSBtdXN0IHJldHVybiB0aGUgY3VycmVudCBzdGF0ZS5cbiAqIElmIHRoZSBjdXJyZW50IHN0YXRlIGlzIHVuZGVmaW5lZCwgeW91IG11c3QgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLlxuICogRG8gbm90IHJlZmVyZW5jZSB0aGVzZSBhY3Rpb24gdHlwZXMgZGlyZWN0bHkgaW4geW91ciBjb2RlLlxuICovXG52YXIgcmFuZG9tU3RyaW5nID0gZnVuY3Rpb24gcmFuZG9tU3RyaW5nKCkge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDcpLnNwbGl0KCcnKS5qb2luKCcuJyk7XG59O1xuXG52YXIgQWN0aW9uVHlwZXMgPSB7XG4gIElOSVQ6IFwiQEByZWR1eC9JTklUXCIgKyByYW5kb21TdHJpbmcoKSxcbiAgUkVQTEFDRTogXCJAQHJlZHV4L1JFUExBQ0VcIiArIHJhbmRvbVN0cmluZygpLFxuICBQUk9CRV9VTktOT1dOX0FDVElPTjogZnVuY3Rpb24gUFJPQkVfVU5LTk9XTl9BQ1RJT04oKSB7XG4gICAgcmV0dXJuIFwiQEByZWR1eC9QUk9CRV9VTktOT1dOX0FDVElPTlwiICsgcmFuZG9tU3RyaW5nKCk7XG4gIH1cbn07XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IG9iaiBUaGUgb2JqZWN0IHRvIGluc3BlY3QuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgYXJndW1lbnQgYXBwZWFycyB0byBiZSBhIHBsYWluIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gaXNQbGFpbk9iamVjdChvYmopIHtcbiAgaWYgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnIHx8IG9iaiA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuICB2YXIgcHJvdG8gPSBvYmo7XG5cbiAgd2hpbGUgKE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90bykgIT09IG51bGwpIHtcbiAgICBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90byk7XG4gIH1cblxuICByZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaikgPT09IHByb3RvO1xufVxuXG4vLyBJbmxpbmVkIC8gc2hvcnRlbmVkIHZlcnNpb24gb2YgYGtpbmRPZmAgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vam9uc2NobGlua2VydC9raW5kLW9mXG5mdW5jdGlvbiBtaW5pS2luZE9mKHZhbCkge1xuICBpZiAodmFsID09PSB2b2lkIDApIHJldHVybiAndW5kZWZpbmVkJztcbiAgaWYgKHZhbCA9PT0gbnVsbCkgcmV0dXJuICdudWxsJztcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsO1xuXG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgY2FzZSAnbnVtYmVyJzpcbiAgICBjYXNlICdzeW1ib2wnOlxuICAgIGNhc2UgJ2Z1bmN0aW9uJzpcbiAgICAgIHtcbiAgICAgICAgcmV0dXJuIHR5cGU7XG4gICAgICB9XG4gIH1cblxuICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSByZXR1cm4gJ2FycmF5JztcbiAgaWYgKGlzRGF0ZSh2YWwpKSByZXR1cm4gJ2RhdGUnO1xuICBpZiAoaXNFcnJvcih2YWwpKSByZXR1cm4gJ2Vycm9yJztcbiAgdmFyIGNvbnN0cnVjdG9yTmFtZSA9IGN0b3JOYW1lKHZhbCk7XG5cbiAgc3dpdGNoIChjb25zdHJ1Y3Rvck5hbWUpIHtcbiAgICBjYXNlICdTeW1ib2wnOlxuICAgIGNhc2UgJ1Byb21pc2UnOlxuICAgIGNhc2UgJ1dlYWtNYXAnOlxuICAgIGNhc2UgJ1dlYWtTZXQnOlxuICAgIGNhc2UgJ01hcCc6XG4gICAgY2FzZSAnU2V0JzpcbiAgICAgIHJldHVybiBjb25zdHJ1Y3Rvck5hbWU7XG4gIH0gLy8gb3RoZXJcblxuXG4gIHJldHVybiB0eXBlLnNsaWNlKDgsIC0xKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1xccy9nLCAnJyk7XG59XG5cbmZ1bmN0aW9uIGN0b3JOYW1lKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbC5jb25zdHJ1Y3RvciA9PT0gJ2Z1bmN0aW9uJyA/IHZhbC5jb25zdHJ1Y3Rvci5uYW1lIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gaXNFcnJvcih2YWwpIHtcbiAgcmV0dXJuIHZhbCBpbnN0YW5jZW9mIEVycm9yIHx8IHR5cGVvZiB2YWwubWVzc2FnZSA9PT0gJ3N0cmluZycgJiYgdmFsLmNvbnN0cnVjdG9yICYmIHR5cGVvZiB2YWwuY29uc3RydWN0b3Iuc3RhY2tUcmFjZUxpbWl0ID09PSAnbnVtYmVyJztcbn1cblxuZnVuY3Rpb24gaXNEYXRlKHZhbCkge1xuICBpZiAodmFsIGluc3RhbmNlb2YgRGF0ZSkgcmV0dXJuIHRydWU7XG4gIHJldHVybiB0eXBlb2YgdmFsLnRvRGF0ZVN0cmluZyA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgdmFsLmdldERhdGUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIHZhbC5zZXREYXRlID09PSAnZnVuY3Rpb24nO1xufVxuXG5mdW5jdGlvbiBraW5kT2YodmFsKSB7XG4gIHZhciB0eXBlT2ZWYWwgPSB0eXBlb2YgdmFsO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdHlwZU9mVmFsID0gbWluaUtpbmRPZih2YWwpO1xuICB9XG5cbiAgcmV0dXJuIHR5cGVPZlZhbDtcbn1cblxuLyoqXG4gKiBAZGVwcmVjYXRlZFxuICpcbiAqICoqV2UgcmVjb21tZW5kIHVzaW5nIHRoZSBgY29uZmlndXJlU3RvcmVgIG1ldGhvZFxuICogb2YgdGhlIGBAcmVkdXhqcy90b29sa2l0YCBwYWNrYWdlKiosIHdoaWNoIHJlcGxhY2VzIGBjcmVhdGVTdG9yZWAuXG4gKlxuICogUmVkdXggVG9vbGtpdCBpcyBvdXIgcmVjb21tZW5kZWQgYXBwcm9hY2ggZm9yIHdyaXRpbmcgUmVkdXggbG9naWMgdG9kYXksXG4gKiBpbmNsdWRpbmcgc3RvcmUgc2V0dXAsIHJlZHVjZXJzLCBkYXRhIGZldGNoaW5nLCBhbmQgbW9yZS5cbiAqXG4gKiAqKkZvciBtb3JlIGRldGFpbHMsIHBsZWFzZSByZWFkIHRoaXMgUmVkdXggZG9jcyBwYWdlOioqXG4gKiAqKmh0dHBzOi8vcmVkdXguanMub3JnL2ludHJvZHVjdGlvbi93aHktcnRrLWlzLXJlZHV4LXRvZGF5KipcbiAqXG4gKiBgY29uZmlndXJlU3RvcmVgIGZyb20gUmVkdXggVG9vbGtpdCBpcyBhbiBpbXByb3ZlZCB2ZXJzaW9uIG9mIGBjcmVhdGVTdG9yZWAgdGhhdFxuICogc2ltcGxpZmllcyBzZXR1cCBhbmQgaGVscHMgYXZvaWQgY29tbW9uIGJ1Z3MuXG4gKlxuICogWW91IHNob3VsZCBub3QgYmUgdXNpbmcgdGhlIGByZWR1eGAgY29yZSBwYWNrYWdlIGJ5IGl0c2VsZiB0b2RheSwgZXhjZXB0IGZvciBsZWFybmluZyBwdXJwb3Nlcy5cbiAqIFRoZSBgY3JlYXRlU3RvcmVgIG1ldGhvZCBmcm9tIHRoZSBjb3JlIGByZWR1eGAgcGFja2FnZSB3aWxsIG5vdCBiZSByZW1vdmVkLCBidXQgd2UgZW5jb3VyYWdlXG4gKiBhbGwgdXNlcnMgdG8gbWlncmF0ZSB0byB1c2luZyBSZWR1eCBUb29sa2l0IGZvciBhbGwgUmVkdXggY29kZS5cbiAqXG4gKiBJZiB5b3Ugd2FudCB0byB1c2UgYGNyZWF0ZVN0b3JlYCB3aXRob3V0IHRoaXMgdmlzdWFsIGRlcHJlY2F0aW9uIHdhcm5pbmcsIHVzZVxuICogdGhlIGBsZWdhY3lfY3JlYXRlU3RvcmVgIGltcG9ydCBpbnN0ZWFkOlxuICpcbiAqIGBpbXBvcnQgeyBsZWdhY3lfY3JlYXRlU3RvcmUgYXMgY3JlYXRlU3RvcmV9IGZyb20gJ3JlZHV4J2BcbiAqXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlU3RvcmUocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUsIGVuaGFuY2VyKSB7XG4gIHZhciBfcmVmMjtcblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgZW5oYW5jZXIgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGFyZ3VtZW50c1szXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDApIDogJ0l0IGxvb2tzIGxpa2UgeW91IGFyZSBwYXNzaW5nIHNldmVyYWwgc3RvcmUgZW5oYW5jZXJzIHRvICcgKyAnY3JlYXRlU3RvcmUoKS4gVGhpcyBpcyBub3Qgc3VwcG9ydGVkLiBJbnN0ZWFkLCBjb21wb3NlIHRoZW0gJyArICd0b2dldGhlciB0byBhIHNpbmdsZSBmdW5jdGlvbi4gU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL3R1dG9yaWFscy9mdW5kYW1lbnRhbHMvcGFydC00LXN0b3JlI2NyZWF0aW5nLWEtc3RvcmUtd2l0aC1lbmhhbmNlcnMgZm9yIGFuIGV4YW1wbGUuJyk7XG4gIH1cblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBlbmhhbmNlciA9IHByZWxvYWRlZFN0YXRlO1xuICAgIHByZWxvYWRlZFN0YXRlID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBlbmhhbmNlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBpZiAodHlwZW9mIGVuaGFuY2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxKSA6IFwiRXhwZWN0ZWQgdGhlIGVuaGFuY2VyIHRvIGJlIGEgZnVuY3Rpb24uIEluc3RlYWQsIHJlY2VpdmVkOiAnXCIgKyBraW5kT2YoZW5oYW5jZXIpICsgXCInXCIpO1xuICAgIH1cblxuICAgIHJldHVybiBlbmhhbmNlcihjcmVhdGVTdG9yZSkocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiByZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMikgOiBcIkV4cGVjdGVkIHRoZSByb290IHJlZHVjZXIgdG8gYmUgYSBmdW5jdGlvbi4gSW5zdGVhZCwgcmVjZWl2ZWQ6ICdcIiArIGtpbmRPZihyZWR1Y2VyKSArIFwiJ1wiKTtcbiAgfVxuXG4gIHZhciBjdXJyZW50UmVkdWNlciA9IHJlZHVjZXI7XG4gIHZhciBjdXJyZW50U3RhdGUgPSBwcmVsb2FkZWRTdGF0ZTtcbiAgdmFyIGN1cnJlbnRMaXN0ZW5lcnMgPSBbXTtcbiAgdmFyIG5leHRMaXN0ZW5lcnMgPSBjdXJyZW50TGlzdGVuZXJzO1xuICB2YXIgaXNEaXNwYXRjaGluZyA9IGZhbHNlO1xuICAvKipcbiAgICogVGhpcyBtYWtlcyBhIHNoYWxsb3cgY29weSBvZiBjdXJyZW50TGlzdGVuZXJzIHNvIHdlIGNhbiB1c2VcbiAgICogbmV4dExpc3RlbmVycyBhcyBhIHRlbXBvcmFyeSBsaXN0IHdoaWxlIGRpc3BhdGNoaW5nLlxuICAgKlxuICAgKiBUaGlzIHByZXZlbnRzIGFueSBidWdzIGFyb3VuZCBjb25zdW1lcnMgY2FsbGluZ1xuICAgKiBzdWJzY3JpYmUvdW5zdWJzY3JpYmUgaW4gdGhlIG1pZGRsZSBvZiBhIGRpc3BhdGNoLlxuICAgKi9cblxuICBmdW5jdGlvbiBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCkge1xuICAgIGlmIChuZXh0TGlzdGVuZXJzID09PSBjdXJyZW50TGlzdGVuZXJzKSB7XG4gICAgICBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycy5zbGljZSgpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogUmVhZHMgdGhlIHN0YXRlIHRyZWUgbWFuYWdlZCBieSB0aGUgc3RvcmUuXG4gICAqXG4gICAqIEByZXR1cm5zIHthbnl9IFRoZSBjdXJyZW50IHN0YXRlIHRyZWUgb2YgeW91ciBhcHBsaWNhdGlvbi5cbiAgICovXG5cblxuICBmdW5jdGlvbiBnZXRTdGF0ZSgpIHtcbiAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMykgOiAnWW91IG1heSBub3QgY2FsbCBzdG9yZS5nZXRTdGF0ZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdUaGUgcmVkdWNlciBoYXMgYWxyZWFkeSByZWNlaXZlZCB0aGUgc3RhdGUgYXMgYW4gYXJndW1lbnQuICcgKyAnUGFzcyBpdCBkb3duIGZyb20gdGhlIHRvcCByZWR1Y2VyIGluc3RlYWQgb2YgcmVhZGluZyBpdCBmcm9tIHRoZSBzdG9yZS4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY3VycmVudFN0YXRlO1xuICB9XG4gIC8qKlxuICAgKiBBZGRzIGEgY2hhbmdlIGxpc3RlbmVyLiBJdCB3aWxsIGJlIGNhbGxlZCBhbnkgdGltZSBhbiBhY3Rpb24gaXMgZGlzcGF0Y2hlZCxcbiAgICogYW5kIHNvbWUgcGFydCBvZiB0aGUgc3RhdGUgdHJlZSBtYXkgcG90ZW50aWFsbHkgaGF2ZSBjaGFuZ2VkLiBZb3UgbWF5IHRoZW5cbiAgICogY2FsbCBgZ2V0U3RhdGUoKWAgdG8gcmVhZCB0aGUgY3VycmVudCBzdGF0ZSB0cmVlIGluc2lkZSB0aGUgY2FsbGJhY2suXG4gICAqXG4gICAqIFlvdSBtYXkgY2FsbCBgZGlzcGF0Y2goKWAgZnJvbSBhIGNoYW5nZSBsaXN0ZW5lciwgd2l0aCB0aGUgZm9sbG93aW5nXG4gICAqIGNhdmVhdHM6XG4gICAqXG4gICAqIDEuIFRoZSBzdWJzY3JpcHRpb25zIGFyZSBzbmFwc2hvdHRlZCBqdXN0IGJlZm9yZSBldmVyeSBgZGlzcGF0Y2goKWAgY2FsbC5cbiAgICogSWYgeW91IHN1YnNjcmliZSBvciB1bnN1YnNjcmliZSB3aGlsZSB0aGUgbGlzdGVuZXJzIGFyZSBiZWluZyBpbnZva2VkLCB0aGlzXG4gICAqIHdpbGwgbm90IGhhdmUgYW55IGVmZmVjdCBvbiB0aGUgYGRpc3BhdGNoKClgIHRoYXQgaXMgY3VycmVudGx5IGluIHByb2dyZXNzLlxuICAgKiBIb3dldmVyLCB0aGUgbmV4dCBgZGlzcGF0Y2goKWAgY2FsbCwgd2hldGhlciBuZXN0ZWQgb3Igbm90LCB3aWxsIHVzZSBhIG1vcmVcbiAgICogcmVjZW50IHNuYXBzaG90IG9mIHRoZSBzdWJzY3JpcHRpb24gbGlzdC5cbiAgICpcbiAgICogMi4gVGhlIGxpc3RlbmVyIHNob3VsZCBub3QgZXhwZWN0IHRvIHNlZSBhbGwgc3RhdGUgY2hhbmdlcywgYXMgdGhlIHN0YXRlXG4gICAqIG1pZ2h0IGhhdmUgYmVlbiB1cGRhdGVkIG11bHRpcGxlIHRpbWVzIGR1cmluZyBhIG5lc3RlZCBgZGlzcGF0Y2goKWAgYmVmb3JlXG4gICAqIHRoZSBsaXN0ZW5lciBpcyBjYWxsZWQuIEl0IGlzLCBob3dldmVyLCBndWFyYW50ZWVkIHRoYXQgYWxsIHN1YnNjcmliZXJzXG4gICAqIHJlZ2lzdGVyZWQgYmVmb3JlIHRoZSBgZGlzcGF0Y2goKWAgc3RhcnRlZCB3aWxsIGJlIGNhbGxlZCB3aXRoIHRoZSBsYXRlc3RcbiAgICogc3RhdGUgYnkgdGhlIHRpbWUgaXQgZXhpdHMuXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGxpc3RlbmVyIEEgY2FsbGJhY2sgdG8gYmUgaW52b2tlZCBvbiBldmVyeSBkaXNwYXRjaC5cbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGZ1bmN0aW9uIHRvIHJlbW92ZSB0aGlzIGNoYW5nZSBsaXN0ZW5lci5cbiAgICovXG5cblxuICBmdW5jdGlvbiBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICBpZiAodHlwZW9mIGxpc3RlbmVyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSg0KSA6IFwiRXhwZWN0ZWQgdGhlIGxpc3RlbmVyIHRvIGJlIGEgZnVuY3Rpb24uIEluc3RlYWQsIHJlY2VpdmVkOiAnXCIgKyBraW5kT2YobGlzdGVuZXIpICsgXCInXCIpO1xuICAgIH1cblxuICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSg1KSA6ICdZb3UgbWF5IG5vdCBjYWxsIHN0b3JlLnN1YnNjcmliZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdJZiB5b3Ugd291bGQgbGlrZSB0byBiZSBub3RpZmllZCBhZnRlciB0aGUgc3RvcmUgaGFzIGJlZW4gdXBkYXRlZCwgc3Vic2NyaWJlIGZyb20gYSAnICsgJ2NvbXBvbmVudCBhbmQgaW52b2tlIHN0b3JlLmdldFN0YXRlKCkgaW4gdGhlIGNhbGxiYWNrIHRvIGFjY2VzcyB0aGUgbGF0ZXN0IHN0YXRlLiAnICsgJ1NlZSBodHRwczovL3JlZHV4LmpzLm9yZy9hcGkvc3RvcmUjc3Vic2NyaWJlbGlzdGVuZXIgZm9yIG1vcmUgZGV0YWlscy4nKTtcbiAgICB9XG5cbiAgICB2YXIgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcbiAgICBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCk7XG4gICAgbmV4dExpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7XG4gICAgICBpZiAoIWlzU3Vic2NyaWJlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDYpIDogJ1lvdSBtYXkgbm90IHVuc3Vic2NyaWJlIGZyb20gYSBzdG9yZSBsaXN0ZW5lciB3aGlsZSB0aGUgcmVkdWNlciBpcyBleGVjdXRpbmcuICcgKyAnU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL2FwaS9zdG9yZSNzdWJzY3JpYmVsaXN0ZW5lciBmb3IgbW9yZSBkZXRhaWxzLicpO1xuICAgICAgfVxuXG4gICAgICBpc1N1YnNjcmliZWQgPSBmYWxzZTtcbiAgICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICAgIHZhciBpbmRleCA9IG5leHRMaXN0ZW5lcnMuaW5kZXhPZihsaXN0ZW5lcik7XG4gICAgICBuZXh0TGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICBjdXJyZW50TGlzdGVuZXJzID0gbnVsbDtcbiAgICB9O1xuICB9XG4gIC8qKlxuICAgKiBEaXNwYXRjaGVzIGFuIGFjdGlvbi4gSXQgaXMgdGhlIG9ubHkgd2F5IHRvIHRyaWdnZXIgYSBzdGF0ZSBjaGFuZ2UuXG4gICAqXG4gICAqIFRoZSBgcmVkdWNlcmAgZnVuY3Rpb24sIHVzZWQgdG8gY3JlYXRlIHRoZSBzdG9yZSwgd2lsbCBiZSBjYWxsZWQgd2l0aCB0aGVcbiAgICogY3VycmVudCBzdGF0ZSB0cmVlIGFuZCB0aGUgZ2l2ZW4gYGFjdGlvbmAuIEl0cyByZXR1cm4gdmFsdWUgd2lsbFxuICAgKiBiZSBjb25zaWRlcmVkIHRoZSAqKm5leHQqKiBzdGF0ZSBvZiB0aGUgdHJlZSwgYW5kIHRoZSBjaGFuZ2UgbGlzdGVuZXJzXG4gICAqIHdpbGwgYmUgbm90aWZpZWQuXG4gICAqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9ubHkgc3VwcG9ydHMgcGxhaW4gb2JqZWN0IGFjdGlvbnMuIElmIHlvdSB3YW50IHRvXG4gICAqIGRpc3BhdGNoIGEgUHJvbWlzZSwgYW4gT2JzZXJ2YWJsZSwgYSB0aHVuaywgb3Igc29tZXRoaW5nIGVsc2UsIHlvdSBuZWVkIHRvXG4gICAqIHdyYXAgeW91ciBzdG9yZSBjcmVhdGluZyBmdW5jdGlvbiBpbnRvIHRoZSBjb3JyZXNwb25kaW5nIG1pZGRsZXdhcmUuIEZvclxuICAgKiBleGFtcGxlLCBzZWUgdGhlIGRvY3VtZW50YXRpb24gZm9yIHRoZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UuIEV2ZW4gdGhlXG4gICAqIG1pZGRsZXdhcmUgd2lsbCBldmVudHVhbGx5IGRpc3BhdGNoIHBsYWluIG9iamVjdCBhY3Rpb25zIHVzaW5nIHRoaXMgbWV0aG9kLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gYWN0aW9uIEEgcGxhaW4gb2JqZWN0IHJlcHJlc2VudGluZyDigJx3aGF0IGNoYW5nZWTigJ0uIEl0IGlzXG4gICAqIGEgZ29vZCBpZGVhIHRvIGtlZXAgYWN0aW9ucyBzZXJpYWxpemFibGUgc28geW91IGNhbiByZWNvcmQgYW5kIHJlcGxheSB1c2VyXG4gICAqIHNlc3Npb25zLCBvciB1c2UgdGhlIHRpbWUgdHJhdmVsbGluZyBgcmVkdXgtZGV2dG9vbHNgLiBBbiBhY3Rpb24gbXVzdCBoYXZlXG4gICAqIGEgYHR5cGVgIHByb3BlcnR5IHdoaWNoIG1heSBub3QgYmUgYHVuZGVmaW5lZGAuIEl0IGlzIGEgZ29vZCBpZGVhIHRvIHVzZVxuICAgKiBzdHJpbmcgY29uc3RhbnRzIGZvciBhY3Rpb24gdHlwZXMuXG4gICAqXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IEZvciBjb252ZW5pZW5jZSwgdGhlIHNhbWUgYWN0aW9uIG9iamVjdCB5b3UgZGlzcGF0Y2hlZC5cbiAgICpcbiAgICogTm90ZSB0aGF0LCBpZiB5b3UgdXNlIGEgY3VzdG9tIG1pZGRsZXdhcmUsIGl0IG1heSB3cmFwIGBkaXNwYXRjaCgpYCB0b1xuICAgKiByZXR1cm4gc29tZXRoaW5nIGVsc2UgKGZvciBleGFtcGxlLCBhIFByb21pc2UgeW91IGNhbiBhd2FpdCkuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gZGlzcGF0Y2goYWN0aW9uKSB7XG4gICAgaWYgKCFpc1BsYWluT2JqZWN0KGFjdGlvbikpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDcpIDogXCJBY3Rpb25zIG11c3QgYmUgcGxhaW4gb2JqZWN0cy4gSW5zdGVhZCwgdGhlIGFjdHVhbCB0eXBlIHdhczogJ1wiICsga2luZE9mKGFjdGlvbikgKyBcIicuIFlvdSBtYXkgbmVlZCB0byBhZGQgbWlkZGxld2FyZSB0byB5b3VyIHN0b3JlIHNldHVwIHRvIGhhbmRsZSBkaXNwYXRjaGluZyBvdGhlciB2YWx1ZXMsIHN1Y2ggYXMgJ3JlZHV4LXRodW5rJyB0byBoYW5kbGUgZGlzcGF0Y2hpbmcgZnVuY3Rpb25zLiBTZWUgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvdHV0b3JpYWxzL2Z1bmRhbWVudGFscy9wYXJ0LTQtc3RvcmUjbWlkZGxld2FyZSBhbmQgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvdHV0b3JpYWxzL2Z1bmRhbWVudGFscy9wYXJ0LTYtYXN5bmMtbG9naWMjdXNpbmctdGhlLXJlZHV4LXRodW5rLW1pZGRsZXdhcmUgZm9yIGV4YW1wbGVzLlwiKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbi50eXBlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoOCkgOiAnQWN0aW9ucyBtYXkgbm90IGhhdmUgYW4gdW5kZWZpbmVkIFwidHlwZVwiIHByb3BlcnR5LiBZb3UgbWF5IGhhdmUgbWlzc3BlbGxlZCBhbiBhY3Rpb24gdHlwZSBzdHJpbmcgY29uc3RhbnQuJyk7XG4gICAgfVxuXG4gICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDkpIDogJ1JlZHVjZXJzIG1heSBub3QgZGlzcGF0Y2ggYWN0aW9ucy4nKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgaXNEaXNwYXRjaGluZyA9IHRydWU7XG4gICAgICBjdXJyZW50U3RhdGUgPSBjdXJyZW50UmVkdWNlcihjdXJyZW50U3RhdGUsIGFjdGlvbik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgbGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycyA9IG5leHRMaXN0ZW5lcnM7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGxpc3RlbmVyID0gbGlzdGVuZXJzW2ldO1xuICAgICAgbGlzdGVuZXIoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWN0aW9uO1xuICB9XG4gIC8qKlxuICAgKiBSZXBsYWNlcyB0aGUgcmVkdWNlciBjdXJyZW50bHkgdXNlZCBieSB0aGUgc3RvcmUgdG8gY2FsY3VsYXRlIHRoZSBzdGF0ZS5cbiAgICpcbiAgICogWW91IG1pZ2h0IG5lZWQgdGhpcyBpZiB5b3VyIGFwcCBpbXBsZW1lbnRzIGNvZGUgc3BsaXR0aW5nIGFuZCB5b3Ugd2FudCB0b1xuICAgKiBsb2FkIHNvbWUgb2YgdGhlIHJlZHVjZXJzIGR5bmFtaWNhbGx5LiBZb3UgbWlnaHQgYWxzbyBuZWVkIHRoaXMgaWYgeW91XG4gICAqIGltcGxlbWVudCBhIGhvdCByZWxvYWRpbmcgbWVjaGFuaXNtIGZvciBSZWR1eC5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gbmV4dFJlZHVjZXIgVGhlIHJlZHVjZXIgZm9yIHRoZSBzdG9yZSB0byB1c2UgaW5zdGVhZC5cbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gcmVwbGFjZVJlZHVjZXIobmV4dFJlZHVjZXIpIHtcbiAgICBpZiAodHlwZW9mIG5leHRSZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxMCkgOiBcIkV4cGVjdGVkIHRoZSBuZXh0UmVkdWNlciB0byBiZSBhIGZ1bmN0aW9uLiBJbnN0ZWFkLCByZWNlaXZlZDogJ1wiICsga2luZE9mKG5leHRSZWR1Y2VyKSk7XG4gICAgfVxuXG4gICAgY3VycmVudFJlZHVjZXIgPSBuZXh0UmVkdWNlcjsgLy8gVGhpcyBhY3Rpb24gaGFzIGEgc2ltaWxpYXIgZWZmZWN0IHRvIEFjdGlvblR5cGVzLklOSVQuXG4gICAgLy8gQW55IHJlZHVjZXJzIHRoYXQgZXhpc3RlZCBpbiBib3RoIHRoZSBuZXcgYW5kIG9sZCByb290UmVkdWNlclxuICAgIC8vIHdpbGwgcmVjZWl2ZSB0aGUgcHJldmlvdXMgc3RhdGUuIFRoaXMgZWZmZWN0aXZlbHkgcG9wdWxhdGVzXG4gICAgLy8gdGhlIG5ldyBzdGF0ZSB0cmVlIHdpdGggYW55IHJlbGV2YW50IGRhdGEgZnJvbSB0aGUgb2xkIG9uZS5cblxuICAgIGRpc3BhdGNoKHtcbiAgICAgIHR5cGU6IEFjdGlvblR5cGVzLlJFUExBQ0VcbiAgICB9KTtcbiAgfVxuICAvKipcbiAgICogSW50ZXJvcGVyYWJpbGl0eSBwb2ludCBmb3Igb2JzZXJ2YWJsZS9yZWFjdGl2ZSBsaWJyYXJpZXMuXG4gICAqIEByZXR1cm5zIHtvYnNlcnZhYmxlfSBBIG1pbmltYWwgb2JzZXJ2YWJsZSBvZiBzdGF0ZSBjaGFuZ2VzLlxuICAgKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBvYnNlcnZhYmxlIHByb3Bvc2FsOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYnNlcnZhYmxlXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gb2JzZXJ2YWJsZSgpIHtcbiAgICB2YXIgX3JlZjtcblxuICAgIHZhciBvdXRlclN1YnNjcmliZSA9IHN1YnNjcmliZTtcbiAgICByZXR1cm4gX3JlZiA9IHtcbiAgICAgIC8qKlxuICAgICAgICogVGhlIG1pbmltYWwgb2JzZXJ2YWJsZSBzdWJzY3JpcHRpb24gbWV0aG9kLlxuICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9ic2VydmVyIEFueSBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCBhcyBhbiBvYnNlcnZlci5cbiAgICAgICAqIFRoZSBvYnNlcnZlciBvYmplY3Qgc2hvdWxkIGhhdmUgYSBgbmV4dGAgbWV0aG9kLlxuICAgICAgICogQHJldHVybnMge3N1YnNjcmlwdGlvbn0gQW4gb2JqZWN0IHdpdGggYW4gYHVuc3Vic2NyaWJlYCBtZXRob2QgdGhhdCBjYW5cbiAgICAgICAqIGJlIHVzZWQgdG8gdW5zdWJzY3JpYmUgdGhlIG9ic2VydmFibGUgZnJvbSB0aGUgc3RvcmUsIGFuZCBwcmV2ZW50IGZ1cnRoZXJcbiAgICAgICAqIGVtaXNzaW9uIG9mIHZhbHVlcyBmcm9tIHRoZSBvYnNlcnZhYmxlLlxuICAgICAgICovXG4gICAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uIHN1YnNjcmliZShvYnNlcnZlcikge1xuICAgICAgICBpZiAodHlwZW9mIG9ic2VydmVyICE9PSAnb2JqZWN0JyB8fCBvYnNlcnZlciA9PT0gbnVsbCkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDExKSA6IFwiRXhwZWN0ZWQgdGhlIG9ic2VydmVyIHRvIGJlIGFuIG9iamVjdC4gSW5zdGVhZCwgcmVjZWl2ZWQ6ICdcIiArIGtpbmRPZihvYnNlcnZlcikgKyBcIidcIik7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBvYnNlcnZlU3RhdGUoKSB7XG4gICAgICAgICAgaWYgKG9ic2VydmVyLm5leHQpIHtcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQoZ2V0U3RhdGUoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgb2JzZXJ2ZVN0YXRlKCk7XG4gICAgICAgIHZhciB1bnN1YnNjcmliZSA9IG91dGVyU3Vic2NyaWJlKG9ic2VydmVTdGF0ZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdW5zdWJzY3JpYmU6IHVuc3Vic2NyaWJlXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSwgX3JlZlskJG9ic2VydmFibGVdID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSwgX3JlZjtcbiAgfSAvLyBXaGVuIGEgc3RvcmUgaXMgY3JlYXRlZCwgYW4gXCJJTklUXCIgYWN0aW9uIGlzIGRpc3BhdGNoZWQgc28gdGhhdCBldmVyeVxuICAvLyByZWR1Y2VyIHJldHVybnMgdGhlaXIgaW5pdGlhbCBzdGF0ZS4gVGhpcyBlZmZlY3RpdmVseSBwb3B1bGF0ZXNcbiAgLy8gdGhlIGluaXRpYWwgc3RhdGUgdHJlZS5cblxuXG4gIGRpc3BhdGNoKHtcbiAgICB0eXBlOiBBY3Rpb25UeXBlcy5JTklUXG4gIH0pO1xuICByZXR1cm4gX3JlZjIgPSB7XG4gICAgZGlzcGF0Y2g6IGRpc3BhdGNoLFxuICAgIHN1YnNjcmliZTogc3Vic2NyaWJlLFxuICAgIGdldFN0YXRlOiBnZXRTdGF0ZSxcbiAgICByZXBsYWNlUmVkdWNlcjogcmVwbGFjZVJlZHVjZXJcbiAgfSwgX3JlZjJbJCRvYnNlcnZhYmxlXSA9IG9ic2VydmFibGUsIF9yZWYyO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgUmVkdXggc3RvcmUgdGhhdCBob2xkcyB0aGUgc3RhdGUgdHJlZS5cbiAqXG4gKiAqKldlIHJlY29tbWVuZCB1c2luZyBgY29uZmlndXJlU3RvcmVgIGZyb20gdGhlXG4gKiBgQHJlZHV4anMvdG9vbGtpdGAgcGFja2FnZSoqLCB3aGljaCByZXBsYWNlcyBgY3JlYXRlU3RvcmVgOlxuICogKipodHRwczovL3JlZHV4LmpzLm9yZy9pbnRyb2R1Y3Rpb24vd2h5LXJ0ay1pcy1yZWR1eC10b2RheSoqXG4gKlxuICogVGhlIG9ubHkgd2F5IHRvIGNoYW5nZSB0aGUgZGF0YSBpbiB0aGUgc3RvcmUgaXMgdG8gY2FsbCBgZGlzcGF0Y2goKWAgb24gaXQuXG4gKlxuICogVGhlcmUgc2hvdWxkIG9ubHkgYmUgYSBzaW5nbGUgc3RvcmUgaW4geW91ciBhcHAuIFRvIHNwZWNpZnkgaG93IGRpZmZlcmVudFxuICogcGFydHMgb2YgdGhlIHN0YXRlIHRyZWUgcmVzcG9uZCB0byBhY3Rpb25zLCB5b3UgbWF5IGNvbWJpbmUgc2V2ZXJhbCByZWR1Y2Vyc1xuICogaW50byBhIHNpbmdsZSByZWR1Y2VyIGZ1bmN0aW9uIGJ5IHVzaW5nIGBjb21iaW5lUmVkdWNlcnNgLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlZHVjZXIgQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIG5leHQgc3RhdGUgdHJlZSwgZ2l2ZW5cbiAqIHRoZSBjdXJyZW50IHN0YXRlIHRyZWUgYW5kIHRoZSBhY3Rpb24gdG8gaGFuZGxlLlxuICpcbiAqIEBwYXJhbSB7YW55fSBbcHJlbG9hZGVkU3RhdGVdIFRoZSBpbml0aWFsIHN0YXRlLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICogdG8gaHlkcmF0ZSB0aGUgc3RhdGUgZnJvbSB0aGUgc2VydmVyIGluIHVuaXZlcnNhbCBhcHBzLCBvciB0byByZXN0b3JlIGFcbiAqIHByZXZpb3VzbHkgc2VyaWFsaXplZCB1c2VyIHNlc3Npb24uXG4gKiBJZiB5b3UgdXNlIGBjb21iaW5lUmVkdWNlcnNgIHRvIHByb2R1Y2UgdGhlIHJvb3QgcmVkdWNlciBmdW5jdGlvbiwgdGhpcyBtdXN0IGJlXG4gKiBhbiBvYmplY3Qgd2l0aCB0aGUgc2FtZSBzaGFwZSBhcyBgY29tYmluZVJlZHVjZXJzYCBrZXlzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtlbmhhbmNlcl0gVGhlIHN0b3JlIGVuaGFuY2VyLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICogdG8gZW5oYW5jZSB0aGUgc3RvcmUgd2l0aCB0aGlyZC1wYXJ0eSBjYXBhYmlsaXRpZXMgc3VjaCBhcyBtaWRkbGV3YXJlLFxuICogdGltZSB0cmF2ZWwsIHBlcnNpc3RlbmNlLCBldGMuIFRoZSBvbmx5IHN0b3JlIGVuaGFuY2VyIHRoYXQgc2hpcHMgd2l0aCBSZWR1eFxuICogaXMgYGFwcGx5TWlkZGxld2FyZSgpYC5cbiAqXG4gKiBAcmV0dXJucyB7U3RvcmV9IEEgUmVkdXggc3RvcmUgdGhhdCBsZXRzIHlvdSByZWFkIHRoZSBzdGF0ZSwgZGlzcGF0Y2ggYWN0aW9uc1xuICogYW5kIHN1YnNjcmliZSB0byBjaGFuZ2VzLlxuICovXG5cbnZhciBsZWdhY3lfY3JlYXRlU3RvcmUgPSBjcmVhdGVTdG9yZTtcblxuLyoqXG4gKiBQcmludHMgYSB3YXJuaW5nIGluIHRoZSBjb25zb2xlIGlmIGl0IGV4aXN0cy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbWVzc2FnZSBUaGUgd2FybmluZyBtZXNzYWdlLlxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmZ1bmN0aW9uIHdhcm5pbmcobWVzc2FnZSkge1xuICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG4gIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGNvbnNvbGUuZXJyb3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xuICB9XG4gIC8qIGVzbGludC1lbmFibGUgbm8tY29uc29sZSAqL1xuXG5cbiAgdHJ5IHtcbiAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IGlmIHlvdSBlbmFibGVcbiAgICAvLyBcImJyZWFrIG9uIGFsbCBleGNlcHRpb25zXCIgaW4geW91ciBjb25zb2xlLFxuICAgIC8vIGl0IHdvdWxkIHBhdXNlIHRoZSBleGVjdXRpb24gYXQgdGhpcyBsaW5lLlxuICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgfSBjYXRjaCAoZSkge30gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1lbXB0eVxuXG59XG5cbmZ1bmN0aW9uIGdldFVuZXhwZWN0ZWRTdGF0ZVNoYXBlV2FybmluZ01lc3NhZ2UoaW5wdXRTdGF0ZSwgcmVkdWNlcnMsIGFjdGlvbiwgdW5leHBlY3RlZEtleUNhY2hlKSB7XG4gIHZhciByZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKHJlZHVjZXJzKTtcbiAgdmFyIGFyZ3VtZW50TmFtZSA9IGFjdGlvbiAmJiBhY3Rpb24udHlwZSA9PT0gQWN0aW9uVHlwZXMuSU5JVCA/ICdwcmVsb2FkZWRTdGF0ZSBhcmd1bWVudCBwYXNzZWQgdG8gY3JlYXRlU3RvcmUnIDogJ3ByZXZpb3VzIHN0YXRlIHJlY2VpdmVkIGJ5IHRoZSByZWR1Y2VyJztcblxuICBpZiAocmVkdWNlcktleXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuICdTdG9yZSBkb2VzIG5vdCBoYXZlIGEgdmFsaWQgcmVkdWNlci4gTWFrZSBzdXJlIHRoZSBhcmd1bWVudCBwYXNzZWQgJyArICd0byBjb21iaW5lUmVkdWNlcnMgaXMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgcmVkdWNlcnMuJztcbiAgfVxuXG4gIGlmICghaXNQbGFpbk9iamVjdChpbnB1dFN0YXRlKSkge1xuICAgIHJldHVybiBcIlRoZSBcIiArIGFyZ3VtZW50TmFtZSArIFwiIGhhcyB1bmV4cGVjdGVkIHR5cGUgb2YgXFxcIlwiICsga2luZE9mKGlucHV0U3RhdGUpICsgXCJcXFwiLiBFeHBlY3RlZCBhcmd1bWVudCB0byBiZSBhbiBvYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIFwiICsgKFwia2V5czogXFxcIlwiICsgcmVkdWNlcktleXMuam9pbignXCIsIFwiJykgKyBcIlxcXCJcIik7XG4gIH1cblxuICB2YXIgdW5leHBlY3RlZEtleXMgPSBPYmplY3Qua2V5cyhpbnB1dFN0YXRlKS5maWx0ZXIoZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiAhcmVkdWNlcnMuaGFzT3duUHJvcGVydHkoa2V5KSAmJiAhdW5leHBlY3RlZEtleUNhY2hlW2tleV07XG4gIH0pO1xuICB1bmV4cGVjdGVkS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICB1bmV4cGVjdGVkS2V5Q2FjaGVba2V5XSA9IHRydWU7XG4gIH0pO1xuICBpZiAoYWN0aW9uICYmIGFjdGlvbi50eXBlID09PSBBY3Rpb25UeXBlcy5SRVBMQUNFKSByZXR1cm47XG5cbiAgaWYgKHVuZXhwZWN0ZWRLZXlzLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gXCJVbmV4cGVjdGVkIFwiICsgKHVuZXhwZWN0ZWRLZXlzLmxlbmd0aCA+IDEgPyAna2V5cycgOiAna2V5JykgKyBcIiBcIiArIChcIlxcXCJcIiArIHVuZXhwZWN0ZWRLZXlzLmpvaW4oJ1wiLCBcIicpICsgXCJcXFwiIGZvdW5kIGluIFwiICsgYXJndW1lbnROYW1lICsgXCIuIFwiKSArIFwiRXhwZWN0ZWQgdG8gZmluZCBvbmUgb2YgdGhlIGtub3duIHJlZHVjZXIga2V5cyBpbnN0ZWFkOiBcIiArIChcIlxcXCJcIiArIHJlZHVjZXJLZXlzLmpvaW4oJ1wiLCBcIicpICsgXCJcXFwiLiBVbmV4cGVjdGVkIGtleXMgd2lsbCBiZSBpZ25vcmVkLlwiKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhc3NlcnRSZWR1Y2VyU2hhcGUocmVkdWNlcnMpIHtcbiAgT2JqZWN0LmtleXMocmVkdWNlcnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciByZWR1Y2VyID0gcmVkdWNlcnNba2V5XTtcbiAgICB2YXIgaW5pdGlhbFN0YXRlID0gcmVkdWNlcih1bmRlZmluZWQsIHtcbiAgICAgIHR5cGU6IEFjdGlvblR5cGVzLklOSVRcbiAgICB9KTtcblxuICAgIGlmICh0eXBlb2YgaW5pdGlhbFN0YXRlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMTIpIDogXCJUaGUgc2xpY2UgcmVkdWNlciBmb3Iga2V5IFxcXCJcIiArIGtleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQgZHVyaW5nIGluaXRpYWxpemF0aW9uLiBcIiArIFwiSWYgdGhlIHN0YXRlIHBhc3NlZCB0byB0aGUgcmVkdWNlciBpcyB1bmRlZmluZWQsIHlvdSBtdXN0IFwiICsgXCJleHBsaWNpdGx5IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZS4gVGhlIGluaXRpYWwgc3RhdGUgbWF5IFwiICsgXCJub3QgYmUgdW5kZWZpbmVkLiBJZiB5b3UgZG9uJ3Qgd2FudCB0byBzZXQgYSB2YWx1ZSBmb3IgdGhpcyByZWR1Y2VyLCBcIiArIFwieW91IGNhbiB1c2UgbnVsbCBpbnN0ZWFkIG9mIHVuZGVmaW5lZC5cIik7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiByZWR1Y2VyKHVuZGVmaW5lZCwge1xuICAgICAgdHlwZTogQWN0aW9uVHlwZXMuUFJPQkVfVU5LTk9XTl9BQ1RJT04oKVxuICAgIH0pID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMTMpIDogXCJUaGUgc2xpY2UgcmVkdWNlciBmb3Iga2V5IFxcXCJcIiArIGtleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQgd2hlbiBwcm9iZWQgd2l0aCBhIHJhbmRvbSB0eXBlLiBcIiArIChcIkRvbid0IHRyeSB0byBoYW5kbGUgJ1wiICsgQWN0aW9uVHlwZXMuSU5JVCArIFwiJyBvciBvdGhlciBhY3Rpb25zIGluIFxcXCJyZWR1eC8qXFxcIiBcIikgKyBcIm5hbWVzcGFjZS4gVGhleSBhcmUgY29uc2lkZXJlZCBwcml2YXRlLiBJbnN0ZWFkLCB5b3UgbXVzdCByZXR1cm4gdGhlIFwiICsgXCJjdXJyZW50IHN0YXRlIGZvciBhbnkgdW5rbm93biBhY3Rpb25zLCB1bmxlc3MgaXQgaXMgdW5kZWZpbmVkLCBcIiArIFwiaW4gd2hpY2ggY2FzZSB5b3UgbXVzdCByZXR1cm4gdGhlIGluaXRpYWwgc3RhdGUsIHJlZ2FyZGxlc3Mgb2YgdGhlIFwiICsgXCJhY3Rpb24gdHlwZS4gVGhlIGluaXRpYWwgc3RhdGUgbWF5IG5vdCBiZSB1bmRlZmluZWQsIGJ1dCBjYW4gYmUgbnVsbC5cIik7XG4gICAgfVxuICB9KTtcbn1cbi8qKlxuICogVHVybnMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgZGlmZmVyZW50IHJlZHVjZXIgZnVuY3Rpb25zLCBpbnRvIGEgc2luZ2xlXG4gKiByZWR1Y2VyIGZ1bmN0aW9uLiBJdCB3aWxsIGNhbGwgZXZlcnkgY2hpbGQgcmVkdWNlciwgYW5kIGdhdGhlciB0aGVpciByZXN1bHRzXG4gKiBpbnRvIGEgc2luZ2xlIHN0YXRlIG9iamVjdCwgd2hvc2Uga2V5cyBjb3JyZXNwb25kIHRvIHRoZSBrZXlzIG9mIHRoZSBwYXNzZWRcbiAqIHJlZHVjZXIgZnVuY3Rpb25zLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSByZWR1Y2VycyBBbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGNvcnJlc3BvbmQgdG8gZGlmZmVyZW50XG4gKiByZWR1Y2VyIGZ1bmN0aW9ucyB0aGF0IG5lZWQgdG8gYmUgY29tYmluZWQgaW50byBvbmUuIE9uZSBoYW5keSB3YXkgdG8gb2J0YWluXG4gKiBpdCBpcyB0byB1c2UgRVM2IGBpbXBvcnQgKiBhcyByZWR1Y2Vyc2Agc3ludGF4LiBUaGUgcmVkdWNlcnMgbWF5IG5ldmVyIHJldHVyblxuICogdW5kZWZpbmVkIGZvciBhbnkgYWN0aW9uLiBJbnN0ZWFkLCB0aGV5IHNob3VsZCByZXR1cm4gdGhlaXIgaW5pdGlhbCBzdGF0ZVxuICogaWYgdGhlIHN0YXRlIHBhc3NlZCB0byB0aGVtIHdhcyB1bmRlZmluZWQsIGFuZCB0aGUgY3VycmVudCBzdGF0ZSBmb3IgYW55XG4gKiB1bnJlY29nbml6ZWQgYWN0aW9uLlxuICpcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSByZWR1Y2VyIGZ1bmN0aW9uIHRoYXQgaW52b2tlcyBldmVyeSByZWR1Y2VyIGluc2lkZSB0aGVcbiAqIHBhc3NlZCBvYmplY3QsIGFuZCBidWlsZHMgYSBzdGF0ZSBvYmplY3Qgd2l0aCB0aGUgc2FtZSBzaGFwZS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNvbWJpbmVSZWR1Y2VycyhyZWR1Y2Vycykge1xuICB2YXIgcmVkdWNlcktleXMgPSBPYmplY3Qua2V5cyhyZWR1Y2Vycyk7XG4gIHZhciBmaW5hbFJlZHVjZXJzID0ge307XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWR1Y2VyS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSByZWR1Y2VyS2V5c1tpXTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBpZiAodHlwZW9mIHJlZHVjZXJzW2tleV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHdhcm5pbmcoXCJObyByZWR1Y2VyIHByb3ZpZGVkIGZvciBrZXkgXFxcIlwiICsga2V5ICsgXCJcXFwiXCIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0eXBlb2YgcmVkdWNlcnNba2V5XSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgZmluYWxSZWR1Y2Vyc1trZXldID0gcmVkdWNlcnNba2V5XTtcbiAgICB9XG4gIH1cblxuICB2YXIgZmluYWxSZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKGZpbmFsUmVkdWNlcnMpOyAvLyBUaGlzIGlzIHVzZWQgdG8gbWFrZSBzdXJlIHdlIGRvbid0IHdhcm4gYWJvdXQgdGhlIHNhbWVcbiAgLy8ga2V5cyBtdWx0aXBsZSB0aW1lcy5cblxuICB2YXIgdW5leHBlY3RlZEtleUNhY2hlO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdW5leHBlY3RlZEtleUNhY2hlID0ge307XG4gIH1cblxuICB2YXIgc2hhcGVBc3NlcnRpb25FcnJvcjtcblxuICB0cnkge1xuICAgIGFzc2VydFJlZHVjZXJTaGFwZShmaW5hbFJlZHVjZXJzKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHNoYXBlQXNzZXJ0aW9uRXJyb3IgPSBlO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIGNvbWJpbmF0aW9uKHN0YXRlLCBhY3Rpb24pIHtcbiAgICBpZiAoc3RhdGUgPT09IHZvaWQgMCkge1xuICAgICAgc3RhdGUgPSB7fTtcbiAgICB9XG5cbiAgICBpZiAoc2hhcGVBc3NlcnRpb25FcnJvcikge1xuICAgICAgdGhyb3cgc2hhcGVBc3NlcnRpb25FcnJvcjtcbiAgICB9XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIHdhcm5pbmdNZXNzYWdlID0gZ2V0VW5leHBlY3RlZFN0YXRlU2hhcGVXYXJuaW5nTWVzc2FnZShzdGF0ZSwgZmluYWxSZWR1Y2VycywgYWN0aW9uLCB1bmV4cGVjdGVkS2V5Q2FjaGUpO1xuXG4gICAgICBpZiAod2FybmluZ01lc3NhZ2UpIHtcbiAgICAgICAgd2FybmluZyh3YXJuaW5nTWVzc2FnZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGhhc0NoYW5nZWQgPSBmYWxzZTtcbiAgICB2YXIgbmV4dFN0YXRlID0ge307XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgZmluYWxSZWR1Y2VyS2V5cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfa2V5ID0gZmluYWxSZWR1Y2VyS2V5c1tfaV07XG4gICAgICB2YXIgcmVkdWNlciA9IGZpbmFsUmVkdWNlcnNbX2tleV07XG4gICAgICB2YXIgcHJldmlvdXNTdGF0ZUZvcktleSA9IHN0YXRlW19rZXldO1xuICAgICAgdmFyIG5leHRTdGF0ZUZvcktleSA9IHJlZHVjZXIocHJldmlvdXNTdGF0ZUZvcktleSwgYWN0aW9uKTtcblxuICAgICAgaWYgKHR5cGVvZiBuZXh0U3RhdGVGb3JLZXkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHZhciBhY3Rpb25UeXBlID0gYWN0aW9uICYmIGFjdGlvbi50eXBlO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxNCkgOiBcIldoZW4gY2FsbGVkIHdpdGggYW4gYWN0aW9uIG9mIHR5cGUgXCIgKyAoYWN0aW9uVHlwZSA/IFwiXFxcIlwiICsgU3RyaW5nKGFjdGlvblR5cGUpICsgXCJcXFwiXCIgOiAnKHVua25vd24gdHlwZSknKSArIFwiLCB0aGUgc2xpY2UgcmVkdWNlciBmb3Iga2V5IFxcXCJcIiArIF9rZXkgKyBcIlxcXCIgcmV0dXJuZWQgdW5kZWZpbmVkLiBcIiArIFwiVG8gaWdub3JlIGFuIGFjdGlvbiwgeW91IG11c3QgZXhwbGljaXRseSByZXR1cm4gdGhlIHByZXZpb3VzIHN0YXRlLiBcIiArIFwiSWYgeW91IHdhbnQgdGhpcyByZWR1Y2VyIHRvIGhvbGQgbm8gdmFsdWUsIHlvdSBjYW4gcmV0dXJuIG51bGwgaW5zdGVhZCBvZiB1bmRlZmluZWQuXCIpO1xuICAgICAgfVxuXG4gICAgICBuZXh0U3RhdGVbX2tleV0gPSBuZXh0U3RhdGVGb3JLZXk7XG4gICAgICBoYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZCB8fCBuZXh0U3RhdGVGb3JLZXkgIT09IHByZXZpb3VzU3RhdGVGb3JLZXk7XG4gICAgfVxuXG4gICAgaGFzQ2hhbmdlZCA9IGhhc0NoYW5nZWQgfHwgZmluYWxSZWR1Y2VyS2V5cy5sZW5ndGggIT09IE9iamVjdC5rZXlzKHN0YXRlKS5sZW5ndGg7XG4gICAgcmV0dXJuIGhhc0NoYW5nZWQgPyBuZXh0U3RhdGUgOiBzdGF0ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvciwgZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZGlzcGF0Y2goYWN0aW9uQ3JlYXRvci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfTtcbn1cbi8qKlxuICogVHVybnMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uIGNyZWF0b3JzLCBpbnRvIGFuIG9iamVjdCB3aXRoIHRoZVxuICogc2FtZSBrZXlzLCBidXQgd2l0aCBldmVyeSBmdW5jdGlvbiB3cmFwcGVkIGludG8gYSBgZGlzcGF0Y2hgIGNhbGwgc28gdGhleVxuICogbWF5IGJlIGludm9rZWQgZGlyZWN0bHkuIFRoaXMgaXMganVzdCBhIGNvbnZlbmllbmNlIG1ldGhvZCwgYXMgeW91IGNhbiBjYWxsXG4gKiBgc3RvcmUuZGlzcGF0Y2goTXlBY3Rpb25DcmVhdG9ycy5kb1NvbWV0aGluZygpKWAgeW91cnNlbGYganVzdCBmaW5lLlxuICpcbiAqIEZvciBjb252ZW5pZW5jZSwgeW91IGNhbiBhbHNvIHBhc3MgYW4gYWN0aW9uIGNyZWF0b3IgYXMgdGhlIGZpcnN0IGFyZ3VtZW50LFxuICogYW5kIGdldCBhIGRpc3BhdGNoIHdyYXBwZWQgZnVuY3Rpb24gaW4gcmV0dXJuLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb258T2JqZWN0fSBhY3Rpb25DcmVhdG9ycyBBbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBhY3Rpb25cbiAqIGNyZWF0b3IgZnVuY3Rpb25zLiBPbmUgaGFuZHkgd2F5IHRvIG9idGFpbiBpdCBpcyB0byB1c2UgRVM2IGBpbXBvcnQgKiBhc2BcbiAqIHN5bnRheC4gWW91IG1heSBhbHNvIHBhc3MgYSBzaW5nbGUgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZGlzcGF0Y2ggVGhlIGBkaXNwYXRjaGAgZnVuY3Rpb24gYXZhaWxhYmxlIG9uIHlvdXIgUmVkdXhcbiAqIHN0b3JlLlxuICpcbiAqIEByZXR1cm5zIHtGdW5jdGlvbnxPYmplY3R9IFRoZSBvYmplY3QgbWltaWNraW5nIHRoZSBvcmlnaW5hbCBvYmplY3QsIGJ1dCB3aXRoXG4gKiBldmVyeSBhY3Rpb24gY3JlYXRvciB3cmFwcGVkIGludG8gdGhlIGBkaXNwYXRjaGAgY2FsbC4gSWYgeW91IHBhc3NlZCBhXG4gKiBmdW5jdGlvbiBhcyBgYWN0aW9uQ3JlYXRvcnNgLCB0aGUgcmV0dXJuIHZhbHVlIHdpbGwgYWxzbyBiZSBhIHNpbmdsZVxuICogZnVuY3Rpb24uXG4gKi9cblxuXG5mdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcnMoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKSB7XG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgIT09ICdvYmplY3QnIHx8IGFjdGlvbkNyZWF0b3JzID09PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMTYpIDogXCJiaW5kQWN0aW9uQ3JlYXRvcnMgZXhwZWN0ZWQgYW4gb2JqZWN0IG9yIGEgZnVuY3Rpb24sIGJ1dCBpbnN0ZWFkIHJlY2VpdmVkOiAnXCIgKyBraW5kT2YoYWN0aW9uQ3JlYXRvcnMpICsgXCInLiBcIiArIFwiRGlkIHlvdSB3cml0ZSBcXFwiaW1wb3J0IEFjdGlvbkNyZWF0b3JzIGZyb21cXFwiIGluc3RlYWQgb2YgXFxcImltcG9ydCAqIGFzIEFjdGlvbkNyZWF0b3JzIGZyb21cXFwiP1wiKTtcbiAgfVxuXG4gIHZhciBib3VuZEFjdGlvbkNyZWF0b3JzID0ge307XG5cbiAgZm9yICh2YXIga2V5IGluIGFjdGlvbkNyZWF0b3JzKSB7XG4gICAgdmFyIGFjdGlvbkNyZWF0b3IgPSBhY3Rpb25DcmVhdG9yc1trZXldO1xuXG4gICAgaWYgKHR5cGVvZiBhY3Rpb25DcmVhdG9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBib3VuZEFjdGlvbkNyZWF0b3JzW2tleV0gPSBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9yLCBkaXNwYXRjaCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGJvdW5kQWN0aW9uQ3JlYXRvcnM7XG59XG5cbi8qKlxuICogQ29tcG9zZXMgc2luZ2xlLWFyZ3VtZW50IGZ1bmN0aW9ucyBmcm9tIHJpZ2h0IHRvIGxlZnQuIFRoZSByaWdodG1vc3RcbiAqIGZ1bmN0aW9uIGNhbiB0YWtlIG11bHRpcGxlIGFyZ3VtZW50cyBhcyBpdCBwcm92aWRlcyB0aGUgc2lnbmF0dXJlIGZvclxuICogdGhlIHJlc3VsdGluZyBjb21wb3NpdGUgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHsuLi5GdW5jdGlvbn0gZnVuY3MgVGhlIGZ1bmN0aW9ucyB0byBjb21wb3NlLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGZ1bmN0aW9uIG9idGFpbmVkIGJ5IGNvbXBvc2luZyB0aGUgYXJndW1lbnQgZnVuY3Rpb25zXG4gKiBmcm9tIHJpZ2h0IHRvIGxlZnQuIEZvciBleGFtcGxlLCBjb21wb3NlKGYsIGcsIGgpIGlzIGlkZW50aWNhbCB0byBkb2luZ1xuICogKC4uLmFyZ3MpID0+IGYoZyhoKC4uLmFyZ3MpKSkuXG4gKi9cbmZ1bmN0aW9uIGNvbXBvc2UoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBmdW5jcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBmdW5jc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIGlmIChmdW5jcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgICAgcmV0dXJuIGFyZztcbiAgICB9O1xuICB9XG5cbiAgaWYgKGZ1bmNzLmxlbmd0aCA9PT0gMSkge1xuICAgIHJldHVybiBmdW5jc1swXTtcbiAgfVxuXG4gIHJldHVybiBmdW5jcy5yZWR1Y2UoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGEoYi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cykpO1xuICAgIH07XG4gIH0pO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBzdG9yZSBlbmhhbmNlciB0aGF0IGFwcGxpZXMgbWlkZGxld2FyZSB0byB0aGUgZGlzcGF0Y2ggbWV0aG9kXG4gKiBvZiB0aGUgUmVkdXggc3RvcmUuIFRoaXMgaXMgaGFuZHkgZm9yIGEgdmFyaWV0eSBvZiB0YXNrcywgc3VjaCBhcyBleHByZXNzaW5nXG4gKiBhc3luY2hyb25vdXMgYWN0aW9ucyBpbiBhIGNvbmNpc2UgbWFubmVyLCBvciBsb2dnaW5nIGV2ZXJ5IGFjdGlvbiBwYXlsb2FkLlxuICpcbiAqIFNlZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UgYXMgYW4gZXhhbXBsZSBvZiB0aGUgUmVkdXggbWlkZGxld2FyZS5cbiAqXG4gKiBCZWNhdXNlIG1pZGRsZXdhcmUgaXMgcG90ZW50aWFsbHkgYXN5bmNocm9ub3VzLCB0aGlzIHNob3VsZCBiZSB0aGUgZmlyc3RcbiAqIHN0b3JlIGVuaGFuY2VyIGluIHRoZSBjb21wb3NpdGlvbiBjaGFpbi5cbiAqXG4gKiBOb3RlIHRoYXQgZWFjaCBtaWRkbGV3YXJlIHdpbGwgYmUgZ2l2ZW4gdGhlIGBkaXNwYXRjaGAgYW5kIGBnZXRTdGF0ZWAgZnVuY3Rpb25zXG4gKiBhcyBuYW1lZCBhcmd1bWVudHMuXG4gKlxuICogQHBhcmFtIHsuLi5GdW5jdGlvbn0gbWlkZGxld2FyZXMgVGhlIG1pZGRsZXdhcmUgY2hhaW4gdG8gYmUgYXBwbGllZC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBzdG9yZSBlbmhhbmNlciBhcHBseWluZyB0aGUgbWlkZGxld2FyZS5cbiAqL1xuXG5mdW5jdGlvbiBhcHBseU1pZGRsZXdhcmUoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBtaWRkbGV3YXJlcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBtaWRkbGV3YXJlc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoY3JlYXRlU3RvcmUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHN0b3JlID0gY3JlYXRlU3RvcmUuYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuXG4gICAgICB2YXIgX2Rpc3BhdGNoID0gZnVuY3Rpb24gZGlzcGF0Y2goKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDE1KSA6ICdEaXNwYXRjaGluZyB3aGlsZSBjb25zdHJ1Y3RpbmcgeW91ciBtaWRkbGV3YXJlIGlzIG5vdCBhbGxvd2VkLiAnICsgJ090aGVyIG1pZGRsZXdhcmUgd291bGQgbm90IGJlIGFwcGxpZWQgdG8gdGhpcyBkaXNwYXRjaC4nKTtcbiAgICAgIH07XG5cbiAgICAgIHZhciBtaWRkbGV3YXJlQVBJID0ge1xuICAgICAgICBnZXRTdGF0ZTogc3RvcmUuZ2V0U3RhdGUsXG4gICAgICAgIGRpc3BhdGNoOiBmdW5jdGlvbiBkaXNwYXRjaCgpIHtcbiAgICAgICAgICByZXR1cm4gX2Rpc3BhdGNoLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBjaGFpbiA9IG1pZGRsZXdhcmVzLm1hcChmdW5jdGlvbiAobWlkZGxld2FyZSkge1xuICAgICAgICByZXR1cm4gbWlkZGxld2FyZShtaWRkbGV3YXJlQVBJKTtcbiAgICAgIH0pO1xuICAgICAgX2Rpc3BhdGNoID0gY29tcG9zZS5hcHBseSh2b2lkIDAsIGNoYWluKShzdG9yZS5kaXNwYXRjaCk7XG4gICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBzdG9yZSksIHt9LCB7XG4gICAgICAgIGRpc3BhdGNoOiBfZGlzcGF0Y2hcbiAgICAgIH0pO1xuICAgIH07XG4gIH07XG59XG5cbi8qXG4gKiBUaGlzIGlzIGEgZHVtbXkgZnVuY3Rpb24gdG8gY2hlY2sgaWYgdGhlIGZ1bmN0aW9uIG5hbWUgaGFzIGJlZW4gYWx0ZXJlZCBieSBtaW5pZmljYXRpb24uXG4gKiBJZiB0aGUgZnVuY3Rpb24gaGFzIGJlZW4gbWluaWZpZWQgYW5kIE5PREVfRU5WICE9PSAncHJvZHVjdGlvbicsIHdhcm4gdGhlIHVzZXIuXG4gKi9cblxuZnVuY3Rpb24gaXNDcnVzaGVkKCkge31cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdHlwZW9mIGlzQ3J1c2hlZC5uYW1lID09PSAnc3RyaW5nJyAmJiBpc0NydXNoZWQubmFtZSAhPT0gJ2lzQ3J1c2hlZCcpIHtcbiAgd2FybmluZygnWW91IGFyZSBjdXJyZW50bHkgdXNpbmcgbWluaWZpZWQgY29kZSBvdXRzaWRlIG9mIE5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIi4gJyArICdUaGlzIG1lYW5zIHRoYXQgeW91IGFyZSBydW5uaW5nIGEgc2xvd2VyIGRldmVsb3BtZW50IGJ1aWxkIG9mIFJlZHV4LiAnICsgJ1lvdSBjYW4gdXNlIGxvb3NlLWVudmlmeSAoaHR0cHM6Ly9naXRodWIuY29tL3plcnRvc2gvbG9vc2UtZW52aWZ5KSBmb3IgYnJvd3NlcmlmeSAnICsgJ29yIHNldHRpbmcgbW9kZSB0byBwcm9kdWN0aW9uIGluIHdlYnBhY2sgKGh0dHBzOi8vd2VicGFjay5qcy5vcmcvY29uY2VwdHMvbW9kZS8pICcgKyAndG8gZW5zdXJlIHlvdSBoYXZlIHRoZSBjb3JyZWN0IGNvZGUgZm9yIHlvdXIgcHJvZHVjdGlvbiBidWlsZC4nKTtcbn1cblxuZXhwb3J0IHsgQWN0aW9uVHlwZXMgYXMgX19ET19OT1RfVVNFX19BY3Rpb25UeXBlcywgYXBwbHlNaWRkbGV3YXJlLCBiaW5kQWN0aW9uQ3JlYXRvcnMsIGNvbWJpbmVSZWR1Y2VycywgY29tcG9zZSwgY3JlYXRlU3RvcmUsIGxlZ2FjeV9jcmVhdGVTdG9yZSB9O1xuIiwiLyoqIEEgZnVuY3Rpb24gdGhhdCBhY2NlcHRzIGEgcG90ZW50aWFsIFwiZXh0cmEgYXJndW1lbnRcIiB2YWx1ZSB0byBiZSBpbmplY3RlZCBsYXRlcixcclxuICogYW5kIHJldHVybnMgYW4gaW5zdGFuY2Ugb2YgdGhlIHRodW5rIG1pZGRsZXdhcmUgdGhhdCB1c2VzIHRoYXQgdmFsdWVcclxuICovXG5mdW5jdGlvbiBjcmVhdGVUaHVua01pZGRsZXdhcmUoZXh0cmFBcmd1bWVudCkge1xuICAvLyBTdGFuZGFyZCBSZWR1eCBtaWRkbGV3YXJlIGRlZmluaXRpb24gcGF0dGVybjpcbiAgLy8gU2VlOiBodHRwczovL3JlZHV4LmpzLm9yZy90dXRvcmlhbHMvZnVuZGFtZW50YWxzL3BhcnQtNC1zdG9yZSN3cml0aW5nLWN1c3RvbS1taWRkbGV3YXJlXG4gIHZhciBtaWRkbGV3YXJlID0gZnVuY3Rpb24gbWlkZGxld2FyZShfcmVmKSB7XG4gICAgdmFyIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaCxcbiAgICAgICAgZ2V0U3RhdGUgPSBfcmVmLmdldFN0YXRlO1xuICAgIHJldHVybiBmdW5jdGlvbiAobmV4dCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcbiAgICAgICAgLy8gVGhlIHRodW5rIG1pZGRsZXdhcmUgbG9va3MgZm9yIGFueSBmdW5jdGlvbnMgdGhhdCB3ZXJlIHBhc3NlZCB0byBgc3RvcmUuZGlzcGF0Y2hgLlxuICAgICAgICAvLyBJZiB0aGlzIFwiYWN0aW9uXCIgaXMgcmVhbGx5IGEgZnVuY3Rpb24sIGNhbGwgaXQgYW5kIHJldHVybiB0aGUgcmVzdWx0LlxuICAgICAgICBpZiAodHlwZW9mIGFjdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIC8vIEluamVjdCB0aGUgc3RvcmUncyBgZGlzcGF0Y2hgIGFuZCBgZ2V0U3RhdGVgIG1ldGhvZHMsIGFzIHdlbGwgYXMgYW55IFwiZXh0cmEgYXJnXCJcbiAgICAgICAgICByZXR1cm4gYWN0aW9uKGRpc3BhdGNoLCBnZXRTdGF0ZSwgZXh0cmFBcmd1bWVudCk7XG4gICAgICAgIH0gLy8gT3RoZXJ3aXNlLCBwYXNzIHRoZSBhY3Rpb24gZG93biB0aGUgbWlkZGxld2FyZSBjaGFpbiBhcyB1c3VhbFxuXG5cbiAgICAgICAgcmV0dXJuIG5leHQoYWN0aW9uKTtcbiAgICAgIH07XG4gICAgfTtcbiAgfTtcblxuICByZXR1cm4gbWlkZGxld2FyZTtcbn1cblxudmFyIHRodW5rID0gY3JlYXRlVGh1bmtNaWRkbGV3YXJlKCk7IC8vIEF0dGFjaCB0aGUgZmFjdG9yeSBmdW5jdGlvbiBzbyB1c2VycyBjYW4gY3JlYXRlIGEgY3VzdG9taXplZCB2ZXJzaW9uXG4vLyB3aXRoIHdoYXRldmVyIFwiZXh0cmEgYXJnXCIgdGhleSB3YW50IHRvIGluamVjdCBpbnRvIHRoZWlyIHRodW5rc1xuXG50aHVuay53aXRoRXh0cmFBcmd1bWVudCA9IGNyZWF0ZVRodW5rTWlkZGxld2FyZTtcbmV4cG9ydCBkZWZhdWx0IHRodW5rOyIsInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcclxuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcclxuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxyXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XHJcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcbiAgICB9O1xyXG59KSgpO1xyXG52YXIgX19nZW5lcmF0b3IgPSAodGhpcyAmJiB0aGlzLl9fZ2VuZXJhdG9yKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgYm9keSkge1xyXG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcclxuICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCBcInRocm93XCI6IHZlcmIoMSksIFwicmV0dXJuXCI6IHZlcmIoMikgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xyXG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IHJldHVybiBmdW5jdGlvbiAodikgeyByZXR1cm4gc3RlcChbbiwgdl0pOyB9OyB9XHJcbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XHJcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xyXG4gICAgICAgIHdoaWxlIChfKSB0cnkge1xyXG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XHJcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTtcclxuICAgICAgICAgICAgc3dpdGNoIChvcFswXSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xyXG4gICAgICAgICAgICAgICAgY2FzZSA1OiBfLmxhYmVsKys7IHkgPSBvcFsxXTsgb3AgPSBbMF07IGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBpZiAoISh0ID0gXy50cnlzLCB0ID0gdC5sZW5ndGggPiAwICYmIHRbdC5sZW5ndGggLSAxXSkgJiYgKG9wWzBdID09PSA2IHx8IG9wWzBdID09PSAyKSkgeyBfID0gMDsgY29udGludWU7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7IF8ubGFiZWwgPSB0WzJdOyBfLm9wcy5wdXNoKG9wKTsgYnJlYWs7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcclxuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XHJcbiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07IHJldHVybiB7IHZhbHVlOiBvcFswXSA/IG9wWzFdIDogdm9pZCAwLCBkb25lOiB0cnVlIH07XHJcbiAgICB9XHJcbn07XHJcbnZhciBfX3NwcmVhZEFycmF5ID0gKHRoaXMgJiYgdGhpcy5fX3NwcmVhZEFycmF5KSB8fCBmdW5jdGlvbiAodG8sIGZyb20pIHtcclxuICAgIGZvciAodmFyIGkgPSAwLCBpbCA9IGZyb20ubGVuZ3RoLCBqID0gdG8ubGVuZ3RoOyBpIDwgaWw7IGkrKywgaisrKVxyXG4gICAgICAgIHRvW2pdID0gZnJvbVtpXTtcclxuICAgIHJldHVybiB0bztcclxufTtcclxudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcclxudmFyIF9fZGVmUHJvcHMgPSBPYmplY3QuZGVmaW5lUHJvcGVydGllcztcclxudmFyIF9fZ2V0T3duUHJvcERlc2NzID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM7XHJcbnZhciBfX2dldE93blByb3BTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcclxudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XHJcbnZhciBfX3Byb3BJc0VudW0gPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xyXG52YXIgX19kZWZOb3JtYWxQcm9wID0gZnVuY3Rpb24gKG9iaiwga2V5LCB2YWx1ZSkgeyByZXR1cm4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlOyB9O1xyXG52YXIgX19zcHJlYWRWYWx1ZXMgPSBmdW5jdGlvbiAoYSwgYikge1xyXG4gICAgZm9yICh2YXIgcHJvcCBpbiBiIHx8IChiID0ge30pKVxyXG4gICAgICAgIGlmIChfX2hhc093blByb3AuY2FsbChiLCBwcm9wKSlcclxuICAgICAgICAgICAgX19kZWZOb3JtYWxQcm9wKGEsIHByb3AsIGJbcHJvcF0pO1xyXG4gICAgaWYgKF9fZ2V0T3duUHJvcFN5bWJvbHMpXHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfYyA9IF9fZ2V0T3duUHJvcFN5bWJvbHMoYik7IF9pIDwgX2MubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBwcm9wID0gX2NbX2ldO1xyXG4gICAgICAgICAgICBpZiAoX19wcm9wSXNFbnVtLmNhbGwoYiwgcHJvcCkpXHJcbiAgICAgICAgICAgICAgICBfX2RlZk5vcm1hbFByb3AoYSwgcHJvcCwgYltwcm9wXSk7XHJcbiAgICAgICAgfVxyXG4gICAgcmV0dXJuIGE7XHJcbn07XHJcbnZhciBfX3NwcmVhZFByb3BzID0gZnVuY3Rpb24gKGEsIGIpIHsgcmV0dXJuIF9fZGVmUHJvcHMoYSwgX19nZXRPd25Qcm9wRGVzY3MoYikpOyB9O1xyXG52YXIgX19hc3luYyA9IGZ1bmN0aW9uIChfX3RoaXMsIF9fYXJndW1lbnRzLCBnZW5lcmF0b3IpIHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgdmFyIGZ1bGZpbGxlZCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciByZWplY3RlZCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgc3RlcChnZW5lcmF0b3IudGhyb3codmFsdWUpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICB2YXIgc3RlcCA9IGZ1bmN0aW9uICh4KSB7IHJldHVybiB4LmRvbmUgPyByZXNvbHZlKHgudmFsdWUpIDogUHJvbWlzZS5yZXNvbHZlKHgudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH07XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KF9fdGhpcywgX19hcmd1bWVudHMpKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn07XHJcbi8vIHNyYy9pbmRleC50c1xyXG5pbXBvcnQgeyBlbmFibGVFUzUgfSBmcm9tIFwiaW1tZXJcIjtcclxuZXhwb3J0ICogZnJvbSBcInJlZHV4XCI7XHJcbmltcG9ydCB7IGRlZmF1bHQgYXMgZGVmYXVsdDIsIGN1cnJlbnQgYXMgY3VycmVudDIsIGZyZWV6ZSwgb3JpZ2luYWwsIGlzRHJhZnQgYXMgaXNEcmFmdDQgfSBmcm9tIFwiaW1tZXJcIjtcclxuaW1wb3J0IHsgY3JlYXRlU2VsZWN0b3IgYXMgY3JlYXRlU2VsZWN0b3IyIH0gZnJvbSBcInJlc2VsZWN0XCI7XHJcbi8vIHNyYy9jcmVhdGVEcmFmdFNhZmVTZWxlY3Rvci50c1xyXG5pbXBvcnQgeyBjdXJyZW50LCBpc0RyYWZ0IH0gZnJvbSBcImltbWVyXCI7XHJcbmltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yIH0gZnJvbSBcInJlc2VsZWN0XCI7XHJcbnZhciBjcmVhdGVEcmFmdFNhZmVTZWxlY3RvciA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBhcmdzID0gW107XHJcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcclxuICAgIH1cclxuICAgIHZhciBzZWxlY3RvciA9IGNyZWF0ZVNlbGVjdG9yLmFwcGx5KHZvaWQgMCwgYXJncyk7XHJcbiAgICB2YXIgd3JhcHBlZFNlbGVjdG9yID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgdmFyIHJlc3QgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBfaSA9IDE7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICByZXN0W19pIC0gMV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gc2VsZWN0b3IuYXBwbHkodm9pZCAwLCBfX3NwcmVhZEFycmF5KFtpc0RyYWZ0KHZhbHVlKSA/IGN1cnJlbnQodmFsdWUpIDogdmFsdWVdLCByZXN0KSk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHdyYXBwZWRTZWxlY3RvcjtcclxufTtcclxuLy8gc3JjL2NvbmZpZ3VyZVN0b3JlLnRzXHJcbmltcG9ydCB7IGNyZWF0ZVN0b3JlLCBjb21wb3NlIGFzIGNvbXBvc2UyLCBhcHBseU1pZGRsZXdhcmUsIGNvbWJpbmVSZWR1Y2VycyB9IGZyb20gXCJyZWR1eFwiO1xyXG4vLyBzcmMvZGV2dG9vbHNFeHRlbnNpb24udHNcclxuaW1wb3J0IHsgY29tcG9zZSB9IGZyb20gXCJyZWR1eFwiO1xyXG52YXIgY29tcG9zZVdpdGhEZXZUb29scyA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93Ll9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX0NPTVBPU0VfXyA/IHdpbmRvdy5fX1JFRFVYX0RFVlRPT0xTX0VYVEVOU0lPTl9DT01QT1NFX18gOiBmdW5jdGlvbiAoKSB7XHJcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMClcclxuICAgICAgICByZXR1cm4gdm9pZCAwO1xyXG4gICAgaWYgKHR5cGVvZiBhcmd1bWVudHNbMF0gPT09IFwib2JqZWN0XCIpXHJcbiAgICAgICAgcmV0dXJuIGNvbXBvc2U7XHJcbiAgICByZXR1cm4gY29tcG9zZS5hcHBseShudWxsLCBhcmd1bWVudHMpO1xyXG59O1xyXG52YXIgZGV2VG9vbHNFbmhhbmNlciA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93Ll9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX18gPyB3aW5kb3cuX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fXyA6IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAobm9vcDIpIHtcclxuICAgICAgICByZXR1cm4gbm9vcDI7XHJcbiAgICB9O1xyXG59O1xyXG4vLyBzcmMvaXNQbGFpbk9iamVjdC50c1xyXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KHZhbHVlKSB7XHJcbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcIm9iamVjdFwiIHx8IHZhbHVlID09PSBudWxsKVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIHZhciBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWx1ZSk7XHJcbiAgICBpZiAocHJvdG8gPT09IG51bGwpXHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB2YXIgYmFzZVByb3RvID0gcHJvdG87XHJcbiAgICB3aGlsZSAoT2JqZWN0LmdldFByb3RvdHlwZU9mKGJhc2VQcm90bykgIT09IG51bGwpIHtcclxuICAgICAgICBiYXNlUHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoYmFzZVByb3RvKTtcclxuICAgIH1cclxuICAgIHJldHVybiBwcm90byA9PT0gYmFzZVByb3RvO1xyXG59XHJcbi8vIHNyYy9nZXREZWZhdWx0TWlkZGxld2FyZS50c1xyXG5pbXBvcnQgdGh1bmtNaWRkbGV3YXJlIGZyb20gXCJyZWR1eC10aHVua1wiO1xyXG4vLyBzcmMvdXRpbHMudHNcclxuaW1wb3J0IGNyZWF0ZU5leHRTdGF0ZSwgeyBpc0RyYWZ0YWJsZSB9IGZyb20gXCJpbW1lclwiO1xyXG5mdW5jdGlvbiBnZXRUaW1lTWVhc3VyZVV0aWxzKG1heERlbGF5LCBmbk5hbWUpIHtcclxuICAgIHZhciBlbGFwc2VkID0gMDtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgbWVhc3VyZVRpbWU6IGZ1bmN0aW9uIChmbikge1xyXG4gICAgICAgICAgICB2YXIgc3RhcnRlZCA9IERhdGUubm93KCk7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZm4oKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmaW5hbGx5IHtcclxuICAgICAgICAgICAgICAgIHZhciBmaW5pc2hlZCA9IERhdGUubm93KCk7XHJcbiAgICAgICAgICAgICAgICBlbGFwc2VkICs9IGZpbmlzaGVkIC0gc3RhcnRlZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgd2FybklmRXhjZWVkZWQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKGVsYXBzZWQgPiBtYXhEZWxheSkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGZuTmFtZSArIFwiIHRvb2sgXCIgKyBlbGFwc2VkICsgXCJtcywgd2hpY2ggaXMgbW9yZSB0aGFuIHRoZSB3YXJuaW5nIHRocmVzaG9sZCBvZiBcIiArIG1heERlbGF5ICsgXCJtcy4gXFxuSWYgeW91ciBzdGF0ZSBvciBhY3Rpb25zIGFyZSB2ZXJ5IGxhcmdlLCB5b3UgbWF5IHdhbnQgdG8gZGlzYWJsZSB0aGUgbWlkZGxld2FyZSBhcyBpdCBtaWdodCBjYXVzZSB0b28gbXVjaCBvZiBhIHNsb3dkb3duIGluIGRldmVsb3BtZW50IG1vZGUuIFNlZSBodHRwczovL3JlZHV4LXRvb2xraXQuanMub3JnL2FwaS9nZXREZWZhdWx0TWlkZGxld2FyZSBmb3IgaW5zdHJ1Y3Rpb25zLlxcbkl0IGlzIGRpc2FibGVkIGluIHByb2R1Y3Rpb24gYnVpbGRzLCBzbyB5b3UgZG9uJ3QgbmVlZCB0byB3b3JyeSBhYm91dCB0aGF0LlwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxudmFyIE1pZGRsZXdhcmVBcnJheSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhNaWRkbGV3YXJlQXJyYXksIF9zdXBlcik7XHJcbiAgICBmdW5jdGlvbiBNaWRkbGV3YXJlQXJyYXkoKSB7XHJcbiAgICAgICAgdmFyIGFyZ3MgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5hcHBseSh0aGlzLCBhcmdzKSB8fCB0aGlzO1xyXG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihfdGhpcywgTWlkZGxld2FyZUFycmF5LnByb3RvdHlwZSk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE1pZGRsZXdhcmVBcnJheSwgU3ltYm9sLnNwZWNpZXMsIHtcclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIE1pZGRsZXdhcmVBcnJheTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBNaWRkbGV3YXJlQXJyYXkucHJvdG90eXBlLmNvbmNhdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgYXJyID0gW107XHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICAgICAgYXJyW19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBfc3VwZXIucHJvdG90eXBlLmNvbmNhdC5hcHBseSh0aGlzLCBhcnIpO1xyXG4gICAgfTtcclxuICAgIE1pZGRsZXdhcmVBcnJheS5wcm90b3R5cGUucHJlcGVuZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgYXJyID0gW107XHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICAgICAgYXJyW19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChhcnIubGVuZ3RoID09PSAxICYmIEFycmF5LmlzQXJyYXkoYXJyWzBdKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbmV3IChNaWRkbGV3YXJlQXJyYXkuYmluZC5hcHBseShNaWRkbGV3YXJlQXJyYXksIF9fc3ByZWFkQXJyYXkoW3ZvaWQgMF0sIGFyclswXS5jb25jYXQodGhpcykpKSkoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG5ldyAoTWlkZGxld2FyZUFycmF5LmJpbmQuYXBwbHkoTWlkZGxld2FyZUFycmF5LCBfX3NwcmVhZEFycmF5KFt2b2lkIDBdLCBhcnIuY29uY2F0KHRoaXMpKSkpKCk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIE1pZGRsZXdhcmVBcnJheTtcclxufShBcnJheSkpO1xyXG5mdW5jdGlvbiBmcmVlemVEcmFmdGFibGUodmFsKSB7XHJcbiAgICByZXR1cm4gaXNEcmFmdGFibGUodmFsKSA/IGNyZWF0ZU5leHRTdGF0ZSh2YWwsIGZ1bmN0aW9uICgpIHtcclxuICAgIH0pIDogdmFsO1xyXG59XHJcbi8vIHNyYy9pbW11dGFibGVTdGF0ZUludmFyaWFudE1pZGRsZXdhcmUudHNcclxudmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIjtcclxudmFyIHByZWZpeCA9IFwiSW52YXJpYW50IGZhaWxlZFwiO1xyXG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBtZXNzYWdlKSB7XHJcbiAgICBpZiAoY29uZGl0aW9uKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKGlzUHJvZHVjdGlvbikge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xyXG4gICAgfVxyXG4gICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCArIFwiOiBcIiArIChtZXNzYWdlIHx8IFwiXCIpKTtcclxufVxyXG5mdW5jdGlvbiBzdHJpbmdpZnkob2JqLCBzZXJpYWxpemVyLCBpbmRlbnQsIGRlY3ljbGVyKSB7XHJcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkob2JqLCBnZXRTZXJpYWxpemUoc2VyaWFsaXplciwgZGVjeWNsZXIpLCBpbmRlbnQpO1xyXG59XHJcbmZ1bmN0aW9uIGdldFNlcmlhbGl6ZShzZXJpYWxpemVyLCBkZWN5Y2xlcikge1xyXG4gICAgdmFyIHN0YWNrID0gW10sIGtleXMgPSBbXTtcclxuICAgIGlmICghZGVjeWNsZXIpXHJcbiAgICAgICAgZGVjeWNsZXIgPSBmdW5jdGlvbiAoXywgdmFsdWUpIHtcclxuICAgICAgICAgICAgaWYgKHN0YWNrWzBdID09PSB2YWx1ZSlcclxuICAgICAgICAgICAgICAgIHJldHVybiBcIltDaXJjdWxhciB+XVwiO1xyXG4gICAgICAgICAgICByZXR1cm4gXCJbQ2lyY3VsYXIgfi5cIiArIGtleXMuc2xpY2UoMCwgc3RhY2suaW5kZXhPZih2YWx1ZSkpLmpvaW4oXCIuXCIpICsgXCJdXCI7XHJcbiAgICAgICAgfTtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xyXG4gICAgICAgIGlmIChzdGFjay5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIHZhciB0aGlzUG9zID0gc3RhY2suaW5kZXhPZih0aGlzKTtcclxuICAgICAgICAgICAgfnRoaXNQb3MgPyBzdGFjay5zcGxpY2UodGhpc1BvcyArIDEpIDogc3RhY2sucHVzaCh0aGlzKTtcclxuICAgICAgICAgICAgfnRoaXNQb3MgPyBrZXlzLnNwbGljZSh0aGlzUG9zLCBJbmZpbml0eSwga2V5KSA6IGtleXMucHVzaChrZXkpO1xyXG4gICAgICAgICAgICBpZiAofnN0YWNrLmluZGV4T2YodmFsdWUpKVxyXG4gICAgICAgICAgICAgICAgdmFsdWUgPSBkZWN5Y2xlci5jYWxsKHRoaXMsIGtleSwgdmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHN0YWNrLnB1c2godmFsdWUpO1xyXG4gICAgICAgIHJldHVybiBzZXJpYWxpemVyID09IG51bGwgPyB2YWx1ZSA6IHNlcmlhbGl6ZXIuY2FsbCh0aGlzLCBrZXksIHZhbHVlKTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gaXNJbW11dGFibGVEZWZhdWx0KHZhbHVlKSB7XHJcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlICE9PSBcIm9iamVjdFwiIHx8IHZhbHVlID09IG51bGwgfHwgT2JqZWN0LmlzRnJvemVuKHZhbHVlKTtcclxufVxyXG5mdW5jdGlvbiB0cmFja0Zvck11dGF0aW9ucyhpc0ltbXV0YWJsZSwgaWdub3JlUGF0aHMsIG9iaikge1xyXG4gICAgdmFyIHRyYWNrZWRQcm9wZXJ0aWVzID0gdHJhY2tQcm9wZXJ0aWVzKGlzSW1tdXRhYmxlLCBpZ25vcmVQYXRocywgb2JqKTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgZGV0ZWN0TXV0YXRpb25zOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBkZXRlY3RNdXRhdGlvbnMoaXNJbW11dGFibGUsIGlnbm9yZVBhdGhzLCB0cmFja2VkUHJvcGVydGllcywgb2JqKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59XHJcbmZ1bmN0aW9uIHRyYWNrUHJvcGVydGllcyhpc0ltbXV0YWJsZSwgaWdub3JlUGF0aHMsIG9iaiwgcGF0aCkge1xyXG4gICAgaWYgKGlnbm9yZVBhdGhzID09PSB2b2lkIDApIHsgaWdub3JlUGF0aHMgPSBbXTsgfVxyXG4gICAgaWYgKHBhdGggPT09IHZvaWQgMCkgeyBwYXRoID0gXCJcIjsgfVxyXG4gICAgdmFyIHRyYWNrZWQgPSB7IHZhbHVlOiBvYmogfTtcclxuICAgIGlmICghaXNJbW11dGFibGUob2JqKSkge1xyXG4gICAgICAgIHRyYWNrZWQuY2hpbGRyZW4gPSB7fTtcclxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XHJcbiAgICAgICAgICAgIHZhciBjaGlsZFBhdGggPSBwYXRoID8gcGF0aCArIFwiLlwiICsga2V5IDoga2V5O1xyXG4gICAgICAgICAgICBpZiAoaWdub3JlUGF0aHMubGVuZ3RoICYmIGlnbm9yZVBhdGhzLmluZGV4T2YoY2hpbGRQYXRoKSAhPT0gLTEpIHtcclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRyYWNrZWQuY2hpbGRyZW5ba2V5XSA9IHRyYWNrUHJvcGVydGllcyhpc0ltbXV0YWJsZSwgaWdub3JlUGF0aHMsIG9ialtrZXldLCBjaGlsZFBhdGgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB0cmFja2VkO1xyXG59XHJcbmZ1bmN0aW9uIGRldGVjdE11dGF0aW9ucyhpc0ltbXV0YWJsZSwgaWdub3JlUGF0aHMsIHRyYWNrZWRQcm9wZXJ0eSwgb2JqLCBzYW1lUGFyZW50UmVmLCBwYXRoKSB7XHJcbiAgICBpZiAoaWdub3JlUGF0aHMgPT09IHZvaWQgMCkgeyBpZ25vcmVQYXRocyA9IFtdOyB9XHJcbiAgICBpZiAoc2FtZVBhcmVudFJlZiA9PT0gdm9pZCAwKSB7IHNhbWVQYXJlbnRSZWYgPSBmYWxzZTsgfVxyXG4gICAgaWYgKHBhdGggPT09IHZvaWQgMCkgeyBwYXRoID0gXCJcIjsgfVxyXG4gICAgdmFyIHByZXZPYmogPSB0cmFja2VkUHJvcGVydHkgPyB0cmFja2VkUHJvcGVydHkudmFsdWUgOiB2b2lkIDA7XHJcbiAgICB2YXIgc2FtZVJlZiA9IHByZXZPYmogPT09IG9iajtcclxuICAgIGlmIChzYW1lUGFyZW50UmVmICYmICFzYW1lUmVmICYmICFOdW1iZXIuaXNOYU4ob2JqKSkge1xyXG4gICAgICAgIHJldHVybiB7IHdhc011dGF0ZWQ6IHRydWUsIHBhdGg6IHBhdGggfTtcclxuICAgIH1cclxuICAgIGlmIChpc0ltbXV0YWJsZShwcmV2T2JqKSB8fCBpc0ltbXV0YWJsZShvYmopKSB7XHJcbiAgICAgICAgcmV0dXJuIHsgd2FzTXV0YXRlZDogZmFsc2UgfTtcclxuICAgIH1cclxuICAgIHZhciBrZXlzVG9EZXRlY3QgPSB7fTtcclxuICAgIGZvciAodmFyIGtleSBpbiB0cmFja2VkUHJvcGVydHkuY2hpbGRyZW4pIHtcclxuICAgICAgICBrZXlzVG9EZXRlY3Rba2V5XSA9IHRydWU7XHJcbiAgICB9XHJcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XHJcbiAgICAgICAga2V5c1RvRGV0ZWN0W2tleV0gPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgZm9yICh2YXIga2V5IGluIGtleXNUb0RldGVjdCkge1xyXG4gICAgICAgIHZhciBjaGlsZFBhdGggPSBwYXRoID8gcGF0aCArIFwiLlwiICsga2V5IDoga2V5O1xyXG4gICAgICAgIGlmIChpZ25vcmVQYXRocy5sZW5ndGggJiYgaWdub3JlUGF0aHMuaW5kZXhPZihjaGlsZFBhdGgpICE9PSAtMSkge1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHJlc3VsdCA9IGRldGVjdE11dGF0aW9ucyhpc0ltbXV0YWJsZSwgaWdub3JlUGF0aHMsIHRyYWNrZWRQcm9wZXJ0eS5jaGlsZHJlbltrZXldLCBvYmpba2V5XSwgc2FtZVJlZiwgY2hpbGRQYXRoKTtcclxuICAgICAgICBpZiAocmVzdWx0Lndhc011dGF0ZWQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4geyB3YXNNdXRhdGVkOiBmYWxzZSB9O1xyXG59XHJcbmZ1bmN0aW9uIGNyZWF0ZUltbXV0YWJsZVN0YXRlSW52YXJpYW50TWlkZGxld2FyZShvcHRpb25zKSB7XHJcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxyXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIikge1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBmdW5jdGlvbiAobmV4dCkgeyByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gbmV4dChhY3Rpb24pOyB9OyB9OyB9O1xyXG4gICAgfVxyXG4gICAgdmFyIF9jID0gb3B0aW9ucy5pc0ltbXV0YWJsZSwgaXNJbW11dGFibGUgPSBfYyA9PT0gdm9pZCAwID8gaXNJbW11dGFibGVEZWZhdWx0IDogX2MsIGlnbm9yZWRQYXRocyA9IG9wdGlvbnMuaWdub3JlZFBhdGhzLCBfZCA9IG9wdGlvbnMud2FybkFmdGVyLCB3YXJuQWZ0ZXIgPSBfZCA9PT0gdm9pZCAwID8gMzIgOiBfZCwgaWdub3JlID0gb3B0aW9ucy5pZ25vcmU7XHJcbiAgICBpZ25vcmVkUGF0aHMgPSBpZ25vcmVkUGF0aHMgfHwgaWdub3JlO1xyXG4gICAgdmFyIHRyYWNrID0gdHJhY2tGb3JNdXRhdGlvbnMuYmluZChudWxsLCBpc0ltbXV0YWJsZSwgaWdub3JlZFBhdGhzKTtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoX2MpIHtcclxuICAgICAgICB2YXIgZ2V0U3RhdGUgPSBfYy5nZXRTdGF0ZTtcclxuICAgICAgICB2YXIgc3RhdGUgPSBnZXRTdGF0ZSgpO1xyXG4gICAgICAgIHZhciB0cmFja2VyID0gdHJhY2soc3RhdGUpO1xyXG4gICAgICAgIHZhciByZXN1bHQ7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChuZXh0KSB7IHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICAgICAgICAgIHZhciBtZWFzdXJlVXRpbHMgPSBnZXRUaW1lTWVhc3VyZVV0aWxzKHdhcm5BZnRlciwgXCJJbW11dGFibGVTdGF0ZUludmFyaWFudE1pZGRsZXdhcmVcIik7XHJcbiAgICAgICAgICAgIG1lYXN1cmVVdGlscy5tZWFzdXJlVGltZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBzdGF0ZSA9IGdldFN0YXRlKCk7XHJcbiAgICAgICAgICAgICAgICByZXN1bHQgPSB0cmFja2VyLmRldGVjdE11dGF0aW9ucygpO1xyXG4gICAgICAgICAgICAgICAgdHJhY2tlciA9IHRyYWNrKHN0YXRlKTtcclxuICAgICAgICAgICAgICAgIGludmFyaWFudCghcmVzdWx0Lndhc011dGF0ZWQsIFwiQSBzdGF0ZSBtdXRhdGlvbiB3YXMgZGV0ZWN0ZWQgYmV0d2VlbiBkaXNwYXRjaGVzLCBpbiB0aGUgcGF0aCAnXCIgKyAocmVzdWx0LnBhdGggfHwgXCJcIikgKyBcIicuICBUaGlzIG1heSBjYXVzZSBpbmNvcnJlY3QgYmVoYXZpb3IuIChodHRwczovL3JlZHV4LmpzLm9yZy9zdHlsZS1ndWlkZS9zdHlsZS1ndWlkZSNkby1ub3QtbXV0YXRlLXN0YXRlKVwiKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHZhciBkaXNwYXRjaGVkQWN0aW9uID0gbmV4dChhY3Rpb24pO1xyXG4gICAgICAgICAgICBtZWFzdXJlVXRpbHMubWVhc3VyZVRpbWUoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgc3RhdGUgPSBnZXRTdGF0ZSgpO1xyXG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gdHJhY2tlci5kZXRlY3RNdXRhdGlvbnMoKTtcclxuICAgICAgICAgICAgICAgIHRyYWNrZXIgPSB0cmFjayhzdGF0ZSk7XHJcbiAgICAgICAgICAgICAgICByZXN1bHQud2FzTXV0YXRlZCAmJiBpbnZhcmlhbnQoIXJlc3VsdC53YXNNdXRhdGVkLCBcIkEgc3RhdGUgbXV0YXRpb24gd2FzIGRldGVjdGVkIGluc2lkZSBhIGRpc3BhdGNoLCBpbiB0aGUgcGF0aDogXCIgKyAocmVzdWx0LnBhdGggfHwgXCJcIikgKyBcIi4gVGFrZSBhIGxvb2sgYXQgdGhlIHJlZHVjZXIocykgaGFuZGxpbmcgdGhlIGFjdGlvbiBcIiArIHN0cmluZ2lmeShhY3Rpb24pICsgXCIuIChodHRwczovL3JlZHV4LmpzLm9yZy9zdHlsZS1ndWlkZS9zdHlsZS1ndWlkZSNkby1ub3QtbXV0YXRlLXN0YXRlKVwiKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIG1lYXN1cmVVdGlscy53YXJuSWZFeGNlZWRlZCgpO1xyXG4gICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2hlZEFjdGlvbjtcclxuICAgICAgICB9OyB9O1xyXG4gICAgfTtcclxufVxyXG4vLyBzcmMvc2VyaWFsaXphYmxlU3RhdGVJbnZhcmlhbnRNaWRkbGV3YXJlLnRzXHJcbmZ1bmN0aW9uIGlzUGxhaW4odmFsKSB7XHJcbiAgICB2YXIgdHlwZSA9IHR5cGVvZiB2YWw7XHJcbiAgICByZXR1cm4gdmFsID09IG51bGwgfHwgdHlwZSA9PT0gXCJzdHJpbmdcIiB8fCB0eXBlID09PSBcImJvb2xlYW5cIiB8fCB0eXBlID09PSBcIm51bWJlclwiIHx8IEFycmF5LmlzQXJyYXkodmFsKSB8fCBpc1BsYWluT2JqZWN0KHZhbCk7XHJcbn1cclxuZnVuY3Rpb24gZmluZE5vblNlcmlhbGl6YWJsZVZhbHVlKHZhbHVlLCBwYXRoLCBpc1NlcmlhbGl6YWJsZSwgZ2V0RW50cmllcywgaWdub3JlZFBhdGhzKSB7XHJcbiAgICBpZiAocGF0aCA9PT0gdm9pZCAwKSB7IHBhdGggPSBcIlwiOyB9XHJcbiAgICBpZiAoaXNTZXJpYWxpemFibGUgPT09IHZvaWQgMCkgeyBpc1NlcmlhbGl6YWJsZSA9IGlzUGxhaW47IH1cclxuICAgIGlmIChpZ25vcmVkUGF0aHMgPT09IHZvaWQgMCkgeyBpZ25vcmVkUGF0aHMgPSBbXTsgfVxyXG4gICAgdmFyIGZvdW5kTmVzdGVkU2VyaWFsaXphYmxlO1xyXG4gICAgaWYgKCFpc1NlcmlhbGl6YWJsZSh2YWx1ZSkpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBrZXlQYXRoOiBwYXRoIHx8IFwiPHJvb3Q+XCIsXHJcbiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcIm9iamVjdFwiIHx8IHZhbHVlID09PSBudWxsKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgdmFyIGVudHJpZXMgPSBnZXRFbnRyaWVzICE9IG51bGwgPyBnZXRFbnRyaWVzKHZhbHVlKSA6IE9iamVjdC5lbnRyaWVzKHZhbHVlKTtcclxuICAgIHZhciBoYXNJZ25vcmVkUGF0aHMgPSBpZ25vcmVkUGF0aHMubGVuZ3RoID4gMDtcclxuICAgIGZvciAodmFyIF9pID0gMCwgZW50cmllc18xID0gZW50cmllczsgX2kgPCBlbnRyaWVzXzEubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgdmFyIF9jID0gZW50cmllc18xW19pXSwga2V5ID0gX2NbMF0sIG5lc3RlZFZhbHVlID0gX2NbMV07XHJcbiAgICAgICAgdmFyIG5lc3RlZFBhdGggPSBwYXRoID8gcGF0aCArIFwiLlwiICsga2V5IDoga2V5O1xyXG4gICAgICAgIGlmIChoYXNJZ25vcmVkUGF0aHMgJiYgaWdub3JlZFBhdGhzLmluZGV4T2YobmVzdGVkUGF0aCkgPj0gMCkge1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFpc1NlcmlhbGl6YWJsZShuZXN0ZWRWYWx1ZSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIGtleVBhdGg6IG5lc3RlZFBhdGgsXHJcbiAgICAgICAgICAgICAgICB2YWx1ZTogbmVzdGVkVmFsdWVcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGVvZiBuZXN0ZWRWYWx1ZSA9PT0gXCJvYmplY3RcIikge1xyXG4gICAgICAgICAgICBmb3VuZE5lc3RlZFNlcmlhbGl6YWJsZSA9IGZpbmROb25TZXJpYWxpemFibGVWYWx1ZShuZXN0ZWRWYWx1ZSwgbmVzdGVkUGF0aCwgaXNTZXJpYWxpemFibGUsIGdldEVudHJpZXMsIGlnbm9yZWRQYXRocyk7XHJcbiAgICAgICAgICAgIGlmIChmb3VuZE5lc3RlZFNlcmlhbGl6YWJsZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZvdW5kTmVzdGVkU2VyaWFsaXphYmxlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG59XHJcbmZ1bmN0aW9uIGNyZWF0ZVNlcmlhbGl6YWJsZVN0YXRlSW52YXJpYW50TWlkZGxld2FyZShvcHRpb25zKSB7XHJcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxyXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIikge1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBmdW5jdGlvbiAobmV4dCkgeyByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gbmV4dChhY3Rpb24pOyB9OyB9OyB9O1xyXG4gICAgfVxyXG4gICAgdmFyIF9jID0gb3B0aW9ucy5pc1NlcmlhbGl6YWJsZSwgaXNTZXJpYWxpemFibGUgPSBfYyA9PT0gdm9pZCAwID8gaXNQbGFpbiA6IF9jLCBnZXRFbnRyaWVzID0gb3B0aW9ucy5nZXRFbnRyaWVzLCBfZCA9IG9wdGlvbnMuaWdub3JlZEFjdGlvbnMsIGlnbm9yZWRBY3Rpb25zID0gX2QgPT09IHZvaWQgMCA/IFtdIDogX2QsIF9lID0gb3B0aW9ucy5pZ25vcmVkQWN0aW9uUGF0aHMsIGlnbm9yZWRBY3Rpb25QYXRocyA9IF9lID09PSB2b2lkIDAgPyBbXCJtZXRhLmFyZ1wiLCBcIm1ldGEuYmFzZVF1ZXJ5TWV0YVwiXSA6IF9lLCBfZiA9IG9wdGlvbnMuaWdub3JlZFBhdGhzLCBpZ25vcmVkUGF0aHMgPSBfZiA9PT0gdm9pZCAwID8gW10gOiBfZiwgX2cgPSBvcHRpb25zLndhcm5BZnRlciwgd2FybkFmdGVyID0gX2cgPT09IHZvaWQgMCA/IDMyIDogX2csIF9oID0gb3B0aW9ucy5pZ25vcmVTdGF0ZSwgaWdub3JlU3RhdGUgPSBfaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfaCwgX2ogPSBvcHRpb25zLmlnbm9yZUFjdGlvbnMsIGlnbm9yZUFjdGlvbnMgPSBfaiA9PT0gdm9pZCAwID8gZmFsc2UgOiBfajtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoc3RvcmVBUEkpIHsgcmV0dXJuIGZ1bmN0aW9uIChuZXh0KSB7IHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICAgICAgdmFyIHJlc3VsdCA9IG5leHQoYWN0aW9uKTtcclxuICAgICAgICB2YXIgbWVhc3VyZVV0aWxzID0gZ2V0VGltZU1lYXN1cmVVdGlscyh3YXJuQWZ0ZXIsIFwiU2VyaWFsaXphYmxlU3RhdGVJbnZhcmlhbnRNaWRkbGV3YXJlXCIpO1xyXG4gICAgICAgIGlmICghaWdub3JlQWN0aW9ucyAmJiAhKGlnbm9yZWRBY3Rpb25zLmxlbmd0aCAmJiBpZ25vcmVkQWN0aW9ucy5pbmRleE9mKGFjdGlvbi50eXBlKSAhPT0gLTEpKSB7XHJcbiAgICAgICAgICAgIG1lYXN1cmVVdGlscy5tZWFzdXJlVGltZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZm91bmRBY3Rpb25Ob25TZXJpYWxpemFibGVWYWx1ZSA9IGZpbmROb25TZXJpYWxpemFibGVWYWx1ZShhY3Rpb24sIFwiXCIsIGlzU2VyaWFsaXphYmxlLCBnZXRFbnRyaWVzLCBpZ25vcmVkQWN0aW9uUGF0aHMpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGZvdW5kQWN0aW9uTm9uU2VyaWFsaXphYmxlVmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIga2V5UGF0aCA9IGZvdW5kQWN0aW9uTm9uU2VyaWFsaXphYmxlVmFsdWUua2V5UGF0aCwgdmFsdWUgPSBmb3VuZEFjdGlvbk5vblNlcmlhbGl6YWJsZVZhbHVlLnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJBIG5vbi1zZXJpYWxpemFibGUgdmFsdWUgd2FzIGRldGVjdGVkIGluIGFuIGFjdGlvbiwgaW4gdGhlIHBhdGg6IGBcIiArIGtleVBhdGggKyBcImAuIFZhbHVlOlwiLCB2YWx1ZSwgXCJcXG5UYWtlIGEgbG9vayBhdCB0aGUgbG9naWMgdGhhdCBkaXNwYXRjaGVkIHRoaXMgYWN0aW9uOiBcIiwgYWN0aW9uLCBcIlxcbihTZWUgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvZmFxL2FjdGlvbnMjd2h5LXNob3VsZC10eXBlLWJlLWEtc3RyaW5nLW9yLWF0LWxlYXN0LXNlcmlhbGl6YWJsZS13aHktc2hvdWxkLW15LWFjdGlvbi10eXBlcy1iZS1jb25zdGFudHMpXCIsIFwiXFxuKFRvIGFsbG93IG5vbi1zZXJpYWxpemFibGUgdmFsdWVzIHNlZTogaHR0cHM6Ly9yZWR1eC10b29sa2l0LmpzLm9yZy91c2FnZS91c2FnZS1ndWlkZSN3b3JraW5nLXdpdGgtbm9uLXNlcmlhbGl6YWJsZS1kYXRhKVwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghaWdub3JlU3RhdGUpIHtcclxuICAgICAgICAgICAgbWVhc3VyZVV0aWxzLm1lYXN1cmVUaW1lKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBzdGF0ZSA9IHN0b3JlQVBJLmdldFN0YXRlKCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZm91bmRTdGF0ZU5vblNlcmlhbGl6YWJsZVZhbHVlID0gZmluZE5vblNlcmlhbGl6YWJsZVZhbHVlKHN0YXRlLCBcIlwiLCBpc1NlcmlhbGl6YWJsZSwgZ2V0RW50cmllcywgaWdub3JlZFBhdGhzKTtcclxuICAgICAgICAgICAgICAgIGlmIChmb3VuZFN0YXRlTm9uU2VyaWFsaXphYmxlVmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIga2V5UGF0aCA9IGZvdW5kU3RhdGVOb25TZXJpYWxpemFibGVWYWx1ZS5rZXlQYXRoLCB2YWx1ZSA9IGZvdW5kU3RhdGVOb25TZXJpYWxpemFibGVWYWx1ZS52YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiQSBub24tc2VyaWFsaXphYmxlIHZhbHVlIHdhcyBkZXRlY3RlZCBpbiB0aGUgc3RhdGUsIGluIHRoZSBwYXRoOiBgXCIgKyBrZXlQYXRoICsgXCJgLiBWYWx1ZTpcIiwgdmFsdWUsIFwiXFxuVGFrZSBhIGxvb2sgYXQgdGhlIHJlZHVjZXIocykgaGFuZGxpbmcgdGhpcyBhY3Rpb24gdHlwZTogXCIgKyBhY3Rpb24udHlwZSArIFwiLlxcbihTZWUgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvZmFxL29yZ2FuaXppbmctc3RhdGUjY2FuLWktcHV0LWZ1bmN0aW9ucy1wcm9taXNlcy1vci1vdGhlci1ub24tc2VyaWFsaXphYmxlLWl0ZW1zLWluLW15LXN0b3JlLXN0YXRlKVwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIG1lYXN1cmVVdGlscy53YXJuSWZFeGNlZWRlZCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfTsgfTsgfTtcclxufVxyXG4vLyBzcmMvZ2V0RGVmYXVsdE1pZGRsZXdhcmUudHNcclxuZnVuY3Rpb24gaXNCb29sZWFuKHgpIHtcclxuICAgIHJldHVybiB0eXBlb2YgeCA9PT0gXCJib29sZWFuXCI7XHJcbn1cclxuZnVuY3Rpb24gY3VycnlHZXREZWZhdWx0TWlkZGxld2FyZSgpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiBjdXJyaWVkR2V0RGVmYXVsdE1pZGRsZXdhcmUob3B0aW9ucykge1xyXG4gICAgICAgIHJldHVybiBnZXREZWZhdWx0TWlkZGxld2FyZShvcHRpb25zKTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gZ2V0RGVmYXVsdE1pZGRsZXdhcmUob3B0aW9ucykge1xyXG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cclxuICAgIHZhciBfYyA9IG9wdGlvbnMudGh1bmssIHRodW5rID0gX2MgPT09IHZvaWQgMCA/IHRydWUgOiBfYywgX2QgPSBvcHRpb25zLmltbXV0YWJsZUNoZWNrLCBpbW11dGFibGVDaGVjayA9IF9kID09PSB2b2lkIDAgPyB0cnVlIDogX2QsIF9lID0gb3B0aW9ucy5zZXJpYWxpemFibGVDaGVjaywgc2VyaWFsaXphYmxlQ2hlY2sgPSBfZSA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9lO1xyXG4gICAgdmFyIG1pZGRsZXdhcmVBcnJheSA9IG5ldyBNaWRkbGV3YXJlQXJyYXkoKTtcclxuICAgIGlmICh0aHVuaykge1xyXG4gICAgICAgIGlmIChpc0Jvb2xlYW4odGh1bmspKSB7XHJcbiAgICAgICAgICAgIG1pZGRsZXdhcmVBcnJheS5wdXNoKHRodW5rTWlkZGxld2FyZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBtaWRkbGV3YXJlQXJyYXkucHVzaCh0aHVua01pZGRsZXdhcmUud2l0aEV4dHJhQXJndW1lbnQodGh1bmsuZXh0cmFBcmd1bWVudCkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICAgICBpZiAoaW1tdXRhYmxlQ2hlY2spIHtcclxuICAgICAgICAgICAgdmFyIGltbXV0YWJsZU9wdGlvbnMgPSB7fTtcclxuICAgICAgICAgICAgaWYgKCFpc0Jvb2xlYW4oaW1tdXRhYmxlQ2hlY2spKSB7XHJcbiAgICAgICAgICAgICAgICBpbW11dGFibGVPcHRpb25zID0gaW1tdXRhYmxlQ2hlY2s7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbWlkZGxld2FyZUFycmF5LnVuc2hpZnQoY3JlYXRlSW1tdXRhYmxlU3RhdGVJbnZhcmlhbnRNaWRkbGV3YXJlKGltbXV0YWJsZU9wdGlvbnMpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHNlcmlhbGl6YWJsZUNoZWNrKSB7XHJcbiAgICAgICAgICAgIHZhciBzZXJpYWxpemFibGVPcHRpb25zID0ge307XHJcbiAgICAgICAgICAgIGlmICghaXNCb29sZWFuKHNlcmlhbGl6YWJsZUNoZWNrKSkge1xyXG4gICAgICAgICAgICAgICAgc2VyaWFsaXphYmxlT3B0aW9ucyA9IHNlcmlhbGl6YWJsZUNoZWNrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG1pZGRsZXdhcmVBcnJheS5wdXNoKGNyZWF0ZVNlcmlhbGl6YWJsZVN0YXRlSW52YXJpYW50TWlkZGxld2FyZShzZXJpYWxpemFibGVPcHRpb25zKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG1pZGRsZXdhcmVBcnJheTtcclxufVxyXG4vLyBzcmMvY29uZmlndXJlU3RvcmUudHNcclxudmFyIElTX1BST0RVQ1RJT04gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCI7XHJcbmZ1bmN0aW9uIGNvbmZpZ3VyZVN0b3JlKG9wdGlvbnMpIHtcclxuICAgIHZhciBjdXJyaWVkR2V0RGVmYXVsdE1pZGRsZXdhcmUgPSBjdXJyeUdldERlZmF1bHRNaWRkbGV3YXJlKCk7XHJcbiAgICB2YXIgX2MgPSBvcHRpb25zIHx8IHt9LCBfZCA9IF9jLnJlZHVjZXIsIHJlZHVjZXIgPSBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QsIF9lID0gX2MubWlkZGxld2FyZSwgbWlkZGxld2FyZSA9IF9lID09PSB2b2lkIDAgPyBjdXJyaWVkR2V0RGVmYXVsdE1pZGRsZXdhcmUoKSA6IF9lLCBfZiA9IF9jLmRldlRvb2xzLCBkZXZUb29scyA9IF9mID09PSB2b2lkIDAgPyB0cnVlIDogX2YsIF9nID0gX2MucHJlbG9hZGVkU3RhdGUsIHByZWxvYWRlZFN0YXRlID0gX2cgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9nLCBfaCA9IF9jLmVuaGFuY2VycywgZW5oYW5jZXJzID0gX2ggPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9oO1xyXG4gICAgdmFyIHJvb3RSZWR1Y2VyO1xyXG4gICAgaWYgKHR5cGVvZiByZWR1Y2VyID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICByb290UmVkdWNlciA9IHJlZHVjZXI7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChpc1BsYWluT2JqZWN0KHJlZHVjZXIpKSB7XHJcbiAgICAgICAgcm9vdFJlZHVjZXIgPSBjb21iaW5lUmVkdWNlcnMocmVkdWNlcik7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1wicmVkdWNlclwiIGlzIGEgcmVxdWlyZWQgYXJndW1lbnQsIGFuZCBtdXN0IGJlIGEgZnVuY3Rpb24gb3IgYW4gb2JqZWN0IG9mIGZ1bmN0aW9ucyB0aGF0IGNhbiBiZSBwYXNzZWQgdG8gY29tYmluZVJlZHVjZXJzJyk7XHJcbiAgICB9XHJcbiAgICB2YXIgZmluYWxNaWRkbGV3YXJlID0gbWlkZGxld2FyZTtcclxuICAgIGlmICh0eXBlb2YgZmluYWxNaWRkbGV3YXJlID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICBmaW5hbE1pZGRsZXdhcmUgPSBmaW5hbE1pZGRsZXdhcmUoY3VycmllZEdldERlZmF1bHRNaWRkbGV3YXJlKTtcclxuICAgICAgICBpZiAoIUlTX1BST0RVQ1RJT04gJiYgIUFycmF5LmlzQXJyYXkoZmluYWxNaWRkbGV3YXJlKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ3aGVuIHVzaW5nIGEgbWlkZGxld2FyZSBidWlsZGVyIGZ1bmN0aW9uLCBhbiBhcnJheSBvZiBtaWRkbGV3YXJlIG11c3QgYmUgcmV0dXJuZWRcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKCFJU19QUk9EVUNUSU9OICYmIGZpbmFsTWlkZGxld2FyZS5zb21lKGZ1bmN0aW9uIChpdGVtKSB7IHJldHVybiB0eXBlb2YgaXRlbSAhPT0gXCJmdW5jdGlvblwiOyB9KSkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImVhY2ggbWlkZGxld2FyZSBwcm92aWRlZCB0byBjb25maWd1cmVTdG9yZSBtdXN0IGJlIGEgZnVuY3Rpb25cIik7XHJcbiAgICB9XHJcbiAgICB2YXIgbWlkZGxld2FyZUVuaGFuY2VyID0gYXBwbHlNaWRkbGV3YXJlLmFwcGx5KHZvaWQgMCwgZmluYWxNaWRkbGV3YXJlKTtcclxuICAgIHZhciBmaW5hbENvbXBvc2UgPSBjb21wb3NlMjtcclxuICAgIGlmIChkZXZUb29scykge1xyXG4gICAgICAgIGZpbmFsQ29tcG9zZSA9IGNvbXBvc2VXaXRoRGV2VG9vbHMoX19zcHJlYWRWYWx1ZXMoe1xyXG4gICAgICAgICAgICB0cmFjZTogIUlTX1BST0RVQ1RJT05cclxuICAgICAgICB9LCB0eXBlb2YgZGV2VG9vbHMgPT09IFwib2JqZWN0XCIgJiYgZGV2VG9vbHMpKTtcclxuICAgIH1cclxuICAgIHZhciBzdG9yZUVuaGFuY2VycyA9IFttaWRkbGV3YXJlRW5oYW5jZXJdO1xyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZW5oYW5jZXJzKSkge1xyXG4gICAgICAgIHN0b3JlRW5oYW5jZXJzID0gX19zcHJlYWRBcnJheShbbWlkZGxld2FyZUVuaGFuY2VyXSwgZW5oYW5jZXJzKTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHR5cGVvZiBlbmhhbmNlcnMgPT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgIHN0b3JlRW5oYW5jZXJzID0gZW5oYW5jZXJzKHN0b3JlRW5oYW5jZXJzKTtcclxuICAgIH1cclxuICAgIHZhciBjb21wb3NlZEVuaGFuY2VyID0gZmluYWxDb21wb3NlLmFwcGx5KHZvaWQgMCwgc3RvcmVFbmhhbmNlcnMpO1xyXG4gICAgcmV0dXJuIGNyZWF0ZVN0b3JlKHJvb3RSZWR1Y2VyLCBwcmVsb2FkZWRTdGF0ZSwgY29tcG9zZWRFbmhhbmNlcik7XHJcbn1cclxuLy8gc3JjL2NyZWF0ZUFjdGlvbi50c1xyXG5mdW5jdGlvbiBjcmVhdGVBY3Rpb24odHlwZSwgcHJlcGFyZUFjdGlvbikge1xyXG4gICAgZnVuY3Rpb24gYWN0aW9uQ3JlYXRvcigpIHtcclxuICAgICAgICB2YXIgYXJncyA9IFtdO1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHByZXBhcmVBY3Rpb24pIHtcclxuICAgICAgICAgICAgdmFyIHByZXBhcmVkID0gcHJlcGFyZUFjdGlvbi5hcHBseSh2b2lkIDAsIGFyZ3MpO1xyXG4gICAgICAgICAgICBpZiAoIXByZXBhcmVkKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJwcmVwYXJlQWN0aW9uIGRpZCBub3QgcmV0dXJuIGFuIG9iamVjdFwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe1xyXG4gICAgICAgICAgICAgICAgdHlwZTogdHlwZSxcclxuICAgICAgICAgICAgICAgIHBheWxvYWQ6IHByZXBhcmVkLnBheWxvYWRcclxuICAgICAgICAgICAgfSwgXCJtZXRhXCIgaW4gcHJlcGFyZWQgJiYgeyBtZXRhOiBwcmVwYXJlZC5tZXRhIH0pLCBcImVycm9yXCIgaW4gcHJlcGFyZWQgJiYgeyBlcnJvcjogcHJlcGFyZWQuZXJyb3IgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB7IHR5cGU6IHR5cGUsIHBheWxvYWQ6IGFyZ3NbMF0gfTtcclxuICAgIH1cclxuICAgIGFjdGlvbkNyZWF0b3IudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBcIlwiICsgdHlwZTsgfTtcclxuICAgIGFjdGlvbkNyZWF0b3IudHlwZSA9IHR5cGU7XHJcbiAgICBhY3Rpb25DcmVhdG9yLm1hdGNoID0gZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnR5cGUgPT09IHR5cGU7IH07XHJcbiAgICByZXR1cm4gYWN0aW9uQ3JlYXRvcjtcclxufVxyXG5mdW5jdGlvbiBpc0ZTQShhY3Rpb24pIHtcclxuICAgIHJldHVybiBpc1BsYWluT2JqZWN0KGFjdGlvbikgJiYgdHlwZW9mIGFjdGlvbi50eXBlID09PSBcInN0cmluZ1wiICYmIE9iamVjdC5rZXlzKGFjdGlvbikuZXZlcnkoaXNWYWxpZEtleSk7XHJcbn1cclxuZnVuY3Rpb24gaXNWYWxpZEtleShrZXkpIHtcclxuICAgIHJldHVybiBbXCJ0eXBlXCIsIFwicGF5bG9hZFwiLCBcImVycm9yXCIsIFwibWV0YVwiXS5pbmRleE9mKGtleSkgPiAtMTtcclxufVxyXG5mdW5jdGlvbiBnZXRUeXBlKGFjdGlvbkNyZWF0b3IpIHtcclxuICAgIHJldHVybiBcIlwiICsgYWN0aW9uQ3JlYXRvcjtcclxufVxyXG4vLyBzcmMvY3JlYXRlUmVkdWNlci50c1xyXG5pbXBvcnQgY3JlYXRlTmV4dFN0YXRlMiwgeyBpc0RyYWZ0IGFzIGlzRHJhZnQyLCBpc0RyYWZ0YWJsZSBhcyBpc0RyYWZ0YWJsZTIgfSBmcm9tIFwiaW1tZXJcIjtcclxuLy8gc3JjL21hcEJ1aWxkZXJzLnRzXHJcbmZ1bmN0aW9uIGV4ZWN1dGVSZWR1Y2VyQnVpbGRlckNhbGxiYWNrKGJ1aWxkZXJDYWxsYmFjaykge1xyXG4gICAgdmFyIGFjdGlvbnNNYXAgPSB7fTtcclxuICAgIHZhciBhY3Rpb25NYXRjaGVycyA9IFtdO1xyXG4gICAgdmFyIGRlZmF1bHRDYXNlUmVkdWNlcjtcclxuICAgIHZhciBidWlsZGVyID0ge1xyXG4gICAgICAgIGFkZENhc2U6IGZ1bmN0aW9uICh0eXBlT3JBY3Rpb25DcmVhdG9yLCByZWR1Y2VyKSB7XHJcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICAgICAgICAgICAgIGlmIChhY3Rpb25NYXRjaGVycy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiYGJ1aWxkZXIuYWRkQ2FzZWAgc2hvdWxkIG9ubHkgYmUgY2FsbGVkIGJlZm9yZSBjYWxsaW5nIGBidWlsZGVyLmFkZE1hdGNoZXJgXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGRlZmF1bHRDYXNlUmVkdWNlcikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImBidWlsZGVyLmFkZENhc2VgIHNob3VsZCBvbmx5IGJlIGNhbGxlZCBiZWZvcmUgY2FsbGluZyBgYnVpbGRlci5hZGREZWZhdWx0Q2FzZWBcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIHR5cGUgPSB0eXBlb2YgdHlwZU9yQWN0aW9uQ3JlYXRvciA9PT0gXCJzdHJpbmdcIiA/IHR5cGVPckFjdGlvbkNyZWF0b3IgOiB0eXBlT3JBY3Rpb25DcmVhdG9yLnR5cGU7XHJcbiAgICAgICAgICAgIGlmICh0eXBlIGluIGFjdGlvbnNNYXApIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImFkZENhc2UgY2Fubm90IGJlIGNhbGxlZCB3aXRoIHR3byByZWR1Y2VycyBmb3IgdGhlIHNhbWUgYWN0aW9uIHR5cGVcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYWN0aW9uc01hcFt0eXBlXSA9IHJlZHVjZXI7XHJcbiAgICAgICAgICAgIHJldHVybiBidWlsZGVyO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYWRkTWF0Y2hlcjogZnVuY3Rpb24gKG1hdGNoZXIsIHJlZHVjZXIpIHtcclxuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gICAgICAgICAgICAgICAgaWYgKGRlZmF1bHRDYXNlUmVkdWNlcikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImBidWlsZGVyLmFkZE1hdGNoZXJgIHNob3VsZCBvbmx5IGJlIGNhbGxlZCBiZWZvcmUgY2FsbGluZyBgYnVpbGRlci5hZGREZWZhdWx0Q2FzZWBcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYWN0aW9uTWF0Y2hlcnMucHVzaCh7IG1hdGNoZXI6IG1hdGNoZXIsIHJlZHVjZXI6IHJlZHVjZXIgfSk7XHJcbiAgICAgICAgICAgIHJldHVybiBidWlsZGVyO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYWRkRGVmYXVsdENhc2U6IGZ1bmN0aW9uIChyZWR1Y2VyKSB7XHJcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICAgICAgICAgICAgIGlmIChkZWZhdWx0Q2FzZVJlZHVjZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJgYnVpbGRlci5hZGREZWZhdWx0Q2FzZWAgY2FuIG9ubHkgYmUgY2FsbGVkIG9uY2VcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZGVmYXVsdENhc2VSZWR1Y2VyID0gcmVkdWNlcjtcclxuICAgICAgICAgICAgcmV0dXJuIGJ1aWxkZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGJ1aWxkZXJDYWxsYmFjayhidWlsZGVyKTtcclxuICAgIHJldHVybiBbYWN0aW9uc01hcCwgYWN0aW9uTWF0Y2hlcnMsIGRlZmF1bHRDYXNlUmVkdWNlcl07XHJcbn1cclxuLy8gc3JjL2NyZWF0ZVJlZHVjZXIudHNcclxuZnVuY3Rpb24gaXNTdGF0ZUZ1bmN0aW9uKHgpIHtcclxuICAgIHJldHVybiB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiO1xyXG59XHJcbmZ1bmN0aW9uIGNyZWF0ZVJlZHVjZXIoaW5pdGlhbFN0YXRlLCBtYXBPckJ1aWxkZXJDYWxsYmFjaywgYWN0aW9uTWF0Y2hlcnMsIGRlZmF1bHRDYXNlUmVkdWNlcikge1xyXG4gICAgaWYgKGFjdGlvbk1hdGNoZXJzID09PSB2b2lkIDApIHsgYWN0aW9uTWF0Y2hlcnMgPSBbXTsgfVxyXG4gICAgdmFyIF9jID0gdHlwZW9mIG1hcE9yQnVpbGRlckNhbGxiYWNrID09PSBcImZ1bmN0aW9uXCIgPyBleGVjdXRlUmVkdWNlckJ1aWxkZXJDYWxsYmFjayhtYXBPckJ1aWxkZXJDYWxsYmFjaykgOiBbbWFwT3JCdWlsZGVyQ2FsbGJhY2ssIGFjdGlvbk1hdGNoZXJzLCBkZWZhdWx0Q2FzZVJlZHVjZXJdLCBhY3Rpb25zTWFwID0gX2NbMF0sIGZpbmFsQWN0aW9uTWF0Y2hlcnMgPSBfY1sxXSwgZmluYWxEZWZhdWx0Q2FzZVJlZHVjZXIgPSBfY1syXTtcclxuICAgIHZhciBnZXRJbml0aWFsU3RhdGU7XHJcbiAgICBpZiAoaXNTdGF0ZUZ1bmN0aW9uKGluaXRpYWxTdGF0ZSkpIHtcclxuICAgICAgICBnZXRJbml0aWFsU3RhdGUgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBmcmVlemVEcmFmdGFibGUoaW5pdGlhbFN0YXRlKCkpOyB9O1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgdmFyIGZyb3plbkluaXRpYWxTdGF0ZV8xID0gZnJlZXplRHJhZnRhYmxlKGluaXRpYWxTdGF0ZSk7XHJcbiAgICAgICAgZ2V0SW5pdGlhbFN0YXRlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gZnJvemVuSW5pdGlhbFN0YXRlXzE7IH07XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiByZWR1Y2VyKHN0YXRlLCBhY3Rpb24pIHtcclxuICAgICAgICBpZiAoc3RhdGUgPT09IHZvaWQgMCkgeyBzdGF0ZSA9IGdldEluaXRpYWxTdGF0ZSgpOyB9XHJcbiAgICAgICAgdmFyIGNhc2VSZWR1Y2VycyA9IF9fc3ByZWFkQXJyYXkoW1xyXG4gICAgICAgICAgICBhY3Rpb25zTWFwW2FjdGlvbi50eXBlXVxyXG4gICAgICAgIF0sIGZpbmFsQWN0aW9uTWF0Y2hlcnMuZmlsdGVyKGZ1bmN0aW9uIChfYykge1xyXG4gICAgICAgICAgICB2YXIgbWF0Y2hlciA9IF9jLm1hdGNoZXI7XHJcbiAgICAgICAgICAgIHJldHVybiBtYXRjaGVyKGFjdGlvbik7XHJcbiAgICAgICAgfSkubWFwKGZ1bmN0aW9uIChfYykge1xyXG4gICAgICAgICAgICB2YXIgcmVkdWNlcjIgPSBfYy5yZWR1Y2VyO1xyXG4gICAgICAgICAgICByZXR1cm4gcmVkdWNlcjI7XHJcbiAgICAgICAgfSkpO1xyXG4gICAgICAgIGlmIChjYXNlUmVkdWNlcnMuZmlsdGVyKGZ1bmN0aW9uIChjcikgeyByZXR1cm4gISFjcjsgfSkubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIGNhc2VSZWR1Y2VycyA9IFtmaW5hbERlZmF1bHRDYXNlUmVkdWNlcl07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBjYXNlUmVkdWNlcnMucmVkdWNlKGZ1bmN0aW9uIChwcmV2aW91c1N0YXRlLCBjYXNlUmVkdWNlcikge1xyXG4gICAgICAgICAgICBpZiAoY2FzZVJlZHVjZXIpIHtcclxuICAgICAgICAgICAgICAgIGlmIChpc0RyYWZ0MihwcmV2aW91c1N0YXRlKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBkcmFmdCA9IHByZXZpb3VzU3RhdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IGNhc2VSZWR1Y2VyKGRyYWZ0LCBhY3Rpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgPT09IHZvaWQgMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJldmlvdXNTdGF0ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKCFpc0RyYWZ0YWJsZTIocHJldmlvdXNTdGF0ZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gY2FzZVJlZHVjZXIocHJldmlvdXNTdGF0ZSwgYWN0aW9uKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0ID09PSB2b2lkIDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByZXZpb3VzU3RhdGUgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcmV2aW91c1N0YXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IEVycm9yKFwiQSBjYXNlIHJlZHVjZXIgb24gYSBub24tZHJhZnRhYmxlIHZhbHVlIG11c3Qgbm90IHJldHVybiB1bmRlZmluZWRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlTmV4dFN0YXRlMihwcmV2aW91c1N0YXRlLCBmdW5jdGlvbiAoZHJhZnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhc2VSZWR1Y2VyKGRyYWZ0LCBhY3Rpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBwcmV2aW91c1N0YXRlO1xyXG4gICAgICAgIH0sIHN0YXRlKTtcclxuICAgIH1cclxuICAgIHJlZHVjZXIuZ2V0SW5pdGlhbFN0YXRlID0gZ2V0SW5pdGlhbFN0YXRlO1xyXG4gICAgcmV0dXJuIHJlZHVjZXI7XHJcbn1cclxuLy8gc3JjL2NyZWF0ZVNsaWNlLnRzXHJcbmZ1bmN0aW9uIGdldFR5cGUyKHNsaWNlLCBhY3Rpb25LZXkpIHtcclxuICAgIHJldHVybiBzbGljZSArIFwiL1wiICsgYWN0aW9uS2V5O1xyXG59XHJcbmZ1bmN0aW9uIGNyZWF0ZVNsaWNlKG9wdGlvbnMpIHtcclxuICAgIHZhciBuYW1lID0gb3B0aW9ucy5uYW1lO1xyXG4gICAgaWYgKCFuYW1lKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiYG5hbWVgIGlzIGEgcmVxdWlyZWQgb3B0aW9uIGZvciBjcmVhdGVTbGljZVwiKTtcclxuICAgIH1cclxuICAgIGlmICh0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiKSB7XHJcbiAgICAgICAgaWYgKG9wdGlvbnMuaW5pdGlhbFN0YXRlID09PSB2b2lkIDApIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIllvdSBtdXN0IHByb3ZpZGUgYW4gYGluaXRpYWxTdGF0ZWAgdmFsdWUgdGhhdCBpcyBub3QgYHVuZGVmaW5lZGAuIFlvdSBtYXkgaGF2ZSBtaXNzcGVsbGVkIGBpbml0aWFsU3RhdGVgXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHZhciBpbml0aWFsU3RhdGUgPSB0eXBlb2Ygb3B0aW9ucy5pbml0aWFsU3RhdGUgPT0gXCJmdW5jdGlvblwiID8gb3B0aW9ucy5pbml0aWFsU3RhdGUgOiBmcmVlemVEcmFmdGFibGUob3B0aW9ucy5pbml0aWFsU3RhdGUpO1xyXG4gICAgdmFyIHJlZHVjZXJzID0gb3B0aW9ucy5yZWR1Y2VycyB8fCB7fTtcclxuICAgIHZhciByZWR1Y2VyTmFtZXMgPSBPYmplY3Qua2V5cyhyZWR1Y2Vycyk7XHJcbiAgICB2YXIgc2xpY2VDYXNlUmVkdWNlcnNCeU5hbWUgPSB7fTtcclxuICAgIHZhciBzbGljZUNhc2VSZWR1Y2Vyc0J5VHlwZSA9IHt9O1xyXG4gICAgdmFyIGFjdGlvbkNyZWF0b3JzID0ge307XHJcbiAgICByZWR1Y2VyTmFtZXMuZm9yRWFjaChmdW5jdGlvbiAocmVkdWNlck5hbWUpIHtcclxuICAgICAgICB2YXIgbWF5YmVSZWR1Y2VyV2l0aFByZXBhcmUgPSByZWR1Y2Vyc1tyZWR1Y2VyTmFtZV07XHJcbiAgICAgICAgdmFyIHR5cGUgPSBnZXRUeXBlMihuYW1lLCByZWR1Y2VyTmFtZSk7XHJcbiAgICAgICAgdmFyIGNhc2VSZWR1Y2VyO1xyXG4gICAgICAgIHZhciBwcmVwYXJlQ2FsbGJhY2s7XHJcbiAgICAgICAgaWYgKFwicmVkdWNlclwiIGluIG1heWJlUmVkdWNlcldpdGhQcmVwYXJlKSB7XHJcbiAgICAgICAgICAgIGNhc2VSZWR1Y2VyID0gbWF5YmVSZWR1Y2VyV2l0aFByZXBhcmUucmVkdWNlcjtcclxuICAgICAgICAgICAgcHJlcGFyZUNhbGxiYWNrID0gbWF5YmVSZWR1Y2VyV2l0aFByZXBhcmUucHJlcGFyZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGNhc2VSZWR1Y2VyID0gbWF5YmVSZWR1Y2VyV2l0aFByZXBhcmU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNsaWNlQ2FzZVJlZHVjZXJzQnlOYW1lW3JlZHVjZXJOYW1lXSA9IGNhc2VSZWR1Y2VyO1xyXG4gICAgICAgIHNsaWNlQ2FzZVJlZHVjZXJzQnlUeXBlW3R5cGVdID0gY2FzZVJlZHVjZXI7XHJcbiAgICAgICAgYWN0aW9uQ3JlYXRvcnNbcmVkdWNlck5hbWVdID0gcHJlcGFyZUNhbGxiYWNrID8gY3JlYXRlQWN0aW9uKHR5cGUsIHByZXBhcmVDYWxsYmFjaykgOiBjcmVhdGVBY3Rpb24odHlwZSk7XHJcbiAgICB9KTtcclxuICAgIGZ1bmN0aW9uIGJ1aWxkUmVkdWNlcigpIHtcclxuICAgICAgICB2YXIgX2MgPSB0eXBlb2Ygb3B0aW9ucy5leHRyYVJlZHVjZXJzID09PSBcImZ1bmN0aW9uXCIgPyBleGVjdXRlUmVkdWNlckJ1aWxkZXJDYWxsYmFjayhvcHRpb25zLmV4dHJhUmVkdWNlcnMpIDogW29wdGlvbnMuZXh0cmFSZWR1Y2Vyc10sIF9kID0gX2NbMF0sIGV4dHJhUmVkdWNlcnMgPSBfZCA9PT0gdm9pZCAwID8ge30gOiBfZCwgX2UgPSBfY1sxXSwgYWN0aW9uTWF0Y2hlcnMgPSBfZSA9PT0gdm9pZCAwID8gW10gOiBfZSwgX2YgPSBfY1syXSwgZGVmYXVsdENhc2VSZWR1Y2VyID0gX2YgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9mO1xyXG4gICAgICAgIHZhciBmaW5hbENhc2VSZWR1Y2VycyA9IF9fc3ByZWFkVmFsdWVzKF9fc3ByZWFkVmFsdWVzKHt9LCBleHRyYVJlZHVjZXJzKSwgc2xpY2VDYXNlUmVkdWNlcnNCeVR5cGUpO1xyXG4gICAgICAgIHJldHVybiBjcmVhdGVSZWR1Y2VyKGluaXRpYWxTdGF0ZSwgZmluYWxDYXNlUmVkdWNlcnMsIGFjdGlvbk1hdGNoZXJzLCBkZWZhdWx0Q2FzZVJlZHVjZXIpO1xyXG4gICAgfVxyXG4gICAgdmFyIF9yZWR1Y2VyO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBuYW1lOiBuYW1lLFxyXG4gICAgICAgIHJlZHVjZXI6IGZ1bmN0aW9uIChzdGF0ZSwgYWN0aW9uKSB7XHJcbiAgICAgICAgICAgIGlmICghX3JlZHVjZXIpXHJcbiAgICAgICAgICAgICAgICBfcmVkdWNlciA9IGJ1aWxkUmVkdWNlcigpO1xyXG4gICAgICAgICAgICByZXR1cm4gX3JlZHVjZXIoc3RhdGUsIGFjdGlvbik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBhY3Rpb25zOiBhY3Rpb25DcmVhdG9ycyxcclxuICAgICAgICBjYXNlUmVkdWNlcnM6IHNsaWNlQ2FzZVJlZHVjZXJzQnlOYW1lLFxyXG4gICAgICAgIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoIV9yZWR1Y2VyKVxyXG4gICAgICAgICAgICAgICAgX3JlZHVjZXIgPSBidWlsZFJlZHVjZXIoKTtcclxuICAgICAgICAgICAgcmV0dXJuIF9yZWR1Y2VyLmdldEluaXRpYWxTdGF0ZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxuLy8gc3JjL2VudGl0aWVzL2VudGl0eV9zdGF0ZS50c1xyXG5mdW5jdGlvbiBnZXRJbml0aWFsRW50aXR5U3RhdGUoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGlkczogW10sXHJcbiAgICAgICAgZW50aXRpZXM6IHt9XHJcbiAgICB9O1xyXG59XHJcbmZ1bmN0aW9uIGNyZWF0ZUluaXRpYWxTdGF0ZUZhY3RvcnkoKSB7XHJcbiAgICBmdW5jdGlvbiBnZXRJbml0aWFsU3RhdGUoYWRkaXRpb25hbFN0YXRlKSB7XHJcbiAgICAgICAgaWYgKGFkZGl0aW9uYWxTdGF0ZSA9PT0gdm9pZCAwKSB7IGFkZGl0aW9uYWxTdGF0ZSA9IHt9OyB9XHJcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oZ2V0SW5pdGlhbEVudGl0eVN0YXRlKCksIGFkZGl0aW9uYWxTdGF0ZSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4geyBnZXRJbml0aWFsU3RhdGU6IGdldEluaXRpYWxTdGF0ZSB9O1xyXG59XHJcbi8vIHNyYy9lbnRpdGllcy9zdGF0ZV9zZWxlY3RvcnMudHNcclxuZnVuY3Rpb24gY3JlYXRlU2VsZWN0b3JzRmFjdG9yeSgpIHtcclxuICAgIGZ1bmN0aW9uIGdldFNlbGVjdG9ycyhzZWxlY3RTdGF0ZSkge1xyXG4gICAgICAgIHZhciBzZWxlY3RJZHMgPSBmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuIHN0YXRlLmlkczsgfTtcclxuICAgICAgICB2YXIgc2VsZWN0RW50aXRpZXMgPSBmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuIHN0YXRlLmVudGl0aWVzOyB9O1xyXG4gICAgICAgIHZhciBzZWxlY3RBbGwgPSBjcmVhdGVEcmFmdFNhZmVTZWxlY3RvcihzZWxlY3RJZHMsIHNlbGVjdEVudGl0aWVzLCBmdW5jdGlvbiAoaWRzLCBlbnRpdGllcykgeyByZXR1cm4gaWRzLm1hcChmdW5jdGlvbiAoaWQpIHsgcmV0dXJuIGVudGl0aWVzW2lkXTsgfSk7IH0pO1xyXG4gICAgICAgIHZhciBzZWxlY3RJZCA9IGZ1bmN0aW9uIChfLCBpZCkgeyByZXR1cm4gaWQ7IH07XHJcbiAgICAgICAgdmFyIHNlbGVjdEJ5SWQgPSBmdW5jdGlvbiAoZW50aXRpZXMsIGlkKSB7IHJldHVybiBlbnRpdGllc1tpZF07IH07XHJcbiAgICAgICAgdmFyIHNlbGVjdFRvdGFsID0gY3JlYXRlRHJhZnRTYWZlU2VsZWN0b3Ioc2VsZWN0SWRzLCBmdW5jdGlvbiAoaWRzKSB7IHJldHVybiBpZHMubGVuZ3RoOyB9KTtcclxuICAgICAgICBpZiAoIXNlbGVjdFN0YXRlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBzZWxlY3RJZHM6IHNlbGVjdElkcyxcclxuICAgICAgICAgICAgICAgIHNlbGVjdEVudGl0aWVzOiBzZWxlY3RFbnRpdGllcyxcclxuICAgICAgICAgICAgICAgIHNlbGVjdEFsbDogc2VsZWN0QWxsLFxyXG4gICAgICAgICAgICAgICAgc2VsZWN0VG90YWw6IHNlbGVjdFRvdGFsLFxyXG4gICAgICAgICAgICAgICAgc2VsZWN0QnlJZDogY3JlYXRlRHJhZnRTYWZlU2VsZWN0b3Ioc2VsZWN0RW50aXRpZXMsIHNlbGVjdElkLCBzZWxlY3RCeUlkKVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgc2VsZWN0R2xvYmFsaXplZEVudGl0aWVzID0gY3JlYXRlRHJhZnRTYWZlU2VsZWN0b3Ioc2VsZWN0U3RhdGUsIHNlbGVjdEVudGl0aWVzKTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBzZWxlY3RJZHM6IGNyZWF0ZURyYWZ0U2FmZVNlbGVjdG9yKHNlbGVjdFN0YXRlLCBzZWxlY3RJZHMpLFxyXG4gICAgICAgICAgICBzZWxlY3RFbnRpdGllczogc2VsZWN0R2xvYmFsaXplZEVudGl0aWVzLFxyXG4gICAgICAgICAgICBzZWxlY3RBbGw6IGNyZWF0ZURyYWZ0U2FmZVNlbGVjdG9yKHNlbGVjdFN0YXRlLCBzZWxlY3RBbGwpLFxyXG4gICAgICAgICAgICBzZWxlY3RUb3RhbDogY3JlYXRlRHJhZnRTYWZlU2VsZWN0b3Ioc2VsZWN0U3RhdGUsIHNlbGVjdFRvdGFsKSxcclxuICAgICAgICAgICAgc2VsZWN0QnlJZDogY3JlYXRlRHJhZnRTYWZlU2VsZWN0b3Ioc2VsZWN0R2xvYmFsaXplZEVudGl0aWVzLCBzZWxlY3RJZCwgc2VsZWN0QnlJZClcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHsgZ2V0U2VsZWN0b3JzOiBnZXRTZWxlY3RvcnMgfTtcclxufVxyXG4vLyBzcmMvZW50aXRpZXMvc3RhdGVfYWRhcHRlci50c1xyXG5pbXBvcnQgY3JlYXRlTmV4dFN0YXRlMywgeyBpc0RyYWZ0IGFzIGlzRHJhZnQzIH0gZnJvbSBcImltbWVyXCI7XHJcbmZ1bmN0aW9uIGNyZWF0ZVNpbmdsZUFyZ3VtZW50U3RhdGVPcGVyYXRvcihtdXRhdG9yKSB7XHJcbiAgICB2YXIgb3BlcmF0b3IgPSBjcmVhdGVTdGF0ZU9wZXJhdG9yKGZ1bmN0aW9uIChfLCBzdGF0ZSkgeyByZXR1cm4gbXV0YXRvcihzdGF0ZSk7IH0pO1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIG9wZXJhdGlvbihzdGF0ZSkge1xyXG4gICAgICAgIHJldHVybiBvcGVyYXRvcihzdGF0ZSwgdm9pZCAwKTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gY3JlYXRlU3RhdGVPcGVyYXRvcihtdXRhdG9yKSB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gb3BlcmF0aW9uKHN0YXRlLCBhcmcpIHtcclxuICAgICAgICBmdW5jdGlvbiBpc1BheWxvYWRBY3Rpb25Bcmd1bWVudChhcmcyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBpc0ZTQShhcmcyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHJ1bk11dGF0b3IgPSBmdW5jdGlvbiAoZHJhZnQpIHtcclxuICAgICAgICAgICAgaWYgKGlzUGF5bG9hZEFjdGlvbkFyZ3VtZW50KGFyZykpIHtcclxuICAgICAgICAgICAgICAgIG11dGF0b3IoYXJnLnBheWxvYWQsIGRyYWZ0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIG11dGF0b3IoYXJnLCBkcmFmdCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmIChpc0RyYWZ0MyhzdGF0ZSkpIHtcclxuICAgICAgICAgICAgcnVuTXV0YXRvcihzdGF0ZSk7XHJcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVOZXh0U3RhdGUzKHN0YXRlLCBydW5NdXRhdG9yKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59XHJcbi8vIHNyYy9lbnRpdGllcy91dGlscy50c1xyXG5mdW5jdGlvbiBzZWxlY3RJZFZhbHVlKGVudGl0eSwgc2VsZWN0SWQpIHtcclxuICAgIHZhciBrZXkgPSBzZWxlY3RJZChlbnRpdHkpO1xyXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiAmJiBrZXkgPT09IHZvaWQgMCkge1xyXG4gICAgICAgIGNvbnNvbGUud2FybihcIlRoZSBlbnRpdHkgcGFzc2VkIHRvIHRoZSBgc2VsZWN0SWRgIGltcGxlbWVudGF0aW9uIHJldHVybmVkIHVuZGVmaW5lZC5cIiwgXCJZb3Ugc2hvdWxkIHByb2JhYmx5IHByb3ZpZGUgeW91ciBvd24gYHNlbGVjdElkYCBpbXBsZW1lbnRhdGlvbi5cIiwgXCJUaGUgZW50aXR5IHRoYXQgd2FzIHBhc3NlZDpcIiwgZW50aXR5LCBcIlRoZSBgc2VsZWN0SWRgIGltcGxlbWVudGF0aW9uOlwiLCBzZWxlY3RJZC50b1N0cmluZygpKTtcclxuICAgIH1cclxuICAgIHJldHVybiBrZXk7XHJcbn1cclxuZnVuY3Rpb24gZW5zdXJlRW50aXRpZXNBcnJheShlbnRpdGllcykge1xyXG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGVudGl0aWVzKSkge1xyXG4gICAgICAgIGVudGl0aWVzID0gT2JqZWN0LnZhbHVlcyhlbnRpdGllcyk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZW50aXRpZXM7XHJcbn1cclxuZnVuY3Rpb24gc3BsaXRBZGRlZFVwZGF0ZWRFbnRpdGllcyhuZXdFbnRpdGllcywgc2VsZWN0SWQsIHN0YXRlKSB7XHJcbiAgICBuZXdFbnRpdGllcyA9IGVuc3VyZUVudGl0aWVzQXJyYXkobmV3RW50aXRpZXMpO1xyXG4gICAgdmFyIGFkZGVkID0gW107XHJcbiAgICB2YXIgdXBkYXRlZCA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwLCBuZXdFbnRpdGllc18xID0gbmV3RW50aXRpZXM7IF9pIDwgbmV3RW50aXRpZXNfMS5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICB2YXIgZW50aXR5ID0gbmV3RW50aXRpZXNfMVtfaV07XHJcbiAgICAgICAgdmFyIGlkID0gc2VsZWN0SWRWYWx1ZShlbnRpdHksIHNlbGVjdElkKTtcclxuICAgICAgICBpZiAoaWQgaW4gc3RhdGUuZW50aXRpZXMpIHtcclxuICAgICAgICAgICAgdXBkYXRlZC5wdXNoKHsgaWQ6IGlkLCBjaGFuZ2VzOiBlbnRpdHkgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBhZGRlZC5wdXNoKGVudGl0eSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIFthZGRlZCwgdXBkYXRlZF07XHJcbn1cclxuLy8gc3JjL2VudGl0aWVzL3Vuc29ydGVkX3N0YXRlX2FkYXB0ZXIudHNcclxuZnVuY3Rpb24gY3JlYXRlVW5zb3J0ZWRTdGF0ZUFkYXB0ZXIoc2VsZWN0SWQpIHtcclxuICAgIGZ1bmN0aW9uIGFkZE9uZU11dGFibHkoZW50aXR5LCBzdGF0ZSkge1xyXG4gICAgICAgIHZhciBrZXkgPSBzZWxlY3RJZFZhbHVlKGVudGl0eSwgc2VsZWN0SWQpO1xyXG4gICAgICAgIGlmIChrZXkgaW4gc3RhdGUuZW50aXRpZXMpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzdGF0ZS5pZHMucHVzaChrZXkpO1xyXG4gICAgICAgIHN0YXRlLmVudGl0aWVzW2tleV0gPSBlbnRpdHk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBhZGRNYW55TXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpIHtcclxuICAgICAgICBuZXdFbnRpdGllcyA9IGVuc3VyZUVudGl0aWVzQXJyYXkobmV3RW50aXRpZXMpO1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgbmV3RW50aXRpZXNfMiA9IG5ld0VudGl0aWVzOyBfaSA8IG5ld0VudGl0aWVzXzIubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBlbnRpdHkgPSBuZXdFbnRpdGllc18yW19pXTtcclxuICAgICAgICAgICAgYWRkT25lTXV0YWJseShlbnRpdHksIHN0YXRlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBzZXRPbmVNdXRhYmx5KGVudGl0eSwgc3RhdGUpIHtcclxuICAgICAgICB2YXIga2V5ID0gc2VsZWN0SWRWYWx1ZShlbnRpdHksIHNlbGVjdElkKTtcclxuICAgICAgICBpZiAoIShrZXkgaW4gc3RhdGUuZW50aXRpZXMpKSB7XHJcbiAgICAgICAgICAgIHN0YXRlLmlkcy5wdXNoKGtleSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHN0YXRlLmVudGl0aWVzW2tleV0gPSBlbnRpdHk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBzZXRNYW55TXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpIHtcclxuICAgICAgICBuZXdFbnRpdGllcyA9IGVuc3VyZUVudGl0aWVzQXJyYXkobmV3RW50aXRpZXMpO1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgbmV3RW50aXRpZXNfMyA9IG5ld0VudGl0aWVzOyBfaSA8IG5ld0VudGl0aWVzXzMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBlbnRpdHkgPSBuZXdFbnRpdGllc18zW19pXTtcclxuICAgICAgICAgICAgc2V0T25lTXV0YWJseShlbnRpdHksIHN0YXRlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBzZXRBbGxNdXRhYmx5KG5ld0VudGl0aWVzLCBzdGF0ZSkge1xyXG4gICAgICAgIG5ld0VudGl0aWVzID0gZW5zdXJlRW50aXRpZXNBcnJheShuZXdFbnRpdGllcyk7XHJcbiAgICAgICAgc3RhdGUuaWRzID0gW107XHJcbiAgICAgICAgc3RhdGUuZW50aXRpZXMgPSB7fTtcclxuICAgICAgICBhZGRNYW55TXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gcmVtb3ZlT25lTXV0YWJseShrZXksIHN0YXRlKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlbW92ZU1hbnlNdXRhYmx5KFtrZXldLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiByZW1vdmVNYW55TXV0YWJseShrZXlzLCBzdGF0ZSkge1xyXG4gICAgICAgIHZhciBkaWRNdXRhdGUgPSBmYWxzZTtcclxuICAgICAgICBrZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xyXG4gICAgICAgICAgICBpZiAoa2V5IGluIHN0YXRlLmVudGl0aWVzKSB7XHJcbiAgICAgICAgICAgICAgICBkZWxldGUgc3RhdGUuZW50aXRpZXNba2V5XTtcclxuICAgICAgICAgICAgICAgIGRpZE11dGF0ZSA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAoZGlkTXV0YXRlKSB7XHJcbiAgICAgICAgICAgIHN0YXRlLmlkcyA9IHN0YXRlLmlkcy5maWx0ZXIoZnVuY3Rpb24gKGlkKSB7IHJldHVybiBpZCBpbiBzdGF0ZS5lbnRpdGllczsgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gcmVtb3ZlQWxsTXV0YWJseShzdGF0ZSkge1xyXG4gICAgICAgIE9iamVjdC5hc3NpZ24oc3RhdGUsIHtcclxuICAgICAgICAgICAgaWRzOiBbXSxcclxuICAgICAgICAgICAgZW50aXRpZXM6IHt9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiB0YWtlTmV3S2V5KGtleXMsIHVwZGF0ZSwgc3RhdGUpIHtcclxuICAgICAgICB2YXIgb3JpZ2luYWwyID0gc3RhdGUuZW50aXRpZXNbdXBkYXRlLmlkXTtcclxuICAgICAgICB2YXIgdXBkYXRlZCA9IE9iamVjdC5hc3NpZ24oe30sIG9yaWdpbmFsMiwgdXBkYXRlLmNoYW5nZXMpO1xyXG4gICAgICAgIHZhciBuZXdLZXkgPSBzZWxlY3RJZFZhbHVlKHVwZGF0ZWQsIHNlbGVjdElkKTtcclxuICAgICAgICB2YXIgaGFzTmV3S2V5ID0gbmV3S2V5ICE9PSB1cGRhdGUuaWQ7XHJcbiAgICAgICAgaWYgKGhhc05ld0tleSkge1xyXG4gICAgICAgICAgICBrZXlzW3VwZGF0ZS5pZF0gPSBuZXdLZXk7XHJcbiAgICAgICAgICAgIGRlbGV0ZSBzdGF0ZS5lbnRpdGllc1t1cGRhdGUuaWRdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzdGF0ZS5lbnRpdGllc1tuZXdLZXldID0gdXBkYXRlZDtcclxuICAgICAgICByZXR1cm4gaGFzTmV3S2V5O1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gdXBkYXRlT25lTXV0YWJseSh1cGRhdGUsIHN0YXRlKSB7XHJcbiAgICAgICAgcmV0dXJuIHVwZGF0ZU1hbnlNdXRhYmx5KFt1cGRhdGVdLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiB1cGRhdGVNYW55TXV0YWJseSh1cGRhdGVzLCBzdGF0ZSkge1xyXG4gICAgICAgIHZhciBuZXdLZXlzID0ge307XHJcbiAgICAgICAgdmFyIHVwZGF0ZXNQZXJFbnRpdHkgPSB7fTtcclxuICAgICAgICB1cGRhdGVzLmZvckVhY2goZnVuY3Rpb24gKHVwZGF0ZSkge1xyXG4gICAgICAgICAgICBpZiAodXBkYXRlLmlkIGluIHN0YXRlLmVudGl0aWVzKSB7XHJcbiAgICAgICAgICAgICAgICB1cGRhdGVzUGVyRW50aXR5W3VwZGF0ZS5pZF0gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWQ6IHVwZGF0ZS5pZCxcclxuICAgICAgICAgICAgICAgICAgICBjaGFuZ2VzOiBfX3NwcmVhZFZhbHVlcyhfX3NwcmVhZFZhbHVlcyh7fSwgdXBkYXRlc1BlckVudGl0eVt1cGRhdGUuaWRdID8gdXBkYXRlc1BlckVudGl0eVt1cGRhdGUuaWRdLmNoYW5nZXMgOiBudWxsKSwgdXBkYXRlLmNoYW5nZXMpXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdXBkYXRlcyA9IE9iamVjdC52YWx1ZXModXBkYXRlc1BlckVudGl0eSk7XHJcbiAgICAgICAgdmFyIGRpZE11dGF0ZUVudGl0aWVzID0gdXBkYXRlcy5sZW5ndGggPiAwO1xyXG4gICAgICAgIGlmIChkaWRNdXRhdGVFbnRpdGllcykge1xyXG4gICAgICAgICAgICB2YXIgZGlkTXV0YXRlSWRzID0gdXBkYXRlcy5maWx0ZXIoZnVuY3Rpb24gKHVwZGF0ZSkgeyByZXR1cm4gdGFrZU5ld0tleShuZXdLZXlzLCB1cGRhdGUsIHN0YXRlKTsgfSkubGVuZ3RoID4gMDtcclxuICAgICAgICAgICAgaWYgKGRpZE11dGF0ZUlkcykge1xyXG4gICAgICAgICAgICAgICAgc3RhdGUuaWRzID0gT2JqZWN0LmtleXMoc3RhdGUuZW50aXRpZXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gdXBzZXJ0T25lTXV0YWJseShlbnRpdHksIHN0YXRlKSB7XHJcbiAgICAgICAgcmV0dXJuIHVwc2VydE1hbnlNdXRhYmx5KFtlbnRpdHldLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiB1cHNlcnRNYW55TXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpIHtcclxuICAgICAgICB2YXIgX2MgPSBzcGxpdEFkZGVkVXBkYXRlZEVudGl0aWVzKG5ld0VudGl0aWVzLCBzZWxlY3RJZCwgc3RhdGUpLCBhZGRlZCA9IF9jWzBdLCB1cGRhdGVkID0gX2NbMV07XHJcbiAgICAgICAgdXBkYXRlTWFueU11dGFibHkodXBkYXRlZCwgc3RhdGUpO1xyXG4gICAgICAgIGFkZE1hbnlNdXRhYmx5KGFkZGVkLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHJlbW92ZUFsbDogY3JlYXRlU2luZ2xlQXJndW1lbnRTdGF0ZU9wZXJhdG9yKHJlbW92ZUFsbE11dGFibHkpLFxyXG4gICAgICAgIGFkZE9uZTogY3JlYXRlU3RhdGVPcGVyYXRvcihhZGRPbmVNdXRhYmx5KSxcclxuICAgICAgICBhZGRNYW55OiBjcmVhdGVTdGF0ZU9wZXJhdG9yKGFkZE1hbnlNdXRhYmx5KSxcclxuICAgICAgICBzZXRPbmU6IGNyZWF0ZVN0YXRlT3BlcmF0b3Ioc2V0T25lTXV0YWJseSksXHJcbiAgICAgICAgc2V0TWFueTogY3JlYXRlU3RhdGVPcGVyYXRvcihzZXRNYW55TXV0YWJseSksXHJcbiAgICAgICAgc2V0QWxsOiBjcmVhdGVTdGF0ZU9wZXJhdG9yKHNldEFsbE11dGFibHkpLFxyXG4gICAgICAgIHVwZGF0ZU9uZTogY3JlYXRlU3RhdGVPcGVyYXRvcih1cGRhdGVPbmVNdXRhYmx5KSxcclxuICAgICAgICB1cGRhdGVNYW55OiBjcmVhdGVTdGF0ZU9wZXJhdG9yKHVwZGF0ZU1hbnlNdXRhYmx5KSxcclxuICAgICAgICB1cHNlcnRPbmU6IGNyZWF0ZVN0YXRlT3BlcmF0b3IodXBzZXJ0T25lTXV0YWJseSksXHJcbiAgICAgICAgdXBzZXJ0TWFueTogY3JlYXRlU3RhdGVPcGVyYXRvcih1cHNlcnRNYW55TXV0YWJseSksXHJcbiAgICAgICAgcmVtb3ZlT25lOiBjcmVhdGVTdGF0ZU9wZXJhdG9yKHJlbW92ZU9uZU11dGFibHkpLFxyXG4gICAgICAgIHJlbW92ZU1hbnk6IGNyZWF0ZVN0YXRlT3BlcmF0b3IocmVtb3ZlTWFueU11dGFibHkpXHJcbiAgICB9O1xyXG59XHJcbi8vIHNyYy9lbnRpdGllcy9zb3J0ZWRfc3RhdGVfYWRhcHRlci50c1xyXG5mdW5jdGlvbiBjcmVhdGVTb3J0ZWRTdGF0ZUFkYXB0ZXIoc2VsZWN0SWQsIHNvcnQpIHtcclxuICAgIHZhciBfYyA9IGNyZWF0ZVVuc29ydGVkU3RhdGVBZGFwdGVyKHNlbGVjdElkKSwgcmVtb3ZlT25lID0gX2MucmVtb3ZlT25lLCByZW1vdmVNYW55ID0gX2MucmVtb3ZlTWFueSwgcmVtb3ZlQWxsID0gX2MucmVtb3ZlQWxsO1xyXG4gICAgZnVuY3Rpb24gYWRkT25lTXV0YWJseShlbnRpdHksIHN0YXRlKSB7XHJcbiAgICAgICAgcmV0dXJuIGFkZE1hbnlNdXRhYmx5KFtlbnRpdHldLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBhZGRNYW55TXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpIHtcclxuICAgICAgICBuZXdFbnRpdGllcyA9IGVuc3VyZUVudGl0aWVzQXJyYXkobmV3RW50aXRpZXMpO1xyXG4gICAgICAgIHZhciBtb2RlbHMgPSBuZXdFbnRpdGllcy5maWx0ZXIoZnVuY3Rpb24gKG1vZGVsKSB7IHJldHVybiAhKHNlbGVjdElkVmFsdWUobW9kZWwsIHNlbGVjdElkKSBpbiBzdGF0ZS5lbnRpdGllcyk7IH0pO1xyXG4gICAgICAgIGlmIChtb2RlbHMubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgIG1lcmdlKG1vZGVscywgc3RhdGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHNldE9uZU11dGFibHkoZW50aXR5LCBzdGF0ZSkge1xyXG4gICAgICAgIHJldHVybiBzZXRNYW55TXV0YWJseShbZW50aXR5XSwgc3RhdGUpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gc2V0TWFueU11dGFibHkobmV3RW50aXRpZXMsIHN0YXRlKSB7XHJcbiAgICAgICAgbmV3RW50aXRpZXMgPSBlbnN1cmVFbnRpdGllc0FycmF5KG5ld0VudGl0aWVzKTtcclxuICAgICAgICBpZiAobmV3RW50aXRpZXMubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgIG1lcmdlKG5ld0VudGl0aWVzLCBzdGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gc2V0QWxsTXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpIHtcclxuICAgICAgICBuZXdFbnRpdGllcyA9IGVuc3VyZUVudGl0aWVzQXJyYXkobmV3RW50aXRpZXMpO1xyXG4gICAgICAgIHN0YXRlLmVudGl0aWVzID0ge307XHJcbiAgICAgICAgc3RhdGUuaWRzID0gW107XHJcbiAgICAgICAgYWRkTWFueU11dGFibHkobmV3RW50aXRpZXMsIHN0YXRlKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHVwZGF0ZU9uZU11dGFibHkodXBkYXRlLCBzdGF0ZSkge1xyXG4gICAgICAgIHJldHVybiB1cGRhdGVNYW55TXV0YWJseShbdXBkYXRlXSwgc3RhdGUpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gdXBkYXRlTWFueU11dGFibHkodXBkYXRlcywgc3RhdGUpIHtcclxuICAgICAgICB2YXIgYXBwbGllZFVwZGF0ZXMgPSBmYWxzZTtcclxuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIHVwZGF0ZXNfMSA9IHVwZGF0ZXM7IF9pIDwgdXBkYXRlc18xLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICB2YXIgdXBkYXRlID0gdXBkYXRlc18xW19pXTtcclxuICAgICAgICAgICAgdmFyIGVudGl0eSA9IHN0YXRlLmVudGl0aWVzW3VwZGF0ZS5pZF07XHJcbiAgICAgICAgICAgIGlmICghZW50aXR5KSB7XHJcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBhcHBsaWVkVXBkYXRlcyA9IHRydWU7XHJcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oZW50aXR5LCB1cGRhdGUuY2hhbmdlcyk7XHJcbiAgICAgICAgICAgIHZhciBuZXdJZCA9IHNlbGVjdElkKGVudGl0eSk7XHJcbiAgICAgICAgICAgIGlmICh1cGRhdGUuaWQgIT09IG5ld0lkKSB7XHJcbiAgICAgICAgICAgICAgICBkZWxldGUgc3RhdGUuZW50aXRpZXNbdXBkYXRlLmlkXTtcclxuICAgICAgICAgICAgICAgIHN0YXRlLmVudGl0aWVzW25ld0lkXSA9IGVudGl0eTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoYXBwbGllZFVwZGF0ZXMpIHtcclxuICAgICAgICAgICAgcmVzb3J0RW50aXRpZXMoc3RhdGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHVwc2VydE9uZU11dGFibHkoZW50aXR5LCBzdGF0ZSkge1xyXG4gICAgICAgIHJldHVybiB1cHNlcnRNYW55TXV0YWJseShbZW50aXR5XSwgc3RhdGUpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gdXBzZXJ0TWFueU11dGFibHkobmV3RW50aXRpZXMsIHN0YXRlKSB7XHJcbiAgICAgICAgdmFyIF9jID0gc3BsaXRBZGRlZFVwZGF0ZWRFbnRpdGllcyhuZXdFbnRpdGllcywgc2VsZWN0SWQsIHN0YXRlKSwgYWRkZWQgPSBfY1swXSwgdXBkYXRlZCA9IF9jWzFdO1xyXG4gICAgICAgIHVwZGF0ZU1hbnlNdXRhYmx5KHVwZGF0ZWQsIHN0YXRlKTtcclxuICAgICAgICBhZGRNYW55TXV0YWJseShhZGRlZCwgc3RhdGUpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gYXJlQXJyYXlzRXF1YWwoYSwgYikge1xyXG4gICAgICAgIGlmIChhLmxlbmd0aCAhPT0gYi5sZW5ndGgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGEubGVuZ3RoICYmIGkgPCBiLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmIChhW2ldID09PSBiW2ldKSB7XHJcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gbWVyZ2UobW9kZWxzLCBzdGF0ZSkge1xyXG4gICAgICAgIG1vZGVscy5mb3JFYWNoKGZ1bmN0aW9uIChtb2RlbCkge1xyXG4gICAgICAgICAgICBzdGF0ZS5lbnRpdGllc1tzZWxlY3RJZChtb2RlbCldID0gbW9kZWw7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmVzb3J0RW50aXRpZXMoc3RhdGUpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gcmVzb3J0RW50aXRpZXMoc3RhdGUpIHtcclxuICAgICAgICB2YXIgYWxsRW50aXRpZXMgPSBPYmplY3QudmFsdWVzKHN0YXRlLmVudGl0aWVzKTtcclxuICAgICAgICBhbGxFbnRpdGllcy5zb3J0KHNvcnQpO1xyXG4gICAgICAgIHZhciBuZXdTb3J0ZWRJZHMgPSBhbGxFbnRpdGllcy5tYXAoc2VsZWN0SWQpO1xyXG4gICAgICAgIHZhciBpZHMgPSBzdGF0ZS5pZHM7XHJcbiAgICAgICAgaWYgKCFhcmVBcnJheXNFcXVhbChpZHMsIG5ld1NvcnRlZElkcykpIHtcclxuICAgICAgICAgICAgc3RhdGUuaWRzID0gbmV3U29ydGVkSWRzO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgcmVtb3ZlT25lOiByZW1vdmVPbmUsXHJcbiAgICAgICAgcmVtb3ZlTWFueTogcmVtb3ZlTWFueSxcclxuICAgICAgICByZW1vdmVBbGw6IHJlbW92ZUFsbCxcclxuICAgICAgICBhZGRPbmU6IGNyZWF0ZVN0YXRlT3BlcmF0b3IoYWRkT25lTXV0YWJseSksXHJcbiAgICAgICAgdXBkYXRlT25lOiBjcmVhdGVTdGF0ZU9wZXJhdG9yKHVwZGF0ZU9uZU11dGFibHkpLFxyXG4gICAgICAgIHVwc2VydE9uZTogY3JlYXRlU3RhdGVPcGVyYXRvcih1cHNlcnRPbmVNdXRhYmx5KSxcclxuICAgICAgICBzZXRPbmU6IGNyZWF0ZVN0YXRlT3BlcmF0b3Ioc2V0T25lTXV0YWJseSksXHJcbiAgICAgICAgc2V0TWFueTogY3JlYXRlU3RhdGVPcGVyYXRvcihzZXRNYW55TXV0YWJseSksXHJcbiAgICAgICAgc2V0QWxsOiBjcmVhdGVTdGF0ZU9wZXJhdG9yKHNldEFsbE11dGFibHkpLFxyXG4gICAgICAgIGFkZE1hbnk6IGNyZWF0ZVN0YXRlT3BlcmF0b3IoYWRkTWFueU11dGFibHkpLFxyXG4gICAgICAgIHVwZGF0ZU1hbnk6IGNyZWF0ZVN0YXRlT3BlcmF0b3IodXBkYXRlTWFueU11dGFibHkpLFxyXG4gICAgICAgIHVwc2VydE1hbnk6IGNyZWF0ZVN0YXRlT3BlcmF0b3IodXBzZXJ0TWFueU11dGFibHkpXHJcbiAgICB9O1xyXG59XHJcbi8vIHNyYy9lbnRpdGllcy9jcmVhdGVfYWRhcHRlci50c1xyXG5mdW5jdGlvbiBjcmVhdGVFbnRpdHlBZGFwdGVyKG9wdGlvbnMpIHtcclxuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XHJcbiAgICB2YXIgX2MgPSBfX3NwcmVhZFZhbHVlcyh7XHJcbiAgICAgICAgc29ydENvbXBhcmVyOiBmYWxzZSxcclxuICAgICAgICBzZWxlY3RJZDogZnVuY3Rpb24gKGluc3RhbmNlKSB7IHJldHVybiBpbnN0YW5jZS5pZDsgfVxyXG4gICAgfSwgb3B0aW9ucyksIHNlbGVjdElkID0gX2Muc2VsZWN0SWQsIHNvcnRDb21wYXJlciA9IF9jLnNvcnRDb21wYXJlcjtcclxuICAgIHZhciBzdGF0ZUZhY3RvcnkgPSBjcmVhdGVJbml0aWFsU3RhdGVGYWN0b3J5KCk7XHJcbiAgICB2YXIgc2VsZWN0b3JzRmFjdG9yeSA9IGNyZWF0ZVNlbGVjdG9yc0ZhY3RvcnkoKTtcclxuICAgIHZhciBzdGF0ZUFkYXB0ZXIgPSBzb3J0Q29tcGFyZXIgPyBjcmVhdGVTb3J0ZWRTdGF0ZUFkYXB0ZXIoc2VsZWN0SWQsIHNvcnRDb21wYXJlcikgOiBjcmVhdGVVbnNvcnRlZFN0YXRlQWRhcHRlcihzZWxlY3RJZCk7XHJcbiAgICByZXR1cm4gX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe1xyXG4gICAgICAgIHNlbGVjdElkOiBzZWxlY3RJZCxcclxuICAgICAgICBzb3J0Q29tcGFyZXI6IHNvcnRDb21wYXJlclxyXG4gICAgfSwgc3RhdGVGYWN0b3J5KSwgc2VsZWN0b3JzRmFjdG9yeSksIHN0YXRlQWRhcHRlcik7XHJcbn1cclxuLy8gc3JjL25hbm9pZC50c1xyXG52YXIgdXJsQWxwaGFiZXQgPSBcIk1vZHVsZVN5bWJoYXNPd25Qci0wMTIzNDU2Nzg5QUJDREVGR0hOUlZmZ2N0aVV2el9LcVlUSmtMeHBaWElqUVdcIjtcclxudmFyIG5hbm9pZCA9IGZ1bmN0aW9uIChzaXplKSB7XHJcbiAgICBpZiAoc2l6ZSA9PT0gdm9pZCAwKSB7IHNpemUgPSAyMTsgfVxyXG4gICAgdmFyIGlkID0gXCJcIjtcclxuICAgIHZhciBpID0gc2l6ZTtcclxuICAgIHdoaWxlIChpLS0pIHtcclxuICAgICAgICBpZCArPSB1cmxBbHBoYWJldFtNYXRoLnJhbmRvbSgpICogNjQgfCAwXTtcclxuICAgIH1cclxuICAgIHJldHVybiBpZDtcclxufTtcclxuLy8gc3JjL2NyZWF0ZUFzeW5jVGh1bmsudHNcclxudmFyIGNvbW1vblByb3BlcnRpZXMgPSBbXHJcbiAgICBcIm5hbWVcIixcclxuICAgIFwibWVzc2FnZVwiLFxyXG4gICAgXCJzdGFja1wiLFxyXG4gICAgXCJjb2RlXCJcclxuXTtcclxudmFyIFJlamVjdFdpdGhWYWx1ZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIFJlamVjdFdpdGhWYWx1ZShwYXlsb2FkLCBtZXRhKSB7XHJcbiAgICAgICAgdGhpcy5wYXlsb2FkID0gcGF5bG9hZDtcclxuICAgICAgICB0aGlzLm1ldGEgPSBtZXRhO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFJlamVjdFdpdGhWYWx1ZTtcclxufSgpKTtcclxudmFyIEZ1bGZpbGxXaXRoTWV0YSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIEZ1bGZpbGxXaXRoTWV0YShwYXlsb2FkLCBtZXRhKSB7XHJcbiAgICAgICAgdGhpcy5wYXlsb2FkID0gcGF5bG9hZDtcclxuICAgICAgICB0aGlzLm1ldGEgPSBtZXRhO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIEZ1bGZpbGxXaXRoTWV0YTtcclxufSgpKTtcclxudmFyIG1pbmlTZXJpYWxpemVFcnJvciA9IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJiB2YWx1ZSAhPT0gbnVsbCkge1xyXG4gICAgICAgIHZhciBzaW1wbGVFcnJvciA9IHt9O1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgY29tbW9uUHJvcGVydGllc18xID0gY29tbW9uUHJvcGVydGllczsgX2kgPCBjb21tb25Qcm9wZXJ0aWVzXzEubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBwcm9wZXJ0eSA9IGNvbW1vblByb3BlcnRpZXNfMVtfaV07XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWVbcHJvcGVydHldID09PSBcInN0cmluZ1wiKSB7XHJcbiAgICAgICAgICAgICAgICBzaW1wbGVFcnJvcltwcm9wZXJ0eV0gPSB2YWx1ZVtwcm9wZXJ0eV07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHNpbXBsZUVycm9yO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHsgbWVzc2FnZTogU3RyaW5nKHZhbHVlKSB9O1xyXG59O1xyXG5mdW5jdGlvbiBjcmVhdGVBc3luY1RodW5rKHR5cGVQcmVmaXgsIHBheWxvYWRDcmVhdG9yLCBvcHRpb25zKSB7XHJcbiAgICB2YXIgZnVsZmlsbGVkID0gY3JlYXRlQWN0aW9uKHR5cGVQcmVmaXggKyBcIi9mdWxmaWxsZWRcIiwgZnVuY3Rpb24gKHBheWxvYWQsIHJlcXVlc3RJZCwgYXJnLCBtZXRhKSB7IHJldHVybiAoe1xyXG4gICAgICAgIHBheWxvYWQ6IHBheWxvYWQsXHJcbiAgICAgICAgbWV0YTogX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgbWV0YSB8fCB7fSksIHtcclxuICAgICAgICAgICAgYXJnOiBhcmcsXHJcbiAgICAgICAgICAgIHJlcXVlc3RJZDogcmVxdWVzdElkLFxyXG4gICAgICAgICAgICByZXF1ZXN0U3RhdHVzOiBcImZ1bGZpbGxlZFwiXHJcbiAgICAgICAgfSlcclxuICAgIH0pOyB9KTtcclxuICAgIHZhciBwZW5kaW5nID0gY3JlYXRlQWN0aW9uKHR5cGVQcmVmaXggKyBcIi9wZW5kaW5nXCIsIGZ1bmN0aW9uIChyZXF1ZXN0SWQsIGFyZywgbWV0YSkgeyByZXR1cm4gKHtcclxuICAgICAgICBwYXlsb2FkOiB2b2lkIDAsXHJcbiAgICAgICAgbWV0YTogX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgbWV0YSB8fCB7fSksIHtcclxuICAgICAgICAgICAgYXJnOiBhcmcsXHJcbiAgICAgICAgICAgIHJlcXVlc3RJZDogcmVxdWVzdElkLFxyXG4gICAgICAgICAgICByZXF1ZXN0U3RhdHVzOiBcInBlbmRpbmdcIlxyXG4gICAgICAgIH0pXHJcbiAgICB9KTsgfSk7XHJcbiAgICB2YXIgcmVqZWN0ZWQgPSBjcmVhdGVBY3Rpb24odHlwZVByZWZpeCArIFwiL3JlamVjdGVkXCIsIGZ1bmN0aW9uIChlcnJvciwgcmVxdWVzdElkLCBhcmcsIHBheWxvYWQsIG1ldGEpIHsgcmV0dXJuICh7XHJcbiAgICAgICAgcGF5bG9hZDogcGF5bG9hZCxcclxuICAgICAgICBlcnJvcjogKG9wdGlvbnMgJiYgb3B0aW9ucy5zZXJpYWxpemVFcnJvciB8fCBtaW5pU2VyaWFsaXplRXJyb3IpKGVycm9yIHx8IFwiUmVqZWN0ZWRcIiksXHJcbiAgICAgICAgbWV0YTogX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgbWV0YSB8fCB7fSksIHtcclxuICAgICAgICAgICAgYXJnOiBhcmcsXHJcbiAgICAgICAgICAgIHJlcXVlc3RJZDogcmVxdWVzdElkLFxyXG4gICAgICAgICAgICByZWplY3RlZFdpdGhWYWx1ZTogISFwYXlsb2FkLFxyXG4gICAgICAgICAgICByZXF1ZXN0U3RhdHVzOiBcInJlamVjdGVkXCIsXHJcbiAgICAgICAgICAgIGFib3J0ZWQ6IChlcnJvciA9PSBudWxsID8gdm9pZCAwIDogZXJyb3IubmFtZSkgPT09IFwiQWJvcnRFcnJvclwiLFxyXG4gICAgICAgICAgICBjb25kaXRpb246IChlcnJvciA9PSBudWxsID8gdm9pZCAwIDogZXJyb3IubmFtZSkgPT09IFwiQ29uZGl0aW9uRXJyb3JcIlxyXG4gICAgICAgIH0pXHJcbiAgICB9KTsgfSk7XHJcbiAgICB2YXIgZGlzcGxheWVkV2FybmluZyA9IGZhbHNlO1xyXG4gICAgdmFyIEFDID0gdHlwZW9mIEFib3J0Q29udHJvbGxlciAhPT0gXCJ1bmRlZmluZWRcIiA/IEFib3J0Q29udHJvbGxlciA6IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBmdW5jdGlvbiBjbGFzc18xKCkge1xyXG4gICAgICAgICAgICB0aGlzLnNpZ25hbCA9IHtcclxuICAgICAgICAgICAgICAgIGFib3J0ZWQ6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgYWRkRXZlbnRMaXN0ZW5lcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGRpc3BhdGNoRXZlbnQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgb25hYm9ydDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICByZWFzb246IHZvaWQgMCxcclxuICAgICAgICAgICAgICAgIHRocm93SWZBYm9ydGVkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNsYXNzXzEucHJvdG90eXBlLmFib3J0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWRpc3BsYXllZFdhcm5pbmcpIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5ZWRXYXJuaW5nID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmluZm8oXCJUaGlzIHBsYXRmb3JtIGRvZXMgbm90IGltcGxlbWVudCBBYm9ydENvbnRyb2xsZXIuIFxcbklmIHlvdSB3YW50IHRvIHVzZSB0aGUgQWJvcnRDb250cm9sbGVyIHRvIHJlYWN0IHRvIGBhYm9ydGAgZXZlbnRzLCBwbGVhc2UgY29uc2lkZXIgaW1wb3J0aW5nIGEgcG9seWZpbGwgbGlrZSAnYWJvcnRjb250cm9sbGVyLXBvbHlmaWxsL2Rpc3QvYWJvcnRjb250cm9sbGVyLXBvbHlmaWxsLW9ubHknLlwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIGNsYXNzXzE7XHJcbiAgICB9KCkpO1xyXG4gICAgZnVuY3Rpb24gYWN0aW9uQ3JlYXRvcihhcmcpIHtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGRpc3BhdGNoLCBnZXRTdGF0ZSwgZXh0cmEpIHtcclxuICAgICAgICAgICAgdmFyIHJlcXVlc3RJZCA9IChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmlkR2VuZXJhdG9yKSA/IG9wdGlvbnMuaWRHZW5lcmF0b3IoYXJnKSA6IG5hbm9pZCgpO1xyXG4gICAgICAgICAgICB2YXIgYWJvcnRDb250cm9sbGVyID0gbmV3IEFDKCk7XHJcbiAgICAgICAgICAgIHZhciBhYm9ydFJlYXNvbjtcclxuICAgICAgICAgICAgdmFyIGFib3J0ZWRQcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKF8sIHJlamVjdCkgeyByZXR1cm4gYWJvcnRDb250cm9sbGVyLnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVqZWN0KHsgbmFtZTogXCJBYm9ydEVycm9yXCIsIG1lc3NhZ2U6IGFib3J0UmVhc29uIHx8IFwiQWJvcnRlZFwiIH0pOyB9KTsgfSk7XHJcbiAgICAgICAgICAgIHZhciBzdGFydGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGFib3J0KHJlYXNvbikge1xyXG4gICAgICAgICAgICAgICAgaWYgKHN0YXJ0ZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBhYm9ydFJlYXNvbiA9IHJlYXNvbjtcclxuICAgICAgICAgICAgICAgICAgICBhYm9ydENvbnRyb2xsZXIuYWJvcnQoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgcHJvbWlzZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgX2EsIF9iLCBmaW5hbEFjdGlvbiwgY29uZGl0aW9uUmVzdWx0LCBlcnJfMSwgc2tpcERpc3BhdGNoO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2MpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfYy5sYWJlbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jLnRyeXMucHVzaChbMCwgNCwgLCA1XSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZGl0aW9uUmVzdWx0ID0gKF9hID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5jb25kaXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYS5jYWxsKG9wdGlvbnMsIGFyZywgeyBnZXRTdGF0ZTogZ2V0U3RhdGUsIGV4dHJhOiBleHRyYSB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlzVGhlbmFibGUoY29uZGl0aW9uUmVzdWx0KSkgcmV0dXJuIFszIC8qYnJlYWsqLywgMl07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgY29uZGl0aW9uUmVzdWx0XTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25kaXRpb25SZXN1bHQgPSBfYy5zZW50KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MubGFiZWwgPSAyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb25kaXRpb25SZXN1bHQgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQ29uZGl0aW9uRXJyb3JcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiQWJvcnRlZCBkdWUgdG8gY29uZGl0aW9uIGNhbGxiYWNrIHJldHVybmluZyBmYWxzZS5cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaChwZW5kaW5nKHJlcXVlc3RJZCwgYXJnLCAoX2IgPSBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmdldFBlbmRpbmdNZXRhKSA9PSBudWxsID8gdm9pZCAwIDogX2IuY2FsbChvcHRpb25zLCB7IHJlcXVlc3RJZDogcmVxdWVzdElkLCBhcmc6IGFyZyB9LCB7IGdldFN0YXRlOiBnZXRTdGF0ZSwgZXh0cmE6IGV4dHJhIH0pKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgUHJvbWlzZS5yYWNlKFtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFib3J0ZWRQcm9taXNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUHJvbWlzZS5yZXNvbHZlKHBheWxvYWRDcmVhdG9yKGFyZywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoOiBkaXNwYXRjaCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXRTdGF0ZTogZ2V0U3RhdGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXh0cmE6IGV4dHJhLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3RJZDogcmVxdWVzdElkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpZ25hbDogYWJvcnRDb250cm9sbGVyLnNpZ25hbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3RXaXRoVmFsdWU6IGZ1bmN0aW9uICh2YWx1ZSwgbWV0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJlamVjdFdpdGhWYWx1ZSh2YWx1ZSwgbWV0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdWxmaWxsV2l0aFZhbHVlOiBmdW5jdGlvbiAodmFsdWUsIG1ldGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBGdWxmaWxsV2l0aE1ldGEodmFsdWUsIG1ldGEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgUmVqZWN0V2l0aFZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IHJlc3VsdDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIEZ1bGZpbGxXaXRoTWV0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVsZmlsbGVkKHJlc3VsdC5wYXlsb2FkLCByZXF1ZXN0SWQsIGFyZywgcmVzdWx0Lm1ldGEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVsZmlsbGVkKHJlc3VsdCwgcmVxdWVzdElkLCBhcmcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbmFsQWN0aW9uID0gX2Muc2VudCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMyAvKmJyZWFrKi8sIDVdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA0OlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycl8xID0gX2Muc2VudCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbmFsQWN0aW9uID0gZXJyXzEgaW5zdGFuY2VvZiBSZWplY3RXaXRoVmFsdWUgPyByZWplY3RlZChudWxsLCByZXF1ZXN0SWQsIGFyZywgZXJyXzEucGF5bG9hZCwgZXJyXzEubWV0YSkgOiByZWplY3RlZChlcnJfMSwgcmVxdWVzdElkLCBhcmcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMyAvKmJyZWFrKi8sIDVdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA1OlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNraXBEaXNwYXRjaCA9IG9wdGlvbnMgJiYgIW9wdGlvbnMuZGlzcGF0Y2hDb25kaXRpb25SZWplY3Rpb24gJiYgcmVqZWN0ZWQubWF0Y2goZmluYWxBY3Rpb24pICYmIGZpbmFsQWN0aW9uLm1ldGEuY29uZGl0aW9uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc2tpcERpc3BhdGNoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKGZpbmFsQWN0aW9uKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIGZpbmFsQWN0aW9uXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0oKTtcclxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24ocHJvbWlzZSwge1xyXG4gICAgICAgICAgICAgICAgYWJvcnQ6IGFib3J0LFxyXG4gICAgICAgICAgICAgICAgcmVxdWVzdElkOiByZXF1ZXN0SWQsXHJcbiAgICAgICAgICAgICAgICBhcmc6IGFyZyxcclxuICAgICAgICAgICAgICAgIHVud3JhcDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9taXNlLnRoZW4odW53cmFwUmVzdWx0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKGFjdGlvbkNyZWF0b3IsIHtcclxuICAgICAgICBwZW5kaW5nOiBwZW5kaW5nLFxyXG4gICAgICAgIHJlamVjdGVkOiByZWplY3RlZCxcclxuICAgICAgICBmdWxmaWxsZWQ6IGZ1bGZpbGxlZCxcclxuICAgICAgICB0eXBlUHJlZml4OiB0eXBlUHJlZml4XHJcbiAgICB9KTtcclxufVxyXG5mdW5jdGlvbiB1bndyYXBSZXN1bHQoYWN0aW9uKSB7XHJcbiAgICBpZiAoYWN0aW9uLm1ldGEgJiYgYWN0aW9uLm1ldGEucmVqZWN0ZWRXaXRoVmFsdWUpIHtcclxuICAgICAgICB0aHJvdyBhY3Rpb24ucGF5bG9hZDtcclxuICAgIH1cclxuICAgIGlmIChhY3Rpb24uZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBhY3Rpb24uZXJyb3I7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gYWN0aW9uLnBheWxvYWQ7XHJcbn1cclxuZnVuY3Rpb24gaXNUaGVuYWJsZSh2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHZhbHVlICE9PSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgdmFsdWUudGhlbiA9PT0gXCJmdW5jdGlvblwiO1xyXG59XHJcbi8vIHNyYy90c0hlbHBlcnMudHNcclxudmFyIGhhc01hdGNoRnVuY3Rpb24gPSBmdW5jdGlvbiAodikge1xyXG4gICAgcmV0dXJuIHYgJiYgdHlwZW9mIHYubWF0Y2ggPT09IFwiZnVuY3Rpb25cIjtcclxufTtcclxuLy8gc3JjL21hdGNoZXJzLnRzXHJcbnZhciBtYXRjaGVzID0gZnVuY3Rpb24gKG1hdGNoZXIsIGFjdGlvbikge1xyXG4gICAgaWYgKGhhc01hdGNoRnVuY3Rpb24obWF0Y2hlcikpIHtcclxuICAgICAgICByZXR1cm4gbWF0Y2hlci5tYXRjaChhY3Rpb24pO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIG1hdGNoZXIoYWN0aW9uKTtcclxuICAgIH1cclxufTtcclxuZnVuY3Rpb24gaXNBbnlPZigpIHtcclxuICAgIHZhciBtYXRjaGVycyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBtYXRjaGVyc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcclxuICAgICAgICByZXR1cm4gbWF0Y2hlcnMuc29tZShmdW5jdGlvbiAobWF0Y2hlcikgeyByZXR1cm4gbWF0Y2hlcyhtYXRjaGVyLCBhY3Rpb24pOyB9KTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gaXNBbGxPZigpIHtcclxuICAgIHZhciBtYXRjaGVycyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBtYXRjaGVyc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcclxuICAgICAgICByZXR1cm4gbWF0Y2hlcnMuZXZlcnkoZnVuY3Rpb24gKG1hdGNoZXIpIHsgcmV0dXJuIG1hdGNoZXMobWF0Y2hlciwgYWN0aW9uKTsgfSk7XHJcbiAgICB9O1xyXG59XHJcbmZ1bmN0aW9uIGhhc0V4cGVjdGVkUmVxdWVzdE1ldGFkYXRhKGFjdGlvbiwgdmFsaWRTdGF0dXMpIHtcclxuICAgIGlmICghYWN0aW9uIHx8ICFhY3Rpb24ubWV0YSlcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB2YXIgaGFzVmFsaWRSZXF1ZXN0SWQgPSB0eXBlb2YgYWN0aW9uLm1ldGEucmVxdWVzdElkID09PSBcInN0cmluZ1wiO1xyXG4gICAgdmFyIGhhc1ZhbGlkUmVxdWVzdFN0YXR1cyA9IHZhbGlkU3RhdHVzLmluZGV4T2YoYWN0aW9uLm1ldGEucmVxdWVzdFN0YXR1cykgPiAtMTtcclxuICAgIHJldHVybiBoYXNWYWxpZFJlcXVlc3RJZCAmJiBoYXNWYWxpZFJlcXVlc3RTdGF0dXM7XHJcbn1cclxuZnVuY3Rpb24gaXNBc3luY1RodW5rQXJyYXkoYSkge1xyXG4gICAgcmV0dXJuIHR5cGVvZiBhWzBdID09PSBcImZ1bmN0aW9uXCIgJiYgXCJwZW5kaW5nXCIgaW4gYVswXSAmJiBcImZ1bGZpbGxlZFwiIGluIGFbMF0gJiYgXCJyZWplY3RlZFwiIGluIGFbMF07XHJcbn1cclxuZnVuY3Rpb24gaXNQZW5kaW5nKCkge1xyXG4gICAgdmFyIGFzeW5jVGh1bmtzID0gW107XHJcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgIGFzeW5jVGh1bmtzW19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICB9XHJcbiAgICBpZiAoYXN5bmNUaHVua3MubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGhhc0V4cGVjdGVkUmVxdWVzdE1ldGFkYXRhKGFjdGlvbiwgW1wicGVuZGluZ1wiXSk7IH07XHJcbiAgICB9XHJcbiAgICBpZiAoIWlzQXN5bmNUaHVua0FycmF5KGFzeW5jVGh1bmtzKSkge1xyXG4gICAgICAgIHJldHVybiBpc1BlbmRpbmcoKShhc3luY1RodW5rc1swXSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikge1xyXG4gICAgICAgIHZhciBtYXRjaGVycyA9IGFzeW5jVGh1bmtzLm1hcChmdW5jdGlvbiAoYXN5bmNUaHVuaykgeyByZXR1cm4gYXN5bmNUaHVuay5wZW5kaW5nOyB9KTtcclxuICAgICAgICB2YXIgY29tYmluZWRNYXRjaGVyID0gaXNBbnlPZi5hcHBseSh2b2lkIDAsIG1hdGNoZXJzKTtcclxuICAgICAgICByZXR1cm4gY29tYmluZWRNYXRjaGVyKGFjdGlvbik7XHJcbiAgICB9O1xyXG59XHJcbmZ1bmN0aW9uIGlzUmVqZWN0ZWQoKSB7XHJcbiAgICB2YXIgYXN5bmNUaHVua3MgPSBbXTtcclxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgYXN5bmNUaHVua3NbX2ldID0gYXJndW1lbnRzW19pXTtcclxuICAgIH1cclxuICAgIGlmIChhc3luY1RodW5rcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gaGFzRXhwZWN0ZWRSZXF1ZXN0TWV0YWRhdGEoYWN0aW9uLCBbXCJyZWplY3RlZFwiXSk7IH07XHJcbiAgICB9XHJcbiAgICBpZiAoIWlzQXN5bmNUaHVua0FycmF5KGFzeW5jVGh1bmtzKSkge1xyXG4gICAgICAgIHJldHVybiBpc1JlamVjdGVkKCkoYXN5bmNUaHVua3NbMF0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcclxuICAgICAgICB2YXIgbWF0Y2hlcnMgPSBhc3luY1RodW5rcy5tYXAoZnVuY3Rpb24gKGFzeW5jVGh1bmspIHsgcmV0dXJuIGFzeW5jVGh1bmsucmVqZWN0ZWQ7IH0pO1xyXG4gICAgICAgIHZhciBjb21iaW5lZE1hdGNoZXIgPSBpc0FueU9mLmFwcGx5KHZvaWQgMCwgbWF0Y2hlcnMpO1xyXG4gICAgICAgIHJldHVybiBjb21iaW5lZE1hdGNoZXIoYWN0aW9uKTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gaXNSZWplY3RlZFdpdGhWYWx1ZSgpIHtcclxuICAgIHZhciBhc3luY1RodW5rcyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBhc3luY1RodW5rc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgfVxyXG4gICAgdmFyIGhhc0ZsYWcgPSBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICAgICAgcmV0dXJuIGFjdGlvbiAmJiBhY3Rpb24ubWV0YSAmJiBhY3Rpb24ubWV0YS5yZWplY3RlZFdpdGhWYWx1ZTtcclxuICAgIH07XHJcbiAgICBpZiAoYXN5bmNUaHVua3MubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcclxuICAgICAgICAgICAgdmFyIGNvbWJpbmVkTWF0Y2hlciA9IGlzQWxsT2YoaXNSZWplY3RlZC5hcHBseSh2b2lkIDAsIGFzeW5jVGh1bmtzKSwgaGFzRmxhZyk7XHJcbiAgICAgICAgICAgIHJldHVybiBjb21iaW5lZE1hdGNoZXIoYWN0aW9uKTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgaWYgKCFpc0FzeW5jVGh1bmtBcnJheShhc3luY1RodW5rcykpIHtcclxuICAgICAgICByZXR1cm4gaXNSZWplY3RlZFdpdGhWYWx1ZSgpKGFzeW5jVGh1bmtzWzBdKTtcclxuICAgIH1cclxuICAgIHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICAgICAgdmFyIGNvbWJpbmVkTWF0Y2hlciA9IGlzQWxsT2YoaXNSZWplY3RlZC5hcHBseSh2b2lkIDAsIGFzeW5jVGh1bmtzKSwgaGFzRmxhZyk7XHJcbiAgICAgICAgcmV0dXJuIGNvbWJpbmVkTWF0Y2hlcihhY3Rpb24pO1xyXG4gICAgfTtcclxufVxyXG5mdW5jdGlvbiBpc0Z1bGZpbGxlZCgpIHtcclxuICAgIHZhciBhc3luY1RodW5rcyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBhc3luY1RodW5rc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgfVxyXG4gICAgaWYgKGFzeW5jVGh1bmtzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7IHJldHVybiBoYXNFeHBlY3RlZFJlcXVlc3RNZXRhZGF0YShhY3Rpb24sIFtcImZ1bGZpbGxlZFwiXSk7IH07XHJcbiAgICB9XHJcbiAgICBpZiAoIWlzQXN5bmNUaHVua0FycmF5KGFzeW5jVGh1bmtzKSkge1xyXG4gICAgICAgIHJldHVybiBpc0Z1bGZpbGxlZCgpKGFzeW5jVGh1bmtzWzBdKTtcclxuICAgIH1cclxuICAgIHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICAgICAgdmFyIG1hdGNoZXJzID0gYXN5bmNUaHVua3MubWFwKGZ1bmN0aW9uIChhc3luY1RodW5rKSB7IHJldHVybiBhc3luY1RodW5rLmZ1bGZpbGxlZDsgfSk7XHJcbiAgICAgICAgdmFyIGNvbWJpbmVkTWF0Y2hlciA9IGlzQW55T2YuYXBwbHkodm9pZCAwLCBtYXRjaGVycyk7XHJcbiAgICAgICAgcmV0dXJuIGNvbWJpbmVkTWF0Y2hlcihhY3Rpb24pO1xyXG4gICAgfTtcclxufVxyXG5mdW5jdGlvbiBpc0FzeW5jVGh1bmtBY3Rpb24oKSB7XHJcbiAgICB2YXIgYXN5bmNUaHVua3MgPSBbXTtcclxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgYXN5bmNUaHVua3NbX2ldID0gYXJndW1lbnRzW19pXTtcclxuICAgIH1cclxuICAgIGlmIChhc3luY1RodW5rcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gaGFzRXhwZWN0ZWRSZXF1ZXN0TWV0YWRhdGEoYWN0aW9uLCBbXCJwZW5kaW5nXCIsIFwiZnVsZmlsbGVkXCIsIFwicmVqZWN0ZWRcIl0pOyB9O1xyXG4gICAgfVxyXG4gICAgaWYgKCFpc0FzeW5jVGh1bmtBcnJheShhc3luY1RodW5rcykpIHtcclxuICAgICAgICByZXR1cm4gaXNBc3luY1RodW5rQWN0aW9uKCkoYXN5bmNUaHVua3NbMF0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcclxuICAgICAgICB2YXIgbWF0Y2hlcnMgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIGFzeW5jVGh1bmtzXzEgPSBhc3luY1RodW5rczsgX2kgPCBhc3luY1RodW5rc18xLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICB2YXIgYXN5bmNUaHVuayA9IGFzeW5jVGh1bmtzXzFbX2ldO1xyXG4gICAgICAgICAgICBtYXRjaGVycy5wdXNoKGFzeW5jVGh1bmsucGVuZGluZywgYXN5bmNUaHVuay5yZWplY3RlZCwgYXN5bmNUaHVuay5mdWxmaWxsZWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgY29tYmluZWRNYXRjaGVyID0gaXNBbnlPZi5hcHBseSh2b2lkIDAsIG1hdGNoZXJzKTtcclxuICAgICAgICByZXR1cm4gY29tYmluZWRNYXRjaGVyKGFjdGlvbik7XHJcbiAgICB9O1xyXG59XHJcbi8vIHNyYy9saXN0ZW5lck1pZGRsZXdhcmUvdXRpbHMudHNcclxudmFyIGFzc2VydEZ1bmN0aW9uID0gZnVuY3Rpb24gKGZ1bmMsIGV4cGVjdGVkKSB7XHJcbiAgICBpZiAodHlwZW9mIGZ1bmMgIT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoZXhwZWN0ZWQgKyBcIiBpcyBub3QgYSBmdW5jdGlvblwiKTtcclxuICAgIH1cclxufTtcclxudmFyIG5vb3AgPSBmdW5jdGlvbiAoKSB7XHJcbn07XHJcbnZhciBjYXRjaFJlamVjdGlvbiA9IGZ1bmN0aW9uIChwcm9taXNlLCBvbkVycm9yKSB7XHJcbiAgICBpZiAob25FcnJvciA9PT0gdm9pZCAwKSB7IG9uRXJyb3IgPSBub29wOyB9XHJcbiAgICBwcm9taXNlLmNhdGNoKG9uRXJyb3IpO1xyXG4gICAgcmV0dXJuIHByb21pc2U7XHJcbn07XHJcbnZhciBhZGRBYm9ydFNpZ25hbExpc3RlbmVyID0gZnVuY3Rpb24gKGFib3J0U2lnbmFsLCBjYWxsYmFjaykge1xyXG4gICAgYWJvcnRTaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIGNhbGxiYWNrLCB7IG9uY2U6IHRydWUgfSk7XHJcbn07XHJcbnZhciBhYm9ydENvbnRyb2xsZXJXaXRoUmVhc29uID0gZnVuY3Rpb24gKGFib3J0Q29udHJvbGxlciwgcmVhc29uKSB7XHJcbiAgICB2YXIgc2lnbmFsID0gYWJvcnRDb250cm9sbGVyLnNpZ25hbDtcclxuICAgIGlmIChzaWduYWwuYWJvcnRlZCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmICghKFwicmVhc29uXCIgaW4gc2lnbmFsKSkge1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzaWduYWwsIFwicmVhc29uXCIsIHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgdmFsdWU6IHJlYXNvbixcclxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgO1xyXG4gICAgYWJvcnRDb250cm9sbGVyLmFib3J0KHJlYXNvbik7XHJcbn07XHJcbi8vIHNyYy9saXN0ZW5lck1pZGRsZXdhcmUvZXhjZXB0aW9ucy50c1xyXG52YXIgdGFzayA9IFwidGFza1wiO1xyXG52YXIgbGlzdGVuZXIgPSBcImxpc3RlbmVyXCI7XHJcbnZhciBjb21wbGV0ZWQgPSBcImNvbXBsZXRlZFwiO1xyXG52YXIgY2FuY2VsbGVkID0gXCJjYW5jZWxsZWRcIjtcclxudmFyIHRhc2tDYW5jZWxsZWQgPSBcInRhc2stXCIgKyBjYW5jZWxsZWQ7XHJcbnZhciB0YXNrQ29tcGxldGVkID0gXCJ0YXNrLVwiICsgY29tcGxldGVkO1xyXG52YXIgbGlzdGVuZXJDYW5jZWxsZWQgPSBsaXN0ZW5lciArIFwiLVwiICsgY2FuY2VsbGVkO1xyXG52YXIgbGlzdGVuZXJDb21wbGV0ZWQgPSBsaXN0ZW5lciArIFwiLVwiICsgY29tcGxldGVkO1xyXG52YXIgVGFza0Fib3J0RXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBUYXNrQWJvcnRFcnJvcihjb2RlKSB7XHJcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBcIlRhc2tBYm9ydEVycm9yXCI7XHJcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gdGFzayArIFwiIFwiICsgY2FuY2VsbGVkICsgXCIgKHJlYXNvbjogXCIgKyBjb2RlICsgXCIpXCI7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gVGFza0Fib3J0RXJyb3I7XHJcbn0oKSk7XHJcbi8vIHNyYy9saXN0ZW5lck1pZGRsZXdhcmUvdGFzay50c1xyXG52YXIgdmFsaWRhdGVBY3RpdmUgPSBmdW5jdGlvbiAoc2lnbmFsKSB7XHJcbiAgICBpZiAoc2lnbmFsLmFib3J0ZWQpIHtcclxuICAgICAgICB0aHJvdyBuZXcgVGFza0Fib3J0RXJyb3Ioc2lnbmFsLnJlYXNvbik7XHJcbiAgICB9XHJcbn07XHJcbnZhciBwcm9taXNpZnlBYm9ydFNpZ25hbCA9IGZ1bmN0aW9uIChzaWduYWwpIHtcclxuICAgIHJldHVybiBjYXRjaFJlamVjdGlvbihuZXcgUHJvbWlzZShmdW5jdGlvbiAoXywgcmVqZWN0KSB7XHJcbiAgICAgICAgdmFyIG5vdGlmeVJlamVjdGlvbiA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlamVjdChuZXcgVGFza0Fib3J0RXJyb3Ioc2lnbmFsLnJlYXNvbikpOyB9O1xyXG4gICAgICAgIGlmIChzaWduYWwuYWJvcnRlZCkge1xyXG4gICAgICAgICAgICBub3RpZnlSZWplY3Rpb24oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGFkZEFib3J0U2lnbmFsTGlzdGVuZXIoc2lnbmFsLCBub3RpZnlSZWplY3Rpb24pO1xyXG4gICAgICAgIH1cclxuICAgIH0pKTtcclxufTtcclxudmFyIHJ1blRhc2sgPSBmdW5jdGlvbiAodGFzazIsIGNsZWFuVXApIHsgcmV0dXJuIF9fYXN5bmModm9pZCAwLCBudWxsLCBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgdmFsdWUsIGVycm9yXzE7XHJcbiAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9jKSB7XHJcbiAgICAgICAgc3dpdGNoIChfYy5sYWJlbCkge1xyXG4gICAgICAgICAgICBjYXNlIDA6XHJcbiAgICAgICAgICAgICAgICBfYy50cnlzLnB1c2goWzAsIDMsIDQsIDVdKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIFByb21pc2UucmVzb2x2ZSgpXTtcclxuICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgX2Muc2VudCgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgdGFzazIoKV07XHJcbiAgICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgICAgIHZhbHVlID0gX2Muc2VudCgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBcIm9rXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH1dO1xyXG4gICAgICAgICAgICBjYXNlIDM6XHJcbiAgICAgICAgICAgICAgICBlcnJvcl8xID0gX2Muc2VudCgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBlcnJvcl8xIGluc3RhbmNlb2YgVGFza0Fib3J0RXJyb3IgPyBcImNhbmNlbGxlZFwiIDogXCJyZWplY3RlZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3JfMVxyXG4gICAgICAgICAgICAgICAgICAgIH1dO1xyXG4gICAgICAgICAgICBjYXNlIDQ6XHJcbiAgICAgICAgICAgICAgICBjbGVhblVwID09IG51bGwgPyB2b2lkIDAgOiBjbGVhblVwKCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gWzcgLyplbmRmaW5hbGx5Ki9dO1xyXG4gICAgICAgICAgICBjYXNlIDU6IHJldHVybiBbMiAvKnJldHVybiovXTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufSk7IH07XHJcbnZhciBjcmVhdGVQYXVzZSA9IGZ1bmN0aW9uIChzaWduYWwpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAocHJvbWlzZSkge1xyXG4gICAgICAgIHJldHVybiBjYXRjaFJlamVjdGlvbihQcm9taXNlLnJhY2UoW3Byb21pc2lmeUFib3J0U2lnbmFsKHNpZ25hbCksIHByb21pc2VdKS50aGVuKGZ1bmN0aW9uIChvdXRwdXQpIHtcclxuICAgICAgICAgICAgdmFsaWRhdGVBY3RpdmUoc2lnbmFsKTtcclxuICAgICAgICAgICAgcmV0dXJuIG91dHB1dDtcclxuICAgICAgICB9KSk7XHJcbiAgICB9O1xyXG59O1xyXG52YXIgY3JlYXRlRGVsYXkgPSBmdW5jdGlvbiAoc2lnbmFsKSB7XHJcbiAgICB2YXIgcGF1c2UgPSBjcmVhdGVQYXVzZShzaWduYWwpO1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uICh0aW1lb3V0TXMpIHtcclxuICAgICAgICByZXR1cm4gcGF1c2UobmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmV0dXJuIHNldFRpbWVvdXQocmVzb2x2ZSwgdGltZW91dE1zKTsgfSkpO1xyXG4gICAgfTtcclxufTtcclxuLy8gc3JjL2xpc3RlbmVyTWlkZGxld2FyZS9pbmRleC50c1xyXG52YXIgYXNzaWduID0gT2JqZWN0LmFzc2lnbjtcclxudmFyIElOVEVSTkFMX05JTF9UT0tFTiA9IHt9O1xyXG52YXIgYWxtID0gXCJsaXN0ZW5lck1pZGRsZXdhcmVcIjtcclxudmFyIGNyZWF0ZUZvcmsgPSBmdW5jdGlvbiAocGFyZW50QWJvcnRTaWduYWwpIHtcclxuICAgIHZhciBsaW5rQ29udHJvbGxlcnMgPSBmdW5jdGlvbiAoY29udHJvbGxlcikgeyByZXR1cm4gYWRkQWJvcnRTaWduYWxMaXN0ZW5lcihwYXJlbnRBYm9ydFNpZ25hbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gYWJvcnRDb250cm9sbGVyV2l0aFJlYXNvbihjb250cm9sbGVyLCBwYXJlbnRBYm9ydFNpZ25hbC5yZWFzb24pOyB9KTsgfTtcclxuICAgIHJldHVybiBmdW5jdGlvbiAodGFza0V4ZWN1dG9yKSB7XHJcbiAgICAgICAgYXNzZXJ0RnVuY3Rpb24odGFza0V4ZWN1dG9yLCBcInRhc2tFeGVjdXRvclwiKTtcclxuICAgICAgICB2YXIgY2hpbGRBYm9ydENvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XHJcbiAgICAgICAgbGlua0NvbnRyb2xsZXJzKGNoaWxkQWJvcnRDb250cm9sbGVyKTtcclxuICAgICAgICB2YXIgcmVzdWx0ID0gcnVuVGFzayhmdW5jdGlvbiAoKSB7IHJldHVybiBfX2FzeW5jKHZvaWQgMCwgbnVsbCwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgcmVzdWx0MjtcclxuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYykge1xyXG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYy5sYWJlbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVBY3RpdmUocGFyZW50QWJvcnRTaWduYWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0ZUFjdGl2ZShjaGlsZEFib3J0Q29udHJvbGxlci5zaWduYWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCB0YXNrRXhlY3V0b3Ioe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdXNlOiBjcmVhdGVQYXVzZShjaGlsZEFib3J0Q29udHJvbGxlci5zaWduYWwpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGF5OiBjcmVhdGVEZWxheShjaGlsZEFib3J0Q29udHJvbGxlci5zaWduYWwpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpZ25hbDogY2hpbGRBYm9ydENvbnRyb2xsZXIuc2lnbmFsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KV07XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQyID0gX2Muc2VudCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0ZUFjdGl2ZShjaGlsZEFib3J0Q29udHJvbGxlci5zaWduYWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgcmVzdWx0Ml07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pOyB9LCBmdW5jdGlvbiAoKSB7IHJldHVybiBhYm9ydENvbnRyb2xsZXJXaXRoUmVhc29uKGNoaWxkQWJvcnRDb250cm9sbGVyLCB0YXNrQ29tcGxldGVkKTsgfSk7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdWx0OiBjcmVhdGVQYXVzZShwYXJlbnRBYm9ydFNpZ25hbCkocmVzdWx0KSxcclxuICAgICAgICAgICAgY2FuY2VsOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBhYm9ydENvbnRyb2xsZXJXaXRoUmVhc29uKGNoaWxkQWJvcnRDb250cm9sbGVyLCB0YXNrQ2FuY2VsbGVkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9O1xyXG59O1xyXG52YXIgY3JlYXRlVGFrZVBhdHRlcm4gPSBmdW5jdGlvbiAoc3RhcnRMaXN0ZW5pbmcsIHNpZ25hbCkge1xyXG4gICAgdmFyIHRha2UgPSBmdW5jdGlvbiAocHJlZGljYXRlLCB0aW1lb3V0KSB7IHJldHVybiBfX2FzeW5jKHZvaWQgMCwgbnVsbCwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB1bnN1YnNjcmliZSwgdHVwbGVQcm9taXNlLCBwcm9taXNlcywgb3V0cHV0O1xyXG4gICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2MpIHtcclxuICAgICAgICAgICAgc3dpdGNoIChfYy5sYWJlbCkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlQWN0aXZlKHNpZ25hbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdW5zdWJzY3JpYmUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICB0dXBsZVByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB1bnN1YnNjcmliZSA9IHN0YXJ0TGlzdGVuaW5nKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZWRpY2F0ZTogcHJlZGljYXRlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWZmZWN0OiBmdW5jdGlvbiAoYWN0aW9uLCBsaXN0ZW5lckFwaSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3RlbmVyQXBpLnVuc3Vic2NyaWJlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdGVuZXJBcGkuZ2V0U3RhdGUoKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdGVuZXJBcGkuZ2V0T3JpZ2luYWxTdGF0ZSgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHByb21pc2VzID0gW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9taXNpZnlBYm9ydFNpZ25hbChzaWduYWwpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0dXBsZVByb21pc2VcclxuICAgICAgICAgICAgICAgICAgICBdO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aW1lb3V0ICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvbWlzZXMucHVzaChuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXR1cm4gc2V0VGltZW91dChyZXNvbHZlLCB0aW1lb3V0LCBudWxsKTsgfSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBfYy5sYWJlbCA9IDE7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgICAgICAgICAgX2MudHJ5cy5wdXNoKFsxLCAsIDMsIDRdKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCBQcm9taXNlLnJhY2UocHJvbWlzZXMpXTtcclxuICAgICAgICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgICAgICAgICBvdXRwdXQgPSBfYy5zZW50KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVBY3RpdmUoc2lnbmFsKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgb3V0cHV0XTtcclxuICAgICAgICAgICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgICAgICAgICB1bnN1YnNjcmliZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbNyAvKmVuZGZpbmFsbHkqL107XHJcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IHJldHVybiBbMiAvKnJldHVybiovXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7IH07XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKHByZWRpY2F0ZSwgdGltZW91dCkgeyByZXR1cm4gY2F0Y2hSZWplY3Rpb24odGFrZShwcmVkaWNhdGUsIHRpbWVvdXQpKTsgfTtcclxufTtcclxudmFyIGdldExpc3RlbmVyRW50cnlQcm9wc0Zyb20gPSBmdW5jdGlvbiAob3B0aW9ucykge1xyXG4gICAgdmFyIHR5cGUgPSBvcHRpb25zLnR5cGUsIGFjdGlvbkNyZWF0b3IgPSBvcHRpb25zLmFjdGlvbkNyZWF0b3IsIG1hdGNoZXIgPSBvcHRpb25zLm1hdGNoZXIsIHByZWRpY2F0ZSA9IG9wdGlvbnMucHJlZGljYXRlLCBlZmZlY3QgPSBvcHRpb25zLmVmZmVjdDtcclxuICAgIGlmICh0eXBlKSB7XHJcbiAgICAgICAgcHJlZGljYXRlID0gY3JlYXRlQWN0aW9uKHR5cGUpLm1hdGNoO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoYWN0aW9uQ3JlYXRvcikge1xyXG4gICAgICAgIHR5cGUgPSBhY3Rpb25DcmVhdG9yLnR5cGU7XHJcbiAgICAgICAgcHJlZGljYXRlID0gYWN0aW9uQ3JlYXRvci5tYXRjaDtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKG1hdGNoZXIpIHtcclxuICAgICAgICBwcmVkaWNhdGUgPSBtYXRjaGVyO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAocHJlZGljYXRlKSB7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDcmVhdGluZyBvciByZW1vdmluZyBhIGxpc3RlbmVyIHJlcXVpcmVzIG9uZSBvZiB0aGUga25vd24gZmllbGRzIGZvciBtYXRjaGluZyBhbiBhY3Rpb25cIik7XHJcbiAgICB9XHJcbiAgICBhc3NlcnRGdW5jdGlvbihlZmZlY3QsIFwib3B0aW9ucy5saXN0ZW5lclwiKTtcclxuICAgIHJldHVybiB7IHByZWRpY2F0ZTogcHJlZGljYXRlLCB0eXBlOiB0eXBlLCBlZmZlY3Q6IGVmZmVjdCB9O1xyXG59O1xyXG52YXIgY3JlYXRlTGlzdGVuZXJFbnRyeSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICB2YXIgX2MgPSBnZXRMaXN0ZW5lckVudHJ5UHJvcHNGcm9tKG9wdGlvbnMpLCB0eXBlID0gX2MudHlwZSwgcHJlZGljYXRlID0gX2MucHJlZGljYXRlLCBlZmZlY3QgPSBfYy5lZmZlY3Q7XHJcbiAgICB2YXIgaWQgPSBuYW5vaWQoKTtcclxuICAgIHZhciBlbnRyeSA9IHtcclxuICAgICAgICBpZDogaWQsXHJcbiAgICAgICAgZWZmZWN0OiBlZmZlY3QsXHJcbiAgICAgICAgdHlwZTogdHlwZSxcclxuICAgICAgICBwcmVkaWNhdGU6IHByZWRpY2F0ZSxcclxuICAgICAgICBwZW5kaW5nOiBuZXcgU2V0KCksXHJcbiAgICAgICAgdW5zdWJzY3JpYmU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdWJzY3JpYmUgbm90IGluaXRpYWxpemVkXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICByZXR1cm4gZW50cnk7XHJcbn07XHJcbnZhciBjcmVhdGVDbGVhckxpc3RlbmVyTWlkZGxld2FyZSA9IGZ1bmN0aW9uIChsaXN0ZW5lck1hcCkge1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBsaXN0ZW5lck1hcC5mb3JFYWNoKGNhbmNlbEFjdGl2ZUxpc3RlbmVycyk7XHJcbiAgICAgICAgbGlzdGVuZXJNYXAuY2xlYXIoKTtcclxuICAgIH07XHJcbn07XHJcbnZhciBzYWZlbHlOb3RpZnlFcnJvciA9IGZ1bmN0aW9uIChlcnJvckhhbmRsZXIsIGVycm9yVG9Ob3RpZnksIGVycm9ySW5mbykge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBlcnJvckhhbmRsZXIoZXJyb3JUb05vdGlmeSwgZXJyb3JJbmZvKTtcclxuICAgIH1cclxuICAgIGNhdGNoIChlcnJvckhhbmRsZXJFcnJvcikge1xyXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aHJvdyBlcnJvckhhbmRsZXJFcnJvcjtcclxuICAgICAgICB9LCAwKTtcclxuICAgIH1cclxufTtcclxudmFyIGFkZExpc3RlbmVyID0gY3JlYXRlQWN0aW9uKGFsbSArIFwiL2FkZFwiKTtcclxudmFyIGNsZWFyQWxsTGlzdGVuZXJzID0gY3JlYXRlQWN0aW9uKGFsbSArIFwiL3JlbW92ZUFsbFwiKTtcclxudmFyIHJlbW92ZUxpc3RlbmVyID0gY3JlYXRlQWN0aW9uKGFsbSArIFwiL3JlbW92ZVwiKTtcclxudmFyIGRlZmF1bHRFcnJvckhhbmRsZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgYXJncyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICB9XHJcbiAgICBjb25zb2xlLmVycm9yLmFwcGx5KGNvbnNvbGUsIF9fc3ByZWFkQXJyYXkoW2FsbSArIFwiL2Vycm9yXCJdLCBhcmdzKSk7XHJcbn07XHJcbnZhciBjYW5jZWxBY3RpdmVMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoZW50cnkpIHtcclxuICAgIGVudHJ5LnBlbmRpbmcuZm9yRWFjaChmdW5jdGlvbiAoY29udHJvbGxlcikge1xyXG4gICAgICAgIGFib3J0Q29udHJvbGxlcldpdGhSZWFzb24oY29udHJvbGxlciwgbGlzdGVuZXJDYW5jZWxsZWQpO1xyXG4gICAgfSk7XHJcbn07XHJcbmZ1bmN0aW9uIGNyZWF0ZUxpc3RlbmVyTWlkZGxld2FyZShtaWRkbGV3YXJlT3B0aW9ucykge1xyXG4gICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgIGlmIChtaWRkbGV3YXJlT3B0aW9ucyA9PT0gdm9pZCAwKSB7IG1pZGRsZXdhcmVPcHRpb25zID0ge307IH1cclxuICAgIHZhciBsaXN0ZW5lck1hcCA9IG5ldyBNYXAoKTtcclxuICAgIHZhciBleHRyYSA9IG1pZGRsZXdhcmVPcHRpb25zLmV4dHJhLCBfYyA9IG1pZGRsZXdhcmVPcHRpb25zLm9uRXJyb3IsIG9uRXJyb3IgPSBfYyA9PT0gdm9pZCAwID8gZGVmYXVsdEVycm9ySGFuZGxlciA6IF9jO1xyXG4gICAgYXNzZXJ0RnVuY3Rpb24ob25FcnJvciwgXCJvbkVycm9yXCIpO1xyXG4gICAgdmFyIGluc2VydEVudHJ5ID0gZnVuY3Rpb24gKGVudHJ5KSB7XHJcbiAgICAgICAgZW50cnkudW5zdWJzY3JpYmUgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBsaXN0ZW5lck1hcC5kZWxldGUoZW50cnkuaWQpOyB9O1xyXG4gICAgICAgIGxpc3RlbmVyTWFwLnNldChlbnRyeS5pZCwgZW50cnkpO1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoY2FuY2VsT3B0aW9ucykge1xyXG4gICAgICAgICAgICBlbnRyeS51bnN1YnNjcmliZSgpO1xyXG4gICAgICAgICAgICBpZiAoY2FuY2VsT3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogY2FuY2VsT3B0aW9ucy5jYW5jZWxBY3RpdmUpIHtcclxuICAgICAgICAgICAgICAgIGNhbmNlbEFjdGl2ZUxpc3RlbmVycyhlbnRyeSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfTtcclxuICAgIHZhciBmaW5kTGlzdGVuZXJFbnRyeSA9IGZ1bmN0aW9uIChjb21wYXJhdG9yKSB7XHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfYyA9IEFycmF5LmZyb20obGlzdGVuZXJNYXAudmFsdWVzKCkpOyBfaSA8IF9jLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICB2YXIgZW50cnkgPSBfY1tfaV07XHJcbiAgICAgICAgICAgIGlmIChjb21wYXJhdG9yKGVudHJ5KSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGVudHJ5O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB2b2lkIDA7XHJcbiAgICB9O1xyXG4gICAgdmFyIHN0YXJ0TGlzdGVuaW5nID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcclxuICAgICAgICB2YXIgZW50cnkgPSBmaW5kTGlzdGVuZXJFbnRyeShmdW5jdGlvbiAoZXhpc3RpbmdFbnRyeSkgeyByZXR1cm4gZXhpc3RpbmdFbnRyeS5lZmZlY3QgPT09IG9wdGlvbnMuZWZmZWN0OyB9KTtcclxuICAgICAgICBpZiAoIWVudHJ5KSB7XHJcbiAgICAgICAgICAgIGVudHJ5ID0gY3JlYXRlTGlzdGVuZXJFbnRyeShvcHRpb25zKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGluc2VydEVudHJ5KGVudHJ5KTtcclxuICAgIH07XHJcbiAgICB2YXIgc3RvcExpc3RlbmluZyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICAgICAgdmFyIF9jID0gZ2V0TGlzdGVuZXJFbnRyeVByb3BzRnJvbShvcHRpb25zKSwgdHlwZSA9IF9jLnR5cGUsIGVmZmVjdCA9IF9jLmVmZmVjdCwgcHJlZGljYXRlID0gX2MucHJlZGljYXRlO1xyXG4gICAgICAgIHZhciBlbnRyeSA9IGZpbmRMaXN0ZW5lckVudHJ5KGZ1bmN0aW9uIChlbnRyeTIpIHtcclxuICAgICAgICAgICAgdmFyIG1hdGNoUHJlZGljYXRlT3JUeXBlID0gdHlwZW9mIHR5cGUgPT09IFwic3RyaW5nXCIgPyBlbnRyeTIudHlwZSA9PT0gdHlwZSA6IGVudHJ5Mi5wcmVkaWNhdGUgPT09IHByZWRpY2F0ZTtcclxuICAgICAgICAgICAgcmV0dXJuIG1hdGNoUHJlZGljYXRlT3JUeXBlICYmIGVudHJ5Mi5lZmZlY3QgPT09IGVmZmVjdDtcclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAoZW50cnkpIHtcclxuICAgICAgICAgICAgZW50cnkudW5zdWJzY3JpYmUoKTtcclxuICAgICAgICAgICAgaWYgKG9wdGlvbnMuY2FuY2VsQWN0aXZlKSB7XHJcbiAgICAgICAgICAgICAgICBjYW5jZWxBY3RpdmVMaXN0ZW5lcnMoZW50cnkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiAhIWVudHJ5O1xyXG4gICAgfTtcclxuICAgIHZhciBub3RpZnlMaXN0ZW5lciA9IGZ1bmN0aW9uIChlbnRyeSwgYWN0aW9uLCBhcGksIGdldE9yaWdpbmFsU3RhdGUpIHsgcmV0dXJuIF9fYXN5bmMoX3RoaXMsIG51bGwsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgaW50ZXJuYWxUYXNrQ29udHJvbGxlciwgdGFrZSwgbGlzdGVuZXJFcnJvcl8xO1xyXG4gICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2MpIHtcclxuICAgICAgICAgICAgc3dpdGNoIChfYy5sYWJlbCkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICAgICAgICAgIGludGVybmFsVGFza0NvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFrZSA9IGNyZWF0ZVRha2VQYXR0ZXJuKHN0YXJ0TGlzdGVuaW5nLCBpbnRlcm5hbFRhc2tDb250cm9sbGVyLnNpZ25hbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgX2MubGFiZWwgPSAxO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgICAgIF9jLnRyeXMucHVzaChbMSwgMywgNCwgNV0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGVudHJ5LnBlbmRpbmcuYWRkKGludGVybmFsVGFza0NvbnRyb2xsZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIFByb21pc2UucmVzb2x2ZShlbnRyeS5lZmZlY3QoYWN0aW9uLCBhc3NpZ24oe30sIGFwaSwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0T3JpZ2luYWxTdGF0ZTogZ2V0T3JpZ2luYWxTdGF0ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmRpdGlvbjogZnVuY3Rpb24gKHByZWRpY2F0ZSwgdGltZW91dCkgeyByZXR1cm4gdGFrZShwcmVkaWNhdGUsIHRpbWVvdXQpLnRoZW4oQm9vbGVhbik7IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWtlOiB0YWtlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsYXk6IGNyZWF0ZURlbGF5KGludGVybmFsVGFza0NvbnRyb2xsZXIuc2lnbmFsKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdXNlOiBjcmVhdGVQYXVzZShpbnRlcm5hbFRhc2tDb250cm9sbGVyLnNpZ25hbCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHRyYTogZXh0cmEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaWduYWw6IGludGVybmFsVGFza0NvbnRyb2xsZXIuc2lnbmFsLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yazogY3JlYXRlRm9yayhpbnRlcm5hbFRhc2tDb250cm9sbGVyLnNpZ25hbCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bnN1YnNjcmliZTogZW50cnkudW5zdWJzY3JpYmUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0ZW5lck1hcC5zZXQoZW50cnkuaWQsIGVudHJ5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYW5jZWxBY3RpdmVMaXN0ZW5lcnM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbnRyeS5wZW5kaW5nLmZvckVhY2goZnVuY3Rpb24gKGNvbnRyb2xsZXIsIF8sIHNldCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29udHJvbGxlciAhPT0gaW50ZXJuYWxUYXNrQ29udHJvbGxlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWJvcnRDb250cm9sbGVyV2l0aFJlYXNvbihjb250cm9sbGVyLCBsaXN0ZW5lckNhbmNlbGxlZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXQuZGVsZXRlKGNvbnRyb2xsZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKSldO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICAgICAgICAgIF9jLnNlbnQoKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCA1XTtcclxuICAgICAgICAgICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgICAgICAgICBsaXN0ZW5lckVycm9yXzEgPSBfYy5zZW50KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEobGlzdGVuZXJFcnJvcl8xIGluc3RhbmNlb2YgVGFza0Fib3J0RXJyb3IpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNhZmVseU5vdGlmeUVycm9yKG9uRXJyb3IsIGxpc3RlbmVyRXJyb3JfMSwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFpc2VkQnk6IFwiZWZmZWN0XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbMyAvKmJyZWFrKi8sIDVdO1xyXG4gICAgICAgICAgICAgICAgY2FzZSA0OlxyXG4gICAgICAgICAgICAgICAgICAgIGFib3J0Q29udHJvbGxlcldpdGhSZWFzb24oaW50ZXJuYWxUYXNrQ29udHJvbGxlciwgbGlzdGVuZXJDb21wbGV0ZWQpO1xyXG4gICAgICAgICAgICAgICAgICAgIGVudHJ5LnBlbmRpbmcuZGVsZXRlKGludGVybmFsVGFza0NvbnRyb2xsZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbNyAvKmVuZGZpbmFsbHkqL107XHJcbiAgICAgICAgICAgICAgICBjYXNlIDU6IHJldHVybiBbMiAvKnJldHVybiovXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7IH07XHJcbiAgICB2YXIgY2xlYXJMaXN0ZW5lck1pZGRsZXdhcmUgPSBjcmVhdGVDbGVhckxpc3RlbmVyTWlkZGxld2FyZShsaXN0ZW5lck1hcCk7XHJcbiAgICB2YXIgbWlkZGxld2FyZSA9IGZ1bmN0aW9uIChhcGkpIHsgcmV0dXJuIGZ1bmN0aW9uIChuZXh0KSB7IHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICAgICAgaWYgKGFkZExpc3RlbmVyLm1hdGNoKGFjdGlvbikpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHN0YXJ0TGlzdGVuaW5nKGFjdGlvbi5wYXlsb2FkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGNsZWFyQWxsTGlzdGVuZXJzLm1hdGNoKGFjdGlvbikpIHtcclxuICAgICAgICAgICAgY2xlYXJMaXN0ZW5lck1pZGRsZXdhcmUoKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocmVtb3ZlTGlzdGVuZXIubWF0Y2goYWN0aW9uKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gc3RvcExpc3RlbmluZyhhY3Rpb24ucGF5bG9hZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBvcmlnaW5hbFN0YXRlID0gYXBpLmdldFN0YXRlKCk7XHJcbiAgICAgICAgdmFyIGdldE9yaWdpbmFsU3RhdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChvcmlnaW5hbFN0YXRlID09PSBJTlRFUk5BTF9OSUxfVE9LRU4pIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihhbG0gKyBcIjogZ2V0T3JpZ2luYWxTdGF0ZSBjYW4gb25seSBiZSBjYWxsZWQgc3luY2hyb25vdXNseVwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gb3JpZ2luYWxTdGF0ZTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciByZXN1bHQ7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgcmVzdWx0ID0gbmV4dChhY3Rpb24pO1xyXG4gICAgICAgICAgICBpZiAobGlzdGVuZXJNYXAuc2l6ZSA+IDApIHtcclxuICAgICAgICAgICAgICAgIHZhciBjdXJyZW50U3RhdGUgPSBhcGkuZ2V0U3RhdGUoKTtcclxuICAgICAgICAgICAgICAgIHZhciBsaXN0ZW5lckVudHJpZXMgPSBBcnJheS5mcm9tKGxpc3RlbmVyTWFwLnZhbHVlcygpKTtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIF9pID0gMCwgbGlzdGVuZXJFbnRyaWVzXzEgPSBsaXN0ZW5lckVudHJpZXM7IF9pIDwgbGlzdGVuZXJFbnRyaWVzXzEubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGVudHJ5ID0gbGlzdGVuZXJFbnRyaWVzXzFbX2ldO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBydW5MaXN0ZW5lciA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJ1bkxpc3RlbmVyID0gZW50cnkucHJlZGljYXRlKGFjdGlvbiwgY3VycmVudFN0YXRlLCBvcmlnaW5hbFN0YXRlKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKHByZWRpY2F0ZUVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJ1bkxpc3RlbmVyID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNhZmVseU5vdGlmeUVycm9yKG9uRXJyb3IsIHByZWRpY2F0ZUVycm9yLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYWlzZWRCeTogXCJwcmVkaWNhdGVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFydW5MaXN0ZW5lcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgbm90aWZ5TGlzdGVuZXIoZW50cnksIGFjdGlvbiwgYXBpLCBnZXRPcmlnaW5hbFN0YXRlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBmaW5hbGx5IHtcclxuICAgICAgICAgICAgb3JpZ2luYWxTdGF0ZSA9IElOVEVSTkFMX05JTF9UT0tFTjtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH07IH07IH07XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIG1pZGRsZXdhcmU6IG1pZGRsZXdhcmUsXHJcbiAgICAgICAgc3RhcnRMaXN0ZW5pbmc6IHN0YXJ0TGlzdGVuaW5nLFxyXG4gICAgICAgIHN0b3BMaXN0ZW5pbmc6IHN0b3BMaXN0ZW5pbmcsXHJcbiAgICAgICAgY2xlYXJMaXN0ZW5lcnM6IGNsZWFyTGlzdGVuZXJNaWRkbGV3YXJlXHJcbiAgICB9O1xyXG59XHJcbi8vIHNyYy9pbmRleC50c1xyXG5lbmFibGVFUzUoKTtcclxuZXhwb3J0IHsgTWlkZGxld2FyZUFycmF5LCBUYXNrQWJvcnRFcnJvciwgYWRkTGlzdGVuZXIsIGNsZWFyQWxsTGlzdGVuZXJzLCBjb25maWd1cmVTdG9yZSwgY3JlYXRlQWN0aW9uLCBjcmVhdGVBc3luY1RodW5rLCBjcmVhdGVEcmFmdFNhZmVTZWxlY3RvciwgY3JlYXRlRW50aXR5QWRhcHRlciwgY3JlYXRlSW1tdXRhYmxlU3RhdGVJbnZhcmlhbnRNaWRkbGV3YXJlLCBjcmVhdGVMaXN0ZW5lck1pZGRsZXdhcmUsIGRlZmF1bHQyIGFzIGNyZWF0ZU5leHRTdGF0ZSwgY3JlYXRlUmVkdWNlciwgY3JlYXRlU2VsZWN0b3IyIGFzIGNyZWF0ZVNlbGVjdG9yLCBjcmVhdGVTZXJpYWxpemFibGVTdGF0ZUludmFyaWFudE1pZGRsZXdhcmUsIGNyZWF0ZVNsaWNlLCBjdXJyZW50MiBhcyBjdXJyZW50LCBmaW5kTm9uU2VyaWFsaXphYmxlVmFsdWUsIGZyZWV6ZSwgZ2V0RGVmYXVsdE1pZGRsZXdhcmUsIGdldFR5cGUsIGlzQWxsT2YsIGlzQW55T2YsIGlzQXN5bmNUaHVua0FjdGlvbiwgaXNEcmFmdDQgYXMgaXNEcmFmdCwgaXNGdWxmaWxsZWQsIGlzSW1tdXRhYmxlRGVmYXVsdCwgaXNQZW5kaW5nLCBpc1BsYWluLCBpc1BsYWluT2JqZWN0LCBpc1JlamVjdGVkLCBpc1JlamVjdGVkV2l0aFZhbHVlLCBtaW5pU2VyaWFsaXplRXJyb3IsIG5hbm9pZCwgb3JpZ2luYWwsIHJlbW92ZUxpc3RlbmVyLCB1bndyYXBSZXN1bHQgfTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVkdXgtdG9vbGtpdC5lc20uanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgdXJsID0gU3RyaW5nKHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmwpOyAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cblxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH0gLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuXG5cbiAgaWYgKC9bXCInKCkgXFx0XFxuXXwoJTIwKS8udGVzdCh1cmwpIHx8IG9wdGlvbnMubmVlZFF1b3Rlcykge1xuICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgXCJcXFxcblwiKSwgXCJcXFwiXCIpO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCIvKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiwgdGhhdCwgYXMgbG9uZyBhcyBpdCBjb250aW51ZXMgdG8gYmUgaW52b2tlZCwgd2lsbCBub3RcbiAqIGJlIHRyaWdnZXJlZC4gVGhlIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIGFmdGVyIGl0IHN0b3BzIGJlaW5nIGNhbGxlZCBmb3JcbiAqIE4gbWlsbGlzZWNvbmRzLiBJZiBgaW1tZWRpYXRlYCBpcyBwYXNzZWQsIHRyaWdnZXIgdGhlIGZ1bmN0aW9uIG9uIHRoZVxuICogbGVhZGluZyBlZGdlLCBpbnN0ZWFkIG9mIHRoZSB0cmFpbGluZy4gVGhlIGZ1bmN0aW9uIGFsc28gaGFzIGEgcHJvcGVydHkgJ2NsZWFyJyBcbiAqIHRoYXQgaXMgYSBmdW5jdGlvbiB3aGljaCB3aWxsIGNsZWFyIHRoZSB0aW1lciB0byBwcmV2ZW50IHByZXZpb3VzbHkgc2NoZWR1bGVkIGV4ZWN1dGlvbnMuIFxuICpcbiAqIEBzb3VyY2UgdW5kZXJzY29yZS5qc1xuICogQHNlZSBodHRwOi8vdW5zY3JpcHRhYmxlLmNvbS8yMDA5LzAzLzIwL2RlYm91bmNpbmctamF2YXNjcmlwdC1tZXRob2RzL1xuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuY3Rpb24gdG8gd3JhcFxuICogQHBhcmFtIHtOdW1iZXJ9IHRpbWVvdXQgaW4gbXMgKGAxMDBgKVxuICogQHBhcmFtIHtCb29sZWFufSB3aGV0aGVyIHRvIGV4ZWN1dGUgYXQgdGhlIGJlZ2lubmluZyAoYGZhbHNlYClcbiAqIEBhcGkgcHVibGljXG4gKi9cbmZ1bmN0aW9uIGRlYm91bmNlKGZ1bmMsIHdhaXQsIGltbWVkaWF0ZSl7XG4gIHZhciB0aW1lb3V0LCBhcmdzLCBjb250ZXh0LCB0aW1lc3RhbXAsIHJlc3VsdDtcbiAgaWYgKG51bGwgPT0gd2FpdCkgd2FpdCA9IDEwMDtcblxuICBmdW5jdGlvbiBsYXRlcigpIHtcbiAgICB2YXIgbGFzdCA9IERhdGUubm93KCkgLSB0aW1lc3RhbXA7XG5cbiAgICBpZiAobGFzdCA8IHdhaXQgJiYgbGFzdCA+PSAwKSB7XG4gICAgICB0aW1lb3V0ID0gc2V0VGltZW91dChsYXRlciwgd2FpdCAtIGxhc3QpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aW1lb3V0ID0gbnVsbDtcbiAgICAgIGlmICghaW1tZWRpYXRlKSB7XG4gICAgICAgIHJlc3VsdCA9IGZ1bmMuYXBwbHkoY29udGV4dCwgYXJncyk7XG4gICAgICAgIGNvbnRleHQgPSBhcmdzID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgdmFyIGRlYm91bmNlZCA9IGZ1bmN0aW9uKCl7XG4gICAgY29udGV4dCA9IHRoaXM7XG4gICAgYXJncyA9IGFyZ3VtZW50cztcbiAgICB0aW1lc3RhbXAgPSBEYXRlLm5vdygpO1xuICAgIHZhciBjYWxsTm93ID0gaW1tZWRpYXRlICYmICF0aW1lb3V0O1xuICAgIGlmICghdGltZW91dCkgdGltZW91dCA9IHNldFRpbWVvdXQobGF0ZXIsIHdhaXQpO1xuICAgIGlmIChjYWxsTm93KSB7XG4gICAgICByZXN1bHQgPSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgY29udGV4dCA9IGFyZ3MgPSBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgZGVib3VuY2VkLmNsZWFyID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRpbWVvdXQpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgIHRpbWVvdXQgPSBudWxsO1xuICAgIH1cbiAgfTtcbiAgXG4gIGRlYm91bmNlZC5mbHVzaCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aW1lb3V0KSB7XG4gICAgICByZXN1bHQgPSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgY29udGV4dCA9IGFyZ3MgPSBudWxsO1xuICAgICAgXG4gICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICB0aW1lb3V0ID0gbnVsbDtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGRlYm91bmNlZDtcbn07XG5cbi8vIEFkZHMgY29tcGF0aWJpbGl0eSBmb3IgRVMgbW9kdWxlc1xuZGVib3VuY2UuZGVib3VuY2UgPSBkZWJvdW5jZTtcblxubW9kdWxlLmV4cG9ydHMgPSBkZWJvdW5jZTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gIGNvbnRleHRUeXBlOiB0cnVlLFxuICBjb250ZXh0VHlwZXM6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gIG1peGluczogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gIG5hbWU6IHRydWUsXG4gIGxlbmd0aDogdHJ1ZSxcbiAgcHJvdG90eXBlOiB0cnVlLFxuICBjYWxsZXI6IHRydWUsXG4gIGNhbGxlZTogdHJ1ZSxcbiAgYXJndW1lbnRzOiB0cnVlLFxuICBhcml0eTogdHJ1ZVxufTtcbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICByZW5kZXI6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZVxufTtcbnZhciBNRU1PX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIGNvbXBhcmU6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcblRZUEVfU1RBVElDU1tyZWFjdElzLkZvcndhcmRSZWZdID0gRk9SV0FSRF9SRUZfU1RBVElDUztcblRZUEVfU1RBVElDU1tyZWFjdElzLk1lbW9dID0gTUVNT19TVEFUSUNTO1xuXG5mdW5jdGlvbiBnZXRTdGF0aWNzKGNvbXBvbmVudCkge1xuICAvLyBSZWFjdCB2MTYuMTEgYW5kIGJlbG93XG4gIGlmIChyZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgfSAvLyBSZWFjdCB2MTYuMTIgYW5kIGFib3ZlXG5cblxuICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcbn1cblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcbiAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgfVxuXG4gICAgdmFyIHRhcmdldFN0YXRpY3MgPSBnZXRTdGF0aWNzKHRhcmdldENvbXBvbmVudCk7XG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiYgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksY2E9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiBwKGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifXZhciBkYT1uZXcgU2V0LGVhPXt9O2Z1bmN0aW9uIGZhKGEsYil7aGEoYSxiKTtoYShhK1wiQ2FwdHVyZVwiLGIpfVxuZnVuY3Rpb24gaGEoYSxiKXtlYVthXT1iO2ZvcihhPTA7YTxiLmxlbmd0aDthKyspZGEuYWRkKGJbYV0pfVxudmFyIGlhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSxqYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGthPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxsYT1cbnt9LG1hPXt9O2Z1bmN0aW9uIG9hKGEpe2lmKGphLmNhbGwobWEsYSkpcmV0dXJuITA7aWYoamEuY2FsbChsYSxhKSlyZXR1cm4hMTtpZihrYS50ZXN0KGEpKXJldHVybiBtYVthXT0hMDtsYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBwYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHFhKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fHBhKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gdihhLGIsYyxkLGUsZixnKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zjt0aGlzLnJlbW92ZUVtcHR5U3RyaW5nPWd9dmFyIHo9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwwLCExLGEsbnVsbCwhMSwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07eltiXT1uZXcgdihiLDEsITEsYVsxXSxudWxsLCExLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwyLCExLGEsbnVsbCwhMSwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBkaXNhYmxlUmVtb3RlUGxheWJhY2sgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMywhMCxhLG51bGwsITEsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsNCwhMSxhLG51bGwsITEsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSw2LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO3ZhciByYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHNhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJhLFxuc2EpO3pbYl09bmV3IHYoYiwxLCExLGEsbnVsbCwhMSwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYSxzYSk7eltiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYSxzYSk7eltiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuei54bGlua0hyZWY9bmV3IHYoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwLCExKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwLCEwKX0pO1xuZnVuY3Rpb24gdGEoYSxiLGMsZCl7dmFyIGU9ei5oYXNPd25Qcm9wZXJ0eShiKT96W2JdOm51bGw7aWYobnVsbCE9PWU/MCE9PWUudHlwZTpkfHwhKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0pcWEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP29hKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKX1cbnZhciB1YT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCx2YT1TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKSx3YT1TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpLHlhPVN5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKSx6YT1TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIiksQWE9U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpLEJhPVN5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKSxDYT1TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSxEYT1TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIiksRWE9U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpLEZhPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpLEdhPVN5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpLEhhPVN5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTtTeW1ib2wuZm9yKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtcbnZhciBJYT1TeW1ib2wuZm9yKFwicmVhY3Qub2Zmc2NyZWVuXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5jYWNoZVwiKTtTeW1ib2wuZm9yKFwicmVhY3QudHJhY2luZ19tYXJrZXJcIik7dmFyIEphPVN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBLYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9SmEmJmFbSmFdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIEE9T2JqZWN0LmFzc2lnbixMYTtmdW5jdGlvbiBNYShhKXtpZih2b2lkIDA9PT1MYSl0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goYyl7dmFyIGI9Yy5zdGFjay50cmltKCkubWF0Y2goL1xcbiggKihhdCApPykvKTtMYT1iJiZiWzFdfHxcIlwifXJldHVyblwiXFxuXCIrTGErYX12YXIgTmE9ITE7XG5mdW5jdGlvbiBPYShhLGIpe2lmKCFhfHxOYSlyZXR1cm5cIlwiO05hPSEwO3ZhciBjPUVycm9yLnByZXBhcmVTdGFja1RyYWNlO0Vycm9yLnByZXBhcmVTdGFja1RyYWNlPXZvaWQgMDt0cnl7aWYoYilpZihiPWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiLnByb3RvdHlwZSxcInByb3BzXCIse3NldDpmdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fX0pLFwib2JqZWN0XCI9PT10eXBlb2YgUmVmbGVjdCYmUmVmbGVjdC5jb25zdHJ1Y3Qpe3RyeXtSZWZsZWN0LmNvbnN0cnVjdChiLFtdKX1jYXRjaChsKXt2YXIgZD1sfVJlZmxlY3QuY29uc3RydWN0KGEsW10sYil9ZWxzZXt0cnl7Yi5jYWxsKCl9Y2F0Y2gobCl7ZD1sfWEuY2FsbChiLnByb3RvdHlwZSl9ZWxzZXt0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2gobCl7ZD1sfWEoKX19Y2F0Y2gobCl7aWYobCYmZCYmXCJzdHJpbmdcIj09PXR5cGVvZiBsLnN0YWNrKXtmb3IodmFyIGU9bC5zdGFjay5zcGxpdChcIlxcblwiKSxcbmY9ZC5zdGFjay5zcGxpdChcIlxcblwiKSxnPWUubGVuZ3RoLTEsaD1mLmxlbmd0aC0xOzE8PWcmJjA8PWgmJmVbZ10hPT1mW2hdOyloLS07Zm9yKDsxPD1nJiYwPD1oO2ctLSxoLS0paWYoZVtnXSE9PWZbaF0pe2lmKDEhPT1nfHwxIT09aCl7ZG8gaWYoZy0tLGgtLSwwPmh8fGVbZ10hPT1mW2hdKXt2YXIgaz1cIlxcblwiK2VbZ10ucmVwbGFjZShcIiBhdCBuZXcgXCIsXCIgYXQgXCIpO2EuZGlzcGxheU5hbWUmJmsuaW5jbHVkZXMoXCI8YW5vbnltb3VzPlwiKSYmKGs9ay5yZXBsYWNlKFwiPGFub255bW91cz5cIixhLmRpc3BsYXlOYW1lKSk7cmV0dXJuIGt9d2hpbGUoMTw9ZyYmMDw9aCl9YnJlYWt9fX1maW5hbGx5e05hPSExLEVycm9yLnByZXBhcmVTdGFja1RyYWNlPWN9cmV0dXJuKGE9YT9hLmRpc3BsYXlOYW1lfHxhLm5hbWU6XCJcIik/TWEoYSk6XCJcIn1cbmZ1bmN0aW9uIFBhKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnJldHVybiBNYShhLnR5cGUpO2Nhc2UgMTY6cmV0dXJuIE1hKFwiTGF6eVwiKTtjYXNlIDEzOnJldHVybiBNYShcIlN1c3BlbnNlXCIpO2Nhc2UgMTk6cmV0dXJuIE1hKFwiU3VzcGVuc2VMaXN0XCIpO2Nhc2UgMDpjYXNlIDI6Y2FzZSAxNTpyZXR1cm4gYT1PYShhLnR5cGUsITEpLGE7Y2FzZSAxMTpyZXR1cm4gYT1PYShhLnR5cGUucmVuZGVyLCExKSxhO2Nhc2UgMTpyZXR1cm4gYT1PYShhLnR5cGUsITApLGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1cbmZ1bmN0aW9uIFFhKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgeWE6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2Ugd2E6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIEFhOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIHphOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgRWE6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgRmE6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgQ2E6cmV0dXJuKGEuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgQmE6cmV0dXJuKGEuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgRGE6dmFyIGI9YS5yZW5kZXI7YT1hLmRpc3BsYXlOYW1lO2F8fChhPWIuZGlzcGxheU5hbWV8fFxuYi5uYW1lfHxcIlwiLGE9XCJcIiE9PWE/XCJGb3J3YXJkUmVmKFwiK2ErXCIpXCI6XCJGb3J3YXJkUmVmXCIpO3JldHVybiBhO2Nhc2UgR2E6cmV0dXJuIGI9YS5kaXNwbGF5TmFtZXx8bnVsbCxudWxsIT09Yj9iOlFhKGEudHlwZSl8fFwiTWVtb1wiO2Nhc2UgSGE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIFFhKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBSYShhKXt2YXIgYj1hLnR5cGU7c3dpdGNoKGEudGFnKXtjYXNlIDI0OnJldHVyblwiQ2FjaGVcIjtjYXNlIDk6cmV0dXJuKGIuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgMTA6cmV0dXJuKGIuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgMTg6cmV0dXJuXCJEZWh5ZHJhdGVkRnJhZ21lbnRcIjtjYXNlIDExOnJldHVybiBhPWIucmVuZGVyLGE9YS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxcIlwiLGIuZGlzcGxheU5hbWV8fChcIlwiIT09YT9cIkZvcndhcmRSZWYoXCIrYStcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSA3OnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIDU6cmV0dXJuIGI7Y2FzZSA0OnJldHVyblwiUG9ydGFsXCI7Y2FzZSAzOnJldHVyblwiUm9vdFwiO2Nhc2UgNjpyZXR1cm5cIlRleHRcIjtjYXNlIDE2OnJldHVybiBRYShiKTtjYXNlIDg6cmV0dXJuIGI9PT16YT9cIlN0cmljdE1vZGVcIjpcIk1vZGVcIjtjYXNlIDIyOnJldHVyblwiT2Zmc2NyZWVuXCI7XG5jYXNlIDEyOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIDIxOnJldHVyblwiU2NvcGVcIjtjYXNlIDEzOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIDE5OnJldHVyblwiU3VzcGVuc2VMaXN0XCI7Y2FzZSAyNTpyZXR1cm5cIlRyYWNpbmdNYXJrZXJcIjtjYXNlIDE6Y2FzZSAwOmNhc2UgMTc6Y2FzZSAyOmNhc2UgMTQ6Y2FzZSAxNTppZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYilyZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBTYShhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7Y2FzZSBcIm9iamVjdFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBUYShhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gVWEoYSl7dmFyIGI9VGEoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZhKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYShhKSl9ZnVuY3Rpb24gV2EoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRhKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gWGEoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fVxuZnVuY3Rpb24gWWEoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIEEoe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfWZ1bmN0aW9uIFphKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPVNhKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gYWIoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZ0YShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gYmIoYSxiKXthYihhLGIpO3ZhciBjPVNhKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP2NiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJmNiKGEsYi50eXBlLFNhKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gZGIoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIGNiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8WGEoYS5vd25lckRvY3VtZW50KSE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfXZhciBlYj1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gZmIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK1NhKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBnYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IocCg5MSkpO3JldHVybiBBKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGhiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHAoOTIpKTtpZihlYihjKSl7aWYoMTxjLmxlbmd0aCl0aHJvdyBFcnJvcihwKDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6U2EoYyl9fVxuZnVuY3Rpb24gaWIoYSxiKXt2YXIgYz1TYShiLnZhbHVlKSxkPVNhKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gamIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX1mdW5jdGlvbiBrYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fVxuZnVuY3Rpb24gbGIoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2tiKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIG1iLG5iPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIhPT1hLm5hbWVzcGFjZVVSSXx8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle21iPW1ifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO21iLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPW1iLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIG9iKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgcGI9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGFzcGVjdFJhdGlvOiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCxcbnpvb206ITAsZmlsbE9wYWNpdHk6ITAsZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0scWI9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKHBiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3FiLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7cGJbYl09cGJbYV19KX0pO2Z1bmN0aW9uIHJiKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxwYi5oYXNPd25Qcm9wZXJ0eShhKSYmcGJbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gc2IoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9cmIoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgdGI9QSh7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHViKGEsYil7aWYoYil7aWYodGJbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcihwKDEzNyxhKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcihwKDYwKSk7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MfHwhKFwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcihwKDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcihwKDYyKSk7fX1cbmZ1bmN0aW9uIHZiKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX12YXIgd2I9bnVsbDtmdW5jdGlvbiB4YihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9dmFyIHliPW51bGwsemI9bnVsbCxBYj1udWxsO1xuZnVuY3Rpb24gQmIoYSl7aWYoYT1DYihhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHliKXRocm93IEVycm9yKHAoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9RGIoYikseWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gRWIoYSl7emI/QWI/QWIucHVzaChhKTpBYj1bYV06emI9YX1mdW5jdGlvbiBGYigpe2lmKHpiKXt2YXIgYT16YixiPUFiO0FiPXpiPW51bGw7QmIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUJiKGJbYV0pfX1mdW5jdGlvbiBHYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEhiKCl7fXZhciBJYj0hMTtmdW5jdGlvbiBKYihhLGIsYyl7aWYoSWIpcmV0dXJuIGEoYixjKTtJYj0hMDt0cnl7cmV0dXJuIEdiKGEsYixjKX1maW5hbGx5e2lmKEliPSExLG51bGwhPT16Ynx8bnVsbCE9PUFiKUhiKCksRmIoKX19XG5mdW5jdGlvbiBLYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKG51bGw9PT1jKXJldHVybiBudWxsO3ZhciBkPURiKGMpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBjKXRocm93IEVycm9yKHAoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgTGI9ITE7aWYoaWEpdHJ5e3ZhciBNYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoTWIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe0xiPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLE1iLE1iKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixNYixNYil9Y2F0Y2goYSl7TGI9ITF9ZnVuY3Rpb24gTmIoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19dmFyIE9iPSExLFBiPW51bGwsUWI9ITEsUmI9bnVsbCxTYj17b25FcnJvcjpmdW5jdGlvbihhKXtPYj0hMDtQYj1hfX07ZnVuY3Rpb24gVGIoYSxiLGMsZCxlLGYsZyxoLGspe09iPSExO1BiPW51bGw7TmIuYXBwbHkoU2IsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIFViKGEsYixjLGQsZSxmLGcsaCxrKXtUYi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoT2Ipe2lmKE9iKXt2YXIgbD1QYjtPYj0hMTtQYj1udWxsfWVsc2UgdGhyb3cgRXJyb3IocCgxOTgpKTtRYnx8KFFiPSEwLFJiPWwpfX1mdW5jdGlvbiBWYihhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZmxhZ3MmNDA5OCkmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uIFdiKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gWGIoYSl7aWYoVmIoYSkhPT1hKXRocm93IEVycm9yKHAoMTg4KSk7fVxuZnVuY3Rpb24gWWIoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9VmIoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IocCgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gWGIoZSksYTtpZihmPT09ZClyZXR1cm4gWGIoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcihwKDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHAoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IocCgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHAoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBaYihhKXthPVliKGEpO3JldHVybiBudWxsIT09YT8kYihhKTpudWxsfWZ1bmN0aW9uICRiKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhO2ZvcihhPWEuY2hpbGQ7bnVsbCE9PWE7KXt2YXIgYj0kYihhKTtpZihudWxsIT09YilyZXR1cm4gYjthPWEuc2libGluZ31yZXR1cm4gbnVsbH1cbnZhciBhYz1jYS51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLGJjPWNhLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLGNjPWNhLnVuc3RhYmxlX3Nob3VsZFlpZWxkLGRjPWNhLnVuc3RhYmxlX3JlcXVlc3RQYWludCxCPWNhLnVuc3RhYmxlX25vdyxlYz1jYS51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxmYz1jYS51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxnYz1jYS51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxoYz1jYS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxpYz1jYS51bnN0YWJsZV9Mb3dQcmlvcml0eSxqYz1jYS51bnN0YWJsZV9JZGxlUHJpb3JpdHksa2M9bnVsbCxsYz1udWxsO2Z1bmN0aW9uIG1jKGEpe2lmKGxjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbGMub25Db21taXRGaWJlclJvb3QpdHJ5e2xjLm9uQ29tbWl0RmliZXJSb290KGtjLGEsdm9pZCAwLDEyOD09PShhLmN1cnJlbnQuZmxhZ3MmMTI4KSl9Y2F0Y2goYil7fX1cbnZhciBvYz1NYXRoLmNsejMyP01hdGguY2x6MzI6bmMscGM9TWF0aC5sb2cscWM9TWF0aC5MTjI7ZnVuY3Rpb24gbmMoYSl7YT4+Pj0wO3JldHVybiAwPT09YT8zMjozMS0ocGMoYSkvcWN8MCl8MH12YXIgcmM9NjQsc2M9NDE5NDMwNDtcbmZ1bmN0aW9uIHRjKGEpe3N3aXRjaChhJi1hKXtjYXNlIDE6cmV0dXJuIDE7Y2FzZSAyOnJldHVybiAyO2Nhc2UgNDpyZXR1cm4gNDtjYXNlIDg6cmV0dXJuIDg7Y2FzZSAxNjpyZXR1cm4gMTY7Y2FzZSAzMjpyZXR1cm4gMzI7Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpyZXR1cm4gYSY0MTk0MjQwO2Nhc2UgNDE5NDMwNDpjYXNlIDgzODg2MDg6Y2FzZSAxNjc3NzIxNjpjYXNlIDMzNTU0NDMyOmNhc2UgNjcxMDg4NjQ6cmV0dXJuIGEmMTMwMDIzNDI0O2Nhc2UgMTM0MjE3NzI4OnJldHVybiAxMzQyMTc3Mjg7Y2FzZSAyNjg0MzU0NTY6cmV0dXJuIDI2ODQzNTQ1NjtjYXNlIDUzNjg3MDkxMjpyZXR1cm4gNTM2ODcwOTEyO2Nhc2UgMTA3Mzc0MTgyNDpyZXR1cm4gMTA3Mzc0MTgyNDtcbmRlZmF1bHQ6cmV0dXJuIGF9fWZ1bmN0aW9uIHVjKGEsYil7dmFyIGM9YS5wZW5kaW5nTGFuZXM7aWYoMD09PWMpcmV0dXJuIDA7dmFyIGQ9MCxlPWEuc3VzcGVuZGVkTGFuZXMsZj1hLnBpbmdlZExhbmVzLGc9YyYyNjg0MzU0NTU7aWYoMCE9PWcpe3ZhciBoPWcmfmU7MCE9PWg/ZD10YyhoKTooZiY9ZywwIT09ZiYmKGQ9dGMoZikpKX1lbHNlIGc9YyZ+ZSwwIT09Zz9kPXRjKGcpOjAhPT1mJiYoZD10YyhmKSk7aWYoMD09PWQpcmV0dXJuIDA7aWYoMCE9PWImJmIhPT1kJiYwPT09KGImZSkmJihlPWQmLWQsZj1iJi1iLGU+PWZ8fDE2PT09ZSYmMCE9PShmJjQxOTQyNDApKSlyZXR1cm4gYjswIT09KGQmNCkmJihkfD1jJjE2KTtiPWEuZW50YW5nbGVkTGFuZXM7aWYoMCE9PWIpZm9yKGE9YS5lbnRhbmdsZW1lbnRzLGImPWQ7MDxiOyljPTMxLW9jKGIpLGU9MTw8YyxkfD1hW2NdLGImPX5lO3JldHVybiBkfVxuZnVuY3Rpb24gdmMoYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDQ6cmV0dXJuIGIrMjUwO2Nhc2UgODpjYXNlIDE2OmNhc2UgMzI6Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpyZXR1cm4gYis1RTM7Y2FzZSA0MTk0MzA0OmNhc2UgODM4ODYwODpjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6Y2FzZSA2NzEwODg2NDpyZXR1cm4tMTtjYXNlIDEzNDIxNzcyODpjYXNlIDI2ODQzNTQ1NjpjYXNlIDUzNjg3MDkxMjpjYXNlIDEwNzM3NDE4MjQ6cmV0dXJuLTE7ZGVmYXVsdDpyZXR1cm4tMX19XG5mdW5jdGlvbiB3YyhhLGIpe2Zvcih2YXIgYz1hLnN1c3BlbmRlZExhbmVzLGQ9YS5waW5nZWRMYW5lcyxlPWEuZXhwaXJhdGlvblRpbWVzLGY9YS5wZW5kaW5nTGFuZXM7MDxmOyl7dmFyIGc9MzEtb2MoZiksaD0xPDxnLGs9ZVtnXTtpZigtMT09PWspe2lmKDA9PT0oaCZjKXx8MCE9PShoJmQpKWVbZ109dmMoaCxiKX1lbHNlIGs8PWImJihhLmV4cGlyZWRMYW5lc3w9aCk7ZiY9fmh9fWZ1bmN0aW9uIHhjKGEpe2E9YS5wZW5kaW5nTGFuZXMmLTEwNzM3NDE4MjU7cmV0dXJuIDAhPT1hP2E6YSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiB5Yygpe3ZhciBhPXJjO3JjPDw9MTswPT09KHJjJjQxOTQyNDApJiYocmM9NjQpO3JldHVybiBhfWZ1bmN0aW9uIHpjKGEpe2Zvcih2YXIgYj1bXSxjPTA7MzE+YztjKyspYi5wdXNoKGEpO3JldHVybiBifVxuZnVuY3Rpb24gQWMoYSxiLGMpe2EucGVuZGluZ0xhbmVzfD1iOzUzNjg3MDkxMiE9PWImJihhLnN1c3BlbmRlZExhbmVzPTAsYS5waW5nZWRMYW5lcz0wKTthPWEuZXZlbnRUaW1lcztiPTMxLW9jKGIpO2FbYl09Y31mdW5jdGlvbiBCYyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzJn5iO2EucGVuZGluZ0xhbmVzPWI7YS5zdXNwZW5kZWRMYW5lcz0wO2EucGluZ2VkTGFuZXM9MDthLmV4cGlyZWRMYW5lcyY9YjthLm11dGFibGVSZWFkTGFuZXMmPWI7YS5lbnRhbmdsZWRMYW5lcyY9YjtiPWEuZW50YW5nbGVtZW50czt2YXIgZD1hLmV2ZW50VGltZXM7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxjOyl7dmFyIGU9MzEtb2MoYyksZj0xPDxlO2JbZV09MDtkW2VdPS0xO2FbZV09LTE7YyY9fmZ9fVxuZnVuY3Rpb24gQ2MoYSxiKXt2YXIgYz1hLmVudGFuZ2xlZExhbmVzfD1iO2ZvcihhPWEuZW50YW5nbGVtZW50cztjOyl7dmFyIGQ9MzEtb2MoYyksZT0xPDxkO2UmYnxhW2RdJmImJihhW2RdfD1iKTtjJj1+ZX19dmFyIEM9MDtmdW5jdGlvbiBEYyhhKXthJj0tYTtyZXR1cm4gMTxhPzQ8YT8wIT09KGEmMjY4NDM1NDU1KT8xNjo1MzY4NzA5MTI6NDoxfXZhciBFYyxGYyxHYyxIYyxJYyxKYz0hMSxLYz1bXSxMYz1udWxsLE1jPW51bGwsTmM9bnVsbCxPYz1uZXcgTWFwLFBjPW5ldyBNYXAsUWM9W10sUmM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gU2MoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjpjYXNlIFwiZm9jdXNvdXRcIjpMYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6TWM9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6TmM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOk9jLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOlBjLmRlbGV0ZShiLnBvaW50ZXJJZCl9fVxuZnVuY3Rpb24gVGMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT17YmxvY2tlZE9uOmIsZG9tRXZlbnROYW1lOmMsZXZlbnRTeXN0ZW1GbGFnczpkLG5hdGl2ZUV2ZW50OmYsdGFyZ2V0Q29udGFpbmVyczpbZV19LG51bGwhPT1iJiYoYj1DYihiKSxudWxsIT09YiYmRmMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO2I9YS50YXJnZXRDb250YWluZXJzO251bGwhPT1lJiYtMT09PWIuaW5kZXhPZihlKSYmYi5wdXNoKGUpO3JldHVybiBhfVxuZnVuY3Rpb24gVWMoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzaW5cIjpyZXR1cm4gTGM9VGMoTGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIE1jPVRjKE1jLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBOYz1UYyhOYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO09jLnNldChmLFRjKE9jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxQYy5zZXQoZixUYyhQYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiBWYyhhKXt2YXIgYj1XYyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPVZiKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPVdiKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO0ljKGEucHJpb3JpdHksZnVuY3Rpb24oKXtHYyhjKX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9XG5mdW5jdGlvbiBYYyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9WWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbD09PWMpe2M9YS5uYXRpdmVFdmVudDt2YXIgZD1uZXcgYy5jb25zdHJ1Y3RvcihjLnR5cGUsYyk7d2I9ZDtjLnRhcmdldC5kaXNwYXRjaEV2ZW50KGQpO3diPW51bGx9ZWxzZSByZXR1cm4gYj1DYihjKSxudWxsIT09YiYmRmMoYiksYS5ibG9ja2VkT249YywhMTtiLnNoaWZ0KCl9cmV0dXJuITB9ZnVuY3Rpb24gWmMoYSxiLGMpe1hjKGEpJiZjLmRlbGV0ZShiKX1mdW5jdGlvbiAkYygpe0pjPSExO251bGwhPT1MYyYmWGMoTGMpJiYoTGM9bnVsbCk7bnVsbCE9PU1jJiZYYyhNYykmJihNYz1udWxsKTtudWxsIT09TmMmJlhjKE5jKSYmKE5jPW51bGwpO09jLmZvckVhY2goWmMpO1BjLmZvckVhY2goWmMpfVxuZnVuY3Rpb24gYWQoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLEpjfHwoSmM9ITAsY2EudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhjYS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSwkYykpKX1cbmZ1bmN0aW9uIGJkKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIGFkKGIsYSl9aWYoMDxLYy5sZW5ndGgpe2FkKEtjWzBdLGEpO2Zvcih2YXIgYz0xO2M8S2MubGVuZ3RoO2MrKyl7dmFyIGQ9S2NbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1MYyYmYWQoTGMsYSk7bnVsbCE9PU1jJiZhZChNYyxhKTtudWxsIT09TmMmJmFkKE5jLGEpO09jLmZvckVhY2goYik7UGMuZm9yRWFjaChiKTtmb3IoYz0wO2M8UWMubGVuZ3RoO2MrKylkPVFjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxRYy5sZW5ndGgmJihjPVFjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KVZjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmUWMuc2hpZnQoKX12YXIgY2Q9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsZGQ9ITA7XG5mdW5jdGlvbiBlZChhLGIsYyxkKXt2YXIgZT1DLGY9Y2QudHJhbnNpdGlvbjtjZC50cmFuc2l0aW9uPW51bGw7dHJ5e0M9MSxmZChhLGIsYyxkKX1maW5hbGx5e0M9ZSxjZC50cmFuc2l0aW9uPWZ9fWZ1bmN0aW9uIGdkKGEsYixjLGQpe3ZhciBlPUMsZj1jZC50cmFuc2l0aW9uO2NkLnRyYW5zaXRpb249bnVsbDt0cnl7Qz00LGZkKGEsYixjLGQpfWZpbmFsbHl7Qz1lLGNkLnRyYW5zaXRpb249Zn19XG5mdW5jdGlvbiBmZChhLGIsYyxkKXtpZihkZCl7dmFyIGU9WWMoYSxiLGMsZCk7aWYobnVsbD09PWUpaGQoYSxiLGQsaWQsYyksU2MoYSxkKTtlbHNlIGlmKFVjKGUsYSxiLGMsZCkpZC5zdG9wUHJvcGFnYXRpb24oKTtlbHNlIGlmKFNjKGEsZCksYiY0JiYtMTxSYy5pbmRleE9mKGEpKXtmb3IoO251bGwhPT1lOyl7dmFyIGY9Q2IoZSk7bnVsbCE9PWYmJkVjKGYpO2Y9WWMoYSxiLGMsZCk7bnVsbD09PWYmJmhkKGEsYixkLGlkLGMpO2lmKGY9PT1lKWJyZWFrO2U9Zn1udWxsIT09ZSYmZC5zdG9wUHJvcGFnYXRpb24oKX1lbHNlIGhkKGEsYixkLG51bGwsYyl9fXZhciBpZD1udWxsO1xuZnVuY3Rpb24gWWMoYSxiLGMsZCl7aWQ9bnVsbDthPXhiKGQpO2E9V2MoYSk7aWYobnVsbCE9PWEpaWYoYj1WYihhKSxudWxsPT09YilhPW51bGw7ZWxzZSBpZihjPWIudGFnLDEzPT09Yyl7YT1XYihiKTtpZihudWxsIT09YSlyZXR1cm4gYTthPW51bGx9ZWxzZSBpZigzPT09Yyl7aWYoYi5zdGF0ZU5vZGUuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZClyZXR1cm4gMz09PWIudGFnP2Iuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDthPW51bGx9ZWxzZSBiIT09YSYmKGE9bnVsbCk7aWQ9YTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGpkKGEpe3N3aXRjaChhKXtjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsaWNrXCI6Y2FzZSBcImNsb3NlXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjpjYXNlIFwiZm9jdXNpblwiOmNhc2UgXCJmb2N1c291dFwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwia2V5dXBcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwicGFzdGVcIjpjYXNlIFwicGF1c2VcIjpjYXNlIFwicGxheVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmNhc2UgXCJyYXRlY2hhbmdlXCI6Y2FzZSBcInJlc2V0XCI6Y2FzZSBcInJlc2l6ZVwiOmNhc2UgXCJzZWVrZWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjpjYXNlIFwidm9sdW1lY2hhbmdlXCI6Y2FzZSBcImNoYW5nZVwiOmNhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjpjYXNlIFwidGV4dElucHV0XCI6Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjpjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpjYXNlIFwiYmVmb3JlYmx1clwiOmNhc2UgXCJhZnRlcmJsdXJcIjpjYXNlIFwiYmVmb3JlaW5wdXRcIjpjYXNlIFwiYmx1clwiOmNhc2UgXCJmdWxsc2NyZWVuY2hhbmdlXCI6Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImhhc2hjaGFuZ2VcIjpjYXNlIFwicG9wc3RhdGVcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInNlbGVjdHN0YXJ0XCI6cmV0dXJuIDE7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwic2Nyb2xsXCI6Y2FzZSBcInRvZ2dsZVwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwid2hlZWxcIjpjYXNlIFwibW91c2VlbnRlclwiOmNhc2UgXCJtb3VzZWxlYXZlXCI6Y2FzZSBcInBvaW50ZXJlbnRlclwiOmNhc2UgXCJwb2ludGVybGVhdmVcIjpyZXR1cm4gNDtcbmNhc2UgXCJtZXNzYWdlXCI6c3dpdGNoKGVjKCkpe2Nhc2UgZmM6cmV0dXJuIDE7Y2FzZSBnYzpyZXR1cm4gNDtjYXNlIGhjOmNhc2UgaWM6cmV0dXJuIDE2O2Nhc2UgamM6cmV0dXJuIDUzNjg3MDkxMjtkZWZhdWx0OnJldHVybiAxNn1kZWZhdWx0OnJldHVybiAxNn19dmFyIGtkPW51bGwsbGQ9bnVsbCxtZD1udWxsO2Z1bmN0aW9uIG5kKCl7aWYobWQpcmV0dXJuIG1kO3ZhciBhLGI9bGQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gbWQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1cbmZ1bmN0aW9uIG9kKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfWZ1bmN0aW9uIHBkKCl7cmV0dXJuITB9ZnVuY3Rpb24gcWQoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHJkKGEpe2Z1bmN0aW9uIGIoYixkLGUsZixnKXt0aGlzLl9yZWFjdE5hbWU9Yjt0aGlzLl90YXJnZXRJbnN0PWU7dGhpcy50eXBlPWQ7dGhpcy5uYXRpdmVFdmVudD1mO3RoaXMudGFyZ2V0PWc7dGhpcy5jdXJyZW50VGFyZ2V0PW51bGw7Zm9yKHZhciBjIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShjKSYmKGI9YVtjXSx0aGlzW2NdPWI/YihmKTpmW2NdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Zi5kZWZhdWx0UHJldmVudGVkP2YuZGVmYXVsdFByZXZlbnRlZDohMT09PWYucmV0dXJuVmFsdWUpP3BkOnFkO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cWQ7cmV0dXJuIHRoaXN9QShiLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmXG4oYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9cGQpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cGQpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7fSxpc1BlcnNpc3RlbnQ6cGR9KTtyZXR1cm4gYn1cbnZhciBzZD17ZXZlbnRQaGFzZTowLGJ1YmJsZXM6MCxjYW5jZWxhYmxlOjAsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDowLGlzVHJ1c3RlZDowfSx0ZD1yZChzZCksdWQ9QSh7fSxzZCx7dmlldzowLGRldGFpbDowfSksdmQ9cmQodWQpLHdkLHhkLHlkLEFkPUEoe30sdWQse3NjcmVlblg6MCxzY3JlZW5ZOjAsY2xpZW50WDowLGNsaWVudFk6MCxwYWdlWDowLHBhZ2VZOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLGdldE1vZGlmaWVyU3RhdGU6emQsYnV0dG9uOjAsYnV0dG9uczowLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIHZvaWQgMD09PWEucmVsYXRlZFRhcmdldD9hLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQ6YS5yZWxhdGVkVGFyZ2V0fSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluXG5hKXJldHVybiBhLm1vdmVtZW50WDthIT09eWQmJih5ZCYmXCJtb3VzZW1vdmVcIj09PWEudHlwZT8od2Q9YS5zY3JlZW5YLXlkLnNjcmVlblgseGQ9YS5zY3JlZW5ZLXlkLnNjcmVlblkpOnhkPXdkPTAseWQ9YSk7cmV0dXJuIHdkfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJtb3ZlbWVudFlcImluIGE/YS5tb3ZlbWVudFk6eGR9fSksQmQ9cmQoQWQpLENkPUEoe30sQWQse2RhdGFUcmFuc2ZlcjowfSksRGQ9cmQoQ2QpLEVkPUEoe30sdWQse3JlbGF0ZWRUYXJnZXQ6MH0pLEZkPXJkKEVkKSxHZD1BKHt9LHNkLHthbmltYXRpb25OYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxIZD1yZChHZCksSWQ9QSh7fSxzZCx7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLEpkPXJkKElkKSxLZD1BKHt9LHNkLHtkYXRhOjB9KSxMZD1yZChLZCksTWQ9e0VzYzpcIkVzY2FwZVwiLFxuU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sTmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsXG4xMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LE9kPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9kW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gemQoKXtyZXR1cm4gUGR9XG52YXIgUWQ9QSh7fSx1ZCx7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1NZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/TmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxjb2RlOjAsbG9jYXRpb246MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAscmVwZWF0OjAsbG9jYWxlOjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2QoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLFJkPXJkKFFkKSxTZD1BKHt9LEFkLHtwb2ludGVySWQ6MCx3aWR0aDowLGhlaWdodDowLHByZXNzdXJlOjAsdGFuZ2VudGlhbFByZXNzdXJlOjAsdGlsdFg6MCx0aWx0WTowLHR3aXN0OjAscG9pbnRlclR5cGU6MCxpc1ByaW1hcnk6MH0pLFRkPXJkKFNkKSxVZD1BKHt9LHVkLHt0b3VjaGVzOjAsdGFyZ2V0VG91Y2hlczowLGNoYW5nZWRUb3VjaGVzOjAsYWx0S2V5OjAsbWV0YUtleTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGdldE1vZGlmaWVyU3RhdGU6emR9KSxWZD1yZChVZCksV2Q9QSh7fSxzZCx7cHJvcGVydHlOYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxYZD1yZChXZCksWWQ9QSh7fSxBZCx7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluIGE/LWEud2hlZWxEZWx0YVg6MH0sXG5kZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6MCxkZWx0YU1vZGU6MH0pLFpkPXJkKFlkKSwkZD1bOSwxMywyNywzMl0sYWU9aWEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGJlPW51bGw7aWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGJlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7dmFyIGNlPWlhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhYmUsZGU9aWEmJighYWV8fGJlJiY4PGJlJiYxMT49YmUpLGVlPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLGZlPSExO1xuZnVuY3Rpb24gZ2UoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT0kZC5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiZm9jdXNvdXRcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBoZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBpZT0hMTtmdW5jdGlvbiBqZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gaGUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO2ZlPSEwO3JldHVybiBlZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1lZSYmZmU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24ga2UoYSxiKXtpZihpZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhYWUmJmdlKGEsYik/KGE9bmQoKSxtZD1sZD1rZD1udWxsLGllPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBkZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgbGU9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gbWUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFsZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9ZnVuY3Rpb24gbmUoYSxiLGMsZCl7RWIoZCk7Yj1vZShiLFwib25DaGFuZ2VcIik7MDxiLmxlbmd0aCYmKGM9bmV3IHRkKFwib25DaGFuZ2VcIixcImNoYW5nZVwiLG51bGwsYyxkKSxhLnB1c2goe2V2ZW50OmMsbGlzdGVuZXJzOmJ9KSl9dmFyIHBlPW51bGwscWU9bnVsbDtmdW5jdGlvbiByZShhKXtzZShhLDApfWZ1bmN0aW9uIHRlKGEpe3ZhciBiPXVlKGEpO2lmKFdhKGIpKXJldHVybiBhfVxuZnVuY3Rpb24gdmUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgd2U9ITE7aWYoaWEpe3ZhciB4ZTtpZihpYSl7dmFyIHllPVwib25pbnB1dFwiaW4gZG9jdW1lbnQ7aWYoIXllKXt2YXIgemU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTt6ZS5zZXRBdHRyaWJ1dGUoXCJvbmlucHV0XCIsXCJyZXR1cm47XCIpO3llPVwiZnVuY3Rpb25cIj09PXR5cGVvZiB6ZS5vbmlucHV0fXhlPXllfWVsc2UgeGU9ITE7d2U9eGUmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSl9ZnVuY3Rpb24gQWUoKXtwZSYmKHBlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSxxZT1wZT1udWxsKX1mdW5jdGlvbiBCZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmdGUocWUpKXt2YXIgYj1bXTtuZShiLHFlLGEseGIoYSkpO0piKHJlLGIpfX1cbmZ1bmN0aW9uIENlKGEsYixjKXtcImZvY3VzaW5cIj09PWE/KEFlKCkscGU9YixxZT1jLHBlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSk6XCJmb2N1c291dFwiPT09YSYmQWUoKX1mdW5jdGlvbiBEZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiB0ZShxZSl9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBGZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBHZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIEhlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOkdlO1xuZnVuY3Rpb24gSWUoYSxiKXtpZihIZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPWNbZF07aWYoIWphLmNhbGwoYixlKXx8IUhlKGFbZV0sYltlXSkpcmV0dXJuITF9cmV0dXJuITB9ZnVuY3Rpb24gSmUoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gS2UoYSxiKXt2YXIgYz1KZShhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1KZShjKX19ZnVuY3Rpb24gTGUoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9MZShhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBNZSgpe2Zvcih2YXIgYT13aW5kb3csYj1YYSgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1YYShhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBOZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxuZnVuY3Rpb24gT2UoYSl7dmFyIGI9TWUoKSxjPWEuZm9jdXNlZEVsZW0sZD1hLnNlbGVjdGlvblJhbmdlO2lmKGIhPT1jJiZjJiZjLm93bmVyRG9jdW1lbnQmJkxlKGMub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsYykpe2lmKG51bGwhPT1kJiZOZShjKSlpZihiPWQuc3RhcnQsYT1kLmVuZCx2b2lkIDA9PT1hJiYoYT1iKSxcInNlbGVjdGlvblN0YXJ0XCJpbiBjKWMuc2VsZWN0aW9uU3RhcnQ9YixjLnNlbGVjdGlvbkVuZD1NYXRoLm1pbihhLGMudmFsdWUubGVuZ3RoKTtlbHNlIGlmKGE9KGI9Yy5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJmIuZGVmYXVsdFZpZXd8fHdpbmRvdyxhLmdldFNlbGVjdGlvbil7YT1hLmdldFNlbGVjdGlvbigpO3ZhciBlPWMudGV4dENvbnRlbnQubGVuZ3RoLGY9TWF0aC5taW4oZC5zdGFydCxlKTtkPXZvaWQgMD09PWQuZW5kP2Y6TWF0aC5taW4oZC5lbmQsZSk7IWEuZXh0ZW5kJiZmPmQmJihlPWQsZD1mLGY9ZSk7ZT1LZShjLGYpO3ZhciBnPUtlKGMsXG5kKTtlJiZnJiYoMSE9PWEucmFuZ2VDb3VudHx8YS5hbmNob3JOb2RlIT09ZS5ub2RlfHxhLmFuY2hvck9mZnNldCE9PWUub2Zmc2V0fHxhLmZvY3VzTm9kZSE9PWcubm9kZXx8YS5mb2N1c09mZnNldCE9PWcub2Zmc2V0KSYmKGI9Yi5jcmVhdGVSYW5nZSgpLGIuc2V0U3RhcnQoZS5ub2RlLGUub2Zmc2V0KSxhLnJlbW92ZUFsbFJhbmdlcygpLGY+ZD8oYS5hZGRSYW5nZShiKSxhLmV4dGVuZChnLm5vZGUsZy5vZmZzZXQpKTooYi5zZXRFbmQoZy5ub2RlLGcub2Zmc2V0KSxhLmFkZFJhbmdlKGIpKSl9Yj1bXTtmb3IoYT1jO2E9YS5wYXJlbnROb2RlOykxPT09YS5ub2RlVHlwZSYmYi5wdXNoKHtlbGVtZW50OmEsbGVmdDphLnNjcm9sbExlZnQsdG9wOmEuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZm9jdXMmJmMuZm9jdXMoKTtmb3IoYz0wO2M8Yi5sZW5ndGg7YysrKWE9YltjXSxhLmVsZW1lbnQuc2Nyb2xsTGVmdD1hLmxlZnQsYS5lbGVtZW50LnNjcm9sbFRvcD1hLnRvcH19XG52YXIgUGU9aWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxRZT1udWxsLFJlPW51bGwsU2U9bnVsbCxUZT0hMTtcbmZ1bmN0aW9uIFVlKGEsYixjKXt2YXIgZD1jLndpbmRvdz09PWM/Yy5kb2N1bWVudDo5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDtUZXx8bnVsbD09UWV8fFFlIT09WGEoZCl8fChkPVFlLFwic2VsZWN0aW9uU3RhcnRcImluIGQmJk5lKGQpP2Q9e3N0YXJ0OmQuc2VsZWN0aW9uU3RhcnQsZW5kOmQuc2VsZWN0aW9uRW5kfTooZD0oZC5vd25lckRvY3VtZW50JiZkLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksZD17YW5jaG9yTm9kZTpkLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmQuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpkLmZvY3VzTm9kZSxmb2N1c09mZnNldDpkLmZvY3VzT2Zmc2V0fSksU2UmJkllKFNlLGQpfHwoU2U9ZCxkPW9lKFJlLFwib25TZWxlY3RcIiksMDxkLmxlbmd0aCYmKGI9bmV3IHRkKFwib25TZWxlY3RcIixcInNlbGVjdFwiLG51bGwsYixjKSxhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmR9KSxiLnRhcmdldD1RZSkpKX1cbmZ1bmN0aW9uIFZlKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFdlPXthbmltYXRpb25lbmQ6VmUoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246VmUoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpWZShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpWZShcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFhlPXt9LFllPXt9O1xuaWEmJihZZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBXZS5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBXZS5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBXZS5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBXZS50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFplKGEpe2lmKFhlW2FdKXJldHVybiBYZVthXTtpZighV2VbYV0pcmV0dXJuIGE7dmFyIGI9V2VbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gWWUpcmV0dXJuIFhlW2FdPWJbY107cmV0dXJuIGF9dmFyICRlPVplKFwiYW5pbWF0aW9uZW5kXCIpLGFmPVplKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLGJmPVplKFwiYW5pbWF0aW9uc3RhcnRcIiksY2Y9WmUoXCJ0cmFuc2l0aW9uZW5kXCIpLGRmPW5ldyBNYXAsZWY9XCJhYm9ydCBhdXhDbGljayBjYW5jZWwgY2FuUGxheSBjYW5QbGF5VGhyb3VnaCBjbGljayBjbG9zZSBjb250ZXh0TWVudSBjb3B5IGN1dCBkcmFnIGRyYWdFbmQgZHJhZ0VudGVyIGRyYWdFeGl0IGRyYWdMZWF2ZSBkcmFnT3ZlciBkcmFnU3RhcnQgZHJvcCBkdXJhdGlvbkNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBnb3RQb2ludGVyQ2FwdHVyZSBpbnB1dCBpbnZhbGlkIGtleURvd24ga2V5UHJlc3Mga2V5VXAgbG9hZCBsb2FkZWREYXRhIGxvYWRlZE1ldGFkYXRhIGxvYWRTdGFydCBsb3N0UG9pbnRlckNhcHR1cmUgbW91c2VEb3duIG1vdXNlTW92ZSBtb3VzZU91dCBtb3VzZU92ZXIgbW91c2VVcCBwYXN0ZSBwYXVzZSBwbGF5IHBsYXlpbmcgcG9pbnRlckNhbmNlbCBwb2ludGVyRG93biBwb2ludGVyTW92ZSBwb2ludGVyT3V0IHBvaW50ZXJPdmVyIHBvaW50ZXJVcCBwcm9ncmVzcyByYXRlQ2hhbmdlIHJlc2V0IHJlc2l6ZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1Ym1pdCBzdXNwZW5kIHRpbWVVcGRhdGUgdG91Y2hDYW5jZWwgdG91Y2hFbmQgdG91Y2hTdGFydCB2b2x1bWVDaGFuZ2Ugc2Nyb2xsIHRvZ2dsZSB0b3VjaE1vdmUgd2FpdGluZyB3aGVlbFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIGZmKGEsYil7ZGYuc2V0KGEsYik7ZmEoYixbYV0pfWZvcih2YXIgZ2Y9MDtnZjxlZi5sZW5ndGg7Z2YrKyl7dmFyIGhmPWVmW2dmXSxqZj1oZi50b0xvd2VyQ2FzZSgpLGtmPWhmWzBdLnRvVXBwZXJDYXNlKCkraGYuc2xpY2UoMSk7ZmYoamYsXCJvblwiK2tmKX1mZigkZSxcIm9uQW5pbWF0aW9uRW5kXCIpO2ZmKGFmLFwib25BbmltYXRpb25JdGVyYXRpb25cIik7ZmYoYmYsXCJvbkFuaW1hdGlvblN0YXJ0XCIpO2ZmKFwiZGJsY2xpY2tcIixcIm9uRG91YmxlQ2xpY2tcIik7ZmYoXCJmb2N1c2luXCIsXCJvbkZvY3VzXCIpO2ZmKFwiZm9jdXNvdXRcIixcIm9uQmx1clwiKTtmZihjZixcIm9uVHJhbnNpdGlvbkVuZFwiKTtoYShcIm9uTW91c2VFbnRlclwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO2hhKFwib25Nb3VzZUxlYXZlXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7aGEoXCJvblBvaW50ZXJFbnRlclwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtcbmhhKFwib25Qb2ludGVyTGVhdmVcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZmEoXCJvbkNoYW5nZVwiLFwiY2hhbmdlIGNsaWNrIGZvY3VzaW4gZm9jdXNvdXQgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2ZhKFwib25TZWxlY3RcIixcImZvY3Vzb3V0IGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXNpbiBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZmEoXCJvbkJlZm9yZUlucHV0XCIsW1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdKTtmYShcIm9uQ29tcG9zaXRpb25FbmRcIixcImNvbXBvc2l0aW9uZW5kIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtmYShcIm9uQ29tcG9zaXRpb25TdGFydFwiLFwiY29tcG9zaXRpb25zdGFydCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7XG5mYShcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixcImNvbXBvc2l0aW9udXBkYXRlIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTt2YXIgbGY9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHJlc2l6ZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxtZj1uZXcgU2V0KFwiY2FuY2VsIGNsb3NlIGludmFsaWQgbG9hZCBzY3JvbGwgdG9nZ2xlXCIuc3BsaXQoXCIgXCIpLmNvbmNhdChsZikpO1xuZnVuY3Rpb24gbmYoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PWM7VWIoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1cbmZ1bmN0aW9uIHNlKGEsYil7Yj0wIT09KGImNCk7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspe3ZhciBkPWFbY10sZT1kLmV2ZW50O2Q9ZC5saXN0ZW5lcnM7YTp7dmFyIGY9dm9pZCAwO2lmKGIpZm9yKHZhciBnPWQubGVuZ3RoLTE7MDw9ZztnLS0pe3ZhciBoPWRbZ10saz1oLmluc3RhbmNlLGw9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7bmYoZSxoLGwpO2Y9a31lbHNlIGZvcihnPTA7ZzxkLmxlbmd0aDtnKyspe2g9ZFtnXTtrPWguaW5zdGFuY2U7bD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtuZihlLGgsbCk7Zj1rfX19aWYoUWIpdGhyb3cgYT1SYixRYj0hMSxSYj1udWxsLGE7fVxuZnVuY3Rpb24gRChhLGIpe3ZhciBjPWJbb2ZdO3ZvaWQgMD09PWMmJihjPWJbb2ZdPW5ldyBTZXQpO3ZhciBkPWErXCJfX2J1YmJsZVwiO2MuaGFzKGQpfHwocGYoYixhLDIsITEpLGMuYWRkKGQpKX1mdW5jdGlvbiBxZihhLGIsYyl7dmFyIGQ9MDtiJiYoZHw9NCk7cGYoYyxhLGQsYil9dmFyIHJmPVwiX3JlYWN0TGlzdGVuaW5nXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7ZnVuY3Rpb24gc2YoYSl7aWYoIWFbcmZdKXthW3JmXT0hMDtkYS5mb3JFYWNoKGZ1bmN0aW9uKGIpe1wic2VsZWN0aW9uY2hhbmdlXCIhPT1iJiYobWYuaGFzKGIpfHxxZihiLCExLGEpLHFmKGIsITAsYSkpfSk7dmFyIGI9OT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7bnVsbD09PWJ8fGJbcmZdfHwoYltyZl09ITAscWYoXCJzZWxlY3Rpb25jaGFuZ2VcIiwhMSxiKSl9fVxuZnVuY3Rpb24gcGYoYSxiLGMsZCl7c3dpdGNoKGpkKGIpKXtjYXNlIDE6dmFyIGU9ZWQ7YnJlYWs7Y2FzZSA0OmU9Z2Q7YnJlYWs7ZGVmYXVsdDplPWZkfWM9ZS5iaW5kKG51bGwsYixjLGEpO2U9dm9pZCAwOyFMYnx8XCJ0b3VjaHN0YXJ0XCIhPT1iJiZcInRvdWNobW92ZVwiIT09YiYmXCJ3aGVlbFwiIT09Ynx8KGU9ITApO2Q/dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtjYXB0dXJlOiEwLHBhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITApOnZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7cGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMSl9XG5mdW5jdGlvbiBoZChhLGIsYyxkLGUpe3ZhciBmPWQ7aWYoMD09PShiJjEpJiYwPT09KGImMikmJm51bGwhPT1kKWE6Zm9yKDs7KXtpZihudWxsPT09ZClyZXR1cm47dmFyIGc9ZC50YWc7aWYoMz09PWd8fDQ9PT1nKXt2YXIgaD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKGg9PT1lfHw4PT09aC5ub2RlVHlwZSYmaC5wYXJlbnROb2RlPT09ZSlicmVhaztpZig0PT09Zylmb3IoZz1kLnJldHVybjtudWxsIT09Zzspe3ZhciBrPWcudGFnO2lmKDM9PT1rfHw0PT09aylpZihrPWcuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8saz09PWV8fDg9PT1rLm5vZGVUeXBlJiZrLnBhcmVudE5vZGU9PT1lKXJldHVybjtnPWcucmV0dXJufWZvcig7bnVsbCE9PWg7KXtnPVdjKGgpO2lmKG51bGw9PT1nKXJldHVybjtrPWcudGFnO2lmKDU9PT1rfHw2PT09ayl7ZD1mPWc7Y29udGludWUgYX1oPWgucGFyZW50Tm9kZX19ZD1kLnJldHVybn1KYihmdW5jdGlvbigpe3ZhciBkPWYsZT14YihjKSxnPVtdO1xuYTp7dmFyIGg9ZGYuZ2V0KGEpO2lmKHZvaWQgMCE9PWgpe3ZhciBrPXRkLG49YTtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9kKGMpKWJyZWFrIGE7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjprPVJkO2JyZWFrO2Nhc2UgXCJmb2N1c2luXCI6bj1cImZvY3VzXCI7az1GZDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjpuPVwiYmx1clwiO2s9RmQ7YnJlYWs7Y2FzZSBcImJlZm9yZWJsdXJcIjpjYXNlIFwiYWZ0ZXJibHVyXCI6az1GZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pYnJlYWsgYTtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOms9QmQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6az1cbkRkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOms9VmQ7YnJlYWs7Y2FzZSAkZTpjYXNlIGFmOmNhc2UgYmY6az1IZDticmVhaztjYXNlIGNmOms9WGQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOms9dmQ7YnJlYWs7Y2FzZSBcIndoZWVsXCI6az1aZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjprPUpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOms9VGR9dmFyIHQ9MCE9PShiJjQpLEo9IXQmJlwic2Nyb2xsXCI9PT1hLHg9dD9udWxsIT09aD9oK1wiQ2FwdHVyZVwiOm51bGw6aDt0PVtdO2Zvcih2YXIgdz1kLHU7bnVsbCE9PVxudzspe3U9dzt2YXIgRj11LnN0YXRlTm9kZTs1PT09dS50YWcmJm51bGwhPT1GJiYodT1GLG51bGwhPT14JiYoRj1LYih3LHgpLG51bGwhPUYmJnQucHVzaCh0Zih3LEYsdSkpKSk7aWYoSilicmVhazt3PXcucmV0dXJufTA8dC5sZW5ndGgmJihoPW5ldyBrKGgsbixudWxsLGMsZSksZy5wdXNoKHtldmVudDpoLGxpc3RlbmVyczp0fSkpfX1pZigwPT09KGImNykpe2E6e2g9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWE7az1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoaCYmYyE9PXdiJiYobj1jLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpJiYoV2Mobil8fG5bdWZdKSlicmVhayBhO2lmKGt8fGgpe2g9ZS53aW5kb3c9PT1lP2U6KGg9ZS5vd25lckRvY3VtZW50KT9oLmRlZmF1bHRWaWV3fHxoLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoayl7aWYobj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50LGs9ZCxuPW4/V2Mobik6bnVsbCxudWxsIT09XG5uJiYoSj1WYihuKSxuIT09Snx8NSE9PW4udGFnJiY2IT09bi50YWcpKW49bnVsbH1lbHNlIGs9bnVsbCxuPWQ7aWYoayE9PW4pe3Q9QmQ7Rj1cIm9uTW91c2VMZWF2ZVwiO3g9XCJvbk1vdXNlRW50ZXJcIjt3PVwibW91c2VcIjtpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpdD1UZCxGPVwib25Qb2ludGVyTGVhdmVcIix4PVwib25Qb2ludGVyRW50ZXJcIix3PVwicG9pbnRlclwiO0o9bnVsbD09az9oOnVlKGspO3U9bnVsbD09bj9oOnVlKG4pO2g9bmV3IHQoRix3K1wibGVhdmVcIixrLGMsZSk7aC50YXJnZXQ9SjtoLnJlbGF0ZWRUYXJnZXQ9dTtGPW51bGw7V2MoZSk9PT1kJiYodD1uZXcgdCh4LHcrXCJlbnRlclwiLG4sYyxlKSx0LnRhcmdldD11LHQucmVsYXRlZFRhcmdldD1KLEY9dCk7Sj1GO2lmKGsmJm4pYjp7dD1rO3g9bjt3PTA7Zm9yKHU9dDt1O3U9dmYodSkpdysrO3U9MDtmb3IoRj14O0Y7Rj12ZihGKSl1Kys7Zm9yKDswPHctdTspdD12Zih0KSx3LS07Zm9yKDswPHUtdzspeD1cbnZmKHgpLHUtLTtmb3IoO3ctLTspe2lmKHQ9PT14fHxudWxsIT09eCYmdD09PXguYWx0ZXJuYXRlKWJyZWFrIGI7dD12Zih0KTt4PXZmKHgpfXQ9bnVsbH1lbHNlIHQ9bnVsbDtudWxsIT09ayYmd2YoZyxoLGssdCwhMSk7bnVsbCE9PW4mJm51bGwhPT1KJiZ3ZihnLEosbix0LCEwKX19fWE6e2g9ZD91ZShkKTp3aW5kb3c7az1oLm5vZGVOYW1lJiZoLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWt8fFwiaW5wdXRcIj09PWsmJlwiZmlsZVwiPT09aC50eXBlKXZhciBuYT12ZTtlbHNlIGlmKG1lKGgpKWlmKHdlKW5hPUZlO2Vsc2V7bmE9RGU7dmFyIHhhPUNlfWVsc2Uoaz1oLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09ay50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09aC50eXBlfHxcInJhZGlvXCI9PT1oLnR5cGUpJiYobmE9RWUpO2lmKG5hJiYobmE9bmEoYSxkKSkpe25lKGcsbmEsYyxlKTticmVhayBhfXhhJiZ4YShhLGgsZCk7XCJmb2N1c291dFwiPT09YSYmKHhhPWguX3dyYXBwZXJTdGF0ZSkmJlxueGEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWgudHlwZSYmY2IoaCxcIm51bWJlclwiLGgudmFsdWUpfXhhPWQ/dWUoZCk6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmlmKG1lKHhhKXx8XCJ0cnVlXCI9PT14YS5jb250ZW50RWRpdGFibGUpUWU9eGEsUmU9ZCxTZT1udWxsO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOlNlPVJlPVFlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOlRlPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpUZT0hMTtVZShnLGMsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFBlKWJyZWFrO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6VWUoZyxjLGUpfXZhciAkYTtpZihhZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgYmE9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIjticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmJhPVwib25Db21wb3NpdGlvbkVuZFwiO1xuYnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpiYT1cIm9uQ29tcG9zaXRpb25VcGRhdGVcIjticmVhayBifWJhPXZvaWQgMH1lbHNlIGllP2dlKGEsYykmJihiYT1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihiYT1cIm9uQ29tcG9zaXRpb25TdGFydFwiKTtiYSYmKGRlJiZcImtvXCIhPT1jLmxvY2FsZSYmKGllfHxcIm9uQ29tcG9zaXRpb25TdGFydFwiIT09YmE/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1iYSYmaWUmJigkYT1uZCgpKTooa2Q9ZSxsZD1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxpZT0hMCkpLHhhPW9lKGQsYmEpLDA8eGEubGVuZ3RoJiYoYmE9bmV3IExkKGJhLGEsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6YmEsbGlzdGVuZXJzOnhhfSksJGE/YmEuZGF0YT0kYTooJGE9aGUoYyksbnVsbCE9PSRhJiYoYmEuZGF0YT0kYSkpKSk7aWYoJGE9Y2U/amUoYSxjKTprZShhLGMpKWQ9b2UoZCxcIm9uQmVmb3JlSW5wdXRcIiksXG4wPGQubGVuZ3RoJiYoZT1uZXcgTGQoXCJvbkJlZm9yZUlucHV0XCIsXCJiZWZvcmVpbnB1dFwiLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmUsbGlzdGVuZXJzOmR9KSxlLmRhdGE9JGEpfXNlKGcsYil9KX1mdW5jdGlvbiB0ZihhLGIsYyl7cmV0dXJue2luc3RhbmNlOmEsbGlzdGVuZXI6YixjdXJyZW50VGFyZ2V0OmN9fWZ1bmN0aW9uIG9lKGEsYil7Zm9yKHZhciBjPWIrXCJDYXB0dXJlXCIsZD1bXTtudWxsIT09YTspe3ZhciBlPWEsZj1lLnN0YXRlTm9kZTs1PT09ZS50YWcmJm51bGwhPT1mJiYoZT1mLGY9S2IoYSxjKSxudWxsIT1mJiZkLnVuc2hpZnQodGYoYSxmLGUpKSxmPUtiKGEsYiksbnVsbCE9ZiYmZC5wdXNoKHRmKGEsZixlKSkpO2E9YS5yZXR1cm59cmV0dXJuIGR9ZnVuY3Rpb24gdmYoYSl7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIHdmKGEsYixjLGQsZSl7Zm9yKHZhciBmPWIuX3JlYWN0TmFtZSxnPVtdO251bGwhPT1jJiZjIT09ZDspe3ZhciBoPWMsaz1oLmFsdGVybmF0ZSxsPWguc3RhdGVOb2RlO2lmKG51bGwhPT1rJiZrPT09ZClicmVhazs1PT09aC50YWcmJm51bGwhPT1sJiYoaD1sLGU/KGs9S2IoYyxmKSxudWxsIT1rJiZnLnVuc2hpZnQodGYoYyxrLGgpKSk6ZXx8KGs9S2IoYyxmKSxudWxsIT1rJiZnLnB1c2godGYoYyxrLGgpKSkpO2M9Yy5yZXR1cm59MCE9PWcubGVuZ3RoJiZhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmd9KX12YXIgeGY9L1xcclxcbj8vZyx5Zj0vXFx1MDAwMHxcXHVGRkZEL2c7ZnVuY3Rpb24gemYoYSl7cmV0dXJuKFwic3RyaW5nXCI9PT10eXBlb2YgYT9hOlwiXCIrYSkucmVwbGFjZSh4ZixcIlxcblwiKS5yZXBsYWNlKHlmLFwiXCIpfWZ1bmN0aW9uIEFmKGEsYixjKXtiPXpmKGIpO2lmKHpmKGEpIT09YiYmYyl0aHJvdyBFcnJvcihwKDQyNSkpO31mdW5jdGlvbiBCZigpe31cbnZhciBDZj1udWxsLERmPW51bGw7ZnVuY3Rpb24gRWYoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9XG52YXIgRmY9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsR2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEhmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBQcm9taXNlP1Byb21pc2U6dm9pZCAwLEpmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBxdWV1ZU1pY3JvdGFzaz9xdWV1ZU1pY3JvdGFzazpcInVuZGVmaW5lZFwiIT09dHlwZW9mIEhmP2Z1bmN0aW9uKGEpe3JldHVybiBIZi5yZXNvbHZlKG51bGwpLnRoZW4oYSkuY2F0Y2goSWYpfTpGZjtmdW5jdGlvbiBJZihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYTt9KX1cbmZ1bmN0aW9uIEtmKGEsYil7dmFyIGM9YixkPTA7ZG97dmFyIGU9Yy5uZXh0U2libGluZzthLnJlbW92ZUNoaWxkKGMpO2lmKGUmJjg9PT1lLm5vZGVUeXBlKWlmKGM9ZS5kYXRhLFwiLyRcIj09PWMpe2lmKDA9PT1kKXthLnJlbW92ZUNoaWxkKGUpO2JkKGIpO3JldHVybn1kLS19ZWxzZVwiJFwiIT09YyYmXCIkP1wiIT09YyYmXCIkIVwiIT09Y3x8ZCsrO2M9ZX13aGlsZShjKTtiZChiKX1mdW5jdGlvbiBMZihhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVhaztpZig4PT09Yil7Yj1hLmRhdGE7aWYoXCIkXCI9PT1ifHxcIiQhXCI9PT1ifHxcIiQ/XCI9PT1iKWJyZWFrO2lmKFwiLyRcIj09PWIpcmV0dXJuIG51bGx9fXJldHVybiBhfVxuZnVuY3Rpb24gTWYoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIiRcIj09PWN8fFwiJCFcIj09PWN8fFwiJD9cIj09PWMpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlXCIvJFwiPT09YyYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIE5mPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLE9mPVwiX19yZWFjdEZpYmVyJFwiK05mLFBmPVwiX19yZWFjdFByb3BzJFwiK05mLHVmPVwiX19yZWFjdENvbnRhaW5lciRcIitOZixvZj1cIl9fcmVhY3RFdmVudHMkXCIrTmYsUWY9XCJfX3JlYWN0TGlzdGVuZXJzJFwiK05mLFJmPVwiX19yZWFjdEhhbmRsZXMkXCIrTmY7XG5mdW5jdGlvbiBXYyhhKXt2YXIgYj1hW09mXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1t1Zl18fGNbT2ZdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9TWYoYSk7bnVsbCE9PWE7KXtpZihjPWFbT2ZdKXJldHVybiBjO2E9TWYoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIENiKGEpe2E9YVtPZl18fGFbdWZdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiB1ZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IocCgzMykpO31mdW5jdGlvbiBEYihhKXtyZXR1cm4gYVtQZl18fG51bGx9dmFyIFNmPVtdLFRmPS0xO2Z1bmN0aW9uIFVmKGEpe3JldHVybntjdXJyZW50OmF9fVxuZnVuY3Rpb24gRShhKXswPlRmfHwoYS5jdXJyZW50PVNmW1RmXSxTZltUZl09bnVsbCxUZi0tKX1mdW5jdGlvbiBHKGEsYil7VGYrKztTZltUZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBWZj17fSxIPVVmKFZmKSxXZj1VZighMSksWGY9VmY7ZnVuY3Rpb24gWWYoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBWZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1cbmZ1bmN0aW9uIFpmKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gJGYoKXtFKFdmKTtFKEgpfWZ1bmN0aW9uIGFnKGEsYixjKXtpZihILmN1cnJlbnQhPT1WZil0aHJvdyBFcnJvcihwKDE2OCkpO0coSCxiKTtHKFdmLGMpfWZ1bmN0aW9uIGJnKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtiPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYikpdGhyb3cgRXJyb3IocCgxMDgsUmEoYSl8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gQSh7fSxjLGQpfVxuZnVuY3Rpb24gY2coYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fFZmO1hmPUguY3VycmVudDtHKEgsYSk7RyhXZixXZi5jdXJyZW50KTtyZXR1cm4hMH1mdW5jdGlvbiBkZyhhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IocCgxNjkpKTtjPyhhPWJnKGEsYixYZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEUoV2YpLEUoSCksRyhILGEpKTpFKFdmKTtHKFdmLGMpfXZhciBlZz1udWxsLGZnPSExLGdnPSExO2Z1bmN0aW9uIGhnKGEpe251bGw9PT1lZz9lZz1bYV06ZWcucHVzaChhKX1mdW5jdGlvbiBpZyhhKXtmZz0hMDtoZyhhKX1cbmZ1bmN0aW9uIGpnKCl7aWYoIWdnJiZudWxsIT09ZWcpe2dnPSEwO3ZhciBhPTAsYj1DO3RyeXt2YXIgYz1lZztmb3IoQz0xO2E8Yy5sZW5ndGg7YSsrKXt2YXIgZD1jW2FdO2RvIGQ9ZCghMCk7d2hpbGUobnVsbCE9PWQpfWVnPW51bGw7Zmc9ITF9Y2F0Y2goZSl7dGhyb3cgbnVsbCE9PWVnJiYoZWc9ZWcuc2xpY2UoYSsxKSksYWMoZmMsamcpLGU7fWZpbmFsbHl7Qz1iLGdnPSExfX1yZXR1cm4gbnVsbH12YXIga2c9W10sbGc9MCxtZz1udWxsLG5nPTAsb2c9W10scGc9MCxxZz1udWxsLHJnPTEsc2c9XCJcIjtmdW5jdGlvbiB0ZyhhLGIpe2tnW2xnKytdPW5nO2tnW2xnKytdPW1nO21nPWE7bmc9Yn1cbmZ1bmN0aW9uIHVnKGEsYixjKXtvZ1twZysrXT1yZztvZ1twZysrXT1zZztvZ1twZysrXT1xZztxZz1hO3ZhciBkPXJnO2E9c2c7dmFyIGU9MzItb2MoZCktMTtkJj1+KDE8PGUpO2MrPTE7dmFyIGY9MzItb2MoYikrZTtpZigzMDxmKXt2YXIgZz1lLWUlNTtmPShkJigxPDxnKS0xKS50b1N0cmluZygzMik7ZD4+PWc7ZS09ZztyZz0xPDwzMi1vYyhiKStlfGM8PGV8ZDtzZz1mK2F9ZWxzZSByZz0xPDxmfGM8PGV8ZCxzZz1hfWZ1bmN0aW9uIHZnKGEpe251bGwhPT1hLnJldHVybiYmKHRnKGEsMSksdWcoYSwxLDApKX1mdW5jdGlvbiB3ZyhhKXtmb3IoO2E9PT1tZzspbWc9a2dbLS1sZ10sa2dbbGddPW51bGwsbmc9a2dbLS1sZ10sa2dbbGddPW51bGw7Zm9yKDthPT09cWc7KXFnPW9nWy0tcGddLG9nW3BnXT1udWxsLHNnPW9nWy0tcGddLG9nW3BnXT1udWxsLHJnPW9nWy0tcGddLG9nW3BnXT1udWxsfXZhciB4Zz1udWxsLHlnPW51bGwsST0hMSx6Zz1udWxsO1xuZnVuY3Rpb24gQWcoYSxiKXt2YXIgYz1CZyg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtiPWEuZGVsZXRpb25zO251bGw9PT1iPyhhLmRlbGV0aW9ucz1bY10sYS5mbGFnc3w9MTYpOmIucHVzaChjKX1cbmZ1bmN0aW9uIENnKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLHhnPWEseWc9TGYoYi5maXJzdENoaWxkKSwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLHhnPWEseWc9bnVsbCwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4gYj04IT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGM9bnVsbCE9PXFnP3tpZDpyZyxvdmVyZmxvdzpzZ306bnVsbCxhLm1lbW9pemVkU3RhdGU9e2RlaHlkcmF0ZWQ6Yix0cmVlQ29udGV4dDpjLHJldHJ5TGFuZToxMDczNzQxODI0fSxjPUJnKDE4LG51bGwsbnVsbCwwKSxjLnN0YXRlTm9kZT1iLGMucmV0dXJuPWEsYS5jaGlsZD1jLHhnPWEseWc9XG5udWxsLCEwKTohMTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBEZyhhKXtyZXR1cm4gMCE9PShhLm1vZGUmMSkmJjA9PT0oYS5mbGFncyYxMjgpfWZ1bmN0aW9uIEVnKGEpe2lmKEkpe3ZhciBiPXlnO2lmKGIpe3ZhciBjPWI7aWYoIUNnKGEsYikpe2lmKERnKGEpKXRocm93IEVycm9yKHAoNDE4KSk7Yj1MZihjLm5leHRTaWJsaW5nKTt2YXIgZD14ZztiJiZDZyhhLGIpP0FnKGQsYyk6KGEuZmxhZ3M9YS5mbGFncyYtNDA5N3wyLEk9ITEseGc9YSl9fWVsc2V7aWYoRGcoYSkpdGhyb3cgRXJyb3IocCg0MTgpKTthLmZsYWdzPWEuZmxhZ3MmLTQwOTd8MjtJPSExO3hnPWF9fX1mdW5jdGlvbiBGZyhhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47eGc9YX1cbmZ1bmN0aW9uIEdnKGEpe2lmKGEhPT14ZylyZXR1cm4hMTtpZighSSlyZXR1cm4gRmcoYSksST0hMCwhMTt2YXIgYjsoYj0zIT09YS50YWcpJiYhKGI9NSE9PWEudGFnKSYmKGI9YS50eXBlLGI9XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFFZihhLnR5cGUsYS5tZW1vaXplZFByb3BzKSk7aWYoYiYmKGI9eWcpKXtpZihEZyhhKSl0aHJvdyBIZygpLEVycm9yKHAoNDE4KSk7Zm9yKDtiOylBZyhhLGIpLGI9TGYoYi5uZXh0U2libGluZyl9RmcoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcihwKDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiLyRcIj09PWMpe2lmKDA9PT1iKXt5Zz1MZihhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlXCIkXCIhPT1jJiZcIiQhXCIhPT1jJiZcIiQ/XCIhPT1jfHxiKyt9YT1hLm5leHRTaWJsaW5nfXlnPVxubnVsbH19ZWxzZSB5Zz14Zz9MZihhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1mdW5jdGlvbiBIZygpe2Zvcih2YXIgYT15ZzthOylhPUxmKGEubmV4dFNpYmxpbmcpfWZ1bmN0aW9uIElnKCl7eWc9eGc9bnVsbDtJPSExfWZ1bmN0aW9uIEpnKGEpe251bGw9PT16Zz96Zz1bYV06emcucHVzaChhKX12YXIgS2c9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc7ZnVuY3Rpb24gTGcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1BKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSk7cmV0dXJuIGJ9cmV0dXJuIGJ9dmFyIE1nPVVmKG51bGwpLE5nPW51bGwsT2c9bnVsbCxQZz1udWxsO2Z1bmN0aW9uIFFnKCl7UGc9T2c9Tmc9bnVsbH1mdW5jdGlvbiBSZyhhKXt2YXIgYj1NZy5jdXJyZW50O0UoTWcpO2EuX2N1cnJlbnRWYWx1ZT1ifVxuZnVuY3Rpb24gU2coYSxiLGMpe2Zvcig7bnVsbCE9PWE7KXt2YXIgZD1hLmFsdGVybmF0ZTsoYS5jaGlsZExhbmVzJmIpIT09Yj8oYS5jaGlsZExhbmVzfD1iLG51bGwhPT1kJiYoZC5jaGlsZExhbmVzfD1iKSk6bnVsbCE9PWQmJihkLmNoaWxkTGFuZXMmYikhPT1iJiYoZC5jaGlsZExhbmVzfD1iKTtpZihhPT09YylicmVhazthPWEucmV0dXJufX1mdW5jdGlvbiBUZyhhLGIpe05nPWE7UGc9T2c9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJigwIT09KGEubGFuZXMmYikmJihVZz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiBWZyhhKXt2YXIgYj1hLl9jdXJyZW50VmFsdWU7aWYoUGchPT1hKWlmKGE9e2NvbnRleHQ6YSxtZW1vaXplZFZhbHVlOmIsbmV4dDpudWxsfSxudWxsPT09T2cpe2lmKG51bGw9PT1OZyl0aHJvdyBFcnJvcihwKDMwOCkpO09nPWE7TmcuZGVwZW5kZW5jaWVzPXtsYW5lczowLGZpcnN0Q29udGV4dDphfX1lbHNlIE9nPU9nLm5leHQ9YTtyZXR1cm4gYn12YXIgV2c9bnVsbDtmdW5jdGlvbiBYZyhhKXtudWxsPT09V2c/V2c9W2FdOldnLnB1c2goYSl9ZnVuY3Rpb24gWWcoYSxiLGMsZCl7dmFyIGU9Yi5pbnRlcmxlYXZlZDtudWxsPT09ZT8oYy5uZXh0PWMsWGcoYikpOihjLm5leHQ9ZS5uZXh0LGUubmV4dD1jKTtiLmludGVybGVhdmVkPWM7cmV0dXJuIFpnKGEsZCl9XG5mdW5jdGlvbiBaZyhhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtjPWE7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWE7KWEuY2hpbGRMYW5lc3w9YixjPWEuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKSxjPWEsYT1hLnJldHVybjtyZXR1cm4gMz09PWMudGFnP2Muc3RhdGVOb2RlOm51bGx9dmFyICRnPSExO2Z1bmN0aW9uIGFoKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsZmlyc3RCYXNlVXBkYXRlOm51bGwsbGFzdEJhc2VVcGRhdGU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbCxpbnRlcmxlYXZlZDpudWxsLGxhbmVzOjB9LGVmZmVjdHM6bnVsbH19XG5mdW5jdGlvbiBiaChhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6YS5maXJzdEJhc2VVcGRhdGUsbGFzdEJhc2VVcGRhdGU6YS5sYXN0QmFzZVVwZGF0ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiBjaChhLGIpe3JldHVybntldmVudFRpbWU6YSxsYW5lOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfX1cbmZ1bmN0aW9uIGRoKGEsYixjKXt2YXIgZD1hLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2Q9ZC5zaGFyZWQ7aWYoMCE9PShLJjIpKXt2YXIgZT1kLnBlbmRpbmc7bnVsbD09PWU/Yi5uZXh0PWI6KGIubmV4dD1lLm5leHQsZS5uZXh0PWIpO2QucGVuZGluZz1iO3JldHVybiBaZyhhLGMpfWU9ZC5pbnRlcmxlYXZlZDtudWxsPT09ZT8oYi5uZXh0PWIsWGcoZCkpOihiLm5leHQ9ZS5uZXh0LGUubmV4dD1iKTtkLmludGVybGVhdmVkPWI7cmV0dXJuIFpnKGEsYyl9ZnVuY3Rpb24gZWgoYSxiLGMpe2I9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YiYmKGI9Yi5zaGFyZWQsMCE9PShjJjQxOTQyNDApKSl7dmFyIGQ9Yi5sYW5lcztkJj1hLnBlbmRpbmdMYW5lcztjfD1kO2IubGFuZXM9YztDYyhhLGMpfX1cbmZ1bmN0aW9uIGZoKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZSxkPWEuYWx0ZXJuYXRlO2lmKG51bGwhPT1kJiYoZD1kLnVwZGF0ZVF1ZXVlLGM9PT1kKSl7dmFyIGU9bnVsbCxmPW51bGw7Yz1jLmZpcnN0QmFzZVVwZGF0ZTtpZihudWxsIT09Yyl7ZG97dmFyIGc9e2V2ZW50VGltZTpjLmV2ZW50VGltZSxsYW5lOmMubGFuZSx0YWc6Yy50YWcscGF5bG9hZDpjLnBheWxvYWQsY2FsbGJhY2s6Yy5jYWxsYmFjayxuZXh0Om51bGx9O251bGw9PT1mP2U9Zj1nOmY9Zi5uZXh0PWc7Yz1jLm5leHR9d2hpbGUobnVsbCE9PWMpO251bGw9PT1mP2U9Zj1iOmY9Zi5uZXh0PWJ9ZWxzZSBlPWY9YjtjPXtiYXNlU3RhdGU6ZC5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmUsbGFzdEJhc2VVcGRhdGU6ZixzaGFyZWQ6ZC5zaGFyZWQsZWZmZWN0czpkLmVmZmVjdHN9O2EudXBkYXRlUXVldWU9YztyZXR1cm59YT1jLmxhc3RCYXNlVXBkYXRlO251bGw9PT1hP2MuZmlyc3RCYXNlVXBkYXRlPWI6YS5uZXh0PVxuYjtjLmxhc3RCYXNlVXBkYXRlPWJ9XG5mdW5jdGlvbiBnaChhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlOyRnPSExO3ZhciBmPWUuZmlyc3RCYXNlVXBkYXRlLGc9ZS5sYXN0QmFzZVVwZGF0ZSxoPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWgpe2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDt2YXIgaz1oLGw9ay5uZXh0O2submV4dD1udWxsO251bGw9PT1nP2Y9bDpnLm5leHQ9bDtnPWs7dmFyIG09YS5hbHRlcm5hdGU7bnVsbCE9PW0mJihtPW0udXBkYXRlUXVldWUsaD1tLmxhc3RCYXNlVXBkYXRlLGghPT1nJiYobnVsbD09PWg/bS5maXJzdEJhc2VVcGRhdGU9bDpoLm5leHQ9bCxtLmxhc3RCYXNlVXBkYXRlPWspKX1pZihudWxsIT09Zil7dmFyIHE9ZS5iYXNlU3RhdGU7Zz0wO209bD1rPW51bGw7aD1mO2Rve3ZhciByPWgubGFuZSx5PWguZXZlbnRUaW1lO2lmKChkJnIpPT09cil7bnVsbCE9PW0mJihtPW0ubmV4dD17ZXZlbnRUaW1lOnksbGFuZTowLHRhZzpoLnRhZyxwYXlsb2FkOmgucGF5bG9hZCxjYWxsYmFjazpoLmNhbGxiYWNrLFxubmV4dDpudWxsfSk7YTp7dmFyIG49YSx0PWg7cj1iO3k9Yztzd2l0Y2godC50YWcpe2Nhc2UgMTpuPXQucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygbil7cT1uLmNhbGwoeSxxLHIpO2JyZWFrIGF9cT1uO2JyZWFrIGE7Y2FzZSAzOm4uZmxhZ3M9bi5mbGFncyYtNjU1Mzd8MTI4O2Nhc2UgMDpuPXQucGF5bG9hZDtyPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBuP24uY2FsbCh5LHEscik6bjtpZihudWxsPT09cnx8dm9pZCAwPT09cilicmVhayBhO3E9QSh7fSxxLHIpO2JyZWFrIGE7Y2FzZSAyOiRnPSEwfX1udWxsIT09aC5jYWxsYmFjayYmMCE9PWgubGFuZSYmKGEuZmxhZ3N8PTY0LHI9ZS5lZmZlY3RzLG51bGw9PT1yP2UuZWZmZWN0cz1baF06ci5wdXNoKGgpKX1lbHNlIHk9e2V2ZW50VGltZTp5LGxhbmU6cix0YWc6aC50YWcscGF5bG9hZDpoLnBheWxvYWQsY2FsbGJhY2s6aC5jYWxsYmFjayxuZXh0Om51bGx9LG51bGw9PT1tPyhsPW09eSxrPXEpOm09bS5uZXh0PXksZ3w9cjtcbmg9aC5uZXh0O2lmKG51bGw9PT1oKWlmKGg9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09aClicmVhaztlbHNlIHI9aCxoPXIubmV4dCxyLm5leHQ9bnVsbCxlLmxhc3RCYXNlVXBkYXRlPXIsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpO251bGw9PT1tJiYoaz1xKTtlLmJhc2VTdGF0ZT1rO2UuZmlyc3RCYXNlVXBkYXRlPWw7ZS5sYXN0QmFzZVVwZGF0ZT1tO2I9ZS5zaGFyZWQuaW50ZXJsZWF2ZWQ7aWYobnVsbCE9PWIpe2U9YjtkbyBnfD1lLmxhbmUsZT1lLm5leHQ7d2hpbGUoZSE9PWIpfWVsc2UgbnVsbD09PWYmJihlLnNoYXJlZC5sYW5lcz0wKTtoaHw9ZzthLmxhbmVzPWc7YS5tZW1vaXplZFN0YXRlPXF9fVxuZnVuY3Rpb24gaWgoYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlKXRocm93IEVycm9yKHAoMTkxLGUpKTtlLmNhbGwoZCl9fX12YXIgamg9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7ZnVuY3Rpb24ga2goYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOkEoe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5sYW5lcyYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIG5oPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbHMpP1ZiKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUwoKSxlPWxoKGEpLGY9Y2goZCxlKTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7Yj1kaChhLGYsZSk7bnVsbCE9PWImJihtaChiLGEsZSxkKSxlaChiLGEsZSkpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUwoKSxlPWxoKGEpLGY9Y2goZCxlKTtmLnRhZz0xO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtiPWRoKGEsZixlKTtudWxsIT09YiYmKG1oKGIsYSxlLGQpLGVoKGIsYSxlKSl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGM9TCgpLGQ9XG5saChhKSxlPWNoKGMsZCk7ZS50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7Yj1kaChhLGUsZCk7bnVsbCE9PWImJihtaChiLGEsZCxjKSxlaChiLGEsZCkpfX07ZnVuY3Rpb24gb2goYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hSWUoYyxkKXx8IUllKGUsZik6ITB9XG5mdW5jdGlvbiBwaChhLGIsYyl7dmFyIGQ9ITEsZT1WZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj1WZyhmKTooZT1aZihiKT9YZjpILmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9ZZihhLGUpOlZmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9bmg7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFscz1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBxaChhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmbmguZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiByaChhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPWpoO2FoKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9VmcoZik6KGY9WmYoYik/WGY6SC5jdXJyZW50LGUuY29udGV4dD1ZZihhLGYpKTtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoa2goYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8KGI9ZS5zdGF0ZSxcblwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmbmguZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksZ2goYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5mbGFnc3w9NDE5NDMwOCl9XG5mdW5jdGlvbiBzaChhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHAoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IocCgxNDcsYSkpO3ZhciBlPWQsZj1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZilyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1lLnJlZnM7Yj09PWpoJiYoYj1lLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2ZdOmJbZl09YX07Yi5fc3RyaW5nUmVmPWY7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHAoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHAoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiB0aChhLGIpe2E9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpO3Rocm93IEVycm9yKHAoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWE/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YSkpO31mdW5jdGlvbiB1aChhKXt2YXIgYj1hLl9pbml0O3JldHVybiBiKGEuX3BheWxvYWQpfVxuZnVuY3Rpb24gdmgoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIuZGVsZXRpb25zO251bGw9PT1kPyhiLmRlbGV0aW9ucz1bY10sYi5mbGFnc3w9MTYpOmQucHVzaChjKX19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2E9d2goYSxiKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBiLmZsYWdzfD0xMDQ4NTc2LGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5mbGFnc3w9MixjKTpkO2IuZmxhZ3N8PTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZcbm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZmxhZ3N8PTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj14aChjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe3ZhciBmPWMudHlwZTtpZihmPT09eWEpcmV0dXJuIG0oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxjLmtleSk7aWYobnVsbCE9PWImJihiLmVsZW1lbnRUeXBlPT09Znx8XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi4kJHR5cGVvZj09PUhhJiZ1aChmKT09PWIudHlwZSkpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPXNoKGEsYixjKSxkLnJldHVybj1hLGQ7ZD15aChjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1zaChhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fFxuYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPXpoKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1BaChjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYiYmXCJcIiE9PWJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj14aChcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSB2YTpyZXR1cm4gYz15aChiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxcbmMucmVmPXNoKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSB3YTpyZXR1cm4gYj16aChiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7Y2FzZSBIYTp2YXIgZD1iLl9pbml0O3JldHVybiBxKGEsZChiLl9wYXlsb2FkKSxjKX1pZihlYihiKXx8S2EoYikpcmV0dXJuIGI9QWgoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7dGgoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiByKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjJiZcIlwiIT09Y3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSB2YTpyZXR1cm4gYy5rZXk9PT1lP2soYSxiLGMsZCk6bnVsbDtjYXNlIHdhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsO2Nhc2UgSGE6cmV0dXJuIGU9Yy5faW5pdCxyKGEsXG5iLGUoYy5fcGF5bG9hZCksZCl9aWYoZWIoYyl8fEthKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTt0aChhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIHkoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGQmJlwiXCIhPT1kfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIHZhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxrKGIsYSxkLGUpO2Nhc2Ugd2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSk7Y2FzZSBIYTp2YXIgZj1kLl9pbml0O3JldHVybiB5KGEsYixjLGYoZC5fcGF5bG9hZCksZSl9aWYoZWIoZCl8fEthKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTt0aChiLGQpfXJldHVybiBudWxsfVxuZnVuY3Rpb24gbihlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCxtPW51bGwsdT1nLHc9Zz0wLHg9bnVsbDtudWxsIT09dSYmdzxoLmxlbmd0aDt3Kyspe3UuaW5kZXg+dz8oeD11LHU9bnVsbCk6eD11LnNpYmxpbmc7dmFyIG49cihlLHUsaFt3XSxrKTtpZihudWxsPT09bil7bnVsbD09PXUmJih1PXgpO2JyZWFrfWEmJnUmJm51bGw9PT1uLmFsdGVybmF0ZSYmYihlLHUpO2c9ZihuLGcsdyk7bnVsbD09PW0/bD1uOm0uc2libGluZz1uO209bjt1PXh9aWYodz09PWgubGVuZ3RoKXJldHVybiBjKGUsdSksSSYmdGcoZSx3KSxsO2lmKG51bGw9PT11KXtmb3IoO3c8aC5sZW5ndGg7dysrKXU9cShlLGhbd10sayksbnVsbCE9PXUmJihnPWYodSxnLHcpLG51bGw9PT1tP2w9dTptLnNpYmxpbmc9dSxtPXUpO0kmJnRnKGUsdyk7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpO3c8aC5sZW5ndGg7dysrKXg9eSh1LGUsdyxoW3ddLGspLG51bGwhPT14JiYoYSYmbnVsbCE9PXguYWx0ZXJuYXRlJiZ1LmRlbGV0ZShudWxsPT09XG54LmtleT93Ongua2V5KSxnPWYoeCxnLHcpLG51bGw9PT1tP2w9eDptLnNpYmxpbmc9eCxtPXgpO2EmJnUuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7SSYmdGcoZSx3KTtyZXR1cm4gbH1mdW5jdGlvbiB0KGUsZyxoLGspe3ZhciBsPUthKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBsKXRocm93IEVycm9yKHAoMTUwKSk7aD1sLmNhbGwoaCk7aWYobnVsbD09aCl0aHJvdyBFcnJvcihwKDE1MSkpO2Zvcih2YXIgdT1sPW51bGwsbT1nLHc9Zz0wLHg9bnVsbCxuPWgubmV4dCgpO251bGwhPT1tJiYhbi5kb25lO3crKyxuPWgubmV4dCgpKXttLmluZGV4Pnc/KHg9bSxtPW51bGwpOng9bS5zaWJsaW5nO3ZhciB0PXIoZSxtLG4udmFsdWUsayk7aWYobnVsbD09PXQpe251bGw9PT1tJiYobT14KTticmVha31hJiZtJiZudWxsPT09dC5hbHRlcm5hdGUmJmIoZSxtKTtnPWYodCxnLHcpO251bGw9PT11P2w9dDp1LnNpYmxpbmc9dDt1PXQ7bT14fWlmKG4uZG9uZSlyZXR1cm4gYyhlLFxubSksSSYmdGcoZSx3KSxsO2lmKG51bGw9PT1tKXtmb3IoOyFuLmRvbmU7dysrLG49aC5uZXh0KCkpbj1xKGUsbi52YWx1ZSxrKSxudWxsIT09biYmKGc9ZihuLGcsdyksbnVsbD09PXU/bD1uOnUuc2libGluZz1uLHU9bik7SSYmdGcoZSx3KTtyZXR1cm4gbH1mb3IobT1kKGUsbSk7IW4uZG9uZTt3Kyssbj1oLm5leHQoKSluPXkobSxlLHcsbi52YWx1ZSxrKSxudWxsIT09biYmKGEmJm51bGwhPT1uLmFsdGVybmF0ZSYmbS5kZWxldGUobnVsbD09PW4ua2V5P3c6bi5rZXkpLGc9ZihuLGcsdyksbnVsbD09PXU/bD1uOnUuc2libGluZz1uLHU9bik7YSYmbS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtJJiZ0ZyhlLHcpO3JldHVybiBsfWZ1bmN0aW9uIEooYSxkLGYsaCl7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09eWEmJm51bGw9PT1mLmtleSYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zil7c3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgdmE6YTp7Zm9yKHZhciBrPVxuZi5rZXksbD1kO251bGwhPT1sOyl7aWYobC5rZXk9PT1rKXtrPWYudHlwZTtpZihrPT09eWEpe2lmKDc9PT1sLnRhZyl7YyhhLGwuc2libGluZyk7ZD1lKGwsZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19ZWxzZSBpZihsLmVsZW1lbnRUeXBlPT09a3x8XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09ayYmay4kJHR5cGVvZj09PUhhJiZ1aChrKT09PWwudHlwZSl7YyhhLGwuc2libGluZyk7ZD1lKGwsZi5wcm9wcyk7ZC5yZWY9c2goYSxsLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9YyhhLGwpO2JyZWFrfWVsc2UgYihhLGwpO2w9bC5zaWJsaW5nfWYudHlwZT09PXlhPyhkPUFoKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD15aChmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1zaChhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2Ugd2E6YTp7Zm9yKGw9Zi5rZXk7bnVsbCE9PVxuZDspe2lmKGQua2V5PT09bClpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD16aChmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKTtjYXNlIEhhOnJldHVybiBsPWYuX2luaXQsSihhLGQsbChmLl9wYXlsb2FkKSxoKX1pZihlYihmKSlyZXR1cm4gbihhLGQsZixoKTtpZihLYShmKSlyZXR1cm4gdChhLGQsZixoKTt0aChhLGYpfXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgZiYmXCJcIiE9PWZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZj8oZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZiksZC5yZXR1cm49YSxhPWQpOlxuKGMoYSxkKSxkPXhoKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpKTpjKGEsZCl9cmV0dXJuIEp9dmFyIEJoPXZoKCEwKSxDaD12aCghMSksRGg9e30sRWg9VWYoRGgpLEZoPVVmKERoKSxHaD1VZihEaCk7ZnVuY3Rpb24gSGgoYSl7aWYoYT09PURoKXRocm93IEVycm9yKHAoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gSWgoYSxiKXtHKEdoLGIpO0coRmgsYSk7RyhFaCxEaCk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpsYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9bGIoYixhKX1FKEVoKTtHKEVoLGIpfWZ1bmN0aW9uIEpoKCl7RShFaCk7RShGaCk7RShHaCl9XG5mdW5jdGlvbiBLaChhKXtIaChHaC5jdXJyZW50KTt2YXIgYj1IaChFaC5jdXJyZW50KTt2YXIgYz1sYihiLGEudHlwZSk7YiE9PWMmJihHKEZoLGEpLEcoRWgsYykpfWZ1bmN0aW9uIExoKGEpe0ZoLmN1cnJlbnQ9PT1hJiYoRShFaCksRShGaCkpfXZhciBNPVVmKDApO1xuZnVuY3Rpb24gTWgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8XCIkP1wiPT09Yy5kYXRhfHxcIiQhXCI9PT1jLmRhdGEpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZmxhZ3MmMTI4KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9dmFyIE5oPVtdO1xuZnVuY3Rpb24gT2goKXtmb3IodmFyIGE9MDthPE5oLmxlbmd0aDthKyspTmhbYV0uX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9bnVsbDtOaC5sZW5ndGg9MH12YXIgUGg9dWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixRaD11YS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxSaD0wLE49bnVsbCxPPW51bGwsUD1udWxsLFNoPSExLFRoPSExLFVoPTAsVmg9MDtmdW5jdGlvbiBRKCl7dGhyb3cgRXJyb3IocCgzMjEpKTt9ZnVuY3Rpb24gV2goYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighSGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFhoKGEsYixjLGQsZSxmKXtSaD1mO049YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5sYW5lcz0wO1BoLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/WWg6Wmg7YT1jKGQsZSk7aWYoVGgpe2Y9MDtkb3tUaD0hMTtVaD0wO2lmKDI1PD1mKXRocm93IEVycm9yKHAoMzAxKSk7Zis9MTtQPU89bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7UGguY3VycmVudD0kaDthPWMoZCxlKX13aGlsZShUaCl9UGguY3VycmVudD1haTtiPW51bGwhPT1PJiZudWxsIT09Ty5uZXh0O1JoPTA7UD1PPU49bnVsbDtTaD0hMTtpZihiKXRocm93IEVycm9yKHAoMzAwKSk7cmV0dXJuIGF9ZnVuY3Rpb24gYmkoKXt2YXIgYT0wIT09VWg7VWg9MDtyZXR1cm4gYX1cbmZ1bmN0aW9uIGNpKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxiYXNlUXVldWU6bnVsbCxxdWV1ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hO3JldHVybiBQfWZ1bmN0aW9uIGRpKCl7aWYobnVsbD09PU8pe3ZhciBhPU4uYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPU8ubmV4dDt2YXIgYj1udWxsPT09UD9OLm1lbW9pemVkU3RhdGU6UC5uZXh0O2lmKG51bGwhPT1iKVA9YixPPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcihwKDMxMCkpO089YTthPXttZW1vaXplZFN0YXRlOk8ubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Ty5iYXNlU3RhdGUsYmFzZVF1ZXVlOk8uYmFzZVF1ZXVlLHF1ZXVlOk8ucXVldWUsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWF9cmV0dXJuIFB9XG5mdW5jdGlvbiBlaShhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIGZpKGEpe3ZhciBiPWRpKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHAoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9TyxlPWQuYmFzZVF1ZXVlLGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXtpZihudWxsIT09ZSl7dmFyIGc9ZS5uZXh0O2UubmV4dD1mLm5leHQ7Zi5uZXh0PWd9ZC5iYXNlUXVldWU9ZT1mO2MucGVuZGluZz1udWxsfWlmKG51bGwhPT1lKXtmPWUubmV4dDtkPWQuYmFzZVN0YXRlO3ZhciBoPWc9bnVsbCxrPW51bGwsbD1mO2Rve3ZhciBtPWwubGFuZTtpZigoUmgmbSk9PT1tKW51bGwhPT1rJiYoaz1rLm5leHQ9e2xhbmU6MCxhY3Rpb246bC5hY3Rpb24saGFzRWFnZXJTdGF0ZTpsLmhhc0VhZ2VyU3RhdGUsZWFnZXJTdGF0ZTpsLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksZD1sLmhhc0VhZ2VyU3RhdGU/bC5lYWdlclN0YXRlOmEoZCxsLmFjdGlvbik7ZWxzZXt2YXIgcT17bGFuZTptLGFjdGlvbjpsLmFjdGlvbixoYXNFYWdlclN0YXRlOmwuaGFzRWFnZXJTdGF0ZSxcbmVhZ2VyU3RhdGU6bC5lYWdlclN0YXRlLG5leHQ6bnVsbH07bnVsbD09PWs/KGg9az1xLGc9ZCk6az1rLm5leHQ9cTtOLmxhbmVzfD1tO2hofD1tfWw9bC5uZXh0fXdoaWxlKG51bGwhPT1sJiZsIT09Zik7bnVsbD09PWs/Zz1kOmsubmV4dD1oO0hlKGQsYi5tZW1vaXplZFN0YXRlKXx8KFVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZDtiLmJhc2VTdGF0ZT1nO2IuYmFzZVF1ZXVlPWs7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1kfWE9Yy5pbnRlcmxlYXZlZDtpZihudWxsIT09YSl7ZT1hO2RvIGY9ZS5sYW5lLE4ubGFuZXN8PWYsaGh8PWYsZT1lLm5leHQ7d2hpbGUoZSE9PWEpfWVsc2UgbnVsbD09PWUmJihjLmxhbmVzPTApO3JldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiBnaShhKXt2YXIgYj1kaSgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcihwKDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7SGUoZixiLm1lbW9pemVkU3RhdGUpfHwoVWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1mdW5jdGlvbiBoaSgpe31cbmZ1bmN0aW9uIGlpKGEsYil7dmFyIGM9TixkPWRpKCksZT1iKCksZj0hSGUoZC5tZW1vaXplZFN0YXRlLGUpO2YmJihkLm1lbW9pemVkU3RhdGU9ZSxVZz0hMCk7ZD1kLnF1ZXVlO2ppKGtpLmJpbmQobnVsbCxjLGQsYSksW2FdKTtpZihkLmdldFNuYXBzaG90IT09Ynx8Znx8bnVsbCE9PVAmJlAubWVtb2l6ZWRTdGF0ZS50YWcmMSl7Yy5mbGFnc3w9MjA0ODtsaSg5LG1pLmJpbmQobnVsbCxjLGQsZSxiKSx2b2lkIDAsbnVsbCk7aWYobnVsbD09PVIpdGhyb3cgRXJyb3IocCgzNDkpKTswIT09KFJoJjMwKXx8bmkoYyxiLGUpfXJldHVybiBlfWZ1bmN0aW9uIG5pKGEsYixjKXthLmZsYWdzfD0xNjM4NDthPXtnZXRTbmFwc2hvdDpiLHZhbHVlOmN9O2I9Ti51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsLHN0b3JlczpudWxsfSxOLnVwZGF0ZVF1ZXVlPWIsYi5zdG9yZXM9W2FdKTooYz1iLnN0b3JlcyxudWxsPT09Yz9iLnN0b3Jlcz1bYV06Yy5wdXNoKGEpKX1cbmZ1bmN0aW9uIG1pKGEsYixjLGQpe2IudmFsdWU9YztiLmdldFNuYXBzaG90PWQ7b2koYikmJnBpKGEpfWZ1bmN0aW9uIGtpKGEsYixjKXtyZXR1cm4gYyhmdW5jdGlvbigpe29pKGIpJiZwaShhKX0pfWZ1bmN0aW9uIG9pKGEpe3ZhciBiPWEuZ2V0U25hcHNob3Q7YT1hLnZhbHVlO3RyeXt2YXIgYz1iKCk7cmV0dXJuIUhlKGEsYyl9Y2F0Y2goZCl7cmV0dXJuITB9fWZ1bmN0aW9uIHBpKGEpe3ZhciBiPVpnKGEsMSk7bnVsbCE9PWImJm1oKGIsYSwxLC0xKX1cbmZ1bmN0aW9uIHFpKGEpe3ZhciBiPWNpKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT17cGVuZGluZzpudWxsLGludGVybGVhdmVkOm51bGwsbGFuZXM6MCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6ZWksbGFzdFJlbmRlcmVkU3RhdGU6YX07Yi5xdWV1ZT1hO2E9YS5kaXNwYXRjaD1yaS5iaW5kKG51bGwsTixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfVxuZnVuY3Rpb24gbGkoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9Ti51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsLHN0b3JlczpudWxsfSxOLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfWZ1bmN0aW9uIHNpKCl7cmV0dXJuIGRpKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiB0aShhLGIsYyxkKXt2YXIgZT1jaSgpO04uZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPWxpKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiB1aShhLGIsYyxkKXt2YXIgZT1kaSgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJldoKGQsZy5kZXBzKSl7ZS5tZW1vaXplZFN0YXRlPWxpKGIsYyxmLGQpO3JldHVybn19Ti5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9bGkoMXxiLGMsZixkKX1mdW5jdGlvbiB2aShhLGIpe3JldHVybiB0aSg4MzkwNjU2LDgsYSxiKX1mdW5jdGlvbiBqaShhLGIpe3JldHVybiB1aSgyMDQ4LDgsYSxiKX1mdW5jdGlvbiB3aShhLGIpe3JldHVybiB1aSg0LDIsYSxiKX1mdW5jdGlvbiB4aShhLGIpe3JldHVybiB1aSg0LDQsYSxiKX1cbmZ1bmN0aW9uIHlpKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gemkoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiB1aSg0LDQseWkuYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gQWkoKXt9ZnVuY3Rpb24gQmkoYSxiKXt2YXIgYz1kaSgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmV2goYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBDaShhLGIpe3ZhciBjPWRpKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZXaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBEaShhLGIsYyl7aWYoMD09PShSaCYyMSkpcmV0dXJuIGEuYmFzZVN0YXRlJiYoYS5iYXNlU3RhdGU9ITEsVWc9ITApLGEubWVtb2l6ZWRTdGF0ZT1jO0hlKGMsYil8fChjPXljKCksTi5sYW5lc3w9YyxoaHw9YyxhLmJhc2VTdGF0ZT0hMCk7cmV0dXJuIGJ9ZnVuY3Rpb24gRWkoYSxiKXt2YXIgYz1DO0M9MCE9PWMmJjQ+Yz9jOjQ7YSghMCk7dmFyIGQ9UWgudHJhbnNpdGlvbjtRaC50cmFuc2l0aW9uPXt9O3RyeXthKCExKSxiKCl9ZmluYWxseXtDPWMsUWgudHJhbnNpdGlvbj1kfX1mdW5jdGlvbiBGaSgpe3JldHVybiBkaSgpLm1lbW9pemVkU3RhdGV9XG5mdW5jdGlvbiBHaShhLGIsYyl7dmFyIGQ9bGgoYSk7Yz17bGFuZTpkLGFjdGlvbjpjLGhhc0VhZ2VyU3RhdGU6ITEsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH07aWYoSGkoYSkpSWkoYixjKTtlbHNlIGlmKGM9WWcoYSxiLGMsZCksbnVsbCE9PWMpe3ZhciBlPUwoKTttaChjLGEsZCxlKTtKaShjLGIsZCl9fVxuZnVuY3Rpb24gcmkoYSxiLGMpe3ZhciBkPWxoKGEpLGU9e2xhbmU6ZCxhY3Rpb246YyxoYXNFYWdlclN0YXRlOiExLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O2lmKEhpKGEpKUlpKGIsZSk7ZWxzZXt2YXIgZj1hLmFsdGVybmF0ZTtpZigwPT09YS5sYW5lcyYmKG51bGw9PT1mfHwwPT09Zi5sYW5lcykmJihmPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZikpdHJ5e3ZhciBnPWIubGFzdFJlbmRlcmVkU3RhdGUsaD1mKGcsYyk7ZS5oYXNFYWdlclN0YXRlPSEwO2UuZWFnZXJTdGF0ZT1oO2lmKEhlKGgsZykpe3ZhciBrPWIuaW50ZXJsZWF2ZWQ7bnVsbD09PWs/KGUubmV4dD1lLFhnKGIpKTooZS5uZXh0PWsubmV4dCxrLm5leHQ9ZSk7Yi5pbnRlcmxlYXZlZD1lO3JldHVybn19Y2F0Y2gobCl7fWZpbmFsbHl7fWM9WWcoYSxiLGUsZCk7bnVsbCE9PWMmJihlPUwoKSxtaChjLGEsZCxlKSxKaShjLGIsZCkpfX1cbmZ1bmN0aW9uIEhpKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO3JldHVybiBhPT09Tnx8bnVsbCE9PWImJmI9PT1OfWZ1bmN0aW9uIElpKGEsYil7VGg9U2g9ITA7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn1mdW5jdGlvbiBKaShhLGIsYyl7aWYoMCE9PShjJjQxOTQyNDApKXt2YXIgZD1iLmxhbmVzO2QmPWEucGVuZGluZ0xhbmVzO2N8PWQ7Yi5sYW5lcz1jO0NjKGEsYyl9fVxudmFyIGFpPXtyZWFkQ29udGV4dDpWZyx1c2VDYWxsYmFjazpRLHVzZUNvbnRleHQ6USx1c2VFZmZlY3Q6USx1c2VJbXBlcmF0aXZlSGFuZGxlOlEsdXNlSW5zZXJ0aW9uRWZmZWN0OlEsdXNlTGF5b3V0RWZmZWN0OlEsdXNlTWVtbzpRLHVzZVJlZHVjZXI6USx1c2VSZWY6USx1c2VTdGF0ZTpRLHVzZURlYnVnVmFsdWU6USx1c2VEZWZlcnJlZFZhbHVlOlEsdXNlVHJhbnNpdGlvbjpRLHVzZU11dGFibGVTb3VyY2U6USx1c2VTeW5jRXh0ZXJuYWxTdG9yZTpRLHVzZUlkOlEsdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxZaD17cmVhZENvbnRleHQ6VmcsdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtjaSgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0OlZnLHVzZUVmZmVjdDp2aSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gdGkoNDE5NDMwOCxcbjQseWkuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiB0aSg0MTk0MzA4LDQsYSxiKX0sdXNlSW5zZXJ0aW9uRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRpKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9Y2koKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9Y2koKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9e3BlbmRpbmc6bnVsbCxpbnRlcmxlYXZlZDpudWxsLGxhbmVzOjAsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07ZC5xdWV1ZT1hO2E9YS5kaXNwYXRjaD1HaS5iaW5kKG51bGwsTixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9XG5jaSgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTpxaSx1c2VEZWJ1Z1ZhbHVlOkFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7cmV0dXJuIGNpKCkubWVtb2l6ZWRTdGF0ZT1hfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9cWkoITEpLGI9YVswXTthPUVpLmJpbmQobnVsbCxhWzFdKTtjaSgpLm1lbW9pemVkU3RhdGU9YTtyZXR1cm5bYixhXX0sdXNlTXV0YWJsZVNvdXJjZTpmdW5jdGlvbigpe30sdXNlU3luY0V4dGVybmFsU3RvcmU6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPU4sZT1jaSgpO2lmKEkpe2lmKHZvaWQgMD09PWMpdGhyb3cgRXJyb3IocCg0MDcpKTtjPWMoKX1lbHNle2M9YigpO2lmKG51bGw9PT1SKXRocm93IEVycm9yKHAoMzQ5KSk7MCE9PShSaCYzMCl8fG5pKGQsYixjKX1lLm1lbW9pemVkU3RhdGU9Yzt2YXIgZj17dmFsdWU6YyxnZXRTbmFwc2hvdDpifTtlLnF1ZXVlPWY7dmkoa2kuYmluZChudWxsLGQsXG5mLGEpLFthXSk7ZC5mbGFnc3w9MjA0ODtsaSg5LG1pLmJpbmQobnVsbCxkLGYsYyxiKSx2b2lkIDAsbnVsbCk7cmV0dXJuIGN9LHVzZUlkOmZ1bmN0aW9uKCl7dmFyIGE9Y2koKSxiPVIuaWRlbnRpZmllclByZWZpeDtpZihJKXt2YXIgYz1zZzt2YXIgZD1yZztjPShkJn4oMTw8MzItb2MoZCktMSkpLnRvU3RyaW5nKDMyKStjO2I9XCI6XCIrYitcIlJcIitjO2M9VWgrKzswPGMmJihiKz1cIkhcIitjLnRvU3RyaW5nKDMyKSk7Yis9XCI6XCJ9ZWxzZSBjPVZoKyssYj1cIjpcIitiK1wiclwiK2MudG9TdHJpbmcoMzIpK1wiOlwiO3JldHVybiBhLm1lbW9pemVkU3RhdGU9Yn0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxaaD17cmVhZENvbnRleHQ6VmcsdXNlQ2FsbGJhY2s6QmksdXNlQ29udGV4dDpWZyx1c2VFZmZlY3Q6amksdXNlSW1wZXJhdGl2ZUhhbmRsZTp6aSx1c2VJbnNlcnRpb25FZmZlY3Q6d2ksdXNlTGF5b3V0RWZmZWN0OnhpLHVzZU1lbW86Q2ksdXNlUmVkdWNlcjpmaSx1c2VSZWY6c2ksdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gZmkoZWkpfSxcbnVzZURlYnVnVmFsdWU6QWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1kaSgpO3JldHVybiBEaShiLE8ubWVtb2l6ZWRTdGF0ZSxhKX0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPWZpKGVpKVswXSxiPWRpKCkubWVtb2l6ZWRTdGF0ZTtyZXR1cm5bYSxiXX0sdXNlTXV0YWJsZVNvdXJjZTpoaSx1c2VTeW5jRXh0ZXJuYWxTdG9yZTppaSx1c2VJZDpGaSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LCRoPXtyZWFkQ29udGV4dDpWZyx1c2VDYWxsYmFjazpCaSx1c2VDb250ZXh0OlZnLHVzZUVmZmVjdDpqaSx1c2VJbXBlcmF0aXZlSGFuZGxlOnppLHVzZUluc2VydGlvbkVmZmVjdDp3aSx1c2VMYXlvdXRFZmZlY3Q6eGksdXNlTWVtbzpDaSx1c2VSZWR1Y2VyOmdpLHVzZVJlZjpzaSx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBnaShlaSl9LHVzZURlYnVnVmFsdWU6QWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1kaSgpO3JldHVybiBudWxsPT09XG5PP2IubWVtb2l6ZWRTdGF0ZT1hOkRpKGIsTy5tZW1vaXplZFN0YXRlLGEpfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9Z2koZWkpWzBdLGI9ZGkoKS5tZW1vaXplZFN0YXRlO3JldHVyblthLGJdfSx1c2VNdXRhYmxlU291cmNlOmhpLHVzZVN5bmNFeHRlcm5hbFN0b3JlOmlpLHVzZUlkOkZpLHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX07ZnVuY3Rpb24gS2koYSxiKXt0cnl7dmFyIGM9XCJcIixkPWI7ZG8gYys9UGEoZCksZD1kLnJldHVybjt3aGlsZShkKTt2YXIgZT1jfWNhdGNoKGYpe2U9XCJcXG5FcnJvciBnZW5lcmF0aW5nIHN0YWNrOiBcIitmLm1lc3NhZ2UrXCJcXG5cIitmLnN0YWNrfXJldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOmUsZGlnZXN0Om51bGx9fWZ1bmN0aW9uIExpKGEsYixjKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6bnVsbCxzdGFjazpudWxsIT1jP2M6bnVsbCxkaWdlc3Q6bnVsbCE9Yj9iOm51bGx9fVxuZnVuY3Rpb24gTWkoYSxiKXt0cnl7Y29uc29sZS5lcnJvcihiLnZhbHVlKX1jYXRjaChjKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYzt9KX19dmFyIE5pPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIE9pKGEsYixjKXtjPWNoKC0xLGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1BpfHwoUGk9ITAsUWk9ZCk7TWkoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBSaShhLGIsYyl7Yz1jaCgtMSxjKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIGQoZSl9O2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtNaShhLGIpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7TWkoYSxiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1TaT9TaT1uZXcgU2V0KFt0aGlzXSk6U2kuYWRkKHRoaXMpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY31cbmZ1bmN0aW9uIFRpKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtpZihudWxsPT09ZCl7ZD1hLnBpbmdDYWNoZT1uZXcgTmk7dmFyIGU9bmV3IFNldDtkLnNldChiLGUpfWVsc2UgZT1kLmdldChiKSx2b2lkIDA9PT1lJiYoZT1uZXcgU2V0LGQuc2V0KGIsZSkpO2UuaGFzKGMpfHwoZS5hZGQoYyksYT1VaS5iaW5kKG51bGwsYSxiLGMpLGIudGhlbihhLGEpKX1mdW5jdGlvbiBWaShhKXtkb3t2YXIgYjtpZihiPTEzPT09YS50YWcpYj1hLm1lbW9pemVkU3RhdGUsYj1udWxsIT09Yj9udWxsIT09Yi5kZWh5ZHJhdGVkPyEwOiExOiEwO2lmKGIpcmV0dXJuIGE7YT1hLnJldHVybn13aGlsZShudWxsIT09YSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBXaShhLGIsYyxkLGUpe2lmKDA9PT0oYS5tb2RlJjEpKXJldHVybiBhPT09Yj9hLmZsYWdzfD02NTUzNjooYS5mbGFnc3w9MTI4LGMuZmxhZ3N8PTEzMTA3MixjLmZsYWdzJj0tNTI4MDUsMT09PWMudGFnJiYobnVsbD09PWMuYWx0ZXJuYXRlP2MudGFnPTE3OihiPWNoKC0xLDEpLGIudGFnPTIsZGgoYyxiLDEpKSksYy5sYW5lc3w9MSksYTthLmZsYWdzfD02NTUzNjthLmxhbmVzPWU7cmV0dXJuIGF9dmFyIFhpPXVhLlJlYWN0Q3VycmVudE93bmVyLFVnPSExO2Z1bmN0aW9uIFlpKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/Q2goYixudWxsLGMsZCk6QmgoYixhLmNoaWxkLGMsZCl9XG5mdW5jdGlvbiBaaShhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7VGcoYixlKTtkPVhoKGEsYixjLGQsZixlKTtjPWJpKCk7aWYobnVsbCE9PWEmJiFVZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS0yMDUzLGEubGFuZXMmPX5lLCRpKGEsYixlKTtJJiZjJiZ2ZyhiKTtiLmZsYWdzfD0xO1lpKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gYWooYSxiLGMsZCxlKXtpZihudWxsPT09YSl7dmFyIGY9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYhYmooZikmJnZvaWQgMD09PWYuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWYsY2ooYSxiLGYsZCxlKTthPXloKGMudHlwZSxudWxsLGQsYixiLm1vZGUsZSk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWY9YS5jaGlsZDtpZigwPT09KGEubGFuZXMmZSkpe3ZhciBnPWYubWVtb2l6ZWRQcm9wcztjPWMuY29tcGFyZTtjPW51bGwhPT1jP2M6SWU7aWYoYyhnLGQpJiZhLnJlZj09PWIucmVmKXJldHVybiAkaShhLGIsZSl9Yi5mbGFnc3w9MTthPXdoKGYsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gY2ooYSxiLGMsZCxlKXtpZihudWxsIT09YSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKEllKGYsZCkmJmEucmVmPT09Yi5yZWYpaWYoVWc9ITEsYi5wZW5kaW5nUHJvcHM9ZD1mLDAhPT0oYS5sYW5lcyZlKSkwIT09KGEuZmxhZ3MmMTMxMDcyKSYmKFVnPSEwKTtlbHNlIHJldHVybiBiLmxhbmVzPWEubGFuZXMsJGkoYSxiLGUpfXJldHVybiBkaihhLGIsYyxkLGUpfVxuZnVuY3Rpb24gZWooYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5jaGlsZHJlbixmPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO2lmKFwiaGlkZGVuXCI9PT1kLm1vZGUpaWYoMD09PShiLm1vZGUmMSkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MCxjYWNoZVBvb2w6bnVsbCx0cmFuc2l0aW9uczpudWxsfSxHKGZqLGdqKSxnanw9YztlbHNle2lmKDA9PT0oYyYxMDczNzQxODI0KSlyZXR1cm4gYT1udWxsIT09Zj9mLmJhc2VMYW5lc3xjOmMsYi5sYW5lcz1iLmNoaWxkTGFuZXM9MTA3Mzc0MTgyNCxiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczphLGNhY2hlUG9vbDpudWxsLHRyYW5zaXRpb25zOm51bGx9LGIudXBkYXRlUXVldWU9bnVsbCxHKGZqLGdqKSxnanw9YSxudWxsO2IubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjAsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6bnVsbH07ZD1udWxsIT09Zj9mLmJhc2VMYW5lczpjO0coZmosZ2opO2dqfD1kfWVsc2UgbnVsbCE9PVxuZj8oZD1mLmJhc2VMYW5lc3xjLGIubWVtb2l6ZWRTdGF0ZT1udWxsKTpkPWMsRyhmaixnaiksZ2p8PWQ7WWkoYSxiLGUsYyk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gaGooYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5mbGFnc3w9NTEyLGIuZmxhZ3N8PTIwOTcxNTJ9ZnVuY3Rpb24gZGooYSxiLGMsZCxlKXt2YXIgZj1aZihjKT9YZjpILmN1cnJlbnQ7Zj1ZZihiLGYpO1RnKGIsZSk7Yz1YaChhLGIsYyxkLGYsZSk7ZD1iaSgpO2lmKG51bGwhPT1hJiYhVWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tMjA1MyxhLmxhbmVzJj1+ZSwkaShhLGIsZSk7SSYmZCYmdmcoYik7Yi5mbGFnc3w9MTtZaShhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGlqKGEsYixjLGQsZSl7aWYoWmYoYykpe3ZhciBmPSEwO2NnKGIpfWVsc2UgZj0hMTtUZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSlqaihhLGIpLHBoKGIsYyxkKSxyaChiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1WZyhsKToobD1aZihjKT9YZjpILmN1cnJlbnQsbD1ZZihiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxxPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtxfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8XG4oaCE9PWR8fGshPT1sKSYmcWgoYixnLGQsbCk7JGc9ITE7dmFyIHI9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cjtnaChiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8ciE9PWt8fFdmLmN1cnJlbnR8fCRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKGtoKGIsYyxtLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD0kZ3x8b2goYixjLGgsZCxyLGssbCkpPyhxfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NDE5NDMwOCkpOlxuKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NDE5NDMwOCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00MTk0MzA4KSxkPSExKX1lbHNle2c9Yi5zdGF0ZU5vZGU7YmgoYSxiKTtoPWIubWVtb2l6ZWRQcm9wcztsPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpMZyhiLnR5cGUsaCk7Zy5wcm9wcz1sO3E9Yi5wZW5kaW5nUHJvcHM7cj1nLmNvbnRleHQ7az1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az1WZyhrKTooaz1aZihjKT9YZjpILmN1cnJlbnQsaz1ZZihiLGspKTt2YXIgeT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczsobT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgeXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PXF8fHIhPT1rKSYmcWgoYixnLGQsayk7JGc9ITE7cj1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1yO2doKGIsZCxnLGUpO3ZhciBuPWIubWVtb2l6ZWRTdGF0ZTtoIT09cXx8ciE9PW58fFdmLmN1cnJlbnR8fCRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgeSYmKGtoKGIsYyx5LGQpLG49Yi5tZW1vaXplZFN0YXRlKSwobD0kZ3x8b2goYixjLGwsZCxyLG4sayl8fCExKT8obXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCxuLGspLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcbmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCxuLGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZmxhZ3N8PTEwMjQpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZyPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnI9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0xMDI0KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9biksZy5wcm9wcz1kLGcuc3RhdGU9bixnLmNvbnRleHQ9ayxkPWwpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnI9PT1cbmEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZyPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MTAyNCksZD0hMSl9cmV0dXJuIGtqKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIGtqKGEsYixjLGQsZSxmKXtoaihhLGIpO3ZhciBnPTAhPT0oYi5mbGFncyYxMjgpO2lmKCFkJiYhZylyZXR1cm4gZSYmZGcoYixjLCExKSwkaShhLGIsZik7ZD1iLnN0YXRlTm9kZTtYaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmZsYWdzfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPUJoKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9QmgoYixudWxsLGgsZikpOllpKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJmRnKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gbGooYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9hZyhhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZhZyhhLGIuY29udGV4dCwhMSk7SWgoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gbWooYSxiLGMsZCxlKXtJZygpO0pnKGUpO2IuZmxhZ3N8PTI1NjtZaShhLGIsYyxkKTtyZXR1cm4gYi5jaGlsZH12YXIgbmo9e2RlaHlkcmF0ZWQ6bnVsbCx0cmVlQ29udGV4dDpudWxsLHJldHJ5TGFuZTowfTtmdW5jdGlvbiBvaihhKXtyZXR1cm57YmFzZUxhbmVzOmEsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6bnVsbH19XG5mdW5jdGlvbiBwaihhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1NLmN1cnJlbnQsZj0hMSxnPTAhPT0oYi5mbGFncyYxMjgpLGg7KGg9Zyl8fChoPW51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlPyExOjAhPT0oZSYyKSk7aWYoaClmPSEwLGIuZmxhZ3MmPS0xMjk7ZWxzZSBpZihudWxsPT09YXx8bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSllfD0xO0coTSxlJjEpO2lmKG51bGw9PT1hKXtFZyhiKTthPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmKGE9YS5kZWh5ZHJhdGVkLG51bGwhPT1hKSlyZXR1cm4gMD09PShiLm1vZGUmMSk/Yi5sYW5lcz0xOlwiJCFcIj09PWEuZGF0YT9iLmxhbmVzPTg6Yi5sYW5lcz0xMDczNzQxODI0LG51bGw7Zz1kLmNoaWxkcmVuO2E9ZC5mYWxsYmFjaztyZXR1cm4gZj8oZD1iLm1vZGUsZj1iLmNoaWxkLGc9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpnfSwwPT09KGQmMSkmJm51bGwhPT1mPyhmLmNoaWxkTGFuZXM9MCxmLnBlbmRpbmdQcm9wcz1cbmcpOmY9cWooZyxkLDAsbnVsbCksYT1BaChhLGQsYyxudWxsKSxmLnJldHVybj1iLGEucmV0dXJuPWIsZi5zaWJsaW5nPWEsYi5jaGlsZD1mLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT1vaihjKSxiLm1lbW9pemVkU3RhdGU9bmosYSk6cmooYixnKX1lPWEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSYmKGg9ZS5kZWh5ZHJhdGVkLG51bGwhPT1oKSlyZXR1cm4gc2ooYSxiLGcsZCxoLGUsYyk7aWYoZil7Zj1kLmZhbGxiYWNrO2c9Yi5tb2RlO2U9YS5jaGlsZDtoPWUuc2libGluZzt2YXIgaz17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmQuY2hpbGRyZW59OzA9PT0oZyYxKSYmYi5jaGlsZCE9PWU/KGQ9Yi5jaGlsZCxkLmNoaWxkTGFuZXM9MCxkLnBlbmRpbmdQcm9wcz1rLGIuZGVsZXRpb25zPW51bGwpOihkPXdoKGUsayksZC5zdWJ0cmVlRmxhZ3M9ZS5zdWJ0cmVlRmxhZ3MmMTQ2ODAwNjQpO251bGwhPT1oP2Y9d2goaCxmKTooZj1BaChmLGcsYyxudWxsKSxmLmZsYWdzfD0yKTtmLnJldHVybj1cbmI7ZC5yZXR1cm49YjtkLnNpYmxpbmc9ZjtiLmNoaWxkPWQ7ZD1mO2Y9Yi5jaGlsZDtnPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZTtnPW51bGw9PT1nP29qKGMpOntiYXNlTGFuZXM6Zy5iYXNlTGFuZXN8YyxjYWNoZVBvb2w6bnVsbCx0cmFuc2l0aW9uczpnLnRyYW5zaXRpb25zfTtmLm1lbW9pemVkU3RhdGU9ZztmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jO2IubWVtb2l6ZWRTdGF0ZT1uajtyZXR1cm4gZH1mPWEuY2hpbGQ7YT1mLnNpYmxpbmc7ZD13aChmLHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmQuY2hpbGRyZW59KTswPT09KGIubW9kZSYxKSYmKGQubGFuZXM9Yyk7ZC5yZXR1cm49YjtkLnNpYmxpbmc9bnVsbDtudWxsIT09YSYmKGM9Yi5kZWxldGlvbnMsbnVsbD09PWM/KGIuZGVsZXRpb25zPVthXSxiLmZsYWdzfD0xNik6Yy5wdXNoKGEpKTtiLmNoaWxkPWQ7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGR9XG5mdW5jdGlvbiByaihhLGIpe2I9cWooe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46Yn0sYS5tb2RlLDAsbnVsbCk7Yi5yZXR1cm49YTtyZXR1cm4gYS5jaGlsZD1ifWZ1bmN0aW9uIHRqKGEsYixjLGQpe251bGwhPT1kJiZKZyhkKTtCaChiLGEuY2hpbGQsbnVsbCxjKTthPXJqKGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4pO2EuZmxhZ3N8PTI7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGF9XG5mdW5jdGlvbiBzaihhLGIsYyxkLGUsZixnKXtpZihjKXtpZihiLmZsYWdzJjI1NilyZXR1cm4gYi5mbGFncyY9LTI1NyxkPUxpKEVycm9yKHAoNDIyKSkpLHRqKGEsYixnLGQpO2lmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpcmV0dXJuIGIuY2hpbGQ9YS5jaGlsZCxiLmZsYWdzfD0xMjgsbnVsbDtmPWQuZmFsbGJhY2s7ZT1iLm1vZGU7ZD1xaih7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjpkLmNoaWxkcmVufSxlLDAsbnVsbCk7Zj1BaChmLGUsZyxudWxsKTtmLmZsYWdzfD0yO2QucmV0dXJuPWI7Zi5yZXR1cm49YjtkLnNpYmxpbmc9ZjtiLmNoaWxkPWQ7MCE9PShiLm1vZGUmMSkmJkJoKGIsYS5jaGlsZCxudWxsLGcpO2IuY2hpbGQubWVtb2l6ZWRTdGF0ZT1vaihnKTtiLm1lbW9pemVkU3RhdGU9bmo7cmV0dXJuIGZ9aWYoMD09PShiLm1vZGUmMSkpcmV0dXJuIHRqKGEsYixnLG51bGwpO2lmKFwiJCFcIj09PWUuZGF0YSl7ZD1lLm5leHRTaWJsaW5nJiZlLm5leHRTaWJsaW5nLmRhdGFzZXQ7XG5pZihkKXZhciBoPWQuZGdzdDtkPWg7Zj1FcnJvcihwKDQxOSkpO2Q9TGkoZixkLHZvaWQgMCk7cmV0dXJuIHRqKGEsYixnLGQpfWg9MCE9PShnJmEuY2hpbGRMYW5lcyk7aWYoVWd8fGgpe2Q9UjtpZihudWxsIT09ZCl7c3dpdGNoKGcmLWcpe2Nhc2UgNDplPTI7YnJlYWs7Y2FzZSAxNjplPTg7YnJlYWs7Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpjYXNlIDQxOTQzMDQ6Y2FzZSA4Mzg4NjA4OmNhc2UgMTY3NzcyMTY6Y2FzZSAzMzU1NDQzMjpjYXNlIDY3MTA4ODY0OmU9MzI7YnJlYWs7Y2FzZSA1MzY4NzA5MTI6ZT0yNjg0MzU0NTY7YnJlYWs7ZGVmYXVsdDplPTB9ZT0wIT09KGUmKGQuc3VzcGVuZGVkTGFuZXN8ZykpPzA6ZTtcbjAhPT1lJiZlIT09Zi5yZXRyeUxhbmUmJihmLnJldHJ5TGFuZT1lLFpnKGEsZSksbWgoZCxhLGUsLTEpKX11aigpO2Q9TGkoRXJyb3IocCg0MjEpKSk7cmV0dXJuIHRqKGEsYixnLGQpfWlmKFwiJD9cIj09PWUuZGF0YSlyZXR1cm4gYi5mbGFnc3w9MTI4LGIuY2hpbGQ9YS5jaGlsZCxiPXZqLmJpbmQobnVsbCxhKSxlLl9yZWFjdFJldHJ5PWIsbnVsbDthPWYudHJlZUNvbnRleHQ7eWc9TGYoZS5uZXh0U2libGluZyk7eGc9YjtJPSEwO3pnPW51bGw7bnVsbCE9PWEmJihvZ1twZysrXT1yZyxvZ1twZysrXT1zZyxvZ1twZysrXT1xZyxyZz1hLmlkLHNnPWEub3ZlcmZsb3cscWc9Yik7Yj1yaihiLGQuY2hpbGRyZW4pO2IuZmxhZ3N8PTQwOTY7cmV0dXJuIGJ9ZnVuY3Rpb24gd2ooYSxiLGMpe2EubGFuZXN8PWI7dmFyIGQ9YS5hbHRlcm5hdGU7bnVsbCE9PWQmJihkLmxhbmVzfD1iKTtTZyhhLnJldHVybixiLGMpfVxuZnVuY3Rpb24geGooYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWY/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbE1vZGU6ZX06KGYuaXNCYWNrd2FyZHM9YixmLnJlbmRlcmluZz1udWxsLGYucmVuZGVyaW5nU3RhcnRUaW1lPTAsZi5sYXN0PWQsZi50YWlsPWMsZi50YWlsTW9kZT1lKX1cbmZ1bmN0aW9uIHlqKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7WWkoYSxiLGQuY2hpbGRyZW4sYyk7ZD1NLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5mbGFnc3w9MTI4O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5mbGFncyYxMjgpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmd2ooYSxjLGIpO2Vsc2UgaWYoMTk9PT1hLnRhZyl3aihhLGMsYik7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUcoTSxkKTtpZigwPT09KGIubW9kZSYxKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09TWgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTt4aihiLCExLGUsYyxmKTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PU1oKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX14aihiLCEwLGMsbnVsbCxmKTticmVhaztjYXNlIFwidG9nZXRoZXJcIjp4aihiLCExLG51bGwsbnVsbCx2b2lkIDApO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBqaihhLGIpezA9PT0oYi5tb2RlJjEpJiZudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKX1mdW5jdGlvbiAkaShhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7aGh8PWIubGFuZXM7aWYoMD09PShjJmIuY2hpbGRMYW5lcykpcmV0dXJuIG51bGw7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHAoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPXdoKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz13aChhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gemooYSxiLGMpe3N3aXRjaChiLnRhZyl7Y2FzZSAzOmxqKGIpO0lnKCk7YnJlYWs7Y2FzZSA1OktoKGIpO2JyZWFrO2Nhc2UgMTpaZihiLnR5cGUpJiZjZyhiKTticmVhaztjYXNlIDQ6SWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOnZhciBkPWIudHlwZS5fY29udGV4dCxlPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTtHKE1nLGQuX2N1cnJlbnRWYWx1ZSk7ZC5fY3VycmVudFZhbHVlPWU7YnJlYWs7Y2FzZSAxMzpkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCl7aWYobnVsbCE9PWQuZGVoeWRyYXRlZClyZXR1cm4gRyhNLE0uY3VycmVudCYxKSxiLmZsYWdzfD0xMjgsbnVsbDtpZigwIT09KGMmYi5jaGlsZC5jaGlsZExhbmVzKSlyZXR1cm4gcGooYSxiLGMpO0coTSxNLmN1cnJlbnQmMSk7YT0kaShhLGIsYyk7cmV0dXJuIG51bGwhPT1hP2Euc2libGluZzpudWxsfUcoTSxNLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPTAhPT0oYyZcbmIuY2hpbGRMYW5lcyk7aWYoMCE9PShhLmZsYWdzJjEyOCkpe2lmKGQpcmV0dXJuIHlqKGEsYixjKTtiLmZsYWdzfD0xMjh9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsLGUubGFzdEVmZmVjdD1udWxsKTtHKE0sTS5jdXJyZW50KTtpZihkKWJyZWFrO2Vsc2UgcmV0dXJuIG51bGw7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiBiLmxhbmVzPTAsZWooYSxiLGMpfXJldHVybiAkaShhLGIsYyl9dmFyIEFqLEJqLENqLERqO1xuQWo9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O0JqPWZ1bmN0aW9uKCl7fTtcbkNqPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWEubWVtb2l6ZWRQcm9wcztpZihlIT09ZCl7YT1iLnN0YXRlTm9kZTtIaChFaC5jdXJyZW50KTt2YXIgZj1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjplPVlhKGEsZSk7ZD1ZYShhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmU9QSh7fSxlLHt2YWx1ZTp2b2lkIDB9KTtkPUEoe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplPWdiKGEsZSk7ZD1nYihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPUJmKX11YihjLGQpO3ZhciBnO2M9bnVsbDtmb3IobCBpbiBlKWlmKCFkLmhhc093blByb3BlcnR5KGwpJiZlLmhhc093blByb3BlcnR5KGwpJiZudWxsIT1lW2xdKWlmKFwic3R5bGVcIj09PWwpe3ZhciBoPWVbbF07Zm9yKGcgaW4gaCloLmhhc093blByb3BlcnR5KGcpJiZcbihjfHwoYz17fSksY1tnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09bCYmXCJjaGlsZHJlblwiIT09bCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKGVhLmhhc093blByb3BlcnR5KGwpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChsLG51bGwpKTtmb3IobCBpbiBkKXt2YXIgaz1kW2xdO2g9bnVsbCE9ZT9lW2xdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGwpJiZrIT09aCYmKG51bGwhPWt8fG51bGwhPWgpKWlmKFwic3R5bGVcIj09PWwpaWYoaCl7Zm9yKGcgaW4gaCkhaC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGN8fChjPXt9KSxjW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmaFtnXSE9PWtbZ10mJihjfHwoYz17fSksY1tnXT1rW2ddKX1lbHNlIGN8fChmfHwoZj1bXSksZi5wdXNoKGwsXG5jKSksYz1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGg9aD9oLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmaCE9PWsmJihmPWZ8fFtdKS5wdXNoKGwsaykpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGwsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJihlYS5oYXNPd25Qcm9wZXJ0eShsKT8obnVsbCE9ayYmXCJvblNjcm9sbFwiPT09bCYmRChcInNjcm9sbFwiLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOihmPWZ8fFtdKS5wdXNoKGwsaykpfWMmJihmPWZ8fFtdKS5wdXNoKFwic3R5bGVcIixjKTt2YXIgbD1mO2lmKGIudXBkYXRlUXVldWU9bCliLmZsYWdzfD00fX07RGo9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmZsYWdzfD00KX07XG5mdW5jdGlvbiBFaihhLGIpe2lmKCFJKXN3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBTKGEpe3ZhciBiPW51bGwhPT1hLmFsdGVybmF0ZSYmYS5hbHRlcm5hdGUuY2hpbGQ9PT1hLmNoaWxkLGM9MCxkPTA7aWYoYilmb3IodmFyIGU9YS5jaGlsZDtudWxsIT09ZTspY3w9ZS5sYW5lc3xlLmNoaWxkTGFuZXMsZHw9ZS5zdWJ0cmVlRmxhZ3MmMTQ2ODAwNjQsZHw9ZS5mbGFncyYxNDY4MDA2NCxlLnJldHVybj1hLGU9ZS5zaWJsaW5nO2Vsc2UgZm9yKGU9YS5jaGlsZDtudWxsIT09ZTspY3w9ZS5sYW5lc3xlLmNoaWxkTGFuZXMsZHw9ZS5zdWJ0cmVlRmxhZ3MsZHw9ZS5mbGFncyxlLnJldHVybj1hLGU9ZS5zaWJsaW5nO2Euc3VidHJlZUZsYWdzfD1kO2EuY2hpbGRMYW5lcz1jO3JldHVybiBifVxuZnVuY3Rpb24gRmooYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO3dnKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIFMoYiksbnVsbDtjYXNlIDE6cmV0dXJuIFpmKGIudHlwZSkmJiRmKCksUyhiKSxudWxsO2Nhc2UgMzpkPWIuc3RhdGVOb2RlO0poKCk7RShXZik7RShIKTtPaCgpO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClHZyhiKT9iLmZsYWdzfD00Om51bGw9PT1hfHxhLm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkJiYwPT09KGIuZmxhZ3MmMjU2KXx8KGIuZmxhZ3N8PTEwMjQsbnVsbCE9PXpnJiYoR2ooemcpLHpnPW51bGwpKTtCaihhLGIpO1MoYik7cmV0dXJuIG51bGw7Y2FzZSA1OkxoKGIpO3ZhciBlPUhoKEdoLmN1cnJlbnQpO1xuYz1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKUNqKGEsYixjLGQsZSksYS5yZWYhPT1iLnJlZiYmKGIuZmxhZ3N8PTUxMixiLmZsYWdzfD0yMDk3MTUyKTtlbHNle2lmKCFkKXtpZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IocCgxNjYpKTtTKGIpO3JldHVybiBudWxsfWE9SGgoRWguY3VycmVudCk7aWYoR2coYikpe2Q9Yi5zdGF0ZU5vZGU7Yz1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2RbT2ZdPWI7ZFtQZl09ZjthPTAhPT0oYi5tb2RlJjEpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RChcImNhbmNlbFwiLGQpO0QoXCJjbG9zZVwiLGQpO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RChcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZT0wO2U8bGYubGVuZ3RoO2UrKylEKGxmW2VdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpEKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpEKFwiZXJyb3JcIixcbmQpO0QoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpEKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoZCxmKTtEKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RChcImludmFsaWRcIixkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihkLGYpLEQoXCJpbnZhbGlkXCIsZCl9dWIoYyxmKTtlPW51bGw7Zm9yKHZhciBnIGluIGYpaWYoZi5oYXNPd25Qcm9wZXJ0eShnKSl7dmFyIGg9ZltnXTtcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgaD9kLnRleHRDb250ZW50IT09aCYmKCEwIT09Zi5zdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcmJkFmKGQudGV4dENvbnRlbnQsaCxhKSxlPVtcImNoaWxkcmVuXCIsaF0pOlwibnVtYmVyXCI9PT10eXBlb2YgaCYmZC50ZXh0Q29udGVudCE9PVwiXCIraCYmKCEwIT09Zi5zdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcmJkFmKGQudGV4dENvbnRlbnQsXG5oLGEpLGU9W1wiY2hpbGRyZW5cIixcIlwiK2hdKTplYS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9aCYmXCJvblNjcm9sbFwiPT09ZyYmRChcInNjcm9sbFwiLGQpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShkKTtkYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGQpO2piKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoZC5vbmNsaWNrPUJmKX1kPWU7Yi51cGRhdGVRdWV1ZT1kO251bGwhPT1kJiYoYi5mbGFnc3w9NCl9ZWxzZXtnPTk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50O1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YSYmKGE9a2IoYykpO1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9cInNjcmlwdFwiPT09Yz8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XG5cInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoYyx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChjKSxcInNlbGVjdFwiPT09YyYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsYyk7YVtPZl09YjthW1BmXT1kO0FqKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTthOntnPXZiKGMsZCk7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpEKFwiY2FuY2VsXCIsYSk7RChcImNsb3NlXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RChcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPGxmLmxlbmd0aDtlKyspRChsZltlXSxhKTtlPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkQoXCJlcnJvclwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpEKFwiZXJyb3JcIixcbmEpO0QoXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RChcInRvZ2dsZVwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpaYShhLGQpO2U9WWEoYSxkKTtEKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWQ7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtlPUEoe30sZCx7dmFsdWU6dm9pZCAwfSk7RChcImludmFsaWRcIixhKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihhLGQpO2U9Z2IoYSxkKTtEKFwiaW52YWxpZFwiLGEpO2JyZWFrO2RlZmF1bHQ6ZT1kfXViKGMsZSk7aD1lO2ZvcihmIGluIGgpaWYoaC5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGs9aFtmXTtcInN0eWxlXCI9PT1mP3NiKGEsayk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8oaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1rJiZuYihhLGspKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2Ygaz8oXCJ0ZXh0YXJlYVwiIT09XG5jfHxcIlwiIT09aykmJm9iKGEsayk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZvYihhLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKGVhLmhhc093blByb3BlcnR5KGYpP251bGwhPWsmJlwib25TY3JvbGxcIj09PWYmJkQoXCJzY3JvbGxcIixhKTpudWxsIT1rJiZ0YShhLGYsayxnKSl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGEpO2RiKGEsZCwhMSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoYSk7amIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK1NhKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Zj1kLnZhbHVlO251bGwhPWY/ZmIoYSwhIWQubXVsdGlwbGUsZiwhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJmZiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLFxuITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGUub25DbGljayYmKGEub25jbGljaz1CZil9c3dpdGNoKGMpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6ZD0hIWQuYXV0b0ZvY3VzO2JyZWFrIGE7Y2FzZSBcImltZ1wiOmQ9ITA7YnJlYWsgYTtkZWZhdWx0OmQ9ITF9fWQmJihiLmZsYWdzfD00KX1udWxsIT09Yi5yZWYmJihiLmZsYWdzfD01MTIsYi5mbGFnc3w9MjA5NzE1Mil9UyhiKTtyZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRGooYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHAoMTY2KSk7Yz1IaChHaC5jdXJyZW50KTtIaChFaC5jdXJyZW50KTtpZihHZyhiKSl7ZD1iLnN0YXRlTm9kZTtjPWIubWVtb2l6ZWRQcm9wcztkW09mXT1iO2lmKGY9ZC5ub2RlVmFsdWUhPT1jKWlmKGE9XG54ZyxudWxsIT09YSlzd2l0Y2goYS50YWcpe2Nhc2UgMzpBZihkLm5vZGVWYWx1ZSxjLDAhPT0oYS5tb2RlJjEpKTticmVhaztjYXNlIDU6ITAhPT1hLm1lbW9pemVkUHJvcHMuc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nJiZBZihkLm5vZGVWYWx1ZSxjLDAhPT0oYS5tb2RlJjEpKX1mJiYoYi5mbGFnc3w9NCl9ZWxzZSBkPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksZFtPZl09YixiLnN0YXRlTm9kZT1kfVMoYik7cmV0dXJuIG51bGw7Y2FzZSAxMzpFKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1hfHxudWxsIT09YS5tZW1vaXplZFN0YXRlJiZudWxsIT09YS5tZW1vaXplZFN0YXRlLmRlaHlkcmF0ZWQpe2lmKEkmJm51bGwhPT15ZyYmMCE9PShiLm1vZGUmMSkmJjA9PT0oYi5mbGFncyYxMjgpKUhnKCksSWcoKSxiLmZsYWdzfD05ODU2MCxmPSExO2Vsc2UgaWYoZj1HZyhiKSxudWxsIT09ZCYmbnVsbCE9PWQuZGVoeWRyYXRlZCl7aWYobnVsbD09PVxuYSl7aWYoIWYpdGhyb3cgRXJyb3IocCgzMTgpKTtmPWIubWVtb2l6ZWRTdGF0ZTtmPW51bGwhPT1mP2YuZGVoeWRyYXRlZDpudWxsO2lmKCFmKXRocm93IEVycm9yKHAoMzE3KSk7ZltPZl09Yn1lbHNlIElnKCksMD09PShiLmZsYWdzJjEyOCkmJihiLm1lbW9pemVkU3RhdGU9bnVsbCksYi5mbGFnc3w9NDtTKGIpO2Y9ITF9ZWxzZSBudWxsIT09emcmJihHaih6Zyksemc9bnVsbCksZj0hMDtpZighZilyZXR1cm4gYi5mbGFncyY2NTUzNj9iOm51bGx9aWYoMCE9PShiLmZsYWdzJjEyOCkpcmV0dXJuIGIubGFuZXM9YyxiO2Q9bnVsbCE9PWQ7ZCE9PShudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSkmJmQmJihiLmNoaWxkLmZsYWdzfD04MTkyLDAhPT0oYi5tb2RlJjEpJiYobnVsbD09PWF8fDAhPT0oTS5jdXJyZW50JjEpPzA9PT1UJiYoVD0zKTp1aigpKSk7bnVsbCE9PWIudXBkYXRlUXVldWUmJihiLmZsYWdzfD00KTtTKGIpO3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gSmgoKSxcbkJqKGEsYiksbnVsbD09PWEmJnNmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLFMoYiksbnVsbDtjYXNlIDEwOnJldHVybiBSZyhiLnR5cGUuX2NvbnRleHQpLFMoYiksbnVsbDtjYXNlIDE3OnJldHVybiBaZihiLnR5cGUpJiYkZigpLFMoYiksbnVsbDtjYXNlIDE5OkUoTSk7Zj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWYpcmV0dXJuIFMoYiksbnVsbDtkPTAhPT0oYi5mbGFncyYxMjgpO2c9Zi5yZW5kZXJpbmc7aWYobnVsbD09PWcpaWYoZClFaihmLCExKTtlbHNle2lmKDAhPT1UfHxudWxsIT09YSYmMCE9PShhLmZsYWdzJjEyOCkpZm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2c9TWgoYSk7aWYobnVsbCE9PWcpe2IuZmxhZ3N8PTEyODtFaihmLCExKTtkPWcudXBkYXRlUXVldWU7bnVsbCE9PWQmJihiLnVwZGF0ZVF1ZXVlPWQsYi5mbGFnc3w9NCk7Yi5zdWJ0cmVlRmxhZ3M9MDtkPWM7Zm9yKGM9Yi5jaGlsZDtudWxsIT09YzspZj1jLGE9ZCxmLmZsYWdzJj0xNDY4MDA2Nixcbmc9Zi5hbHRlcm5hdGUsbnVsbD09PWc/KGYuY2hpbGRMYW5lcz0wLGYubGFuZXM9YSxmLmNoaWxkPW51bGwsZi5zdWJ0cmVlRmxhZ3M9MCxmLm1lbW9pemVkUHJvcHM9bnVsbCxmLm1lbW9pemVkU3RhdGU9bnVsbCxmLnVwZGF0ZVF1ZXVlPW51bGwsZi5kZXBlbmRlbmNpZXM9bnVsbCxmLnN0YXRlTm9kZT1udWxsKTooZi5jaGlsZExhbmVzPWcuY2hpbGRMYW5lcyxmLmxhbmVzPWcubGFuZXMsZi5jaGlsZD1nLmNoaWxkLGYuc3VidHJlZUZsYWdzPTAsZi5kZWxldGlvbnM9bnVsbCxmLm1lbW9pemVkUHJvcHM9Zy5tZW1vaXplZFByb3BzLGYubWVtb2l6ZWRTdGF0ZT1nLm1lbW9pemVkU3RhdGUsZi51cGRhdGVRdWV1ZT1nLnVwZGF0ZVF1ZXVlLGYudHlwZT1nLnR5cGUsYT1nLmRlcGVuZGVuY2llcyxmLmRlcGVuZGVuY2llcz1udWxsPT09YT9udWxsOntsYW5lczphLmxhbmVzLGZpcnN0Q29udGV4dDphLmZpcnN0Q29udGV4dH0pLGM9Yy5zaWJsaW5nO0coTSxNLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1hPVxuYS5zaWJsaW5nfW51bGwhPT1mLnRhaWwmJkIoKT5IaiYmKGIuZmxhZ3N8PTEyOCxkPSEwLEVqKGYsITEpLGIubGFuZXM9NDE5NDMwNCl9ZWxzZXtpZighZClpZihhPU1oKGcpLG51bGwhPT1hKXtpZihiLmZsYWdzfD0xMjgsZD0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5mbGFnc3w9NCksRWooZiwhMCksbnVsbD09PWYudGFpbCYmXCJoaWRkZW5cIj09PWYudGFpbE1vZGUmJiFnLmFsdGVybmF0ZSYmIUkpcmV0dXJuIFMoYiksbnVsbH1lbHNlIDIqQigpLWYucmVuZGVyaW5nU3RhcnRUaW1lPkhqJiYxMDczNzQxODI0IT09YyYmKGIuZmxhZ3N8PTEyOCxkPSEwLEVqKGYsITEpLGIubGFuZXM9NDE5NDMwNCk7Zi5pc0JhY2t3YXJkcz8oZy5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1nKTooYz1mLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWc6Yi5jaGlsZD1nLGYubGFzdD1nKX1pZihudWxsIT09Zi50YWlsKXJldHVybiBiPWYudGFpbCxmLnJlbmRlcmluZz1cbmIsZi50YWlsPWIuc2libGluZyxmLnJlbmRlcmluZ1N0YXJ0VGltZT1CKCksYi5zaWJsaW5nPW51bGwsYz1NLmN1cnJlbnQsRyhNLGQ/YyYxfDI6YyYxKSxiO1MoYik7cmV0dXJuIG51bGw7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiBJaigpLGQ9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSxudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSE9PWQmJihiLmZsYWdzfD04MTkyKSxkJiYwIT09KGIubW9kZSYxKT8wIT09KGdqJjEwNzM3NDE4MjQpJiYoUyhiKSxiLnN1YnRyZWVGbGFncyY2JiYoYi5mbGFnc3w9ODE5MikpOlMoYiksbnVsbDtjYXNlIDI0OnJldHVybiBudWxsO2Nhc2UgMjU6cmV0dXJuIG51bGx9dGhyb3cgRXJyb3IocCgxNTYsYi50YWcpKTt9XG5mdW5jdGlvbiBKaihhLGIpe3dnKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAxOnJldHVybiBaZihiLnR5cGUpJiYkZigpLGE9Yi5mbGFncyxhJjY1NTM2PyhiLmZsYWdzPWEmLTY1NTM3fDEyOCxiKTpudWxsO2Nhc2UgMzpyZXR1cm4gSmgoKSxFKFdmKSxFKEgpLE9oKCksYT1iLmZsYWdzLDAhPT0oYSY2NTUzNikmJjA9PT0oYSYxMjgpPyhiLmZsYWdzPWEmLTY1NTM3fDEyOCxiKTpudWxsO2Nhc2UgNTpyZXR1cm4gTGgoYiksbnVsbDtjYXNlIDEzOkUoTSk7YT1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQpe2lmKG51bGw9PT1iLmFsdGVybmF0ZSl0aHJvdyBFcnJvcihwKDM0MCkpO0lnKCl9YT1iLmZsYWdzO3JldHVybiBhJjY1NTM2PyhiLmZsYWdzPWEmLTY1NTM3fDEyOCxiKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEUoTSksbnVsbDtjYXNlIDQ6cmV0dXJuIEpoKCksbnVsbDtjYXNlIDEwOnJldHVybiBSZyhiLnR5cGUuX2NvbnRleHQpLG51bGw7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiBJaigpLFxubnVsbDtjYXNlIDI0OnJldHVybiBudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fXZhciBLaj0hMSxVPSExLExqPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0LFY9bnVsbDtmdW5jdGlvbiBNaihhLGIpe3ZhciBjPWEucmVmO2lmKG51bGwhPT1jKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjKXRyeXtjKG51bGwpfWNhdGNoKGQpe1coYSxiLGQpfWVsc2UgYy5jdXJyZW50PW51bGx9ZnVuY3Rpb24gTmooYSxiLGMpe3RyeXtjKCl9Y2F0Y2goZCl7VyhhLGIsZCl9fXZhciBPaj0hMTtcbmZ1bmN0aW9uIFBqKGEsYil7Q2Y9ZGQ7YT1NZSgpO2lmKE5lKGEpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBhKXZhciBjPXtzdGFydDphLnNlbGVjdGlvblN0YXJ0LGVuZDphLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntjPShjPWEub3duZXJEb2N1bWVudCkmJmMuZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgZD1jLmdldFNlbGVjdGlvbiYmYy5nZXRTZWxlY3Rpb24oKTtpZihkJiYwIT09ZC5yYW5nZUNvdW50KXtjPWQuYW5jaG9yTm9kZTt2YXIgZT1kLmFuY2hvck9mZnNldCxmPWQuZm9jdXNOb2RlO2Q9ZC5mb2N1c09mZnNldDt0cnl7Yy5ub2RlVHlwZSxmLm5vZGVUeXBlfWNhdGNoKEYpe2M9bnVsbDticmVhayBhfXZhciBnPTAsaD0tMSxrPS0xLGw9MCxtPTAscT1hLHI9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB5Ozspe3EhPT1jfHwwIT09ZSYmMyE9PXEubm9kZVR5cGV8fChoPWcrZSk7cSE9PWZ8fDAhPT1kJiYzIT09cS5ub2RlVHlwZXx8KGs9ZytkKTszPT09cS5ub2RlVHlwZSYmKGcrPVxucS5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KHk9cS5maXJzdENoaWxkKSlicmVhaztyPXE7cT15fWZvcig7Oyl7aWYocT09PWEpYnJlYWsgYjtyPT09YyYmKytsPT09ZSYmKGg9Zyk7cj09PWYmJisrbT09PWQmJihrPWcpO2lmKG51bGwhPT0oeT1xLm5leHRTaWJsaW5nKSlicmVhaztxPXI7cj1xLnBhcmVudE5vZGV9cT15fWM9LTE9PT1ofHwtMT09PWs/bnVsbDp7c3RhcnQ6aCxlbmQ6a319ZWxzZSBjPW51bGx9Yz1jfHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBjPW51bGw7RGY9e2ZvY3VzZWRFbGVtOmEsc2VsZWN0aW9uUmFuZ2U6Y307ZGQ9ITE7Zm9yKFY9YjtudWxsIT09VjspaWYoYj1WLGE9Yi5jaGlsZCwwIT09KGIuc3VidHJlZUZsYWdzJjEwMjgpJiZudWxsIT09YSlhLnJldHVybj1iLFY9YTtlbHNlIGZvcig7bnVsbCE9PVY7KXtiPVY7dHJ5e3ZhciBuPWIuYWx0ZXJuYXRlO2lmKDAhPT0oYi5mbGFncyYxMDI0KSlzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6YnJlYWs7XG5jYXNlIDE6aWYobnVsbCE9PW4pe3ZhciB0PW4ubWVtb2l6ZWRQcm9wcyxKPW4ubWVtb2l6ZWRTdGF0ZSx4PWIuc3RhdGVOb2RlLHc9eC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP3Q6TGcoYi50eXBlLHQpLEopO3guX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9d31icmVhaztjYXNlIDM6dmFyIHU9Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzsxPT09dS5ub2RlVHlwZT91LnRleHRDb250ZW50PVwiXCI6OT09PXUubm9kZVR5cGUmJnUuZG9jdW1lbnRFbGVtZW50JiZ1LnJlbW92ZUNoaWxkKHUuZG9jdW1lbnRFbGVtZW50KTticmVhaztjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IocCgxNjMpKTt9fWNhdGNoKEYpe1coYixiLnJldHVybixGKX1hPWIuc2libGluZztpZihudWxsIT09YSl7YS5yZXR1cm49Yi5yZXR1cm47Vj1hO2JyZWFrfVY9Yi5yZXR1cm59bj1PajtPaj0hMTtyZXR1cm4gbn1cbmZ1bmN0aW9uIFFqKGEsYixjKXt2YXIgZD1iLnVwZGF0ZVF1ZXVlO2Q9bnVsbCE9PWQ/ZC5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWQpe3ZhciBlPWQ9ZC5uZXh0O2Rve2lmKChlLnRhZyZhKT09PWEpe3ZhciBmPWUuZGVzdHJveTtlLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWYmJk5qKGIsYyxmKX1lPWUubmV4dH13aGlsZShlIT09ZCl9fWZ1bmN0aW9uIFJqKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuY3JlYXRlO2MuZGVzdHJveT1kKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1mdW5jdGlvbiBTaihhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09Yil7dmFyIGM9YS5zdGF0ZU5vZGU7c3dpdGNoKGEudGFnKXtjYXNlIDU6YT1jO2JyZWFrO2RlZmF1bHQ6YT1jfVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yi5jdXJyZW50PWF9fVxuZnVuY3Rpb24gVGooYSl7dmFyIGI9YS5hbHRlcm5hdGU7bnVsbCE9PWImJihhLmFsdGVybmF0ZT1udWxsLFRqKGIpKTthLmNoaWxkPW51bGw7YS5kZWxldGlvbnM9bnVsbDthLnNpYmxpbmc9bnVsbDs1PT09YS50YWcmJihiPWEuc3RhdGVOb2RlLG51bGwhPT1iJiYoZGVsZXRlIGJbT2ZdLGRlbGV0ZSBiW1BmXSxkZWxldGUgYltvZl0sZGVsZXRlIGJbUWZdLGRlbGV0ZSBiW1JmXSkpO2Euc3RhdGVOb2RlPW51bGw7YS5yZXR1cm49bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5zdGF0ZU5vZGU9bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGx9ZnVuY3Rpb24gVWooYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBWaihhKXthOmZvcig7Oyl7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxVaihhLnJldHVybikpcmV0dXJuIG51bGw7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2ZvcihhPWEuc2libGluZzs1IT09YS50YWcmJjYhPT1hLnRhZyYmMTghPT1hLnRhZzspe2lmKGEuZmxhZ3MmMiljb250aW51ZSBhO2lmKG51bGw9PT1hLmNoaWxkfHw0PT09YS50YWcpY29udGludWUgYTtlbHNlIGEuY2hpbGQucmV0dXJuPWEsYT1hLmNoaWxkfWlmKCEoYS5mbGFncyYyKSlyZXR1cm4gYS5zdGF0ZU5vZGV9fVxuZnVuY3Rpb24gV2ooYSxiLGMpe3ZhciBkPWEudGFnO2lmKDU9PT1kfHw2PT09ZClhPWEuc3RhdGVOb2RlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPUJmKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFdqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspV2ooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gWGooYSxiLGMpe3ZhciBkPWEudGFnO2lmKDU9PT1kfHw2PT09ZClhPWEuc3RhdGVOb2RlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihYaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVhqKGEsYixjKSxhPWEuc2libGluZ312YXIgWD1udWxsLFlqPSExO2Z1bmN0aW9uIFpqKGEsYixjKXtmb3IoYz1jLmNoaWxkO251bGwhPT1jOylhayhhLGIsYyksYz1jLnNpYmxpbmd9XG5mdW5jdGlvbiBhayhhLGIsYyl7aWYobGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBsYy5vbkNvbW1pdEZpYmVyVW5tb3VudCl0cnl7bGMub25Db21taXRGaWJlclVubW91bnQoa2MsYyl9Y2F0Y2goaCl7fXN3aXRjaChjLnRhZyl7Y2FzZSA1OlV8fE1qKGMsYik7Y2FzZSA2OnZhciBkPVgsZT1ZajtYPW51bGw7WmooYSxiLGMpO1g9ZDtZaj1lO251bGwhPT1YJiYoWWo/KGE9WCxjPWMuc3RhdGVOb2RlLDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjKTphLnJlbW92ZUNoaWxkKGMpKTpYLnJlbW92ZUNoaWxkKGMuc3RhdGVOb2RlKSk7YnJlYWs7Y2FzZSAxODpudWxsIT09WCYmKFlqPyhhPVgsYz1jLnN0YXRlTm9kZSw4PT09YS5ub2RlVHlwZT9LZihhLnBhcmVudE5vZGUsYyk6MT09PWEubm9kZVR5cGUmJktmKGEsYyksYmQoYSkpOktmKFgsYy5zdGF0ZU5vZGUpKTticmVhaztjYXNlIDQ6ZD1YO2U9WWo7WD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO1lqPSEwO1xuWmooYSxiLGMpO1g9ZDtZaj1lO2JyZWFrO2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTppZighVSYmKGQ9Yy51cGRhdGVRdWV1ZSxudWxsIT09ZCYmKGQ9ZC5sYXN0RWZmZWN0LG51bGwhPT1kKSkpe2U9ZD1kLm5leHQ7ZG97dmFyIGY9ZSxnPWYuZGVzdHJveTtmPWYudGFnO3ZvaWQgMCE9PWcmJigwIT09KGYmMik/TmooYyxiLGcpOjAhPT0oZiY0KSYmTmooYyxiLGcpKTtlPWUubmV4dH13aGlsZShlIT09ZCl9WmooYSxiLGMpO2JyZWFrO2Nhc2UgMTppZighVSYmKE1qKGMsYiksZD1jLnN0YXRlTm9kZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnRXaWxsVW5tb3VudCkpdHJ5e2QucHJvcHM9Yy5tZW1vaXplZFByb3BzLGQuc3RhdGU9Yy5tZW1vaXplZFN0YXRlLGQuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChoKXtXKGMsYixoKX1aaihhLGIsYyk7YnJlYWs7Y2FzZSAyMTpaaihhLGIsYyk7YnJlYWs7Y2FzZSAyMjpjLm1vZGUmMT8oVT0oZD1VKXx8bnVsbCE9PVxuYy5tZW1vaXplZFN0YXRlLFpqKGEsYixjKSxVPWQpOlpqKGEsYixjKTticmVhaztkZWZhdWx0OlpqKGEsYixjKX19ZnVuY3Rpb24gYmsoYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgTGopO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1jay5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbmZ1bmN0aW9uIGRrKGEsYil7dmFyIGM9Yi5kZWxldGlvbnM7aWYobnVsbCE9PWMpZm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPWNbZF07dHJ5e3ZhciBmPWEsZz1iLGg9ZzthOmZvcig7bnVsbCE9PWg7KXtzd2l0Y2goaC50YWcpe2Nhc2UgNTpYPWguc3RhdGVOb2RlO1lqPSExO2JyZWFrIGE7Y2FzZSAzOlg9aC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztZaj0hMDticmVhayBhO2Nhc2UgNDpYPWguc3RhdGVOb2RlLmNvbnRhaW5lckluZm87WWo9ITA7YnJlYWsgYX1oPWgucmV0dXJufWlmKG51bGw9PT1YKXRocm93IEVycm9yKHAoMTYwKSk7YWsoZixnLGUpO1g9bnVsbDtZaj0hMTt2YXIgaz1lLmFsdGVybmF0ZTtudWxsIT09ayYmKGsucmV0dXJuPW51bGwpO2UucmV0dXJuPW51bGx9Y2F0Y2gobCl7VyhlLGIsbCl9fWlmKGIuc3VidHJlZUZsYWdzJjEyODU0KWZvcihiPWIuY2hpbGQ7bnVsbCE9PWI7KWVrKGIsYSksYj1iLnNpYmxpbmd9XG5mdW5jdGlvbiBlayhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlLGQ9YS5mbGFncztzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpkayhiLGEpO2ZrKGEpO2lmKGQmNCl7dHJ5e1FqKDMsYSxhLnJldHVybiksUmooMyxhKX1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9dHJ5e1FqKDUsYSxhLnJldHVybil9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1icmVhaztjYXNlIDE6ZGsoYixhKTtmayhhKTtkJjUxMiYmbnVsbCE9PWMmJk1qKGMsYy5yZXR1cm4pO2JyZWFrO2Nhc2UgNTpkayhiLGEpO2ZrKGEpO2QmNTEyJiZudWxsIT09YyYmTWooYyxjLnJldHVybik7aWYoYS5mbGFncyYzMil7dmFyIGU9YS5zdGF0ZU5vZGU7dHJ5e29iKGUsXCJcIil9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1pZihkJjQmJihlPWEuc3RhdGVOb2RlLG51bGwhPWUpKXt2YXIgZj1hLm1lbW9pemVkUHJvcHMsZz1udWxsIT09Yz9jLm1lbW9pemVkUHJvcHM6ZixoPWEudHlwZSxrPWEudXBkYXRlUXVldWU7XG5hLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWspdHJ5e1wiaW5wdXRcIj09PWgmJlwicmFkaW9cIj09PWYudHlwZSYmbnVsbCE9Zi5uYW1lJiZhYihlLGYpO3ZiKGgsZyk7dmFyIGw9dmIoaCxmKTtmb3IoZz0wO2c8ay5sZW5ndGg7Zys9Mil7dmFyIG09a1tnXSxxPWtbZysxXTtcInN0eWxlXCI9PT1tP3NiKGUscSk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bT9uYihlLHEpOlwiY2hpbGRyZW5cIj09PW0/b2IoZSxxKTp0YShlLG0scSxsKX1zd2l0Y2goaCl7Y2FzZSBcImlucHV0XCI6YmIoZSxmKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihlLGYpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjp2YXIgcj1lLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU7ZS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZi5tdWx0aXBsZTt2YXIgeT1mLnZhbHVlO251bGwhPXk/ZmIoZSwhIWYubXVsdGlwbGUseSwhMSk6ciE9PSEhZi5tdWx0aXBsZSYmKG51bGwhPWYuZGVmYXVsdFZhbHVlP2ZiKGUsISFmLm11bHRpcGxlLFxuZi5kZWZhdWx0VmFsdWUsITApOmZiKGUsISFmLm11bHRpcGxlLGYubXVsdGlwbGU/W106XCJcIiwhMSkpfWVbUGZdPWZ9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1icmVhaztjYXNlIDY6ZGsoYixhKTtmayhhKTtpZihkJjQpe2lmKG51bGw9PT1hLnN0YXRlTm9kZSl0aHJvdyBFcnJvcihwKDE2MikpO2U9YS5zdGF0ZU5vZGU7Zj1hLm1lbW9pemVkUHJvcHM7dHJ5e2Uubm9kZVZhbHVlPWZ9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1icmVhaztjYXNlIDM6ZGsoYixhKTtmayhhKTtpZihkJjQmJm51bGwhPT1jJiZjLm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkKXRyeXtiZChiLmNvbnRhaW5lckluZm8pfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX1icmVhaztjYXNlIDQ6ZGsoYixhKTtmayhhKTticmVhaztjYXNlIDEzOmRrKGIsYSk7ZmsoYSk7ZT1hLmNoaWxkO2UuZmxhZ3MmODE5MiYmKGY9bnVsbCE9PWUubWVtb2l6ZWRTdGF0ZSxlLnN0YXRlTm9kZS5pc0hpZGRlbj1mLCFmfHxcbm51bGwhPT1lLmFsdGVybmF0ZSYmbnVsbCE9PWUuYWx0ZXJuYXRlLm1lbW9pemVkU3RhdGV8fChnaz1CKCkpKTtkJjQmJmJrKGEpO2JyZWFrO2Nhc2UgMjI6bT1udWxsIT09YyYmbnVsbCE9PWMubWVtb2l6ZWRTdGF0ZTthLm1vZGUmMT8oVT0obD1VKXx8bSxkayhiLGEpLFU9bCk6ZGsoYixhKTtmayhhKTtpZihkJjgxOTIpe2w9bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZTtpZigoYS5zdGF0ZU5vZGUuaXNIaWRkZW49bCkmJiFtJiYwIT09KGEubW9kZSYxKSlmb3IoVj1hLG09YS5jaGlsZDtudWxsIT09bTspe2ZvcihxPVY9bTtudWxsIT09Vjspe3I9Vjt5PXIuY2hpbGQ7c3dpdGNoKHIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6UWooNCxyLHIucmV0dXJuKTticmVhaztjYXNlIDE6TWoocixyLnJldHVybik7dmFyIG49ci5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIG4uY29tcG9uZW50V2lsbFVubW91bnQpe2Q9cjtjPXIucmV0dXJuO3RyeXtiPWQsbi5wcm9wcz1cbmIubWVtb2l6ZWRQcm9wcyxuLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZSxuLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2godCl7VyhkLGMsdCl9fWJyZWFrO2Nhc2UgNTpNaihyLHIucmV0dXJuKTticmVhaztjYXNlIDIyOmlmKG51bGwhPT1yLm1lbW9pemVkU3RhdGUpe2hrKHEpO2NvbnRpbnVlfX1udWxsIT09eT8oeS5yZXR1cm49cixWPXkpOmhrKHEpfW09bS5zaWJsaW5nfWE6Zm9yKG09bnVsbCxxPWE7Oyl7aWYoNT09PXEudGFnKXtpZihudWxsPT09bSl7bT1xO3RyeXtlPXEuc3RhdGVOb2RlLGw/KGY9ZS5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5zZXRQcm9wZXJ0eT9mLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmYuZGlzcGxheT1cIm5vbmVcIik6KGg9cS5zdGF0ZU5vZGUsaz1xLm1lbW9pemVkUHJvcHMuc3R5bGUsZz12b2lkIDAhPT1rJiZudWxsIT09ayYmay5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ay5kaXNwbGF5Om51bGwsaC5zdHlsZS5kaXNwbGF5PVxucmIoXCJkaXNwbGF5XCIsZykpfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX19fWVsc2UgaWYoNj09PXEudGFnKXtpZihudWxsPT09bSl0cnl7cS5zdGF0ZU5vZGUubm9kZVZhbHVlPWw/XCJcIjpxLm1lbW9pemVkUHJvcHN9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1lbHNlIGlmKCgyMiE9PXEudGFnJiYyMyE9PXEudGFnfHxudWxsPT09cS5tZW1vaXplZFN0YXRlfHxxPT09YSkmJm51bGwhPT1xLmNoaWxkKXtxLmNoaWxkLnJldHVybj1xO3E9cS5jaGlsZDtjb250aW51ZX1pZihxPT09YSlicmVhayBhO2Zvcig7bnVsbD09PXEuc2libGluZzspe2lmKG51bGw9PT1xLnJldHVybnx8cS5yZXR1cm49PT1hKWJyZWFrIGE7bT09PXEmJihtPW51bGwpO3E9cS5yZXR1cm59bT09PXEmJihtPW51bGwpO3Euc2libGluZy5yZXR1cm49cS5yZXR1cm47cT1xLnNpYmxpbmd9fWJyZWFrO2Nhc2UgMTk6ZGsoYixhKTtmayhhKTtkJjQmJmJrKGEpO2JyZWFrO2Nhc2UgMjE6YnJlYWs7ZGVmYXVsdDpkayhiLFxuYSksZmsoYSl9fWZ1bmN0aW9uIGZrKGEpe3ZhciBiPWEuZmxhZ3M7aWYoYiYyKXt0cnl7YTp7Zm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7aWYoVWooYykpe3ZhciBkPWM7YnJlYWsgYX1jPWMucmV0dXJufXRocm93IEVycm9yKHAoMTYwKSk7fXN3aXRjaChkLnRhZyl7Y2FzZSA1OnZhciBlPWQuc3RhdGVOb2RlO2QuZmxhZ3MmMzImJihvYihlLFwiXCIpLGQuZmxhZ3MmPS0zMyk7dmFyIGY9VmooYSk7WGooYSxmLGUpO2JyZWFrO2Nhc2UgMzpjYXNlIDQ6dmFyIGc9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyxoPVZqKGEpO1dqKGEsaCxnKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMTYxKSk7fX1jYXRjaChrKXtXKGEsYS5yZXR1cm4sayl9YS5mbGFncyY9LTN9YiY0MDk2JiYoYS5mbGFncyY9LTQwOTcpfWZ1bmN0aW9uIGlrKGEsYixjKXtWPWE7amsoYSxiLGMpfVxuZnVuY3Rpb24gamsoYSxiLGMpe2Zvcih2YXIgZD0wIT09KGEubW9kZSYxKTtudWxsIT09Vjspe3ZhciBlPVYsZj1lLmNoaWxkO2lmKDIyPT09ZS50YWcmJmQpe3ZhciBnPW51bGwhPT1lLm1lbW9pemVkU3RhdGV8fEtqO2lmKCFnKXt2YXIgaD1lLmFsdGVybmF0ZSxrPW51bGwhPT1oJiZudWxsIT09aC5tZW1vaXplZFN0YXRlfHxVO2g9S2o7dmFyIGw9VTtLaj1nO2lmKChVPWspJiYhbClmb3IoVj1lO251bGwhPT1WOylnPVYsaz1nLmNoaWxkLDIyPT09Zy50YWcmJm51bGwhPT1nLm1lbW9pemVkU3RhdGU/a2soZSk6bnVsbCE9PWs/KGsucmV0dXJuPWcsVj1rKTprayhlKTtmb3IoO251bGwhPT1mOylWPWYsamsoZixiLGMpLGY9Zi5zaWJsaW5nO1Y9ZTtLaj1oO1U9bH1sayhhLGIsYyl9ZWxzZSAwIT09KGUuc3VidHJlZUZsYWdzJjg3NzIpJiZudWxsIT09Zj8oZi5yZXR1cm49ZSxWPWYpOmxrKGEsYixjKX19XG5mdW5jdGlvbiBsayhhKXtmb3IoO251bGwhPT1WOyl7dmFyIGI9VjtpZigwIT09KGIuZmxhZ3MmODc3Mikpe3ZhciBjPWIuYWx0ZXJuYXRlO3RyeXtpZigwIT09KGIuZmxhZ3MmODc3Mikpc3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlV8fFJqKDUsYik7YnJlYWs7Y2FzZSAxOnZhciBkPWIuc3RhdGVOb2RlO2lmKGIuZmxhZ3MmNCYmIVUpaWYobnVsbD09PWMpZC5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGU9Yi5lbGVtZW50VHlwZT09PWIudHlwZT9jLm1lbW9pemVkUHJvcHM6TGcoYi50eXBlLGMubWVtb2l6ZWRQcm9wcyk7ZC5jb21wb25lbnREaWRVcGRhdGUoZSxjLm1lbW9pemVkU3RhdGUsZC5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9dmFyIGY9Yi51cGRhdGVRdWV1ZTtudWxsIT09ZiYmaWgoYixmLGQpO2JyZWFrO2Nhc2UgMzp2YXIgZz1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1nKXtjPW51bGw7aWYobnVsbCE9PWIuY2hpbGQpc3dpdGNoKGIuY2hpbGQudGFnKXtjYXNlIDU6Yz1cbmIuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpjPWIuY2hpbGQuc3RhdGVOb2RlfWloKGIsZyxjKX1icmVhaztjYXNlIDU6dmFyIGg9Yi5zdGF0ZU5vZGU7aWYobnVsbD09PWMmJmIuZmxhZ3MmNCl7Yz1oO3ZhciBrPWIubWVtb2l6ZWRQcm9wcztzd2l0Y2goYi50eXBlKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOmsuYXV0b0ZvY3VzJiZjLmZvY3VzKCk7YnJlYWs7Y2FzZSBcImltZ1wiOmsuc3JjJiYoYy5zcmM9ay5zcmMpfX1icmVhaztjYXNlIDY6YnJlYWs7Y2FzZSA0OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSAxMzppZihudWxsPT09Yi5tZW1vaXplZFN0YXRlKXt2YXIgbD1iLmFsdGVybmF0ZTtpZihudWxsIT09bCl7dmFyIG09bC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1tKXt2YXIgcT1tLmRlaHlkcmF0ZWQ7bnVsbCE9PXEmJmJkKHEpfX19YnJlYWs7Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjE6Y2FzZSAyMjpjYXNlIDIzOmNhc2UgMjU6YnJlYWs7XG5kZWZhdWx0OnRocm93IEVycm9yKHAoMTYzKSk7fVV8fGIuZmxhZ3MmNTEyJiZTaihiKX1jYXRjaChyKXtXKGIsYi5yZXR1cm4scil9fWlmKGI9PT1hKXtWPW51bGw7YnJlYWt9Yz1iLnNpYmxpbmc7aWYobnVsbCE9PWMpe2MucmV0dXJuPWIucmV0dXJuO1Y9YzticmVha31WPWIucmV0dXJufX1mdW5jdGlvbiBoayhhKXtmb3IoO251bGwhPT1WOyl7dmFyIGI9VjtpZihiPT09YSl7Vj1udWxsO2JyZWFrfXZhciBjPWIuc2libGluZztpZihudWxsIT09Yyl7Yy5yZXR1cm49Yi5yZXR1cm47Vj1jO2JyZWFrfVY9Yi5yZXR1cm59fVxuZnVuY3Rpb24ga2soYSl7Zm9yKDtudWxsIT09Vjspe3ZhciBiPVY7dHJ5e3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp2YXIgYz1iLnJldHVybjt0cnl7UmooNCxiKX1jYXRjaChrKXtXKGIsYyxrKX1icmVhaztjYXNlIDE6dmFyIGQ9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkTW91bnQpe3ZhciBlPWIucmV0dXJuO3RyeXtkLmNvbXBvbmVudERpZE1vdW50KCl9Y2F0Y2goayl7VyhiLGUsayl9fXZhciBmPWIucmV0dXJuO3RyeXtTaihiKX1jYXRjaChrKXtXKGIsZixrKX1icmVhaztjYXNlIDU6dmFyIGc9Yi5yZXR1cm47dHJ5e1NqKGIpfWNhdGNoKGspe1coYixnLGspfX19Y2F0Y2goayl7VyhiLGIucmV0dXJuLGspfWlmKGI9PT1hKXtWPW51bGw7YnJlYWt9dmFyIGg9Yi5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1iLnJldHVybjtWPWg7YnJlYWt9Vj1iLnJldHVybn19XG52YXIgbWs9TWF0aC5jZWlsLG5rPXVhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsb2s9dWEuUmVhY3RDdXJyZW50T3duZXIscGs9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsSz0wLFI9bnVsbCxZPW51bGwsWj0wLGdqPTAsZmo9VWYoMCksVD0wLHFrPW51bGwsaGg9MCxyaz0wLHNrPTAsdGs9bnVsbCx1az1udWxsLGdrPTAsSGo9SW5maW5pdHksdms9bnVsbCxQaT0hMSxRaT1udWxsLFNpPW51bGwsd2s9ITEseGs9bnVsbCx5az0wLHprPTAsQWs9bnVsbCxCaz0tMSxDaz0wO2Z1bmN0aW9uIEwoKXtyZXR1cm4gMCE9PShLJjYpP0IoKTotMSE9PUJrP0JrOkJrPUIoKX1cbmZ1bmN0aW9uIGxoKGEpe2lmKDA9PT0oYS5tb2RlJjEpKXJldHVybiAxO2lmKDAhPT0oSyYyKSYmMCE9PVopcmV0dXJuIFomLVo7aWYobnVsbCE9PUtnLnRyYW5zaXRpb24pcmV0dXJuIDA9PT1DayYmKENrPXljKCkpLENrO2E9QztpZigwIT09YSlyZXR1cm4gYTthPXdpbmRvdy5ldmVudDthPXZvaWQgMD09PWE/MTY6amQoYS50eXBlKTtyZXR1cm4gYX1mdW5jdGlvbiBtaChhLGIsYyxkKXtpZig1MDx6ayl0aHJvdyB6az0wLEFrPW51bGwsRXJyb3IocCgxODUpKTtBYyhhLGMsZCk7aWYoMD09PShLJjIpfHxhIT09UilhPT09UiYmKDA9PT0oSyYyKSYmKHJrfD1jKSw0PT09VCYmRGsoYSxaKSksRWsoYSxkKSwxPT09YyYmMD09PUsmJjA9PT0oYi5tb2RlJjEpJiYoSGo9QigpKzUwMCxmZyYmamcoKSl9XG5mdW5jdGlvbiBFayhhLGIpe3ZhciBjPWEuY2FsbGJhY2tOb2RlO3djKGEsYik7dmFyIGQ9dWMoYSxhPT09Uj9aOjApO2lmKDA9PT1kKW51bGwhPT1jJiZiYyhjKSxhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tQcmlvcml0eT0wO2Vsc2UgaWYoYj1kJi1kLGEuY2FsbGJhY2tQcmlvcml0eSE9PWIpe251bGwhPWMmJmJjKGMpO2lmKDE9PT1iKTA9PT1hLnRhZz9pZyhGay5iaW5kKG51bGwsYSkpOmhnKEZrLmJpbmQobnVsbCxhKSksSmYoZnVuY3Rpb24oKXswPT09KEsmNikmJmpnKCl9KSxjPW51bGw7ZWxzZXtzd2l0Y2goRGMoZCkpe2Nhc2UgMTpjPWZjO2JyZWFrO2Nhc2UgNDpjPWdjO2JyZWFrO2Nhc2UgMTY6Yz1oYzticmVhaztjYXNlIDUzNjg3MDkxMjpjPWpjO2JyZWFrO2RlZmF1bHQ6Yz1oY31jPUdrKGMsSGsuYmluZChudWxsLGEpKX1hLmNhbGxiYWNrUHJpb3JpdHk9YjthLmNhbGxiYWNrTm9kZT1jfX1cbmZ1bmN0aW9uIEhrKGEsYil7Qms9LTE7Q2s9MDtpZigwIT09KEsmNikpdGhyb3cgRXJyb3IocCgzMjcpKTt2YXIgYz1hLmNhbGxiYWNrTm9kZTtpZihJaygpJiZhLmNhbGxiYWNrTm9kZSE9PWMpcmV0dXJuIG51bGw7dmFyIGQ9dWMoYSxhPT09Uj9aOjApO2lmKDA9PT1kKXJldHVybiBudWxsO2lmKDAhPT0oZCYzMCl8fDAhPT0oZCZhLmV4cGlyZWRMYW5lcyl8fGIpYj1KayhhLGQpO2Vsc2V7Yj1kO3ZhciBlPUs7S3w9Mjt2YXIgZj1LaygpO2lmKFIhPT1hfHxaIT09Yil2az1udWxsLEhqPUIoKSs1MDAsTGsoYSxiKTtkbyB0cnl7TWsoKTticmVha31jYXRjaChoKXtOayhhLGgpfXdoaWxlKDEpO1FnKCk7bmsuY3VycmVudD1mO0s9ZTtudWxsIT09WT9iPTA6KFI9bnVsbCxaPTAsYj1UKX1pZigwIT09Yil7Mj09PWImJihlPXhjKGEpLDAhPT1lJiYoZD1lLGI9T2soYSxlKSkpO2lmKDE9PT1iKXRocm93IGM9cWssTGsoYSwwKSxEayhhLGQpLEVrKGEsQigpKSxjO2lmKDY9PT1iKURrKGEsZCk7XG5lbHNle2U9YS5jdXJyZW50LmFsdGVybmF0ZTtpZigwPT09KGQmMzApJiYhUGsoZSkmJihiPUprKGEsZCksMj09PWImJihmPXhjKGEpLDAhPT1mJiYoZD1mLGI9T2soYSxmKSkpLDE9PT1iKSl0aHJvdyBjPXFrLExrKGEsMCksRGsoYSxkKSxFayhhLEIoKSksYzthLmZpbmlzaGVkV29yaz1lO2EuZmluaXNoZWRMYW5lcz1kO3N3aXRjaChiKXtjYXNlIDA6Y2FzZSAxOnRocm93IEVycm9yKHAoMzQ1KSk7Y2FzZSAyOlFrKGEsdWssdmspO2JyZWFrO2Nhc2UgMzpEayhhLGQpO2lmKChkJjEzMDAyMzQyNCk9PT1kJiYoYj1nays1MDAtQigpLDEwPGIpKXtpZigwIT09dWMoYSwwKSlicmVhaztlPWEuc3VzcGVuZGVkTGFuZXM7aWYoKGUmZCkhPT1kKXtMKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZlO2JyZWFrfWEudGltZW91dEhhbmRsZT1GZihRay5iaW5kKG51bGwsYSx1ayx2ayksYik7YnJlYWt9UWsoYSx1ayx2ayk7YnJlYWs7Y2FzZSA0OkRrKGEsZCk7aWYoKGQmNDE5NDI0MCk9PT1cbmQpYnJlYWs7Yj1hLmV2ZW50VGltZXM7Zm9yKGU9LTE7MDxkOyl7dmFyIGc9MzEtb2MoZCk7Zj0xPDxnO2c9YltnXTtnPmUmJihlPWcpO2QmPX5mfWQ9ZTtkPUIoKS1kO2Q9KDEyMD5kPzEyMDo0ODA+ZD80ODA6MTA4MD5kPzEwODA6MTkyMD5kPzE5MjA6M0UzPmQ/M0UzOjQzMjA+ZD80MzIwOjE5NjAqbWsoZC8xOTYwKSktZDtpZigxMDxkKXthLnRpbWVvdXRIYW5kbGU9RmYoUWsuYmluZChudWxsLGEsdWssdmspLGQpO2JyZWFrfVFrKGEsdWssdmspO2JyZWFrO2Nhc2UgNTpRayhhLHVrLHZrKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMzI5KSk7fX19RWsoYSxCKCkpO3JldHVybiBhLmNhbGxiYWNrTm9kZT09PWM/SGsuYmluZChudWxsLGEpOm51bGx9XG5mdW5jdGlvbiBPayhhLGIpe3ZhciBjPXRrO2EuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCYmKExrKGEsYikuZmxhZ3N8PTI1Nik7YT1KayhhLGIpOzIhPT1hJiYoYj11ayx1az1jLG51bGwhPT1iJiZHaihiKSk7cmV0dXJuIGF9ZnVuY3Rpb24gR2ooYSl7bnVsbD09PXVrP3VrPWE6dWsucHVzaC5hcHBseSh1ayxhKX1cbmZ1bmN0aW9uIFBrKGEpe2Zvcih2YXIgYj1hOzspe2lmKGIuZmxhZ3MmMTYzODQpe3ZhciBjPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWMmJihjPWMuc3RvcmVzLG51bGwhPT1jKSlmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9Y1tkXSxmPWUuZ2V0U25hcHNob3Q7ZT1lLnZhbHVlO3RyeXtpZighSGUoZigpLGUpKXJldHVybiExfWNhdGNoKGcpe3JldHVybiExfX19Yz1iLmNoaWxkO2lmKGIuc3VidHJlZUZsYWdzJjE2Mzg0JiZudWxsIT09YyljLnJldHVybj1iLGI9YztlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiEwO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuITB9XG5mdW5jdGlvbiBEayhhLGIpe2ImPX5zaztiJj1+cms7YS5zdXNwZW5kZWRMYW5lc3w9YjthLnBpbmdlZExhbmVzJj1+Yjtmb3IoYT1hLmV4cGlyYXRpb25UaW1lczswPGI7KXt2YXIgYz0zMS1vYyhiKSxkPTE8PGM7YVtjXT0tMTtiJj1+ZH19ZnVuY3Rpb24gRmsoYSl7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzI3KSk7SWsoKTt2YXIgYj11YyhhLDApO2lmKDA9PT0oYiYxKSlyZXR1cm4gRWsoYSxCKCkpLG51bGw7dmFyIGM9SmsoYSxiKTtpZigwIT09YS50YWcmJjI9PT1jKXt2YXIgZD14YyhhKTswIT09ZCYmKGI9ZCxjPU9rKGEsZCkpfWlmKDE9PT1jKXRocm93IGM9cWssTGsoYSwwKSxEayhhLGIpLEVrKGEsQigpKSxjO2lmKDY9PT1jKXRocm93IEVycm9yKHAoMzQ1KSk7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9YjtRayhhLHVrLHZrKTtFayhhLEIoKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBSayhhLGIpe3ZhciBjPUs7S3w9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtLPWMsMD09PUsmJihIaj1CKCkrNTAwLGZnJiZqZygpKX19ZnVuY3Rpb24gU2soYSl7bnVsbCE9PXhrJiYwPT09eGsudGFnJiYwPT09KEsmNikmJklrKCk7dmFyIGI9SztLfD0xO3ZhciBjPXBrLnRyYW5zaXRpb24sZD1DO3RyeXtpZihway50cmFuc2l0aW9uPW51bGwsQz0xLGEpcmV0dXJuIGEoKX1maW5hbGx5e0M9ZCxway50cmFuc2l0aW9uPWMsSz1iLDA9PT0oSyY2KSYmamcoKX19ZnVuY3Rpb24gSWooKXtnaj1mai5jdXJyZW50O0UoZmopfVxuZnVuY3Rpb24gTGsoYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEsR2YoYykpO2lmKG51bGwhPT1ZKWZvcihjPVkucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yzt3ZyhkKTtzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmJGYoKTticmVhaztjYXNlIDM6SmgoKTtFKFdmKTtFKEgpO09oKCk7YnJlYWs7Y2FzZSA1OkxoKGQpO2JyZWFrO2Nhc2UgNDpKaCgpO2JyZWFrO2Nhc2UgMTM6RShNKTticmVhaztjYXNlIDE5OkUoTSk7YnJlYWs7Y2FzZSAxMDpSZyhkLnR5cGUuX2NvbnRleHQpO2JyZWFrO2Nhc2UgMjI6Y2FzZSAyMzpJaigpfWM9Yy5yZXR1cm59Uj1hO1k9YT13aChhLmN1cnJlbnQsbnVsbCk7Wj1naj1iO1Q9MDtxaz1udWxsO3NrPXJrPWhoPTA7dWs9dGs9bnVsbDtpZihudWxsIT09V2cpe2ZvcihiPVxuMDtiPFdnLmxlbmd0aDtiKyspaWYoYz1XZ1tiXSxkPWMuaW50ZXJsZWF2ZWQsbnVsbCE9PWQpe2MuaW50ZXJsZWF2ZWQ9bnVsbDt2YXIgZT1kLm5leHQsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe3ZhciBnPWYubmV4dDtmLm5leHQ9ZTtkLm5leHQ9Z31jLnBlbmRpbmc9ZH1XZz1udWxsfXJldHVybiBhfVxuZnVuY3Rpb24gTmsoYSxiKXtkb3t2YXIgYz1ZO3RyeXtRZygpO1BoLmN1cnJlbnQ9YWk7aWYoU2gpe2Zvcih2YXIgZD1OLm1lbW9pemVkU3RhdGU7bnVsbCE9PWQ7KXt2YXIgZT1kLnF1ZXVlO251bGwhPT1lJiYoZS5wZW5kaW5nPW51bGwpO2Q9ZC5uZXh0fVNoPSExfVJoPTA7UD1PPU49bnVsbDtUaD0hMTtVaD0wO29rLmN1cnJlbnQ9bnVsbDtpZihudWxsPT09Y3x8bnVsbD09PWMucmV0dXJuKXtUPTE7cWs9YjtZPW51bGw7YnJlYWt9YTp7dmFyIGY9YSxnPWMucmV0dXJuLGg9YyxrPWI7Yj1aO2guZmxhZ3N8PTMyNzY4O2lmKG51bGwhPT1rJiZcIm9iamVjdFwiPT09dHlwZW9mIGsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLnRoZW4pe3ZhciBsPWssbT1oLHE9bS50YWc7aWYoMD09PShtLm1vZGUmMSkmJigwPT09cXx8MTE9PT1xfHwxNT09PXEpKXt2YXIgcj1tLmFsdGVybmF0ZTtyPyhtLnVwZGF0ZVF1ZXVlPXIudXBkYXRlUXVldWUsbS5tZW1vaXplZFN0YXRlPXIubWVtb2l6ZWRTdGF0ZSxcbm0ubGFuZXM9ci5sYW5lcyk6KG0udXBkYXRlUXVldWU9bnVsbCxtLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIHk9VmkoZyk7aWYobnVsbCE9PXkpe3kuZmxhZ3MmPS0yNTc7V2koeSxnLGgsZixiKTt5Lm1vZGUmMSYmVGkoZixsLGIpO2I9eTtrPWw7dmFyIG49Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09bil7dmFyIHQ9bmV3IFNldDt0LmFkZChrKTtiLnVwZGF0ZVF1ZXVlPXR9ZWxzZSBuLmFkZChrKTticmVhayBhfWVsc2V7aWYoMD09PShiJjEpKXtUaShmLGwsYik7dWooKTticmVhayBhfWs9RXJyb3IocCg0MjYpKX19ZWxzZSBpZihJJiZoLm1vZGUmMSl7dmFyIEo9VmkoZyk7aWYobnVsbCE9PUopezA9PT0oSi5mbGFncyY2NTUzNikmJihKLmZsYWdzfD0yNTYpO1dpKEosZyxoLGYsYik7SmcoS2koayxoKSk7YnJlYWsgYX19Zj1rPUtpKGssaCk7NCE9PVQmJihUPTIpO251bGw9PT10az90az1bZl06dGsucHVzaChmKTtmPWc7ZG97c3dpdGNoKGYudGFnKXtjYXNlIDM6Zi5mbGFnc3w9NjU1MzY7XG5iJj0tYjtmLmxhbmVzfD1iO3ZhciB4PU9pKGYsayxiKTtmaChmLHgpO2JyZWFrIGE7Y2FzZSAxOmg9azt2YXIgdz1mLnR5cGUsdT1mLnN0YXRlTm9kZTtpZigwPT09KGYuZmxhZ3MmMTI4KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB3LmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PXUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB1LmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVNpfHwhU2kuaGFzKHUpKSkpe2YuZmxhZ3N8PTY1NTM2O2ImPS1iO2YubGFuZXN8PWI7dmFyIEY9UmkoZixoLGIpO2ZoKGYsRik7YnJlYWsgYX19Zj1mLnJldHVybn13aGlsZShudWxsIT09Zil9VGsoYyl9Y2F0Y2gobmEpe2I9bmE7WT09PWMmJm51bGwhPT1jJiYoWT1jPWMucmV0dXJuKTtjb250aW51ZX1icmVha313aGlsZSgxKX1mdW5jdGlvbiBLaygpe3ZhciBhPW5rLmN1cnJlbnQ7bmsuY3VycmVudD1haTtyZXR1cm4gbnVsbD09PWE/YWk6YX1cbmZ1bmN0aW9uIHVqKCl7aWYoMD09PVR8fDM9PT1UfHwyPT09VClUPTQ7bnVsbD09PVJ8fDA9PT0oaGgmMjY4NDM1NDU1KSYmMD09PShyayYyNjg0MzU0NTUpfHxEayhSLFopfWZ1bmN0aW9uIEprKGEsYil7dmFyIGM9SztLfD0yO3ZhciBkPUtrKCk7aWYoUiE9PWF8fFohPT1iKXZrPW51bGwsTGsoYSxiKTtkbyB0cnl7VWsoKTticmVha31jYXRjaChlKXtOayhhLGUpfXdoaWxlKDEpO1FnKCk7Sz1jO25rLmN1cnJlbnQ9ZDtpZihudWxsIT09WSl0aHJvdyBFcnJvcihwKDI2MSkpO1I9bnVsbDtaPTA7cmV0dXJuIFR9ZnVuY3Rpb24gVWsoKXtmb3IoO251bGwhPT1ZOylWayhZKX1mdW5jdGlvbiBNaygpe2Zvcig7bnVsbCE9PVkmJiFjYygpOylWayhZKX1mdW5jdGlvbiBWayhhKXt2YXIgYj1XayhhLmFsdGVybmF0ZSxhLGdqKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWI/VGsoYSk6WT1iO29rLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIFRrKGEpe3ZhciBiPWE7ZG97dmFyIGM9Yi5hbHRlcm5hdGU7YT1iLnJldHVybjtpZigwPT09KGIuZmxhZ3MmMzI3NjgpKXtpZihjPUZqKGMsYixnaiksbnVsbCE9PWMpe1k9YztyZXR1cm59fWVsc2V7Yz1KaihjLGIpO2lmKG51bGwhPT1jKXtjLmZsYWdzJj0zMjc2NztZPWM7cmV0dXJufWlmKG51bGwhPT1hKWEuZmxhZ3N8PTMyNzY4LGEuc3VidHJlZUZsYWdzPTAsYS5kZWxldGlvbnM9bnVsbDtlbHNle1Q9NjtZPW51bGw7cmV0dXJufX1iPWIuc2libGluZztpZihudWxsIT09Yil7WT1iO3JldHVybn1ZPWI9YX13aGlsZShudWxsIT09Yik7MD09PVQmJihUPTUpfWZ1bmN0aW9uIFFrKGEsYixjKXt2YXIgZD1DLGU9cGsudHJhbnNpdGlvbjt0cnl7cGsudHJhbnNpdGlvbj1udWxsLEM9MSxYayhhLGIsYyxkKX1maW5hbGx5e3BrLnRyYW5zaXRpb249ZSxDPWR9cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBYayhhLGIsYyxkKXtkbyBJaygpO3doaWxlKG51bGwhPT14ayk7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzI3KSk7Yz1hLmZpbmlzaGVkV29yazt2YXIgZT1hLmZpbmlzaGVkTGFuZXM7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHAoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrUHJpb3JpdHk9MDt2YXIgZj1jLmxhbmVzfGMuY2hpbGRMYW5lcztCYyhhLGYpO2E9PT1SJiYoWT1SPW51bGwsWj0wKTswPT09KGMuc3VidHJlZUZsYWdzJjIwNjQpJiYwPT09KGMuZmxhZ3MmMjA2NCl8fHdrfHwod2s9ITAsR2soaGMsZnVuY3Rpb24oKXtJaygpO3JldHVybiBudWxsfSkpO2Y9MCE9PShjLmZsYWdzJjE1OTkwKTtpZigwIT09KGMuc3VidHJlZUZsYWdzJjE1OTkwKXx8Zil7Zj1way50cmFuc2l0aW9uO3BrLnRyYW5zaXRpb249bnVsbDtcbnZhciBnPUM7Qz0xO3ZhciBoPUs7S3w9NDtvay5jdXJyZW50PW51bGw7UGooYSxjKTtlayhjLGEpO09lKERmKTtkZD0hIUNmO0RmPUNmPW51bGw7YS5jdXJyZW50PWM7aWsoYyxhLGUpO2RjKCk7Sz1oO0M9Zztway50cmFuc2l0aW9uPWZ9ZWxzZSBhLmN1cnJlbnQ9Yzt3ayYmKHdrPSExLHhrPWEseWs9ZSk7Zj1hLnBlbmRpbmdMYW5lczswPT09ZiYmKFNpPW51bGwpO21jKGMuc3RhdGVOb2RlLGQpO0VrKGEsQigpKTtpZihudWxsIT09Yilmb3IoZD1hLm9uUmVjb3ZlcmFibGVFcnJvcixjPTA7YzxiLmxlbmd0aDtjKyspZT1iW2NdLGQoZS52YWx1ZSx7Y29tcG9uZW50U3RhY2s6ZS5zdGFjayxkaWdlc3Q6ZS5kaWdlc3R9KTtpZihQaSl0aHJvdyBQaT0hMSxhPVFpLFFpPW51bGwsYTswIT09KHlrJjEpJiYwIT09YS50YWcmJklrKCk7Zj1hLnBlbmRpbmdMYW5lczswIT09KGYmMSk/YT09PUFrP3prKys6KHprPTAsQWs9YSk6ems9MDtqZygpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gSWsoKXtpZihudWxsIT09eGspe3ZhciBhPURjKHlrKSxiPXBrLnRyYW5zaXRpb24sYz1DO3RyeXtway50cmFuc2l0aW9uPW51bGw7Qz0xNj5hPzE2OmE7aWYobnVsbD09PXhrKXZhciBkPSExO2Vsc2V7YT14azt4az1udWxsO3lrPTA7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzMxKSk7dmFyIGU9SztLfD00O2ZvcihWPWEuY3VycmVudDtudWxsIT09Vjspe3ZhciBmPVYsZz1mLmNoaWxkO2lmKDAhPT0oVi5mbGFncyYxNikpe3ZhciBoPWYuZGVsZXRpb25zO2lmKG51bGwhPT1oKXtmb3IodmFyIGs9MDtrPGgubGVuZ3RoO2srKyl7dmFyIGw9aFtrXTtmb3IoVj1sO251bGwhPT1WOyl7dmFyIG09Vjtzd2l0Y2gobS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6UWooOCxtLGYpfXZhciBxPW0uY2hpbGQ7aWYobnVsbCE9PXEpcS5yZXR1cm49bSxWPXE7ZWxzZSBmb3IoO251bGwhPT1WOyl7bT1WO3ZhciByPW0uc2libGluZyx5PW0ucmV0dXJuO1RqKG0pO2lmKG09PT1cbmwpe1Y9bnVsbDticmVha31pZihudWxsIT09cil7ci5yZXR1cm49eTtWPXI7YnJlYWt9Vj15fX19dmFyIG49Zi5hbHRlcm5hdGU7aWYobnVsbCE9PW4pe3ZhciB0PW4uY2hpbGQ7aWYobnVsbCE9PXQpe24uY2hpbGQ9bnVsbDtkb3t2YXIgSj10LnNpYmxpbmc7dC5zaWJsaW5nPW51bGw7dD1KfXdoaWxlKG51bGwhPT10KX19Vj1mfX1pZigwIT09KGYuc3VidHJlZUZsYWdzJjIwNjQpJiZudWxsIT09ZylnLnJldHVybj1mLFY9ZztlbHNlIGI6Zm9yKDtudWxsIT09Vjspe2Y9VjtpZigwIT09KGYuZmxhZ3MmMjA0OCkpc3dpdGNoKGYudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlFqKDksZixmLnJldHVybil9dmFyIHg9Zi5zaWJsaW5nO2lmKG51bGwhPT14KXt4LnJldHVybj1mLnJldHVybjtWPXg7YnJlYWsgYn1WPWYucmV0dXJufX12YXIgdz1hLmN1cnJlbnQ7Zm9yKFY9dztudWxsIT09Vjspe2c9Vjt2YXIgdT1nLmNoaWxkO2lmKDAhPT0oZy5zdWJ0cmVlRmxhZ3MmMjA2NCkmJm51bGwhPT1cbnUpdS5yZXR1cm49ZyxWPXU7ZWxzZSBiOmZvcihnPXc7bnVsbCE9PVY7KXtoPVY7aWYoMCE9PShoLmZsYWdzJjIwNDgpKXRyeXtzd2l0Y2goaC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6UmooOSxoKX19Y2F0Y2gobmEpe1coaCxoLnJldHVybixuYSl9aWYoaD09PWcpe1Y9bnVsbDticmVhayBifXZhciBGPWguc2libGluZztpZihudWxsIT09Ril7Ri5yZXR1cm49aC5yZXR1cm47Vj1GO2JyZWFrIGJ9Vj1oLnJldHVybn19Sz1lO2pnKCk7aWYobGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBsYy5vblBvc3RDb21taXRGaWJlclJvb3QpdHJ5e2xjLm9uUG9zdENvbW1pdEZpYmVyUm9vdChrYyxhKX1jYXRjaChuYSl7fWQ9ITB9cmV0dXJuIGR9ZmluYWxseXtDPWMscGsudHJhbnNpdGlvbj1ifX1yZXR1cm4hMX1mdW5jdGlvbiBZayhhLGIsYyl7Yj1LaShjLGIpO2I9T2koYSxiLDEpO2E9ZGgoYSxiLDEpO2I9TCgpO251bGwhPT1hJiYoQWMoYSwxLGIpLEVrKGEsYikpfVxuZnVuY3Rpb24gVyhhLGIsYyl7aWYoMz09PWEudGFnKVlrKGEsYSxjKTtlbHNlIGZvcig7bnVsbCE9PWI7KXtpZigzPT09Yi50YWcpe1lrKGIsYSxjKTticmVha31lbHNlIGlmKDE9PT1iLnRhZyl7dmFyIGQ9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVNpfHwhU2kuaGFzKGQpKSl7YT1LaShjLGEpO2E9UmkoYixhLDEpO2I9ZGgoYixhLDEpO2E9TCgpO251bGwhPT1iJiYoQWMoYiwxLGEpLEVrKGIsYSkpO2JyZWFrfX1iPWIucmV0dXJufX1cbmZ1bmN0aW9uIFVpKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7Yj1MKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZjO1I9PT1hJiYoWiZjKT09PWMmJig0PT09VHx8Mz09PVQmJihaJjEzMDAyMzQyNCk9PT1aJiY1MDA+QigpLWdrP0xrKGEsMCk6c2t8PWMpO0VrKGEsYil9ZnVuY3Rpb24gWmsoYSxiKXswPT09YiYmKDA9PT0oYS5tb2RlJjEpP2I9MTooYj1zYyxzYzw8PTEsMD09PShzYyYxMzAwMjM0MjQpJiYoc2M9NDE5NDMwNCkpKTt2YXIgYz1MKCk7YT1aZyhhLGIpO251bGwhPT1hJiYoQWMoYSxiLGMpLEVrKGEsYykpfWZ1bmN0aW9uIHZqKGEpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZSxjPTA7bnVsbCE9PWImJihjPWIucmV0cnlMYW5lKTtaayhhLGMpfVxuZnVuY3Rpb24gY2soYSxiKXt2YXIgYz0wO3N3aXRjaChhLnRhZyl7Y2FzZSAxMzp2YXIgZD1hLnN0YXRlTm9kZTt2YXIgZT1hLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihjPWUucmV0cnlMYW5lKTticmVhaztjYXNlIDE5OmQ9YS5zdGF0ZU5vZGU7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihwKDMxNCkpO31udWxsIT09ZCYmZC5kZWxldGUoYik7WmsoYSxjKX12YXIgV2s7XG5Xaz1mdW5jdGlvbihhLGIsYyl7aWYobnVsbCE9PWEpaWYoYS5tZW1vaXplZFByb3BzIT09Yi5wZW5kaW5nUHJvcHN8fFdmLmN1cnJlbnQpVWc9ITA7ZWxzZXtpZigwPT09KGEubGFuZXMmYykmJjA9PT0oYi5mbGFncyYxMjgpKXJldHVybiBVZz0hMSx6aihhLGIsYyk7VWc9MCE9PShhLmZsYWdzJjEzMTA3Mik/ITA6ITF9ZWxzZSBVZz0hMSxJJiYwIT09KGIuZmxhZ3MmMTA0ODU3NikmJnVnKGIsbmcsYi5pbmRleCk7Yi5sYW5lcz0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOnZhciBkPWIudHlwZTtqaihhLGIpO2E9Yi5wZW5kaW5nUHJvcHM7dmFyIGU9WWYoYixILmN1cnJlbnQpO1RnKGIsYyk7ZT1YaChudWxsLGIsZCxhLGUsYyk7dmFyIGY9YmkoKTtiLmZsYWdzfD0xO1wib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZj8oYi50YWc9MSxiLm1lbW9pemVkU3RhdGU9bnVsbCxiLnVwZGF0ZVF1ZXVlPVxubnVsbCxaZihkKT8oZj0hMCxjZyhiKSk6Zj0hMSxiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsLGFoKGIpLGUudXBkYXRlcj1uaCxiLnN0YXRlTm9kZT1lLGUuX3JlYWN0SW50ZXJuYWxzPWIscmgoYixkLGEsYyksYj1raihudWxsLGIsZCwhMCxmLGMpKTooYi50YWc9MCxJJiZmJiZ2ZyhiKSxZaShudWxsLGIsZSxjKSxiPWIuY2hpbGQpO3JldHVybiBiO2Nhc2UgMTY6ZD1iLmVsZW1lbnRUeXBlO2E6e2pqKGEsYik7YT1iLnBlbmRpbmdQcm9wcztlPWQuX2luaXQ7ZD1lKGQuX3BheWxvYWQpO2IudHlwZT1kO2U9Yi50YWc9JGsoZCk7YT1MZyhkLGEpO3N3aXRjaChlKXtjYXNlIDA6Yj1kaihudWxsLGIsZCxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9aWoobnVsbCxiLGQsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1aaShudWxsLGIsZCxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWFqKG51bGwsYixkLExnKGQudHlwZSxhKSxjKTticmVhayBhfXRocm93IEVycm9yKHAoMzA2LFxuZCxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TGcoZCxlKSxkaihhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TGcoZCxlKSxpaihhLGIsZCxlLGMpO2Nhc2UgMzphOntsaihiKTtpZihudWxsPT09YSl0aHJvdyBFcnJvcihwKDM4NykpO2Q9Yi5wZW5kaW5nUHJvcHM7Zj1iLm1lbW9pemVkU3RhdGU7ZT1mLmVsZW1lbnQ7YmgoYSxiKTtnaChiLGQsbnVsbCxjKTt2YXIgZz1iLm1lbW9pemVkU3RhdGU7ZD1nLmVsZW1lbnQ7aWYoZi5pc0RlaHlkcmF0ZWQpaWYoZj17ZWxlbWVudDpkLGlzRGVoeWRyYXRlZDohMSxjYWNoZTpnLmNhY2hlLHBlbmRpbmdTdXNwZW5zZUJvdW5kYXJpZXM6Zy5wZW5kaW5nU3VzcGVuc2VCb3VuZGFyaWVzLHRyYW5zaXRpb25zOmcudHJhbnNpdGlvbnN9LGIudXBkYXRlUXVldWUuYmFzZVN0YXRlPVxuZixiLm1lbW9pemVkU3RhdGU9ZixiLmZsYWdzJjI1Nil7ZT1LaShFcnJvcihwKDQyMykpLGIpO2I9bWooYSxiLGQsYyxlKTticmVhayBhfWVsc2UgaWYoZCE9PWUpe2U9S2koRXJyb3IocCg0MjQpKSxiKTtiPW1qKGEsYixkLGMsZSk7YnJlYWsgYX1lbHNlIGZvcih5Zz1MZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLHhnPWIsST0hMCx6Zz1udWxsLGM9Q2goYixudWxsLGQsYyksYi5jaGlsZD1jO2M7KWMuZmxhZ3M9Yy5mbGFncyYtM3w0MDk2LGM9Yy5zaWJsaW5nO2Vsc2V7SWcoKTtpZihkPT09ZSl7Yj0kaShhLGIsYyk7YnJlYWsgYX1ZaShhLGIsZCxjKX1iPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBLaChiKSxudWxsPT09YSYmRWcoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLGc9ZS5jaGlsZHJlbixFZihkLGUpP2c9bnVsbDpudWxsIT09ZiYmRWYoZCxmKSYmKGIuZmxhZ3N8PTMyKSxcbmhqKGEsYiksWWkoYSxiLGcsYyksYi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZFZyhiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHBqKGEsYixjKTtjYXNlIDQ6cmV0dXJuIEloKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPUJoKGIsbnVsbCxkLGMpOllpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TGcoZCxlKSxaaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gWWkoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBZaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBZaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zj1iLm1lbW9pemVkUHJvcHM7XG5nPWUudmFsdWU7RyhNZyxkLl9jdXJyZW50VmFsdWUpO2QuX2N1cnJlbnRWYWx1ZT1nO2lmKG51bGwhPT1mKWlmKEhlKGYudmFsdWUsZykpe2lmKGYuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhV2YuY3VycmVudCl7Yj0kaShhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoZj1iLmNoaWxkLG51bGwhPT1mJiYoZi5yZXR1cm49Yik7bnVsbCE9PWY7KXt2YXIgaD1mLmRlcGVuZGVuY2llcztpZihudWxsIT09aCl7Zz1mLmNoaWxkO2Zvcih2YXIgaz1oLmZpcnN0Q29udGV4dDtudWxsIT09azspe2lmKGsuY29udGV4dD09PWQpe2lmKDE9PT1mLnRhZyl7az1jaCgtMSxjJi1jKTtrLnRhZz0yO3ZhciBsPWYudXBkYXRlUXVldWU7aWYobnVsbCE9PWwpe2w9bC5zaGFyZWQ7dmFyIG09bC5wZW5kaW5nO251bGw9PT1tP2submV4dD1rOihrLm5leHQ9bS5uZXh0LG0ubmV4dD1rKTtsLnBlbmRpbmc9a319Zi5sYW5lc3w9YztrPWYuYWx0ZXJuYXRlO251bGwhPT1rJiYoay5sYW5lc3w9Yyk7U2coZi5yZXR1cm4sXG5jLGIpO2gubGFuZXN8PWM7YnJlYWt9az1rLm5leHR9fWVsc2UgaWYoMTA9PT1mLnRhZylnPWYudHlwZT09PWIudHlwZT9udWxsOmYuY2hpbGQ7ZWxzZSBpZigxOD09PWYudGFnKXtnPWYucmV0dXJuO2lmKG51bGw9PT1nKXRocm93IEVycm9yKHAoMzQxKSk7Zy5sYW5lc3w9YztoPWcuYWx0ZXJuYXRlO251bGwhPT1oJiYoaC5sYW5lc3w9Yyk7U2coZyxjLGIpO2c9Zi5zaWJsaW5nfWVsc2UgZz1mLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWY7ZWxzZSBmb3IoZz1mO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31mPWcuc2libGluZztpZihudWxsIT09Zil7Zi5yZXR1cm49Zy5yZXR1cm47Zz1mO2JyZWFrfWc9Zy5yZXR1cm59Zj1nfVlpKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGQ9Yi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sVGcoYixjKSxlPVZnKGUpLGQ9ZChlKSxiLmZsYWdzfD0xLFlpKGEsYixkLGMpLFxuYi5jaGlsZDtjYXNlIDE0OnJldHVybiBkPWIudHlwZSxlPUxnKGQsYi5wZW5kaW5nUHJvcHMpLGU9TGcoZC50eXBlLGUpLGFqKGEsYixkLGUsYyk7Y2FzZSAxNTpyZXR1cm4gY2ooYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMZyhkLGUpLGpqKGEsYiksYi50YWc9MSxaZihkKT8oYT0hMCxjZyhiKSk6YT0hMSxUZyhiLGMpLHBoKGIsZCxlKSxyaChiLGQsZSxjKSxraihudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIHlqKGEsYixjKTtjYXNlIDIyOnJldHVybiBlaihhLGIsYyl9dGhyb3cgRXJyb3IocCgxNTYsYi50YWcpKTt9O2Z1bmN0aW9uIEdrKGEsYil7cmV0dXJuIGFjKGEsYil9XG5mdW5jdGlvbiBhbChhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuc3VidHJlZUZsYWdzPXRoaXMuZmxhZ3M9MDt0aGlzLmRlbGV0aW9ucz1udWxsO3RoaXMuY2hpbGRMYW5lcz10aGlzLmxhbmVzPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBCZyhhLGIsYyxkKXtyZXR1cm4gbmV3IGFsKGEsYixjLGQpfWZ1bmN0aW9uIGJqKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9XG5mdW5jdGlvbiAkayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYmooYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PURhKXJldHVybiAxMTtpZihhPT09R2EpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gd2goYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1CZyhhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLnR5cGU9YS50eXBlLGMuZmxhZ3M9MCxjLnN1YnRyZWVGbGFncz0wLGMuZGVsZXRpb25zPW51bGwpO2MuZmxhZ3M9YS5mbGFncyYxNDY4MDA2NDtjLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzO2MubGFuZXM9YS5sYW5lcztjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2xhbmVzOmIubGFuZXMsZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0fTtcbmMuc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24geWgoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWJqKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIHlhOnJldHVybiBBaChjLmNoaWxkcmVuLGUsZixiKTtjYXNlIHphOmc9ODtlfD04O2JyZWFrO2Nhc2UgQWE6cmV0dXJuIGE9QmcoMTIsYyxiLGV8MiksYS5lbGVtZW50VHlwZT1BYSxhLmxhbmVzPWYsYTtjYXNlIEVhOnJldHVybiBhPUJnKDEzLGMsYixlKSxhLmVsZW1lbnRUeXBlPUVhLGEubGFuZXM9ZixhO2Nhc2UgRmE6cmV0dXJuIGE9QmcoMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9RmEsYS5sYW5lcz1mLGE7Y2FzZSBJYTpyZXR1cm4gcWooYyxlLGYsYik7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIEJhOmc9MTA7YnJlYWsgYTtjYXNlIENhOmc9OTticmVhayBhO2Nhc2UgRGE6Zz0xMTtcbmJyZWFrIGE7Y2FzZSBHYTpnPTE0O2JyZWFrIGE7Y2FzZSBIYTpnPTE2O2Q9bnVsbDticmVhayBhfXRocm93IEVycm9yKHAoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9QmcoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IubGFuZXM9ZjtyZXR1cm4gYn1mdW5jdGlvbiBBaChhLGIsYyxkKXthPUJnKDcsYSxkLGIpO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiBxaihhLGIsYyxkKXthPUJnKDIyLGEsZCxiKTthLmVsZW1lbnRUeXBlPUlhO2EubGFuZXM9YzthLnN0YXRlTm9kZT17aXNIaWRkZW46ITF9O3JldHVybiBhfWZ1bmN0aW9uIHhoKGEsYixjKXthPUJnKDYsYSxudWxsLGIpO2EubGFuZXM9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIHpoKGEsYixjKXtiPUJnKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmxhbmVzPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gYmwoYSxiLGMsZCxlKXt0aGlzLnRhZz1iO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLmNhbGxiYWNrTm9kZT10aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT0wO3RoaXMuZXZlbnRUaW1lcz16YygwKTt0aGlzLmV4cGlyYXRpb25UaW1lcz16YygtMSk7dGhpcy5lbnRhbmdsZWRMYW5lcz10aGlzLmZpbmlzaGVkTGFuZXM9dGhpcy5tdXRhYmxlUmVhZExhbmVzPXRoaXMuZXhwaXJlZExhbmVzPXRoaXMucGluZ2VkTGFuZXM9dGhpcy5zdXNwZW5kZWRMYW5lcz10aGlzLnBlbmRpbmdMYW5lcz0wO3RoaXMuZW50YW5nbGVtZW50cz16YygwKTt0aGlzLmlkZW50aWZpZXJQcmVmaXg9ZDt0aGlzLm9uUmVjb3ZlcmFibGVFcnJvcj1lO3RoaXMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1cbm51bGx9ZnVuY3Rpb24gY2woYSxiLGMsZCxlLGYsZyxoLGspe2E9bmV3IGJsKGEsYixjLGgsayk7MT09PWI/KGI9MSwhMD09PWYmJihifD04KSk6Yj0wO2Y9QmcoMyxudWxsLG51bGwsYik7YS5jdXJyZW50PWY7Zi5zdGF0ZU5vZGU9YTtmLm1lbW9pemVkU3RhdGU9e2VsZW1lbnQ6ZCxpc0RlaHlkcmF0ZWQ6YyxjYWNoZTpudWxsLHRyYW5zaXRpb25zOm51bGwscGVuZGluZ1N1c3BlbnNlQm91bmRhcmllczpudWxsfTthaChmKTtyZXR1cm4gYX1mdW5jdGlvbiBkbChhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOndhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuZnVuY3Rpb24gZWwoYSl7aWYoIWEpcmV0dXJuIFZmO2E9YS5fcmVhY3RJbnRlcm5hbHM7YTp7aWYoVmIoYSkhPT1hfHwxIT09YS50YWcpdGhyb3cgRXJyb3IocCgxNzApKTt2YXIgYj1hO2Rve3N3aXRjaChiLnRhZyl7Y2FzZSAzOmI9Yi5zdGF0ZU5vZGUuY29udGV4dDticmVhayBhO2Nhc2UgMTppZihaZihiLnR5cGUpKXtiPWIuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGF9fWI9Yi5yZXR1cm59d2hpbGUobnVsbCE9PWIpO3Rocm93IEVycm9yKHAoMTcxKSk7fWlmKDE9PT1hLnRhZyl7dmFyIGM9YS50eXBlO2lmKFpmKGMpKXJldHVybiBiZyhhLGMsYil9cmV0dXJuIGJ9XG5mdW5jdGlvbiBmbChhLGIsYyxkLGUsZixnLGgsayl7YT1jbChjLGQsITAsYSxlLGYsZyxoLGspO2EuY29udGV4dD1lbChudWxsKTtjPWEuY3VycmVudDtkPUwoKTtlPWxoKGMpO2Y9Y2goZCxlKTtmLmNhbGxiYWNrPXZvaWQgMCE9PWImJm51bGwhPT1iP2I6bnVsbDtkaChjLGYsZSk7YS5jdXJyZW50LmxhbmVzPWU7QWMoYSxlLGQpO0VrKGEsZCk7cmV0dXJuIGF9ZnVuY3Rpb24gZ2woYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9TCgpLGc9bGgoZSk7Yz1lbChjKTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWNoKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09ZD9udWxsOmQ7bnVsbCE9PWQmJihiLmNhbGxiYWNrPWQpO2E9ZGgoZSxiLGcpO251bGwhPT1hJiYobWgoYSxlLGcsZiksZWgoYSxlLGcpKTtyZXR1cm4gZ31cbmZ1bmN0aW9uIGhsKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gaWwoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCl7dmFyIGM9YS5yZXRyeUxhbmU7YS5yZXRyeUxhbmU9MCE9PWMmJmM8Yj9jOmJ9fWZ1bmN0aW9uIGpsKGEsYil7aWwoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJmlsKGEsYil9ZnVuY3Rpb24ga2woKXtyZXR1cm4gbnVsbH12YXIgbGw9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJlcG9ydEVycm9yP3JlcG9ydEVycm9yOmZ1bmN0aW9uKGEpe2NvbnNvbGUuZXJyb3IoYSl9O2Z1bmN0aW9uIG1sKGEpe3RoaXMuX2ludGVybmFsUm9vdD1hfVxubmwucHJvdG90eXBlLnJlbmRlcj1tbC5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuX2ludGVybmFsUm9vdDtpZihudWxsPT09Yil0aHJvdyBFcnJvcihwKDQwOSkpO2dsKGEsYixudWxsLG51bGwpfTtubC5wcm90b3R5cGUudW5tb3VudD1tbC5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX2ludGVybmFsUm9vdDtpZihudWxsIT09YSl7dGhpcy5faW50ZXJuYWxSb290PW51bGw7dmFyIGI9YS5jb250YWluZXJJbmZvO1NrKGZ1bmN0aW9uKCl7Z2wobnVsbCxhLG51bGwsbnVsbCl9KTtiW3VmXT1udWxsfX07ZnVuY3Rpb24gbmwoYSl7dGhpcy5faW50ZXJuYWxSb290PWF9XG5ubC5wcm90b3R5cGUudW5zdGFibGVfc2NoZWR1bGVIeWRyYXRpb249ZnVuY3Rpb24oYSl7aWYoYSl7dmFyIGI9SGMoKTthPXtibG9ja2VkT246bnVsbCx0YXJnZXQ6YSxwcmlvcml0eTpifTtmb3IodmFyIGM9MDtjPFFjLmxlbmd0aCYmMCE9PWImJmI8UWNbY10ucHJpb3JpdHk7YysrKTtRYy5zcGxpY2UoYywwLGEpOzA9PT1jJiZWYyhhKX19O2Z1bmN0aW9uIG9sKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlKX1mdW5jdGlvbiBwbChhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9ZnVuY3Rpb24gcWwoKXt9XG5mdW5jdGlvbiBybChhLGIsYyxkLGUpe2lmKGUpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZj1kO2Q9ZnVuY3Rpb24oKXt2YXIgYT1obChnKTtmLmNhbGwoYSl9fXZhciBnPWZsKGIsZCxhLDAsbnVsbCwhMSwhMSxcIlwiLHFsKTthLl9yZWFjdFJvb3RDb250YWluZXI9ZzthW3VmXT1nLmN1cnJlbnQ7c2YoOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmEpO1NrKCk7cmV0dXJuIGd9Zm9yKDtlPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGUpO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgaD1kO2Q9ZnVuY3Rpb24oKXt2YXIgYT1obChrKTtoLmNhbGwoYSl9fXZhciBrPWNsKGEsMCwhMSxudWxsLG51bGwsITEsITEsXCJcIixxbCk7YS5fcmVhY3RSb290Q29udGFpbmVyPWs7YVt1Zl09ay5jdXJyZW50O3NmKDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphKTtTayhmdW5jdGlvbigpe2dsKGIsayxjLGQpfSk7cmV0dXJuIGt9XG5mdW5jdGlvbiBzbChhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1obChnKTtoLmNhbGwoYSl9fWdsKGIsZyxhLGUpfWVsc2UgZz1ybChjLGIsYSxlLGQpO3JldHVybiBobChnKX1FYz1mdW5jdGlvbihhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMzp2YXIgYj1hLnN0YXRlTm9kZTtpZihiLmN1cnJlbnQubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQpe3ZhciBjPXRjKGIucGVuZGluZ0xhbmVzKTswIT09YyYmKENjKGIsY3wxKSxFayhiLEIoKSksMD09PShLJjYpJiYoSGo9QigpKzUwMCxqZygpKSl9YnJlYWs7Y2FzZSAxMzpTayhmdW5jdGlvbigpe3ZhciBiPVpnKGEsMSk7aWYobnVsbCE9PWIpe3ZhciBjPUwoKTttaChiLGEsMSxjKX19KSxqbChhLDEpfX07XG5GYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1aZyhhLDEzNDIxNzcyOCk7aWYobnVsbCE9PWIpe3ZhciBjPUwoKTttaChiLGEsMTM0MjE3NzI4LGMpfWpsKGEsMTM0MjE3NzI4KX19O0djPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWxoKGEpLGM9WmcoYSxiKTtpZihudWxsIT09Yyl7dmFyIGQ9TCgpO21oKGMsYSxiLGQpfWpsKGEsYil9fTtIYz1mdW5jdGlvbigpe3JldHVybiBDfTtJYz1mdW5jdGlvbihhLGIpe3ZhciBjPUM7dHJ5e3JldHVybiBDPWEsYigpfWZpbmFsbHl7Qz1jfX07XG55Yj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmJiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1EYihkKTtpZighZSl0aHJvdyBFcnJvcihwKDkwKSk7V2EoZCk7YmIoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZmYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0diPVJrO0hiPVNrO1xudmFyIHRsPXt1c2luZ0NsaWVudEVudHJ5UG9pbnQ6ITEsRXZlbnRzOltDYix1ZSxEYixFYixGYixSa119LHVsPXtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpXYyxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE4LjIuMFwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn07XG52YXIgdmw9e2J1bmRsZVR5cGU6dWwuYnVuZGxlVHlwZSx2ZXJzaW9uOnVsLnZlcnNpb24scmVuZGVyZXJQYWNrYWdlTmFtZTp1bC5yZW5kZXJlclBhY2thZ2VOYW1lLHJlbmRlcmVyQ29uZmlnOnVsLnJlbmRlcmVyQ29uZmlnLG92ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLG92ZXJyaWRlUHJvcHNEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGg6bnVsbCxzZXRFcnJvckhhbmRsZXI6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOnVhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1aYihhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6dWwuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2V8fFxua2wsZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoOm51bGwsc2NoZWR1bGVSZWZyZXNoOm51bGwsc2NoZWR1bGVSb290Om51bGwsc2V0UmVmcmVzaEhhbmRsZXI6bnVsbCxnZXRDdXJyZW50RmliZXI6bnVsbCxyZWNvbmNpbGVyVmVyc2lvbjpcIjE4LjIuMC1uZXh0LTllM2I3NzJiOC0yMDIyMDYwOFwifTtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyl7dmFyIHdsPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZighd2wuaXNEaXNhYmxlZCYmd2wuc3VwcG9ydHNGaWJlcil0cnl7a2M9d2wuaW5qZWN0KHZsKSxsYz13bH1jYXRjaChhKXt9fWV4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9dGw7XG5leHBvcnRzLmNyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFvbChiKSl0aHJvdyBFcnJvcihwKDIwMCkpO3JldHVybiBkbChhLGIsbnVsbCxjKX07ZXhwb3J0cy5jcmVhdGVSb290PWZ1bmN0aW9uKGEsYil7aWYoIW9sKGEpKXRocm93IEVycm9yKHAoMjk5KSk7dmFyIGM9ITEsZD1cIlwiLGU9bGw7bnVsbCE9PWImJnZvaWQgMCE9PWImJighMD09PWIudW5zdGFibGVfc3RyaWN0TW9kZSYmKGM9ITApLHZvaWQgMCE9PWIuaWRlbnRpZmllclByZWZpeCYmKGQ9Yi5pZGVudGlmaWVyUHJlZml4KSx2b2lkIDAhPT1iLm9uUmVjb3ZlcmFibGVFcnJvciYmKGU9Yi5vblJlY292ZXJhYmxlRXJyb3IpKTtiPWNsKGEsMSwhMSxudWxsLG51bGwsYywhMSxkLGUpO2FbdWZdPWIuY3VycmVudDtzZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7cmV0dXJuIG5ldyBtbChiKX07XG5leHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbHM7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHAoMTg4KSk7YT1PYmplY3Qua2V5cyhhKS5qb2luKFwiLFwiKTt0aHJvdyBFcnJvcihwKDI2OCxhKSk7fWE9WmIoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtleHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhKXtyZXR1cm4gU2soYSl9O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIXBsKGIpKXRocm93IEVycm9yKHAoMjAwKSk7cmV0dXJuIHNsKG51bGwsYSxiLCEwLGMpfTtcbmV4cG9ydHMuaHlkcmF0ZVJvb3Q9ZnVuY3Rpb24oYSxiLGMpe2lmKCFvbChhKSl0aHJvdyBFcnJvcihwKDQwNSkpO3ZhciBkPW51bGwhPWMmJmMuaHlkcmF0ZWRTb3VyY2VzfHxudWxsLGU9ITEsZj1cIlwiLGc9bGw7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJighMD09PWMudW5zdGFibGVfc3RyaWN0TW9kZSYmKGU9ITApLHZvaWQgMCE9PWMuaWRlbnRpZmllclByZWZpeCYmKGY9Yy5pZGVudGlmaWVyUHJlZml4KSx2b2lkIDAhPT1jLm9uUmVjb3ZlcmFibGVFcnJvciYmKGc9Yy5vblJlY292ZXJhYmxlRXJyb3IpKTtiPWZsKGIsbnVsbCxhLDEsbnVsbCE9Yz9jOm51bGwsZSwhMSxmLGcpO2FbdWZdPWIuY3VycmVudDtzZihhKTtpZihkKWZvcihhPTA7YTxkLmxlbmd0aDthKyspYz1kW2FdLGU9Yy5fZ2V0VmVyc2lvbixlPWUoYy5fc291cmNlKSxudWxsPT1iLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yi5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtjLGVdOmIubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGMsXG5lKTtyZXR1cm4gbmV3IG5sKGIpfTtleHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIXBsKGIpKXRocm93IEVycm9yKHAoMjAwKSk7cmV0dXJuIHNsKG51bGwsYSxiLCExLGMpfTtleHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIXBsKGEpKXRocm93IEVycm9yKHAoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhTayhmdW5jdGlvbigpe3NsKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVt1Zl09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPVJrO1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighcGwoYykpdGhyb3cgRXJyb3IocCgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFscyl0aHJvdyBFcnJvcihwKDM4KSk7cmV0dXJuIHNsKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxOC4yLjAtbmV4dC05ZTNiNzcyYjgtMjAyMjA2MDhcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIG0gPSByZXF1aXJlKCdyZWFjdC1kb20nKTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IG0uY3JlYXRlUm9vdDtcbiAgZXhwb3J0cy5oeWRyYXRlUm9vdCA9IG0uaHlkcmF0ZVJvb3Q7XG59IGVsc2Uge1xuICB2YXIgaSA9IG0uX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IGZ1bmN0aW9uKGMsIG8pIHtcbiAgICBpLnVzaW5nQ2xpZW50RW50cnlQb2ludCA9IHRydWU7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBtLmNyZWF0ZVJvb3QoYywgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xuICBleHBvcnRzLmh5ZHJhdGVSb290ID0gZnVuY3Rpb24oYywgaCwgbykge1xuICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIG0uaHlkcmF0ZVJvb3QoYywgaCwgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9cblN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSx3PWI/U3ltYm9sLmZvcihcInJlYWN0LmZ1bmRhbWVudGFsXCIpOjYwMTE3LHg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpOjYwMTE4LHk9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik6NjAxMTk7XG5mdW5jdGlvbiB6KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSB0OmNhc2UgcjpjYXNlIGg6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gdX19Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gQShhKXtyZXR1cm4geihhKT09PW19ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO1xuZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiBBKGEpfHx6KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPUE7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWt9O2V4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ofTtleHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXR9O1xuZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1yfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1mfTtleHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1wfTtcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8YT09PXF8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09dHx8YS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW58fGEuJCR0eXBlb2Y9PT13fHxhLiQkdHlwZW9mPT09eHx8YS4kJHR5cGVvZj09PXl8fGEuJCR0eXBlb2Y9PT12KX07ZXhwb3J0cy50eXBlT2Y9ejtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLy8gRGVmYXVsdCB0byBhIGR1bW15IFwiYmF0Y2hcIiBpbXBsZW1lbnRhdGlvbiB0aGF0IGp1c3QgcnVucyB0aGUgY2FsbGJhY2tcbmZ1bmN0aW9uIGRlZmF1bHROb29wQmF0Y2goY2FsbGJhY2spIHtcbiAgY2FsbGJhY2soKTtcbn1cblxubGV0IGJhdGNoID0gZGVmYXVsdE5vb3BCYXRjaDsgLy8gQWxsb3cgaW5qZWN0aW5nIGFub3RoZXIgYmF0Y2hpbmcgZnVuY3Rpb24gbGF0ZXJcblxuZXhwb3J0IGNvbnN0IHNldEJhdGNoID0gbmV3QmF0Y2ggPT4gYmF0Y2ggPSBuZXdCYXRjaDsgLy8gU3VwcGx5IGEgZ2V0dGVyIGp1c3QgdG8gc2tpcCBkZWFsaW5nIHdpdGggRVNNIGJpbmRpbmdzXG5cbmV4cG9ydCBjb25zdCBnZXRCYXRjaCA9ICgpID0+IGJhdGNoOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5leHBvcnQgY29uc3QgUmVhY3RSZWR1eENvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgUmVhY3RSZWR1eENvbnRleHQuZGlzcGxheU5hbWUgPSAnUmVhY3RSZWR1eCc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlYWN0UmVkdXhDb250ZXh0OyIsImltcG9ydCB7IHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBSZWFjdFJlZHV4Q29udGV4dCB9IGZyb20gJy4uL2NvbXBvbmVudHMvQ29udGV4dCc7XG5cbi8qKlxyXG4gKiBBIGhvb2sgdG8gYWNjZXNzIHRoZSB2YWx1ZSBvZiB0aGUgYFJlYWN0UmVkdXhDb250ZXh0YC4gVGhpcyBpcyBhIGxvdy1sZXZlbFxyXG4gKiBob29rIHRoYXQgeW91IHNob3VsZCB1c3VhbGx5IG5vdCBuZWVkIHRvIGNhbGwgZGlyZWN0bHkuXHJcbiAqXHJcbiAqIEByZXR1cm5zIHthbnl9IHRoZSB2YWx1ZSBvZiB0aGUgYFJlYWN0UmVkdXhDb250ZXh0YFxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiBpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbiAqIGltcG9ydCB7IHVzZVJlZHV4Q29udGV4dCB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG4gKlxyXG4gKiBleHBvcnQgY29uc3QgQ291bnRlckNvbXBvbmVudCA9ICgpID0+IHtcclxuICogICBjb25zdCB7IHN0b3JlIH0gPSB1c2VSZWR1eENvbnRleHQoKVxyXG4gKiAgIHJldHVybiA8ZGl2PntzdG9yZS5nZXRTdGF0ZSgpfTwvZGl2PlxyXG4gKiB9XHJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVJlZHV4Q29udGV4dCgpIHtcbiAgY29uc3QgY29udGV4dFZhbHVlID0gdXNlQ29udGV4dChSZWFjdFJlZHV4Q29udGV4dCk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIWNvbnRleHRWYWx1ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignY291bGQgbm90IGZpbmQgcmVhY3QtcmVkdXggY29udGV4dCB2YWx1ZTsgcGxlYXNlIGVuc3VyZSB0aGUgY29tcG9uZW50IGlzIHdyYXBwZWQgaW4gYSA8UHJvdmlkZXI+Jyk7XG4gIH1cblxuICByZXR1cm4gY29udGV4dFZhbHVlO1xufSIsImltcG9ydCB7IHVzZUNvbnRleHQsIHVzZURlYnVnVmFsdWUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VSZWR1eENvbnRleHQgYXMgdXNlRGVmYXVsdFJlZHV4Q29udGV4dCB9IGZyb20gJy4vdXNlUmVkdXhDb250ZXh0JztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZXh0JztcbmltcG9ydCB7IG5vdEluaXRpYWxpemVkIH0gZnJvbSAnLi4vdXRpbHMvdXNlU3luY0V4dGVybmFsU3RvcmUnO1xubGV0IHVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yID0gbm90SW5pdGlhbGl6ZWQ7XG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZVVzZVNlbGVjdG9yID0gZm4gPT4ge1xuICB1c2VTeW5jRXh0ZXJuYWxTdG9yZVdpdGhTZWxlY3RvciA9IGZuO1xufTtcblxuY29uc3QgcmVmRXF1YWxpdHkgPSAoYSwgYikgPT4gYSA9PT0gYjtcbi8qKlxyXG4gKiBIb29rIGZhY3RvcnksIHdoaWNoIGNyZWF0ZXMgYSBgdXNlU2VsZWN0b3JgIGhvb2sgYm91bmQgdG8gYSBnaXZlbiBjb250ZXh0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1JlYWN0LkNvbnRleHR9IFtjb250ZXh0PVJlYWN0UmVkdXhDb250ZXh0XSBDb250ZXh0IHBhc3NlZCB0byB5b3VyIGA8UHJvdmlkZXI+YC5cclxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGB1c2VTZWxlY3RvcmAgaG9vayBib3VuZCB0byB0aGUgc3BlY2lmaWVkIGNvbnRleHQuXHJcbiAqL1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTZWxlY3Rvckhvb2soY29udGV4dCA9IFJlYWN0UmVkdXhDb250ZXh0KSB7XG4gIGNvbnN0IHVzZVJlZHV4Q29udGV4dCA9IGNvbnRleHQgPT09IFJlYWN0UmVkdXhDb250ZXh0ID8gdXNlRGVmYXVsdFJlZHV4Q29udGV4dCA6ICgpID0+IHVzZUNvbnRleHQoY29udGV4dCk7XG4gIHJldHVybiBmdW5jdGlvbiB1c2VTZWxlY3RvcihzZWxlY3RvciwgZXF1YWxpdHlGbiA9IHJlZkVxdWFsaXR5KSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICghc2VsZWN0b3IpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBZb3UgbXVzdCBwYXNzIGEgc2VsZWN0b3IgdG8gdXNlU2VsZWN0b3JgKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBzZWxlY3RvciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFlvdSBtdXN0IHBhc3MgYSBmdW5jdGlvbiBhcyBhIHNlbGVjdG9yIHRvIHVzZVNlbGVjdG9yYCk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgZXF1YWxpdHlGbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFlvdSBtdXN0IHBhc3MgYSBmdW5jdGlvbiBhcyBhbiBlcXVhbGl0eSBmdW5jdGlvbiB0byB1c2VTZWxlY3RvcmApO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IHtcbiAgICAgIHN0b3JlLFxuICAgICAgc3Vic2NyaXB0aW9uLFxuICAgICAgZ2V0U2VydmVyU3RhdGVcbiAgICB9ID0gdXNlUmVkdXhDb250ZXh0KCk7XG4gICAgY29uc3Qgc2VsZWN0ZWRTdGF0ZSA9IHVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yKHN1YnNjcmlwdGlvbi5hZGROZXN0ZWRTdWIsIHN0b3JlLmdldFN0YXRlLCBnZXRTZXJ2ZXJTdGF0ZSB8fCBzdG9yZS5nZXRTdGF0ZSwgc2VsZWN0b3IsIGVxdWFsaXR5Rm4pO1xuICAgIHVzZURlYnVnVmFsdWUoc2VsZWN0ZWRTdGF0ZSk7XG4gICAgcmV0dXJuIHNlbGVjdGVkU3RhdGU7XG4gIH07XG59XG4vKipcclxuICogQSBob29rIHRvIGFjY2VzcyB0aGUgcmVkdXggc3RvcmUncyBzdGF0ZS4gVGhpcyBob29rIHRha2VzIGEgc2VsZWN0b3IgZnVuY3Rpb25cclxuICogYXMgYW4gYXJndW1lbnQuIFRoZSBzZWxlY3RvciBpcyBjYWxsZWQgd2l0aCB0aGUgc3RvcmUgc3RhdGUuXHJcbiAqXHJcbiAqIFRoaXMgaG9vayB0YWtlcyBhbiBvcHRpb25hbCBlcXVhbGl0eSBjb21wYXJpc29uIGZ1bmN0aW9uIGFzIHRoZSBzZWNvbmQgcGFyYW1ldGVyXHJcbiAqIHRoYXQgYWxsb3dzIHlvdSB0byBjdXN0b21pemUgdGhlIHdheSB0aGUgc2VsZWN0ZWQgc3RhdGUgaXMgY29tcGFyZWQgdG8gZGV0ZXJtaW5lXHJcbiAqIHdoZXRoZXIgdGhlIGNvbXBvbmVudCBuZWVkcyB0byBiZSByZS1yZW5kZXJlZC5cclxuICpcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gc2VsZWN0b3IgdGhlIHNlbGVjdG9yIGZ1bmN0aW9uXHJcbiAqIEBwYXJhbSB7RnVuY3Rpb249fSBlcXVhbGl0eUZuIHRoZSBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgdXNlZCB0byBkZXRlcm1pbmUgZXF1YWxpdHlcclxuICpcclxuICogQHJldHVybnMge2FueX0gdGhlIHNlbGVjdGVkIHN0YXRlXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIGltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuICogaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tICdyZWFjdC1yZWR1eCdcclxuICpcclxuICogZXhwb3J0IGNvbnN0IENvdW50ZXJDb21wb25lbnQgPSAoKSA9PiB7XHJcbiAqICAgY29uc3QgY291bnRlciA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlLmNvdW50ZXIpXHJcbiAqICAgcmV0dXJuIDxkaXY+e2NvdW50ZXJ9PC9kaXY+XHJcbiAqIH1cclxuICovXG5cbmV4cG9ydCBjb25zdCB1c2VTZWxlY3RvciA9IC8qI19fUFVSRV9fKi9jcmVhdGVTZWxlY3Rvckhvb2soKTsiLCJleHBvcnQgY29uc3Qgbm90SW5pdGlhbGl6ZWQgPSAoKSA9PiB7XG4gIHRocm93IG5ldyBFcnJvcigndVNFUyBub3QgaW5pdGlhbGl6ZWQhJyk7XG59OyIsImltcG9ydCB7IGdldEJhdGNoIH0gZnJvbSAnLi9iYXRjaCc7IC8vIGVuY2Fwc3VsYXRlcyB0aGUgc3Vic2NyaXB0aW9uIGxvZ2ljIGZvciBjb25uZWN0aW5nIGEgY29tcG9uZW50IHRvIHRoZSByZWR1eCBzdG9yZSwgYXNcbi8vIHdlbGwgYXMgbmVzdGluZyBzdWJzY3JpcHRpb25zIG9mIGRlc2NlbmRhbnQgY29tcG9uZW50cywgc28gdGhhdCB3ZSBjYW4gZW5zdXJlIHRoZVxuLy8gYW5jZXN0b3IgY29tcG9uZW50cyByZS1yZW5kZXIgYmVmb3JlIGRlc2NlbmRhbnRzXG5cbmZ1bmN0aW9uIGNyZWF0ZUxpc3RlbmVyQ29sbGVjdGlvbigpIHtcbiAgY29uc3QgYmF0Y2ggPSBnZXRCYXRjaCgpO1xuICBsZXQgZmlyc3QgPSBudWxsO1xuICBsZXQgbGFzdCA9IG51bGw7XG4gIHJldHVybiB7XG4gICAgY2xlYXIoKSB7XG4gICAgICBmaXJzdCA9IG51bGw7XG4gICAgICBsYXN0ID0gbnVsbDtcbiAgICB9LFxuXG4gICAgbm90aWZ5KCkge1xuICAgICAgYmF0Y2goKCkgPT4ge1xuICAgICAgICBsZXQgbGlzdGVuZXIgPSBmaXJzdDtcblxuICAgICAgICB3aGlsZSAobGlzdGVuZXIpIHtcbiAgICAgICAgICBsaXN0ZW5lci5jYWxsYmFjaygpO1xuICAgICAgICAgIGxpc3RlbmVyID0gbGlzdGVuZXIubmV4dDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcblxuICAgIGdldCgpIHtcbiAgICAgIGxldCBsaXN0ZW5lcnMgPSBbXTtcbiAgICAgIGxldCBsaXN0ZW5lciA9IGZpcnN0O1xuXG4gICAgICB3aGlsZSAobGlzdGVuZXIpIHtcbiAgICAgICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgICAgICBsaXN0ZW5lciA9IGxpc3RlbmVyLm5leHQ7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBsaXN0ZW5lcnM7XG4gICAgfSxcblxuICAgIHN1YnNjcmliZShjYWxsYmFjaykge1xuICAgICAgbGV0IGlzU3Vic2NyaWJlZCA9IHRydWU7XG4gICAgICBsZXQgbGlzdGVuZXIgPSBsYXN0ID0ge1xuICAgICAgICBjYWxsYmFjayxcbiAgICAgICAgbmV4dDogbnVsbCxcbiAgICAgICAgcHJldjogbGFzdFxuICAgICAgfTtcblxuICAgICAgaWYgKGxpc3RlbmVyLnByZXYpIHtcbiAgICAgICAgbGlzdGVuZXIucHJldi5uZXh0ID0gbGlzdGVuZXI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmaXJzdCA9IGxpc3RlbmVyO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7XG4gICAgICAgIGlmICghaXNTdWJzY3JpYmVkIHx8IGZpcnN0ID09PSBudWxsKSByZXR1cm47XG4gICAgICAgIGlzU3Vic2NyaWJlZCA9IGZhbHNlO1xuXG4gICAgICAgIGlmIChsaXN0ZW5lci5uZXh0KSB7XG4gICAgICAgICAgbGlzdGVuZXIubmV4dC5wcmV2ID0gbGlzdGVuZXIucHJldjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsYXN0ID0gbGlzdGVuZXIucHJldjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChsaXN0ZW5lci5wcmV2KSB7XG4gICAgICAgICAgbGlzdGVuZXIucHJldi5uZXh0ID0gbGlzdGVuZXIubmV4dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBmaXJzdCA9IGxpc3RlbmVyLm5leHQ7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuXG4gIH07XG59XG5cbmNvbnN0IG51bGxMaXN0ZW5lcnMgPSB7XG4gIG5vdGlmeSgpIHt9LFxuXG4gIGdldDogKCkgPT4gW11cbn07XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3Vic2NyaXB0aW9uKHN0b3JlLCBwYXJlbnRTdWIpIHtcbiAgbGV0IHVuc3Vic2NyaWJlO1xuICBsZXQgbGlzdGVuZXJzID0gbnVsbExpc3RlbmVycztcblxuICBmdW5jdGlvbiBhZGROZXN0ZWRTdWIobGlzdGVuZXIpIHtcbiAgICB0cnlTdWJzY3JpYmUoKTtcbiAgICByZXR1cm4gbGlzdGVuZXJzLnN1YnNjcmliZShsaXN0ZW5lcik7XG4gIH1cblxuICBmdW5jdGlvbiBub3RpZnlOZXN0ZWRTdWJzKCkge1xuICAgIGxpc3RlbmVycy5ub3RpZnkoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUNoYW5nZVdyYXBwZXIoKSB7XG4gICAgaWYgKHN1YnNjcmlwdGlvbi5vblN0YXRlQ2hhbmdlKSB7XG4gICAgICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGlzU3Vic2NyaWJlZCgpIHtcbiAgICByZXR1cm4gQm9vbGVhbih1bnN1YnNjcmliZSk7XG4gIH1cblxuICBmdW5jdGlvbiB0cnlTdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF1bnN1YnNjcmliZSkge1xuICAgICAgdW5zdWJzY3JpYmUgPSBwYXJlbnRTdWIgPyBwYXJlbnRTdWIuYWRkTmVzdGVkU3ViKGhhbmRsZUNoYW5nZVdyYXBwZXIpIDogc3RvcmUuc3Vic2NyaWJlKGhhbmRsZUNoYW5nZVdyYXBwZXIpO1xuICAgICAgbGlzdGVuZXJzID0gY3JlYXRlTGlzdGVuZXJDb2xsZWN0aW9uKCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdHJ5VW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKHVuc3Vic2NyaWJlKSB7XG4gICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgdW5zdWJzY3JpYmUgPSB1bmRlZmluZWQ7XG4gICAgICBsaXN0ZW5lcnMuY2xlYXIoKTtcbiAgICAgIGxpc3RlbmVycyA9IG51bGxMaXN0ZW5lcnM7XG4gICAgfVxuICB9XG5cbiAgY29uc3Qgc3Vic2NyaXB0aW9uID0ge1xuICAgIGFkZE5lc3RlZFN1YixcbiAgICBub3RpZnlOZXN0ZWRTdWJzLFxuICAgIGhhbmRsZUNoYW5nZVdyYXBwZXIsXG4gICAgaXNTdWJzY3JpYmVkLFxuICAgIHRyeVN1YnNjcmliZSxcbiAgICB0cnlVbnN1YnNjcmliZSxcbiAgICBnZXRMaXN0ZW5lcnM6ICgpID0+IGxpc3RlbmVyc1xuICB9O1xuICByZXR1cm4gc3Vic2NyaXB0aW9uO1xufSIsImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlTGF5b3V0RWZmZWN0IH0gZnJvbSAncmVhY3QnOyAvLyBSZWFjdCBjdXJyZW50bHkgdGhyb3dzIGEgd2FybmluZyB3aGVuIHVzaW5nIHVzZUxheW91dEVmZmVjdCBvbiB0aGUgc2VydmVyLlxuLy8gVG8gZ2V0IGFyb3VuZCBpdCwgd2UgY2FuIGNvbmRpdGlvbmFsbHkgdXNlRWZmZWN0IG9uIHRoZSBzZXJ2ZXIgKG5vLW9wKSBhbmRcbi8vIHVzZUxheW91dEVmZmVjdCBpbiB0aGUgYnJvd3Nlci4gV2UgbmVlZCB1c2VMYXlvdXRFZmZlY3QgdG8gZW5zdXJlIHRoZSBzdG9yZVxuLy8gc3Vic2NyaXB0aW9uIGNhbGxiYWNrIGFsd2F5cyBoYXMgdGhlIHNlbGVjdG9yIGZyb20gdGhlIGxhdGVzdCByZW5kZXIgY29tbWl0XG4vLyBhdmFpbGFibGUsIG90aGVyd2lzZSBhIHN0b3JlIHVwZGF0ZSBtYXkgaGFwcGVuIGJldHdlZW4gcmVuZGVyIGFuZCB0aGUgZWZmZWN0LFxuLy8gd2hpY2ggbWF5IGNhdXNlIG1pc3NlZCB1cGRhdGVzOyB3ZSBhbHNvIG11c3QgZW5zdXJlIHRoZSBzdG9yZSBzdWJzY3JpcHRpb25cbi8vIGlzIGNyZWF0ZWQgc3luY2hyb25vdXNseSwgb3RoZXJ3aXNlIGEgc3RvcmUgdXBkYXRlIG1heSBvY2N1ciBiZWZvcmUgdGhlXG4vLyBzdWJzY3JpcHRpb24gaXMgY3JlYXRlZCBhbmQgYW4gaW5jb25zaXN0ZW50IHN0YXRlIG1heSBiZSBvYnNlcnZlZFxuLy8gTWF0Y2hlcyBsb2dpYyBpbiBSZWFjdCdzIGBzaGFyZWQvRXhlY3V0aW9uRW52aXJvbm1lbnRgIGZpbGVcblxuZXhwb3J0IGNvbnN0IGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCAhPT0gJ3VuZGVmaW5lZCcpO1xuZXhwb3J0IGNvbnN0IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgPSBjYW5Vc2VET00gPyB1c2VMYXlvdXRFZmZlY3QgOiB1c2VFZmZlY3Q7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcInJlYWN0UmVkdXhGb3J3YXJkZWRSZWZcIl07XG5cbi8qIGVzbGludC1kaXNhYmxlIHZhbGlkLWpzZG9jLCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnMgKi9cbmltcG9ydCBob2lzdFN0YXRpY3MgZnJvbSAnaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNvbnRleHQsIHVzZU1lbW8sIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGlzVmFsaWRFbGVtZW50VHlwZSwgaXNDb250ZXh0Q29uc3VtZXIgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgZGVmYXVsdFNlbGVjdG9yRmFjdG9yeSBmcm9tICcuLi9jb25uZWN0L3NlbGVjdG9yRmFjdG9yeSc7XG5pbXBvcnQgeyBtYXBEaXNwYXRjaFRvUHJvcHNGYWN0b3J5IH0gZnJvbSAnLi4vY29ubmVjdC9tYXBEaXNwYXRjaFRvUHJvcHMnO1xuaW1wb3J0IHsgbWFwU3RhdGVUb1Byb3BzRmFjdG9yeSB9IGZyb20gJy4uL2Nvbm5lY3QvbWFwU3RhdGVUb1Byb3BzJztcbmltcG9ydCB7IG1lcmdlUHJvcHNGYWN0b3J5IH0gZnJvbSAnLi4vY29ubmVjdC9tZXJnZVByb3BzJztcbmltcG9ydCB7IGNyZWF0ZVN1YnNjcmlwdGlvbiB9IGZyb20gJy4uL3V0aWxzL1N1YnNjcmlwdGlvbic7XG5pbXBvcnQgeyB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0IH0gZnJvbSAnLi4vdXRpbHMvdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCc7XG5pbXBvcnQgc2hhbGxvd0VxdWFsIGZyb20gJy4uL3V0aWxzL3NoYWxsb3dFcXVhbCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICcuLi91dGlscy93YXJuaW5nJztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi9Db250ZXh0JztcbmltcG9ydCB7IG5vdEluaXRpYWxpemVkIH0gZnJvbSAnLi4vdXRpbHMvdXNlU3luY0V4dGVybmFsU3RvcmUnO1xubGV0IHVzZVN5bmNFeHRlcm5hbFN0b3JlID0gbm90SW5pdGlhbGl6ZWQ7XG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZUNvbm5lY3QgPSBmbiA9PiB7XG4gIHVzZVN5bmNFeHRlcm5hbFN0b3JlID0gZm47XG59OyAvLyBEZWZpbmUgc29tZSBjb25zdGFudCBhcnJheXMganVzdCB0byBhdm9pZCByZS1jcmVhdGluZyB0aGVzZVxuXG5jb25zdCBFTVBUWV9BUlJBWSA9IFtudWxsLCAwXTtcbmNvbnN0IE5PX1NVQlNDUklQVElPTl9BUlJBWSA9IFtudWxsLCBudWxsXTsgLy8gQXR0ZW1wdHMgdG8gc3RyaW5naWZ5IHdoYXRldmVyIG5vdC1yZWFsbHktYS1jb21wb25lbnQgdmFsdWUgd2Ugd2VyZSBnaXZlblxuLy8gZm9yIGxvZ2dpbmcgaW4gYW4gZXJyb3IgbWVzc2FnZVxuXG5jb25zdCBzdHJpbmdpZnlDb21wb25lbnQgPSBDb21wID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoQ29tcCk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJldHVybiBTdHJpbmcoQ29tcCk7XG4gIH1cbn07XG5cbi8vIFRoaXMgaXMgXCJqdXN0XCIgYSBgdXNlTGF5b3V0RWZmZWN0YCwgYnV0IHdpdGggdHdvIG1vZGlmaWNhdGlvbnM6XG4vLyAtIHdlIG5lZWQgdG8gZmFsbCBiYWNrIHRvIGB1c2VFZmZlY3RgIGluIFNTUiB0byBhdm9pZCBhbm5veWluZyB3YXJuaW5nc1xuLy8gLSB3ZSBleHRyYWN0IHRoaXMgdG8gYSBzZXBhcmF0ZSBmdW5jdGlvbiB0byBhdm9pZCBjbG9zaW5nIG92ZXIgdmFsdWVzXG4vLyAgIGFuZCBjYXVzaW5nIG1lbW9yeSBsZWFrc1xuZnVuY3Rpb24gdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdFdpdGhBcmdzKGVmZmVjdEZ1bmMsIGVmZmVjdEFyZ3MsIGRlcGVuZGVuY2llcykge1xuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KCgpID0+IGVmZmVjdEZ1bmMoLi4uZWZmZWN0QXJncyksIGRlcGVuZGVuY2llcyk7XG59IC8vIEVmZmVjdCBjYWxsYmFjaywgZXh0cmFjdGVkOiBhc3NpZ24gdGhlIGxhdGVzdCBwcm9wcyB2YWx1ZXMgdG8gcmVmcyBmb3IgbGF0ZXIgdXNhZ2VcblxuXG5mdW5jdGlvbiBjYXB0dXJlV3JhcHBlclByb3BzKGxhc3RXcmFwcGVyUHJvcHMsIGxhc3RDaGlsZFByb3BzLCByZW5kZXJJc1NjaGVkdWxlZCwgd3JhcHBlclByb3BzLCAvLyBhY3R1YWxDaGlsZFByb3BzOiB1bmtub3duLFxuY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZSwgbm90aWZ5TmVzdGVkU3Vicykge1xuICAvLyBXZSB3YW50IHRvIGNhcHR1cmUgdGhlIHdyYXBwZXIgcHJvcHMgYW5kIGNoaWxkIHByb3BzIHdlIHVzZWQgZm9yIGxhdGVyIGNvbXBhcmlzb25zXG4gIGxhc3RXcmFwcGVyUHJvcHMuY3VycmVudCA9IHdyYXBwZXJQcm9wcztcbiAgcmVuZGVySXNTY2hlZHVsZWQuY3VycmVudCA9IGZhbHNlOyAvLyBJZiB0aGUgcmVuZGVyIHdhcyBmcm9tIGEgc3RvcmUgdXBkYXRlLCBjbGVhciBvdXQgdGhhdCByZWZlcmVuY2UgYW5kIGNhc2NhZGUgdGhlIHN1YnNjcmliZXIgdXBkYXRlXG5cbiAgaWYgKGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUuY3VycmVudCkge1xuICAgIGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUuY3VycmVudCA9IG51bGw7XG4gICAgbm90aWZ5TmVzdGVkU3VicygpO1xuICB9XG59IC8vIEVmZmVjdCBjYWxsYmFjaywgZXh0cmFjdGVkOiBzdWJzY3JpYmUgdG8gdGhlIFJlZHV4IHN0b3JlIG9yIG5lYXJlc3QgY29ubmVjdGVkIGFuY2VzdG9yLFxuLy8gY2hlY2sgZm9yIHVwZGF0ZXMgYWZ0ZXIgZGlzcGF0Y2hlZCBhY3Rpb25zLCBhbmQgdHJpZ2dlciByZS1yZW5kZXJzLlxuXG5cbmZ1bmN0aW9uIHN1YnNjcmliZVVwZGF0ZXMoc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzLCBzdG9yZSwgc3Vic2NyaXB0aW9uLCBjaGlsZFByb3BzU2VsZWN0b3IsIGxhc3RXcmFwcGVyUHJvcHMsIGxhc3RDaGlsZFByb3BzLCByZW5kZXJJc1NjaGVkdWxlZCwgaXNNb3VudGVkLCBjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLCBub3RpZnlOZXN0ZWRTdWJzLCAvLyBmb3JjZUNvbXBvbmVudFVwZGF0ZURpc3BhdGNoOiBSZWFjdC5EaXNwYXRjaDxhbnk+LFxuYWRkaXRpb25hbFN1YnNjcmliZUxpc3RlbmVyKSB7XG4gIC8vIElmIHdlJ3JlIG5vdCBzdWJzY3JpYmVkIHRvIHRoZSBzdG9yZSwgbm90aGluZyB0byBkbyBoZXJlXG4gIGlmICghc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzKSByZXR1cm4gKCkgPT4ge307IC8vIENhcHR1cmUgdmFsdWVzIGZvciBjaGVja2luZyBpZiBhbmQgd2hlbiB0aGlzIGNvbXBvbmVudCB1bm1vdW50c1xuXG4gIGxldCBkaWRVbnN1YnNjcmliZSA9IGZhbHNlO1xuICBsZXQgbGFzdFRocm93bkVycm9yID0gbnVsbDsgLy8gV2UnbGwgcnVuIHRoaXMgY2FsbGJhY2sgZXZlcnkgdGltZSBhIHN0b3JlIHN1YnNjcmlwdGlvbiB1cGRhdGUgcHJvcGFnYXRlcyB0byB0aGlzIGNvbXBvbmVudFxuXG4gIGNvbnN0IGNoZWNrRm9yVXBkYXRlcyA9ICgpID0+IHtcbiAgICBpZiAoZGlkVW5zdWJzY3JpYmUgfHwgIWlzTW91bnRlZC5jdXJyZW50KSB7XG4gICAgICAvLyBEb24ndCBydW4gc3RhbGUgbGlzdGVuZXJzLlxuICAgICAgLy8gUmVkdXggZG9lc24ndCBndWFyYW50ZWUgdW5zdWJzY3JpcHRpb25zIGhhcHBlbiB1bnRpbCBuZXh0IGRpc3BhdGNoLlxuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gVE9ETyBXZSdyZSBjdXJyZW50bHkgY2FsbGluZyBnZXRTdGF0ZSBvdXJzZWx2ZXMgaGVyZSwgcmF0aGVyIHRoYW4gbGV0dGluZyBgdVNFU2AgZG8gaXRcblxuXG4gICAgY29uc3QgbGF0ZXN0U3RvcmVTdGF0ZSA9IHN0b3JlLmdldFN0YXRlKCk7XG4gICAgbGV0IG5ld0NoaWxkUHJvcHMsIGVycm9yO1xuXG4gICAgdHJ5IHtcbiAgICAgIC8vIEFjdHVhbGx5IHJ1biB0aGUgc2VsZWN0b3Igd2l0aCB0aGUgbW9zdCByZWNlbnQgc3RvcmUgc3RhdGUgYW5kIHdyYXBwZXIgcHJvcHNcbiAgICAgIC8vIHRvIGRldGVybWluZSB3aGF0IHRoZSBjaGlsZCBwcm9wcyBzaG91bGQgYmVcbiAgICAgIG5ld0NoaWxkUHJvcHMgPSBjaGlsZFByb3BzU2VsZWN0b3IobGF0ZXN0U3RvcmVTdGF0ZSwgbGFzdFdyYXBwZXJQcm9wcy5jdXJyZW50KTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBlcnJvciA9IGU7XG4gICAgICBsYXN0VGhyb3duRXJyb3IgPSBlO1xuICAgIH1cblxuICAgIGlmICghZXJyb3IpIHtcbiAgICAgIGxhc3RUaHJvd25FcnJvciA9IG51bGw7XG4gICAgfSAvLyBJZiB0aGUgY2hpbGQgcHJvcHMgaGF2ZW4ndCBjaGFuZ2VkLCBub3RoaW5nIHRvIGRvIGhlcmUgLSBjYXNjYWRlIHRoZSBzdWJzY3JpcHRpb24gdXBkYXRlXG5cblxuICAgIGlmIChuZXdDaGlsZFByb3BzID09PSBsYXN0Q2hpbGRQcm9wcy5jdXJyZW50KSB7XG4gICAgICBpZiAoIXJlbmRlcklzU2NoZWR1bGVkLmN1cnJlbnQpIHtcbiAgICAgICAgbm90aWZ5TmVzdGVkU3VicygpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTYXZlIHJlZmVyZW5jZXMgdG8gdGhlIG5ldyBjaGlsZCBwcm9wcy4gIE5vdGUgdGhhdCB3ZSB0cmFjayB0aGUgXCJjaGlsZCBwcm9wcyBmcm9tIHN0b3JlIHVwZGF0ZVwiXG4gICAgICAvLyBhcyBhIHJlZiBpbnN0ZWFkIG9mIGEgdXNlU3RhdGUvdXNlUmVkdWNlciBiZWNhdXNlIHdlIG5lZWQgYSB3YXkgdG8gZGV0ZXJtaW5lIGlmIHRoYXQgdmFsdWUgaGFzXG4gICAgICAvLyBiZWVuIHByb2Nlc3NlZC4gIElmIHRoaXMgd2VudCBpbnRvIHVzZVN0YXRlL3VzZVJlZHVjZXIsIHdlIGNvdWxkbid0IGNsZWFyIG91dCB0aGUgdmFsdWUgd2l0aG91dFxuICAgICAgLy8gZm9yY2luZyBhbm90aGVyIHJlLXJlbmRlciwgd2hpY2ggd2UgZG9uJ3Qgd2FudC5cbiAgICAgIGxhc3RDaGlsZFByb3BzLmN1cnJlbnQgPSBuZXdDaGlsZFByb3BzO1xuICAgICAgY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZS5jdXJyZW50ID0gbmV3Q2hpbGRQcm9wcztcbiAgICAgIHJlbmRlcklzU2NoZWR1bGVkLmN1cnJlbnQgPSB0cnVlOyAvLyBUT0RPIFRoaXMgaXMgaGFja3kgYW5kIG5vdCBob3cgYHVTRVNgIGlzIG1lYW50IHRvIGJlIHVzZWRcbiAgICAgIC8vIFRyaWdnZXIgdGhlIFJlYWN0IGB1c2VTeW5jRXh0ZXJuYWxTdG9yZWAgc3Vic2NyaWJlclxuXG4gICAgICBhZGRpdGlvbmFsU3Vic2NyaWJlTGlzdGVuZXIoKTtcbiAgICB9XG4gIH07IC8vIEFjdHVhbGx5IHN1YnNjcmliZSB0byB0aGUgbmVhcmVzdCBjb25uZWN0ZWQgYW5jZXN0b3IgKG9yIHN0b3JlKVxuXG5cbiAgc3Vic2NyaXB0aW9uLm9uU3RhdGVDaGFuZ2UgPSBjaGVja0ZvclVwZGF0ZXM7XG4gIHN1YnNjcmlwdGlvbi50cnlTdWJzY3JpYmUoKTsgLy8gUHVsbCBkYXRhIGZyb20gdGhlIHN0b3JlIGFmdGVyIGZpcnN0IHJlbmRlciBpbiBjYXNlIHRoZSBzdG9yZSBoYXNcbiAgLy8gY2hhbmdlZCBzaW5jZSB3ZSBiZWdhbi5cblxuICBjaGVja0ZvclVwZGF0ZXMoKTtcblxuICBjb25zdCB1bnN1YnNjcmliZVdyYXBwZXIgPSAoKSA9PiB7XG4gICAgZGlkVW5zdWJzY3JpYmUgPSB0cnVlO1xuICAgIHN1YnNjcmlwdGlvbi50cnlVbnN1YnNjcmliZSgpO1xuICAgIHN1YnNjcmlwdGlvbi5vblN0YXRlQ2hhbmdlID0gbnVsbDtcblxuICAgIGlmIChsYXN0VGhyb3duRXJyb3IpIHtcbiAgICAgIC8vIEl0J3MgcG9zc2libGUgdGhhdCB3ZSBjYXVnaHQgYW4gZXJyb3IgZHVlIHRvIGEgYmFkIG1hcFN0YXRlIGZ1bmN0aW9uLCBidXQgdGhlXG4gICAgICAvLyBwYXJlbnQgcmUtcmVuZGVyZWQgd2l0aG91dCB0aGlzIGNvbXBvbmVudCBhbmQgd2UncmUgYWJvdXQgdG8gdW5tb3VudC5cbiAgICAgIC8vIFRoaXMgc2hvdWxkbid0IGhhcHBlbiBhcyBsb25nIGFzIHdlIGRvIHRvcC1kb3duIHN1YnNjcmlwdGlvbnMgY29ycmVjdGx5LCBidXRcbiAgICAgIC8vIGlmIHdlIGV2ZXIgZG8gdGhvc2Ugd3JvbmcsIHRoaXMgdGhyb3cgd2lsbCBzdXJmYWNlIHRoZSBlcnJvciBpbiBvdXIgdGVzdHMuXG4gICAgICAvLyBJbiB0aGF0IGNhc2UsIHRocm93IHRoZSBlcnJvciBmcm9tIGhlcmUgc28gaXQgZG9lc24ndCBnZXQgbG9zdC5cbiAgICAgIHRocm93IGxhc3RUaHJvd25FcnJvcjtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVuc3Vic2NyaWJlV3JhcHBlcjtcbn0gLy8gUmVkdWNlciBpbml0aWFsIHN0YXRlIGNyZWF0aW9uIGZvciBvdXIgdXBkYXRlIHJlZHVjZXJcblxuXG5jb25zdCBpbml0U3RhdGVVcGRhdGVzID0gKCkgPT4gRU1QVFlfQVJSQVk7XG5cbmZ1bmN0aW9uIHN0cmljdEVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEgPT09IGI7XG59XG4vKipcclxuICogSW5mZXJzIHRoZSB0eXBlIG9mIHByb3BzIHRoYXQgYSBjb25uZWN0b3Igd2lsbCBpbmplY3QgaW50byBhIGNvbXBvbmVudC5cclxuICovXG5cblxubGV0IGhhc1dhcm5lZEFib3V0RGVwcmVjYXRlZFB1cmVPcHRpb24gPSBmYWxzZTtcbi8qKlxyXG4gKiBDb25uZWN0cyBhIFJlYWN0IGNvbXBvbmVudCB0byBhIFJlZHV4IHN0b3JlLlxyXG4gKlxyXG4gKiAtIFdpdGhvdXQgYXJndW1lbnRzLCBqdXN0IHdyYXBzIHRoZSBjb21wb25lbnQsIHdpdGhvdXQgY2hhbmdpbmcgdGhlIGJlaGF2aW9yIC8gcHJvcHNcclxuICpcclxuICogLSBJZiAyIHBhcmFtcyBhcmUgcGFzc2VkICgzcmQgcGFyYW0sIG1lcmdlUHJvcHMsIGlzIHNraXBwZWQpLCBkZWZhdWx0IGJlaGF2aW9yXHJcbiAqIGlzIHRvIG92ZXJyaWRlIG93blByb3BzIChhcyBzdGF0ZWQgaW4gdGhlIGRvY3MpLCBzbyB3aGF0IHJlbWFpbnMgaXMgZXZlcnl0aGluZyB0aGF0J3NcclxuICogbm90IGEgc3RhdGUgb3IgZGlzcGF0Y2ggcHJvcFxyXG4gKlxyXG4gKiAtIFdoZW4gM3JkIHBhcmFtIGlzIHBhc3NlZCwgd2UgZG9uJ3Qga25vdyBpZiBvd25Qcm9wcyBwcm9wYWdhdGUgYW5kIHdoZXRoZXIgdGhleVxyXG4gKiBzaG91bGQgYmUgdmFsaWQgY29tcG9uZW50IHByb3BzLCBiZWNhdXNlIGl0IGRlcGVuZHMgb24gbWVyZ2VQcm9wcyBpbXBsZW1lbnRhdGlvbi5cclxuICogQXMgc3VjaCwgaXQgaXMgdGhlIHVzZXIncyByZXNwb25zaWJpbGl0eSB0byBleHRlbmQgb3duUHJvcHMgaW50ZXJmYWNlIGZyb20gc3RhdGUgb3JcclxuICogZGlzcGF0Y2ggcHJvcHMgb3IgYm90aCB3aGVuIGFwcGxpY2FibGVcclxuICpcclxuICogQHBhcmFtIG1hcFN0YXRlVG9Qcm9wcyBBIGZ1bmN0aW9uIHRoYXQgZXh0cmFjdHMgdmFsdWVzIGZyb20gc3RhdGVcclxuICogQHBhcmFtIG1hcERpc3BhdGNoVG9Qcm9wcyBTZXR1cCBmb3IgZGlzcGF0Y2hpbmcgYWN0aW9uc1xyXG4gKiBAcGFyYW0gbWVyZ2VQcm9wcyBPcHRpb25hbCBjYWxsYmFjayB0byBtZXJnZSBzdGF0ZSBhbmQgZGlzcGF0Y2ggcHJvcHMgdG9nZXRoZXJcclxuICogQHBhcmFtIG9wdGlvbnMgT3B0aW9ucyBmb3IgY29uZmlndXJpbmcgdGhlIGNvbm5lY3Rpb25cclxuICpcclxuICovXG5cbmZ1bmN0aW9uIGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIHtcbiAgLy8gVGhlIGBwdXJlYCBvcHRpb24gaGFzIGJlZW4gcmVtb3ZlZCwgc28gVFMgZG9lc24ndCBsaWtlIHVzIGRlc3RydWN0dXJpbmcgdGhpcyB0byBjaGVjayBpdHMgZXhpc3RlbmNlLlxuICAvLyBAdHMtaWdub3JlXG4gIHB1cmUsXG4gIGFyZVN0YXRlc0VxdWFsID0gc3RyaWN0RXF1YWwsXG4gIGFyZU93blByb3BzRXF1YWwgPSBzaGFsbG93RXF1YWwsXG4gIGFyZVN0YXRlUHJvcHNFcXVhbCA9IHNoYWxsb3dFcXVhbCxcbiAgYXJlTWVyZ2VkUHJvcHNFcXVhbCA9IHNoYWxsb3dFcXVhbCxcbiAgLy8gdXNlIFJlYWN0J3MgZm9yd2FyZFJlZiB0byBleHBvc2UgYSByZWYgb2YgdGhlIHdyYXBwZWQgY29tcG9uZW50XG4gIGZvcndhcmRSZWYgPSBmYWxzZSxcbiAgLy8gdGhlIGNvbnRleHQgY29uc3VtZXIgdG8gdXNlXG4gIGNvbnRleHQgPSBSZWFjdFJlZHV4Q29udGV4dFxufSA9IHt9KSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKHB1cmUgIT09IHVuZGVmaW5lZCAmJiAhaGFzV2FybmVkQWJvdXREZXByZWNhdGVkUHVyZU9wdGlvbikge1xuICAgICAgaGFzV2FybmVkQWJvdXREZXByZWNhdGVkUHVyZU9wdGlvbiA9IHRydWU7XG4gICAgICB3YXJuaW5nKCdUaGUgYHB1cmVgIG9wdGlvbiBoYXMgYmVlbiByZW1vdmVkLiBgY29ubmVjdGAgaXMgbm93IGFsd2F5cyBhIFwicHVyZS9tZW1vaXplZFwiIGNvbXBvbmVudCcpO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IENvbnRleHQgPSBjb250ZXh0O1xuICBjb25zdCBpbml0TWFwU3RhdGVUb1Byb3BzID0gbWFwU3RhdGVUb1Byb3BzRmFjdG9yeShtYXBTdGF0ZVRvUHJvcHMpO1xuICBjb25zdCBpbml0TWFwRGlzcGF0Y2hUb1Byb3BzID0gbWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yeShtYXBEaXNwYXRjaFRvUHJvcHMpO1xuICBjb25zdCBpbml0TWVyZ2VQcm9wcyA9IG1lcmdlUHJvcHNGYWN0b3J5KG1lcmdlUHJvcHMpO1xuICBjb25zdCBzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMgPSBCb29sZWFuKG1hcFN0YXRlVG9Qcm9wcyk7XG5cbiAgY29uc3Qgd3JhcFdpdGhDb25uZWN0ID0gV3JhcHBlZENvbXBvbmVudCA9PiB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIWlzVmFsaWRFbGVtZW50VHlwZShXcmFwcGVkQ29tcG9uZW50KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBZb3UgbXVzdCBwYXNzIGEgY29tcG9uZW50IHRvIHRoZSBmdW5jdGlvbiByZXR1cm5lZCBieSBjb25uZWN0LiBJbnN0ZWFkIHJlY2VpdmVkICR7c3RyaW5naWZ5Q29tcG9uZW50KFdyYXBwZWRDb21wb25lbnQpfWApO1xuICAgIH1cblxuICAgIGNvbnN0IHdyYXBwZWRDb21wb25lbnROYW1lID0gV3JhcHBlZENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBXcmFwcGVkQ29tcG9uZW50Lm5hbWUgfHwgJ0NvbXBvbmVudCc7XG4gICAgY29uc3QgZGlzcGxheU5hbWUgPSBgQ29ubmVjdCgke3dyYXBwZWRDb21wb25lbnROYW1lfSlgO1xuICAgIGNvbnN0IHNlbGVjdG9yRmFjdG9yeU9wdGlvbnMgPSB7XG4gICAgICBzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMsXG4gICAgICBkaXNwbGF5TmFtZSxcbiAgICAgIHdyYXBwZWRDb21wb25lbnROYW1lLFxuICAgICAgV3JhcHBlZENvbXBvbmVudCxcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIGluaXRNYXBTdGF0ZVRvUHJvcHMsXG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICBpbml0TWFwRGlzcGF0Y2hUb1Byb3BzLFxuICAgICAgaW5pdE1lcmdlUHJvcHMsXG4gICAgICBhcmVTdGF0ZXNFcXVhbCxcbiAgICAgIGFyZVN0YXRlUHJvcHNFcXVhbCxcbiAgICAgIGFyZU93blByb3BzRXF1YWwsXG4gICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsXG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIENvbm5lY3RGdW5jdGlvbihwcm9wcykge1xuICAgICAgY29uc3QgW3Byb3BzQ29udGV4dCwgcmVhY3RSZWR1eEZvcndhcmRlZFJlZiwgd3JhcHBlclByb3BzXSA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICAvLyBEaXN0aW5ndWlzaCBiZXR3ZWVuIGFjdHVhbCBcImRhdGFcIiBwcm9wcyB0aGF0IHdlcmUgcGFzc2VkIHRvIHRoZSB3cmFwcGVyIGNvbXBvbmVudCxcbiAgICAgICAgLy8gYW5kIHZhbHVlcyBuZWVkZWQgdG8gY29udHJvbCBiZWhhdmlvciAoZm9yd2FyZGVkIHJlZnMsIGFsdGVybmF0ZSBjb250ZXh0IGluc3RhbmNlcykuXG4gICAgICAgIC8vIFRvIG1haW50YWluIHRoZSB3cmFwcGVyUHJvcHMgb2JqZWN0IHJlZmVyZW5jZSwgbWVtb2l6ZSB0aGlzIGRlc3RydWN0dXJpbmcuXG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICByZWFjdFJlZHV4Rm9yd2FyZGVkUmVmXG4gICAgICAgIH0gPSBwcm9wcyxcbiAgICAgICAgICAgICAgd3JhcHBlclByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG5cbiAgICAgICAgcmV0dXJuIFtwcm9wcy5jb250ZXh0LCByZWFjdFJlZHV4Rm9yd2FyZGVkUmVmLCB3cmFwcGVyUHJvcHNdO1xuICAgICAgfSwgW3Byb3BzXSk7XG4gICAgICBjb25zdCBDb250ZXh0VG9Vc2UgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgLy8gVXNlcnMgbWF5IG9wdGlvbmFsbHkgcGFzcyBpbiBhIGN1c3RvbSBjb250ZXh0IGluc3RhbmNlIHRvIHVzZSBpbnN0ZWFkIG9mIG91ciBSZWFjdFJlZHV4Q29udGV4dC5cbiAgICAgICAgLy8gTWVtb2l6ZSB0aGUgY2hlY2sgdGhhdCBkZXRlcm1pbmVzIHdoaWNoIGNvbnRleHQgaW5zdGFuY2Ugd2Ugc2hvdWxkIHVzZS5cbiAgICAgICAgcmV0dXJuIHByb3BzQ29udGV4dCAmJiBwcm9wc0NvbnRleHQuQ29uc3VtZXIgJiYgLy8gQHRzLWlnbm9yZVxuICAgICAgICBpc0NvbnRleHRDb25zdW1lciggLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQocHJvcHNDb250ZXh0LkNvbnN1bWVyLCBudWxsKSkgPyBwcm9wc0NvbnRleHQgOiBDb250ZXh0O1xuICAgICAgfSwgW3Byb3BzQ29udGV4dCwgQ29udGV4dF0pOyAvLyBSZXRyaWV2ZSB0aGUgc3RvcmUgYW5kIGFuY2VzdG9yIHN1YnNjcmlwdGlvbiB2aWEgY29udGV4dCwgaWYgYXZhaWxhYmxlXG5cbiAgICAgIGNvbnN0IGNvbnRleHRWYWx1ZSA9IHVzZUNvbnRleHQoQ29udGV4dFRvVXNlKTsgLy8gVGhlIHN0b3JlIF9tdXN0XyBleGlzdCBhcyBlaXRoZXIgYSBwcm9wIG9yIGluIGNvbnRleHQuXG4gICAgICAvLyBXZSdsbCBjaGVjayB0byBzZWUgaWYgaXQgX2xvb2tzXyBsaWtlIGEgUmVkdXggc3RvcmUgZmlyc3QuXG4gICAgICAvLyBUaGlzIGFsbG93cyB1cyB0byBwYXNzIHRocm91Z2ggYSBgc3RvcmVgIHByb3AgdGhhdCBpcyBqdXN0IGEgcGxhaW4gdmFsdWUuXG5cbiAgICAgIGNvbnN0IGRpZFN0b3JlQ29tZUZyb21Qcm9wcyA9IEJvb2xlYW4ocHJvcHMuc3RvcmUpICYmIEJvb2xlYW4ocHJvcHMuc3RvcmUuZ2V0U3RhdGUpICYmIEJvb2xlYW4ocHJvcHMuc3RvcmUuZGlzcGF0Y2gpO1xuICAgICAgY29uc3QgZGlkU3RvcmVDb21lRnJvbUNvbnRleHQgPSBCb29sZWFuKGNvbnRleHRWYWx1ZSkgJiYgQm9vbGVhbihjb250ZXh0VmFsdWUuc3RvcmUpO1xuXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhZGlkU3RvcmVDb21lRnJvbVByb3BzICYmICFkaWRTdG9yZUNvbWVGcm9tQ29udGV4dCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENvdWxkIG5vdCBmaW5kIFwic3RvcmVcIiBpbiB0aGUgY29udGV4dCBvZiBgICsgYFwiJHtkaXNwbGF5TmFtZX1cIi4gRWl0aGVyIHdyYXAgdGhlIHJvb3QgY29tcG9uZW50IGluIGEgPFByb3ZpZGVyPiwgYCArIGBvciBwYXNzIGEgY3VzdG9tIFJlYWN0IGNvbnRleHQgcHJvdmlkZXIgdG8gPFByb3ZpZGVyPiBhbmQgdGhlIGNvcnJlc3BvbmRpbmcgYCArIGBSZWFjdCBjb250ZXh0IGNvbnN1bWVyIHRvICR7ZGlzcGxheU5hbWV9IGluIGNvbm5lY3Qgb3B0aW9ucy5gKTtcbiAgICAgIH0gLy8gQmFzZWQgb24gdGhlIHByZXZpb3VzIGNoZWNrLCBvbmUgb2YgdGhlc2UgbXVzdCBiZSB0cnVlXG5cblxuICAgICAgY29uc3Qgc3RvcmUgPSBkaWRTdG9yZUNvbWVGcm9tUHJvcHMgPyBwcm9wcy5zdG9yZSA6IGNvbnRleHRWYWx1ZS5zdG9yZTtcbiAgICAgIGNvbnN0IGdldFNlcnZlclN0YXRlID0gZGlkU3RvcmVDb21lRnJvbUNvbnRleHQgPyBjb250ZXh0VmFsdWUuZ2V0U2VydmVyU3RhdGUgOiBzdG9yZS5nZXRTdGF0ZTtcbiAgICAgIGNvbnN0IGNoaWxkUHJvcHNTZWxlY3RvciA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICAvLyBUaGUgY2hpbGQgcHJvcHMgc2VsZWN0b3IgbmVlZHMgdGhlIHN0b3JlIHJlZmVyZW5jZSBhcyBhbiBpbnB1dC5cbiAgICAgICAgLy8gUmUtY3JlYXRlIHRoaXMgc2VsZWN0b3Igd2hlbmV2ZXIgdGhlIHN0b3JlIGNoYW5nZXMuXG4gICAgICAgIHJldHVybiBkZWZhdWx0U2VsZWN0b3JGYWN0b3J5KHN0b3JlLmRpc3BhdGNoLCBzZWxlY3RvckZhY3RvcnlPcHRpb25zKTtcbiAgICAgIH0sIFtzdG9yZV0pO1xuICAgICAgY29uc3QgW3N1YnNjcmlwdGlvbiwgbm90aWZ5TmVzdGVkU3Vic10gPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgaWYgKCFzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMpIHJldHVybiBOT19TVUJTQ1JJUFRJT05fQVJSQVk7IC8vIFRoaXMgU3Vic2NyaXB0aW9uJ3Mgc291cmNlIHNob3VsZCBtYXRjaCB3aGVyZSBzdG9yZSBjYW1lIGZyb206IHByb3BzIHZzLiBjb250ZXh0LiBBIGNvbXBvbmVudFxuICAgICAgICAvLyBjb25uZWN0ZWQgdG8gdGhlIHN0b3JlIHZpYSBwcm9wcyBzaG91bGRuJ3QgdXNlIHN1YnNjcmlwdGlvbiBmcm9tIGNvbnRleHQsIG9yIHZpY2UgdmVyc2EuXG5cbiAgICAgICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gY3JlYXRlU3Vic2NyaXB0aW9uKHN0b3JlLCBkaWRTdG9yZUNvbWVGcm9tUHJvcHMgPyB1bmRlZmluZWQgOiBjb250ZXh0VmFsdWUuc3Vic2NyaXB0aW9uKTsgLy8gYG5vdGlmeU5lc3RlZFN1YnNgIGlzIGR1cGxpY2F0ZWQgdG8gaGFuZGxlIHRoZSBjYXNlIHdoZXJlIHRoZSBjb21wb25lbnQgaXMgdW5tb3VudGVkIGluXG4gICAgICAgIC8vIHRoZSBtaWRkbGUgb2YgdGhlIG5vdGlmaWNhdGlvbiBsb29wLCB3aGVyZSBgc3Vic2NyaXB0aW9uYCB3aWxsIHRoZW4gYmUgbnVsbC4gVGhpcyBjYW5cbiAgICAgICAgLy8gcHJvYmFibHkgYmUgYXZvaWRlZCBpZiBTdWJzY3JpcHRpb24ncyBsaXN0ZW5lcnMgbG9naWMgaXMgY2hhbmdlZCB0byBub3QgY2FsbCBsaXN0ZW5lcnNcbiAgICAgICAgLy8gdGhhdCBoYXZlIGJlZW4gdW5zdWJzY3JpYmVkIGluIHRoZSAgbWlkZGxlIG9mIHRoZSBub3RpZmljYXRpb24gbG9vcC5cblxuICAgICAgICBjb25zdCBub3RpZnlOZXN0ZWRTdWJzID0gc3Vic2NyaXB0aW9uLm5vdGlmeU5lc3RlZFN1YnMuYmluZChzdWJzY3JpcHRpb24pO1xuICAgICAgICByZXR1cm4gW3N1YnNjcmlwdGlvbiwgbm90aWZ5TmVzdGVkU3Vic107XG4gICAgICB9LCBbc3RvcmUsIGRpZFN0b3JlQ29tZUZyb21Qcm9wcywgY29udGV4dFZhbHVlXSk7IC8vIERldGVybWluZSB3aGF0IHtzdG9yZSwgc3Vic2NyaXB0aW9ufSB2YWx1ZSBzaG91bGQgYmUgcHV0IGludG8gbmVzdGVkIGNvbnRleHQsIGlmIG5lY2Vzc2FyeSxcbiAgICAgIC8vIGFuZCBtZW1vaXplIHRoYXQgdmFsdWUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgY29udGV4dCB1cGRhdGVzLlxuXG4gICAgICBjb25zdCBvdmVycmlkZGVuQ29udGV4dFZhbHVlID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGlmIChkaWRTdG9yZUNvbWVGcm9tUHJvcHMpIHtcbiAgICAgICAgICAvLyBUaGlzIGNvbXBvbmVudCBpcyBkaXJlY3RseSBzdWJzY3JpYmVkIHRvIGEgc3RvcmUgZnJvbSBwcm9wcy5cbiAgICAgICAgICAvLyBXZSBkb24ndCB3YW50IGRlc2NlbmRhbnRzIHJlYWRpbmcgZnJvbSB0aGlzIHN0b3JlIC0gcGFzcyBkb3duIHdoYXRldmVyXG4gICAgICAgICAgLy8gdGhlIGV4aXN0aW5nIGNvbnRleHQgdmFsdWUgaXMgZnJvbSB0aGUgbmVhcmVzdCBjb25uZWN0ZWQgYW5jZXN0b3IuXG4gICAgICAgICAgcmV0dXJuIGNvbnRleHRWYWx1ZTtcbiAgICAgICAgfSAvLyBPdGhlcndpc2UsIHB1dCB0aGlzIGNvbXBvbmVudCdzIHN1YnNjcmlwdGlvbiBpbnN0YW5jZSBpbnRvIGNvbnRleHQsIHNvIHRoYXRcbiAgICAgICAgLy8gY29ubmVjdGVkIGRlc2NlbmRhbnRzIHdvbid0IHVwZGF0ZSB1bnRpbCBhZnRlciB0aGlzIGNvbXBvbmVudCBpcyBkb25lXG5cblxuICAgICAgICByZXR1cm4gX2V4dGVuZHMoe30sIGNvbnRleHRWYWx1ZSwge1xuICAgICAgICAgIHN1YnNjcmlwdGlvblxuICAgICAgICB9KTtcbiAgICAgIH0sIFtkaWRTdG9yZUNvbWVGcm9tUHJvcHMsIGNvbnRleHRWYWx1ZSwgc3Vic2NyaXB0aW9uXSk7IC8vIFNldCB1cCByZWZzIHRvIGNvb3JkaW5hdGUgdmFsdWVzIGJldHdlZW4gdGhlIHN1YnNjcmlwdGlvbiBlZmZlY3QgYW5kIHRoZSByZW5kZXIgbG9naWNcblxuICAgICAgY29uc3QgbGFzdENoaWxkUHJvcHMgPSB1c2VSZWYoKTtcbiAgICAgIGNvbnN0IGxhc3RXcmFwcGVyUHJvcHMgPSB1c2VSZWYod3JhcHBlclByb3BzKTtcbiAgICAgIGNvbnN0IGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUgPSB1c2VSZWYoKTtcbiAgICAgIGNvbnN0IHJlbmRlcklzU2NoZWR1bGVkID0gdXNlUmVmKGZhbHNlKTtcbiAgICAgIGNvbnN0IGlzUHJvY2Vzc2luZ0Rpc3BhdGNoID0gdXNlUmVmKGZhbHNlKTtcbiAgICAgIGNvbnN0IGlzTW91bnRlZCA9IHVzZVJlZihmYWxzZSk7XG4gICAgICBjb25zdCBsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yID0gdXNlUmVmKCk7XG4gICAgICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgICAgaXNNb3VudGVkLmN1cnJlbnQgPSB0cnVlO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgIGlzTW91bnRlZC5jdXJyZW50ID0gZmFsc2U7XG4gICAgICAgIH07XG4gICAgICB9LCBbXSk7XG4gICAgICBjb25zdCBhY3R1YWxDaGlsZFByb3BzU2VsZWN0b3IgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgY29uc3Qgc2VsZWN0b3IgPSAoKSA9PiB7XG4gICAgICAgICAgLy8gVHJpY2t5IGxvZ2ljIGhlcmU6XG4gICAgICAgICAgLy8gLSBUaGlzIHJlbmRlciBtYXkgaGF2ZSBiZWVuIHRyaWdnZXJlZCBieSBhIFJlZHV4IHN0b3JlIHVwZGF0ZSB0aGF0IHByb2R1Y2VkIG5ldyBjaGlsZCBwcm9wc1xuICAgICAgICAgIC8vIC0gSG93ZXZlciwgd2UgbWF5IGhhdmUgZ290dGVuIG5ldyB3cmFwcGVyIHByb3BzIGFmdGVyIHRoYXRcbiAgICAgICAgICAvLyBJZiB3ZSBoYXZlIG5ldyBjaGlsZCBwcm9wcywgYW5kIHRoZSBzYW1lIHdyYXBwZXIgcHJvcHMsIHdlIGtub3cgd2Ugc2hvdWxkIHVzZSB0aGUgbmV3IGNoaWxkIHByb3BzIGFzLWlzLlxuICAgICAgICAgIC8vIEJ1dCwgaWYgd2UgaGF2ZSBuZXcgd3JhcHBlciBwcm9wcywgdGhvc2UgbWlnaHQgY2hhbmdlIHRoZSBjaGlsZCBwcm9wcywgc28gd2UgaGF2ZSB0byByZWNhbGN1bGF0ZSB0aGluZ3MuXG4gICAgICAgICAgLy8gU28sIHdlJ2xsIHVzZSB0aGUgY2hpbGQgcHJvcHMgZnJvbSBzdG9yZSB1cGRhdGUgb25seSBpZiB0aGUgd3JhcHBlciBwcm9wcyBhcmUgdGhlIHNhbWUgYXMgbGFzdCB0aW1lLlxuICAgICAgICAgIGlmIChjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLmN1cnJlbnQgJiYgd3JhcHBlclByb3BzID09PSBsYXN0V3JhcHBlclByb3BzLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIHJldHVybiBjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLmN1cnJlbnQ7XG4gICAgICAgICAgfSAvLyBUT0RPIFdlJ3JlIHJlYWRpbmcgdGhlIHN0b3JlIGRpcmVjdGx5IGluIHJlbmRlcigpIGhlcmUuIEJhZCBpZGVhP1xuICAgICAgICAgIC8vIFRoaXMgd2lsbCBsaWtlbHkgY2F1c2UgQmFkIFRoaW5ncyAoVE0pIHRvIGhhcHBlbiBpbiBDb25jdXJyZW50IE1vZGUuXG4gICAgICAgICAgLy8gTm90ZSB0aGF0IHdlIGRvIHRoaXMgYmVjYXVzZSBvbiByZW5kZXJzIF9ub3RfIGNhdXNlZCBieSBzdG9yZSB1cGRhdGVzLCB3ZSBuZWVkIHRoZSBsYXRlc3Qgc3RvcmUgc3RhdGVcbiAgICAgICAgICAvLyB0byBkZXRlcm1pbmUgd2hhdCB0aGUgY2hpbGQgcHJvcHMgc2hvdWxkIGJlLlxuXG5cbiAgICAgICAgICByZXR1cm4gY2hpbGRQcm9wc1NlbGVjdG9yKHN0b3JlLmdldFN0YXRlKCksIHdyYXBwZXJQcm9wcyk7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIHNlbGVjdG9yO1xuICAgICAgfSwgW3N0b3JlLCB3cmFwcGVyUHJvcHNdKTsgLy8gV2UgbmVlZCB0aGlzIHRvIGV4ZWN1dGUgc3luY2hyb25vdXNseSBldmVyeSB0aW1lIHdlIHJlLXJlbmRlci4gSG93ZXZlciwgUmVhY3Qgd2FybnNcbiAgICAgIC8vIGFib3V0IHVzZUxheW91dEVmZmVjdCBpbiBTU1IsIHNvIHdlIHRyeSB0byBkZXRlY3QgZW52aXJvbm1lbnQgYW5kIGZhbGwgYmFjayB0b1xuICAgICAgLy8ganVzdCB1c2VFZmZlY3QgaW5zdGVhZCB0byBhdm9pZCB0aGUgd2FybmluZywgc2luY2UgbmVpdGhlciB3aWxsIHJ1biBhbnl3YXkuXG5cbiAgICAgIGNvbnN0IHN1YnNjcmliZUZvclJlYWN0ID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGNvbnN0IHN1YnNjcmliZSA9IHJlYWN0TGlzdGVuZXIgPT4ge1xuICAgICAgICAgIGlmICghc3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gKCkgPT4ge307XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHN1YnNjcmliZVVwZGF0ZXMoc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzLCBzdG9yZSwgc3Vic2NyaXB0aW9uLCAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgY2hpbGRQcm9wc1NlbGVjdG9yLCBsYXN0V3JhcHBlclByb3BzLCBsYXN0Q2hpbGRQcm9wcywgcmVuZGVySXNTY2hlZHVsZWQsIGlzTW91bnRlZCwgY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZSwgbm90aWZ5TmVzdGVkU3VicywgcmVhY3RMaXN0ZW5lcik7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIHN1YnNjcmliZTtcbiAgICAgIH0sIFtzdWJzY3JpcHRpb25dKTtcbiAgICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3RXaXRoQXJncyhjYXB0dXJlV3JhcHBlclByb3BzLCBbbGFzdFdyYXBwZXJQcm9wcywgbGFzdENoaWxkUHJvcHMsIHJlbmRlcklzU2NoZWR1bGVkLCB3cmFwcGVyUHJvcHMsIGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUsIG5vdGlmeU5lc3RlZFN1YnNdKTtcbiAgICAgIGxldCBhY3R1YWxDaGlsZFByb3BzO1xuXG4gICAgICB0cnkge1xuICAgICAgICBhY3R1YWxDaGlsZFByb3BzID0gdXNlU3luY0V4dGVybmFsU3RvcmUoIC8vIFRPRE8gV2UncmUgcGFzc2luZyB0aHJvdWdoIGEgYmlnIHdyYXBwZXIgdGhhdCBkb2VzIGEgYnVuY2ggb2YgZXh0cmEgc2lkZSBlZmZlY3RzIGJlc2lkZXMgc3Vic2NyaWJpbmdcbiAgICAgICAgc3Vic2NyaWJlRm9yUmVhY3QsIC8vIFRPRE8gVGhpcyBpcyBpbmNyZWRpYmx5IGhhY2t5LiBXZSd2ZSBhbHJlYWR5IHByb2Nlc3NlZCB0aGUgc3RvcmUgdXBkYXRlIGFuZCBjYWxjdWxhdGVkIG5ldyBjaGlsZCBwcm9wcyxcbiAgICAgICAgLy8gVE9ETyBhbmQgd2UncmUganVzdCBwYXNzaW5nIHRoYXQgdGhyb3VnaCBzbyBpdCB0cmlnZ2VycyBhIHJlLXJlbmRlciBmb3IgdXMgcmF0aGVyIHRoYW4gcmVseWluZyBvbiBgdVNFU2AuXG4gICAgICAgIGFjdHVhbENoaWxkUHJvcHNTZWxlY3RvciwgZ2V0U2VydmVyU3RhdGUgPyAoKSA9PiBjaGlsZFByb3BzU2VsZWN0b3IoZ2V0U2VydmVyU3RhdGUoKSwgd3JhcHBlclByb3BzKSA6IGFjdHVhbENoaWxkUHJvcHNTZWxlY3Rvcik7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgaWYgKGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IuY3VycmVudCkge1xuICAgICAgICAgIDtcbiAgICAgICAgICBlcnIubWVzc2FnZSArPSBgXFxuVGhlIGVycm9yIG1heSBiZSBjb3JyZWxhdGVkIHdpdGggdGhpcyBwcmV2aW91cyBlcnJvcjpcXG4ke2xhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IuY3VycmVudC5zdGFja31cXG5cXG5gO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgfVxuXG4gICAgICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgICAgbGF0ZXN0U3Vic2NyaXB0aW9uQ2FsbGJhY2tFcnJvci5jdXJyZW50ID0gdW5kZWZpbmVkO1xuICAgICAgICBjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLmN1cnJlbnQgPSB1bmRlZmluZWQ7XG4gICAgICAgIGxhc3RDaGlsZFByb3BzLmN1cnJlbnQgPSBhY3R1YWxDaGlsZFByb3BzO1xuICAgICAgfSk7IC8vIE5vdyB0aGF0IGFsbCB0aGF0J3MgZG9uZSwgd2UgY2FuIGZpbmFsbHkgdHJ5IHRvIGFjdHVhbGx5IHJlbmRlciB0aGUgY2hpbGQgY29tcG9uZW50LlxuICAgICAgLy8gV2UgbWVtb2l6ZSB0aGUgZWxlbWVudHMgZm9yIHRoZSByZW5kZXJlZCBjaGlsZCBjb21wb25lbnQgYXMgYW4gb3B0aW1pemF0aW9uLlxuXG4gICAgICBjb25zdCByZW5kZXJlZFdyYXBwZWRDb21wb25lbnQgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAvKiNfX1BVUkVfXyovXG4gICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoV3JhcHBlZENvbXBvbmVudCwgX2V4dGVuZHMoe30sIGFjdHVhbENoaWxkUHJvcHMsIHtcbiAgICAgICAgICAgIHJlZjogcmVhY3RSZWR1eEZvcndhcmRlZFJlZlxuICAgICAgICAgIH0pKVxuICAgICAgICApO1xuICAgICAgfSwgW3JlYWN0UmVkdXhGb3J3YXJkZWRSZWYsIFdyYXBwZWRDb21wb25lbnQsIGFjdHVhbENoaWxkUHJvcHNdKTsgLy8gSWYgUmVhY3Qgc2VlcyB0aGUgZXhhY3Qgc2FtZSBlbGVtZW50IHJlZmVyZW5jZSBhcyBsYXN0IHRpbWUsIGl0IGJhaWxzIG91dCBvZiByZS1yZW5kZXJpbmdcbiAgICAgIC8vIHRoYXQgY2hpbGQsIHNhbWUgYXMgaWYgaXQgd2FzIHdyYXBwZWQgaW4gUmVhY3QubWVtbygpIG9yIHJldHVybmVkIGZhbHNlIGZyb20gc2hvdWxkQ29tcG9uZW50VXBkYXRlLlxuXG4gICAgICBjb25zdCByZW5kZXJlZENoaWxkID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGlmIChzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMpIHtcbiAgICAgICAgICAvLyBJZiB0aGlzIGNvbXBvbmVudCBpcyBzdWJzY3JpYmVkIHRvIHN0b3JlIHVwZGF0ZXMsIHdlIG5lZWQgdG8gcGFzcyBpdHMgb3duXG4gICAgICAgICAgLy8gc3Vic2NyaXB0aW9uIGluc3RhbmNlIGRvd24gdG8gb3VyIGRlc2NlbmRhbnRzLiBUaGF0IG1lYW5zIHJlbmRlcmluZyB0aGUgc2FtZVxuICAgICAgICAgIC8vIENvbnRleHQgaW5zdGFuY2UsIGFuZCBwdXR0aW5nIGEgZGlmZmVyZW50IHZhbHVlIGludG8gdGhlIGNvbnRleHQuXG4gICAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbnRleHRUb1VzZS5Qcm92aWRlciwge1xuICAgICAgICAgICAgdmFsdWU6IG92ZXJyaWRkZW5Db250ZXh0VmFsdWVcbiAgICAgICAgICB9LCByZW5kZXJlZFdyYXBwZWRDb21wb25lbnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlbmRlcmVkV3JhcHBlZENvbXBvbmVudDtcbiAgICAgIH0sIFtDb250ZXh0VG9Vc2UsIHJlbmRlcmVkV3JhcHBlZENvbXBvbmVudCwgb3ZlcnJpZGRlbkNvbnRleHRWYWx1ZV0pO1xuICAgICAgcmV0dXJuIHJlbmRlcmVkQ2hpbGQ7XG4gICAgfVxuXG4gICAgY29uc3QgX0Nvbm5lY3QgPSBSZWFjdC5tZW1vKENvbm5lY3RGdW5jdGlvbik7XG5cbiAgICAvLyBBZGQgYSBoYWNreSBjYXN0IHRvIGdldCB0aGUgcmlnaHQgb3V0cHV0IHR5cGVcbiAgICBjb25zdCBDb25uZWN0ID0gX0Nvbm5lY3Q7XG4gICAgQ29ubmVjdC5XcmFwcGVkQ29tcG9uZW50ID0gV3JhcHBlZENvbXBvbmVudDtcbiAgICBDb25uZWN0LmRpc3BsYXlOYW1lID0gQ29ubmVjdEZ1bmN0aW9uLmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG5cbiAgICBpZiAoZm9yd2FyZFJlZikge1xuICAgICAgY29uc3QgX2ZvcndhcmRlZCA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gZm9yd2FyZENvbm5lY3RSZWYocHJvcHMsIHJlZikge1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb25uZWN0LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgICAgICByZWFjdFJlZHV4Rm9yd2FyZGVkUmVmOiByZWZcbiAgICAgICAgfSkpO1xuICAgICAgfSk7XG5cbiAgICAgIGNvbnN0IGZvcndhcmRlZCA9IF9mb3J3YXJkZWQ7XG4gICAgICBmb3J3YXJkZWQuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgICAgIGZvcndhcmRlZC5XcmFwcGVkQ29tcG9uZW50ID0gV3JhcHBlZENvbXBvbmVudDtcbiAgICAgIHJldHVybiBob2lzdFN0YXRpY3MoZm9yd2FyZGVkLCBXcmFwcGVkQ29tcG9uZW50KTtcbiAgICB9XG5cbiAgICByZXR1cm4gaG9pc3RTdGF0aWNzKENvbm5lY3QsIFdyYXBwZWRDb21wb25lbnQpO1xuICB9O1xuXG4gIHJldHVybiB3cmFwV2l0aENvbm5lY3Q7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3Q7IiwiaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBSZWFjdFJlZHV4Q29udGV4dCB9IGZyb20gJy4vQ29udGV4dCc7XG5pbXBvcnQgeyBjcmVhdGVTdWJzY3JpcHRpb24gfSBmcm9tICcuLi91dGlscy9TdWJzY3JpcHRpb24nO1xuaW1wb3J0IHsgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCB9IGZyb20gJy4uL3V0aWxzL3VzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QnO1xuXG5mdW5jdGlvbiBQcm92aWRlcih7XG4gIHN0b3JlLFxuICBjb250ZXh0LFxuICBjaGlsZHJlbixcbiAgc2VydmVyU3RhdGVcbn0pIHtcbiAgY29uc3QgY29udGV4dFZhbHVlID0gdXNlTWVtbygoKSA9PiB7XG4gICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gY3JlYXRlU3Vic2NyaXB0aW9uKHN0b3JlKTtcbiAgICByZXR1cm4ge1xuICAgICAgc3RvcmUsXG4gICAgICBzdWJzY3JpcHRpb24sXG4gICAgICBnZXRTZXJ2ZXJTdGF0ZTogc2VydmVyU3RhdGUgPyAoKSA9PiBzZXJ2ZXJTdGF0ZSA6IHVuZGVmaW5lZFxuICAgIH07XG4gIH0sIFtzdG9yZSwgc2VydmVyU3RhdGVdKTtcbiAgY29uc3QgcHJldmlvdXNTdGF0ZSA9IHVzZU1lbW8oKCkgPT4gc3RvcmUuZ2V0U3RhdGUoKSwgW3N0b3JlXSk7XG4gIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIHN1YnNjcmlwdGlvblxuICAgIH0gPSBjb250ZXh0VmFsdWU7XG4gICAgc3Vic2NyaXB0aW9uLm9uU3RhdGVDaGFuZ2UgPSBzdWJzY3JpcHRpb24ubm90aWZ5TmVzdGVkU3VicztcbiAgICBzdWJzY3JpcHRpb24udHJ5U3Vic2NyaWJlKCk7XG5cbiAgICBpZiAocHJldmlvdXNTdGF0ZSAhPT0gc3RvcmUuZ2V0U3RhdGUoKSkge1xuICAgICAgc3Vic2NyaXB0aW9uLm5vdGlmeU5lc3RlZFN1YnMoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgc3Vic2NyaXB0aW9uLnRyeVVuc3Vic2NyaWJlKCk7XG4gICAgICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSA9IHVuZGVmaW5lZDtcbiAgICB9O1xuICB9LCBbY29udGV4dFZhbHVlLCBwcmV2aW91c1N0YXRlXSk7XG4gIGNvbnN0IENvbnRleHQgPSBjb250ZXh0IHx8IFJlYWN0UmVkdXhDb250ZXh0OyAvLyBAdHMtaWdub3JlICdBbnlBY3Rpb24nIGlzIGFzc2lnbmFibGUgdG8gdGhlIGNvbnN0cmFpbnQgb2YgdHlwZSAnQScsIGJ1dCAnQScgY291bGQgYmUgaW5zdGFudGlhdGVkIHdpdGggYSBkaWZmZXJlbnQgc3VidHlwZVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IGNvbnRleHRWYWx1ZVxuICB9LCBjaGlsZHJlbik7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFByb3ZpZGVyOyIsImltcG9ydCB7IHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBSZWFjdFJlZHV4Q29udGV4dCB9IGZyb20gJy4uL2NvbXBvbmVudHMvQ29udGV4dCc7XG5pbXBvcnQgeyB1c2VSZWR1eENvbnRleHQgYXMgdXNlRGVmYXVsdFJlZHV4Q29udGV4dCB9IGZyb20gJy4vdXNlUmVkdXhDb250ZXh0Jztcbi8qKlxyXG4gKiBIb29rIGZhY3RvcnksIHdoaWNoIGNyZWF0ZXMgYSBgdXNlU3RvcmVgIGhvb2sgYm91bmQgdG8gYSBnaXZlbiBjb250ZXh0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1JlYWN0LkNvbnRleHR9IFtjb250ZXh0PVJlYWN0UmVkdXhDb250ZXh0XSBDb250ZXh0IHBhc3NlZCB0byB5b3VyIGA8UHJvdmlkZXI+YC5cclxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGB1c2VTdG9yZWAgaG9vayBib3VuZCB0byB0aGUgc3BlY2lmaWVkIGNvbnRleHQuXHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3RvcmVIb29rKGNvbnRleHQgPSBSZWFjdFJlZHV4Q29udGV4dCkge1xuICBjb25zdCB1c2VSZWR1eENvbnRleHQgPSAvLyBAdHMtaWdub3JlXG4gIGNvbnRleHQgPT09IFJlYWN0UmVkdXhDb250ZXh0ID8gdXNlRGVmYXVsdFJlZHV4Q29udGV4dCA6ICgpID0+IHVzZUNvbnRleHQoY29udGV4dCk7XG4gIHJldHVybiBmdW5jdGlvbiB1c2VTdG9yZSgpIHtcbiAgICBjb25zdCB7XG4gICAgICBzdG9yZVxuICAgIH0gPSB1c2VSZWR1eENvbnRleHQoKTsgLy8gQHRzLWlnbm9yZVxuXG4gICAgcmV0dXJuIHN0b3JlO1xuICB9O1xufVxuLyoqXHJcbiAqIEEgaG9vayB0byBhY2Nlc3MgdGhlIHJlZHV4IHN0b3JlLlxyXG4gKlxyXG4gKiBAcmV0dXJucyB7YW55fSB0aGUgcmVkdXggc3RvcmVcclxuICpcclxuICogQGV4YW1wbGVcclxuICpcclxuICogaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG4gKiBpbXBvcnQgeyB1c2VTdG9yZSB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG4gKlxyXG4gKiBleHBvcnQgY29uc3QgRXhhbXBsZUNvbXBvbmVudCA9ICgpID0+IHtcclxuICogICBjb25zdCBzdG9yZSA9IHVzZVN0b3JlKClcclxuICogICByZXR1cm4gPGRpdj57c3RvcmUuZ2V0U3RhdGUoKX08L2Rpdj5cclxuICogfVxyXG4gKi9cblxuZXhwb3J0IGNvbnN0IHVzZVN0b3JlID0gLyojX19QVVJFX18qL2NyZWF0ZVN0b3JlSG9vaygpOyIsImltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZXh0JztcbmltcG9ydCB7IHVzZVN0b3JlIGFzIHVzZURlZmF1bHRTdG9yZSwgY3JlYXRlU3RvcmVIb29rIH0gZnJvbSAnLi91c2VTdG9yZSc7XG4vKipcclxuICogSG9vayBmYWN0b3J5LCB3aGljaCBjcmVhdGVzIGEgYHVzZURpc3BhdGNoYCBob29rIGJvdW5kIHRvIGEgZ2l2ZW4gY29udGV4dC5cclxuICpcclxuICogQHBhcmFtIHtSZWFjdC5Db250ZXh0fSBbY29udGV4dD1SZWFjdFJlZHV4Q29udGV4dF0gQ29udGV4dCBwYXNzZWQgdG8geW91ciBgPFByb3ZpZGVyPmAuXHJcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBgdXNlRGlzcGF0Y2hgIGhvb2sgYm91bmQgdG8gdGhlIHNwZWNpZmllZCBjb250ZXh0LlxyXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURpc3BhdGNoSG9vayhjb250ZXh0ID0gUmVhY3RSZWR1eENvbnRleHQpIHtcbiAgY29uc3QgdXNlU3RvcmUgPSAvLyBAdHMtaWdub3JlXG4gIGNvbnRleHQgPT09IFJlYWN0UmVkdXhDb250ZXh0ID8gdXNlRGVmYXVsdFN0b3JlIDogY3JlYXRlU3RvcmVIb29rKGNvbnRleHQpO1xuICByZXR1cm4gZnVuY3Rpb24gdXNlRGlzcGF0Y2goKSB7XG4gICAgY29uc3Qgc3RvcmUgPSB1c2VTdG9yZSgpOyAvLyBAdHMtaWdub3JlXG5cbiAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2g7XG4gIH07XG59XG4vKipcclxuICogQSBob29rIHRvIGFjY2VzcyB0aGUgcmVkdXggYGRpc3BhdGNoYCBmdW5jdGlvbi5cclxuICpcclxuICogQHJldHVybnMge2FueXxmdW5jdGlvbn0gcmVkdXggc3RvcmUncyBgZGlzcGF0Y2hgIGZ1bmN0aW9uXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIGltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0J1xyXG4gKiBpbXBvcnQgeyB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG4gKlxyXG4gKiBleHBvcnQgY29uc3QgQ291bnRlckNvbXBvbmVudCA9ICh7IHZhbHVlIH0pID0+IHtcclxuICogICBjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKClcclxuICogICBjb25zdCBpbmNyZWFzZUNvdW50ZXIgPSB1c2VDYWxsYmFjaygoKSA9PiBkaXNwYXRjaCh7IHR5cGU6ICdpbmNyZWFzZS1jb3VudGVyJyB9KSwgW10pXHJcbiAqICAgcmV0dXJuIChcclxuICogICAgIDxkaXY+XHJcbiAqICAgICAgIDxzcGFuPnt2YWx1ZX08L3NwYW4+XHJcbiAqICAgICAgIDxidXR0b24gb25DbGljaz17aW5jcmVhc2VDb3VudGVyfT5JbmNyZWFzZSBjb3VudGVyPC9idXR0b24+XHJcbiAqICAgICA8L2Rpdj5cclxuICogICApXHJcbiAqIH1cclxuICovXG5cbmV4cG9ydCBjb25zdCB1c2VEaXNwYXRjaCA9IC8qI19fUFVSRV9fKi9jcmVhdGVEaXNwYXRjaEhvb2soKTsiLCIvLyBUaGUgcHJpbWFyeSBlbnRyeSBwb2ludCBhc3N1bWVzIHdlJ3JlIHdvcmtpbmcgd2l0aCBzdGFuZGFyZCBSZWFjdERPTS9STiwgYnV0XG4vLyBvbGRlciB2ZXJzaW9ucyB0aGF0IGRvIG5vdCBpbmNsdWRlIGB1c2VTeW5jRXh0ZXJuYWxTdG9yZWAgKFJlYWN0IDE2LjkgLSAxNy54KS5cbi8vIEJlY2F1c2Ugb2YgdGhhdCwgdGhlIHVzZVN5bmNFeHRlcm5hbFN0b3JlIGNvbXBhdCBzaGltIGlzIG5lZWRlZC5cbmltcG9ydCB7IHVzZVN5bmNFeHRlcm5hbFN0b3JlIH0gZnJvbSAndXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbSc7XG5pbXBvcnQgeyB1c2VTeW5jRXh0ZXJuYWxTdG9yZVdpdGhTZWxlY3RvciB9IGZyb20gJ3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL3NoaW0vd2l0aC1zZWxlY3Rvcic7XG5pbXBvcnQgeyB1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyBhcyBiYXRjaCB9IGZyb20gJy4vdXRpbHMvcmVhY3RCYXRjaGVkVXBkYXRlcyc7XG5pbXBvcnQgeyBzZXRCYXRjaCB9IGZyb20gJy4vdXRpbHMvYmF0Y2gnO1xuaW1wb3J0IHsgaW5pdGlhbGl6ZVVzZVNlbGVjdG9yIH0gZnJvbSAnLi9ob29rcy91c2VTZWxlY3Rvcic7XG5pbXBvcnQgeyBpbml0aWFsaXplQ29ubmVjdCB9IGZyb20gJy4vY29tcG9uZW50cy9jb25uZWN0JztcbmluaXRpYWxpemVVc2VTZWxlY3Rvcih1c2VTeW5jRXh0ZXJuYWxTdG9yZVdpdGhTZWxlY3Rvcik7XG5pbml0aWFsaXplQ29ubmVjdCh1c2VTeW5jRXh0ZXJuYWxTdG9yZSk7IC8vIEVuYWJsZSBiYXRjaGVkIHVwZGF0ZXMgaW4gb3VyIHN1YnNjcmlwdGlvbnMgZm9yIHVzZVxuLy8gd2l0aCBzdGFuZGFyZCBSZWFjdCByZW5kZXJlcnMgKFJlYWN0RE9NLCBSZWFjdCBOYXRpdmUpXG5cbnNldEJhdGNoKGJhdGNoKTtcbmV4cG9ydCB7IGJhdGNoIH07XG5leHBvcnQgKiBmcm9tICcuL2V4cG9ydHMnOyIsIi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYj1TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKSxjPVN5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIiksZD1TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIiksZT1TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIiksZj1TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIiksZz1TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIiksaD1TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSxrPVN5bWJvbC5mb3IoXCJyZWFjdC5zZXJ2ZXJfY29udGV4dFwiKSxsPVN5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKSxtPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKSxuPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpLHA9U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIikscT1TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKSx0PVN5bWJvbC5mb3IoXCJyZWFjdC5vZmZzY3JlZW5cIiksdTt1PVN5bWJvbC5mb3IoXCJyZWFjdC5tb2R1bGUucmVmZXJlbmNlXCIpO1xuZnVuY3Rpb24gdihhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgcj1hLiQkdHlwZW9mO3N3aXRjaChyKXtjYXNlIGI6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgZDpjYXNlIGY6Y2FzZSBlOmNhc2UgbTpjYXNlIG46cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIGg6Y2FzZSBsOmNhc2UgcTpjYXNlIHA6Y2FzZSBnOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHJ9fWNhc2UgYzpyZXR1cm4gcn19fWV4cG9ydHMuQ29udGV4dENvbnN1bWVyPWg7ZXhwb3J0cy5Db250ZXh0UHJvdmlkZXI9ZztleHBvcnRzLkVsZW1lbnQ9YjtleHBvcnRzLkZvcndhcmRSZWY9bDtleHBvcnRzLkZyYWdtZW50PWQ7ZXhwb3J0cy5MYXp5PXE7ZXhwb3J0cy5NZW1vPXA7ZXhwb3J0cy5Qb3J0YWw9YztleHBvcnRzLlByb2ZpbGVyPWY7ZXhwb3J0cy5TdHJpY3RNb2RlPWU7ZXhwb3J0cy5TdXNwZW5zZT1tO1xuZXhwb3J0cy5TdXNwZW5zZUxpc3Q9bjtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT1mdW5jdGlvbigpe3JldHVybiExfTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09aH07ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PWd9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1ifTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PWx9O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PWR9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09cX07ZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1wfTtcbmV4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1jfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1mfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PWV9O2V4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PW19O2V4cG9ydHMuaXNTdXNwZW5zZUxpc3Q9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1ufTtcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1kfHxhPT09Znx8YT09PWV8fGE9PT1tfHxhPT09bnx8YT09PXR8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09cXx8YS4kJHR5cGVvZj09PXB8fGEuJCR0eXBlb2Y9PT1nfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWx8fGEuJCR0eXBlb2Y9PT11fHx2b2lkIDAhPT1hLmdldE1vZHVsZUlkKT8hMDohMX07ZXhwb3J0cy50eXBlT2Y9djtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBsPVN5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpLG49U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKSxwPVN5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKSxxPVN5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKSxyPVN5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKSx0PVN5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKSx1PVN5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpLHY9U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpLHc9U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpLHg9U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIikseT1TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKSx6PVN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBBKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT16JiZhW3pdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9XG52YXIgQj17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sQz1PYmplY3QuYXNzaWduLEQ9e307ZnVuY3Rpb24gRShhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1lfHxCfUUucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307XG5FLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3IoXCJzZXRTdGF0ZSguLi4pOiB0YWtlcyBhbiBvYmplY3Qgb2Ygc3RhdGUgdmFyaWFibGVzIHRvIHVwZGF0ZSBvciBhIGZ1bmN0aW9uIHdoaWNoIHJldHVybnMgYW4gb2JqZWN0IG9mIHN0YXRlIHZhcmlhYmxlcy5cIik7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtFLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtmdW5jdGlvbiBGKCl7fUYucHJvdG90eXBlPUUucHJvdG90eXBlO2Z1bmN0aW9uIEcoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9ZXx8Qn12YXIgSD1HLnByb3RvdHlwZT1uZXcgRjtcbkguY29uc3RydWN0b3I9RztDKEgsRS5wcm90b3R5cGUpO0guaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEk9QXJyYXkuaXNBcnJheSxKPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksSz17Y3VycmVudDpudWxsfSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixlKXt2YXIgZCxjPXt9LGs9bnVsbCxoPW51bGw7aWYobnVsbCE9Yilmb3IoZCBpbiB2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoaz1cIlwiK2Iua2V5KSxiKUouY2FsbChiLGQpJiYhTC5oYXNPd25Qcm9wZXJ0eShkKSYmKGNbZF09YltkXSk7dmFyIGc9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1nKWMuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Zyl7Zm9yKHZhciBmPUFycmF5KGcpLG09MDttPGc7bSsrKWZbbV09YXJndW1lbnRzW20rMl07Yy5jaGlsZHJlbj1mfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihkIGluIGc9YS5kZWZhdWx0UHJvcHMsZyl2b2lkIDA9PT1jW2RdJiYoY1tkXT1nW2RdKTtyZXR1cm57JCR0eXBlb2Y6bCx0eXBlOmEsa2V5OmsscmVmOmgscHJvcHM6Yyxfb3duZXI6Sy5jdXJyZW50fX1cbmZ1bmN0aW9uIE4oYSxiKXtyZXR1cm57JCR0eXBlb2Y6bCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWx9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIithLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBQPS9cXC8rL2c7ZnVuY3Rpb24gUShhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShcIlwiK2Eua2V5KTpiLnRvU3RyaW5nKDM2KX1cbmZ1bmN0aW9uIFIoYSxiLGUsZCxjKXt2YXIgaz10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09a3x8XCJib29sZWFuXCI9PT1rKWE9bnVsbDt2YXIgaD0hMTtpZihudWxsPT09YSloPSEwO2Vsc2Ugc3dpdGNoKGspe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6aD0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgbDpjYXNlIG46aD0hMH19aWYoaClyZXR1cm4gaD1hLGM9YyhoKSxhPVwiXCI9PT1kP1wiLlwiK1EoaCwwKTpkLEkoYyk/KGU9XCJcIixudWxsIT1hJiYoZT1hLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIiksUihjLGIsZSxcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBhfSkpOm51bGwhPWMmJihPKGMpJiYoYz1OKGMsZSsoIWMua2V5fHxoJiZoLmtleT09PWMua2V5P1wiXCI6KFwiXCIrYy5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrYSkpLGIucHVzaChjKSksMTtoPTA7ZD1cIlwiPT09ZD9cIi5cIjpkK1wiOlwiO2lmKEkoYSkpZm9yKHZhciBnPTA7ZzxhLmxlbmd0aDtnKyspe2s9XG5hW2ddO3ZhciBmPWQrUShrLGcpO2grPVIoayxiLGUsZixjKX1lbHNlIGlmKGY9QShhKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksZz0wOyEoaz1hLm5leHQoKSkuZG9uZTspaz1rLnZhbHVlLGY9ZCtRKGssZysrKSxoKz1SKGssYixlLGYsYyk7ZWxzZSBpZihcIm9iamVjdFwiPT09ayl0aHJvdyBiPVN0cmluZyhhKSxFcnJvcihcIk9iamVjdHMgYXJlIG5vdCB2YWxpZCBhcyBhIFJlYWN0IGNoaWxkIChmb3VuZDogXCIrKFwiW29iamVjdCBPYmplY3RdXCI9PT1iP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmIpK1wiKS4gSWYgeW91IG1lYW50IHRvIHJlbmRlciBhIGNvbGxlY3Rpb24gb2YgY2hpbGRyZW4sIHVzZSBhbiBhcnJheSBpbnN0ZWFkLlwiKTtyZXR1cm4gaH1cbmZ1bmN0aW9uIFMoYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGQ9W10sYz0wO1IoYSxkLFwiXCIsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYi5jYWxsKGUsYSxjKyspfSk7cmV0dXJuIGR9ZnVuY3Rpb24gVChhKXtpZigtMT09PWEuX3N0YXR1cyl7dmFyIGI9YS5fcmVzdWx0O2I9YigpO2IudGhlbihmdW5jdGlvbihiKXtpZigwPT09YS5fc3RhdHVzfHwtMT09PWEuX3N0YXR1cylhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yn0sZnVuY3Rpb24oYil7aWYoMD09PWEuX3N0YXR1c3x8LTE9PT1hLl9zdGF0dXMpYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWJ9KTstMT09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0wLGEuX3Jlc3VsdD1iKX1pZigxPT09YS5fc3RhdHVzKXJldHVybiBhLl9yZXN1bHQuZGVmYXVsdDt0aHJvdyBhLl9yZXN1bHQ7fVxudmFyIFU9e2N1cnJlbnQ6bnVsbH0sVj17dHJhbnNpdGlvbjpudWxsfSxXPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlUsUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6VixSZWFjdEN1cnJlbnRPd25lcjpLfTtleHBvcnRzLkNoaWxkcmVuPXttYXA6Uyxmb3JFYWNoOmZ1bmN0aW9uKGEsYixlKXtTKGEsZnVuY3Rpb24oKXtiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sZSl9LGNvdW50OmZ1bmN0aW9uKGEpe3ZhciBiPTA7UyhhLGZ1bmN0aW9uKCl7YisrfSk7cmV0dXJuIGJ9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7cmV0dXJuIFMoYSxmdW5jdGlvbihhKXtyZXR1cm4gYX0pfHxbXX0sb25seTpmdW5jdGlvbihhKXtpZighTyhhKSl0aHJvdyBFcnJvcihcIlJlYWN0LkNoaWxkcmVuLm9ubHkgZXhwZWN0ZWQgdG8gcmVjZWl2ZSBhIHNpbmdsZSBSZWFjdCBlbGVtZW50IGNoaWxkLlwiKTtyZXR1cm4gYX19O2V4cG9ydHMuQ29tcG9uZW50PUU7ZXhwb3J0cy5GcmFnbWVudD1wO1xuZXhwb3J0cy5Qcm9maWxlcj1yO2V4cG9ydHMuUHVyZUNvbXBvbmVudD1HO2V4cG9ydHMuU3RyaWN0TW9kZT1xO2V4cG9ydHMuU3VzcGVuc2U9dztleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPVc7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsZSl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoXCJSZWFjdC5jbG9uZUVsZW1lbnQoLi4uKTogVGhlIGFyZ3VtZW50IG11c3QgYmUgYSBSZWFjdCBlbGVtZW50LCBidXQgeW91IHBhc3NlZCBcIithK1wiLlwiKTt2YXIgZD1DKHt9LGEucHJvcHMpLGM9YS5rZXksaz1hLnJlZixoPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZixoPUsuY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihjPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZz1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihmIGluIGIpSi5jYWxsKGIsZikmJiFMLmhhc093blByb3BlcnR5KGYpJiYoZFtmXT12b2lkIDA9PT1iW2ZdJiZ2b2lkIDAhPT1nP2dbZl06YltmXSl9dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Zil7Zz1BcnJheShmKTtcbmZvcih2YXIgbT0wO208ZjttKyspZ1ttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWd9cmV0dXJueyQkdHlwZW9mOmwsdHlwZTphLnR5cGUsa2V5OmMscmVmOmsscHJvcHM6ZCxfb3duZXI6aH19O2V4cG9ydHMuY3JlYXRlQ29udGV4dD1mdW5jdGlvbihhKXthPXskJHR5cGVvZjp1LF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbCxfZGVmYXVsdFZhbHVlOm51bGwsX2dsb2JhbE5hbWU6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dCxfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9TTtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9TS5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O1xuZXhwb3J0cy5mb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp2LHJlbmRlcjphfX07ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudD1PO2V4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eSxfcGF5bG9hZDp7X3N0YXR1czotMSxfcmVzdWx0OmF9LF9pbml0OlR9fTtleHBvcnRzLm1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6eCx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19O2V4cG9ydHMuc3RhcnRUcmFuc2l0aW9uPWZ1bmN0aW9uKGEpe3ZhciBiPVYudHJhbnNpdGlvbjtWLnRyYW5zaXRpb249e307dHJ5e2EoKX1maW5hbGx5e1YudHJhbnNpdGlvbj1ifX07ZXhwb3J0cy51bnN0YWJsZV9hY3Q9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcihcImFjdCguLi4pIGlzIG5vdCBzdXBwb3J0ZWQgaW4gcHJvZHVjdGlvbiBidWlsZHMgb2YgUmVhY3QuXCIpO307XG5leHBvcnRzLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFUuY3VycmVudC51c2VDYWxsYmFjayhhLGIpfTtleHBvcnRzLnVzZUNvbnRleHQ9ZnVuY3Rpb24oYSl7cmV0dXJuIFUuY3VycmVudC51c2VDb250ZXh0KGEpfTtleHBvcnRzLnVzZURlYnVnVmFsdWU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudXNlRGVmZXJyZWRWYWx1ZT1mdW5jdGlvbihhKXtyZXR1cm4gVS5jdXJyZW50LnVzZURlZmVycmVkVmFsdWUoYSl9O2V4cG9ydHMudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFUuY3VycmVudC51c2VFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VJZD1mdW5jdGlvbigpe3JldHVybiBVLmN1cnJlbnQudXNlSWQoKX07ZXhwb3J0cy51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixlKXtyZXR1cm4gVS5jdXJyZW50LnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGUpfTtcbmV4cG9ydHMudXNlSW5zZXJ0aW9uRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFUuY3VycmVudC51c2VJbnNlcnRpb25FZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixlKXtyZXR1cm4gVS5jdXJyZW50LnVzZVJlZHVjZXIoYSxiLGUpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gVS5jdXJyZW50LnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gVS5jdXJyZW50LnVzZVN0YXRlKGEpfTtleHBvcnRzLnVzZVN5bmNFeHRlcm5hbFN0b3JlPWZ1bmN0aW9uKGEsYixlKXtyZXR1cm4gVS5jdXJyZW50LnVzZVN5bmNFeHRlcm5hbFN0b3JlKGEsYixlKX07XG5leHBvcnRzLnVzZVRyYW5zaXRpb249ZnVuY3Rpb24oKXtyZXR1cm4gVS5jdXJyZW50LnVzZVRyYW5zaXRpb24oKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTguMi4wXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7ZnVuY3Rpb24gZihhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7MDxjOyl7dmFyIGQ9Yy0xPj4+MSxlPWFbZF07aWYoMDxnKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBoKGEpe3JldHVybiAwPT09YS5sZW5ndGg/bnVsbDphWzBdfWZ1bmN0aW9uIGsoYSl7aWYoMD09PWEubGVuZ3RoKXJldHVybiBudWxsO3ZhciBiPWFbMF0sYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoLHc9ZT4+PjE7ZDx3Oyl7dmFyIG09MiooZCsxKS0xLEM9YVttXSxuPW0rMSx4PWFbbl07aWYoMD5nKEMsYykpbjxlJiYwPmcoeCxDKT8oYVtkXT14LGFbbl09YyxkPW4pOihhW2RdPUMsYVttXT1jLGQ9bSk7ZWxzZSBpZihuPGUmJjA+Zyh4LGMpKWFbZF09eCxhW25dPWMsZD1uO2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9XG5mdW5jdGlvbiBnKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfWlmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBsPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIGwubm93KCl9fWVsc2V7dmFyIHA9RGF0ZSxxPXAubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gcC5ub3coKS1xfX12YXIgcj1bXSx0PVtdLHU9MSx2PW51bGwseT0zLHo9ITEsQT0hMSxCPSExLEQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDpudWxsLEU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6bnVsbCxGPVwidW5kZWZpbmVkXCIhPT10eXBlb2Ygc2V0SW1tZWRpYXRlP3NldEltbWVkaWF0ZTpudWxsO1xuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBuYXZpZ2F0b3ImJnZvaWQgMCE9PW5hdmlnYXRvci5zY2hlZHVsaW5nJiZ2b2lkIDAhPT1uYXZpZ2F0b3Iuc2NoZWR1bGluZy5pc0lucHV0UGVuZGluZyYmbmF2aWdhdG9yLnNjaGVkdWxpbmcuaXNJbnB1dFBlbmRpbmcuYmluZChuYXZpZ2F0b3Iuc2NoZWR1bGluZyk7ZnVuY3Rpb24gRyhhKXtmb3IodmFyIGI9aCh0KTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKWsodCk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlrKHQpLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsZihyLGIpO2Vsc2UgYnJlYWs7Yj1oKHQpfX1mdW5jdGlvbiBIKGEpe0I9ITE7RyhhKTtpZighQSlpZihudWxsIT09aChyKSlBPSEwLEkoSik7ZWxzZXt2YXIgYj1oKHQpO251bGwhPT1iJiZLKEgsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gSihhLGIpe0E9ITE7QiYmKEI9ITEsRShMKSxMPS0xKTt6PSEwO3ZhciBjPXk7dHJ5e0coYik7Zm9yKHY9aChyKTtudWxsIT09diYmKCEodi5leHBpcmF0aW9uVGltZT5iKXx8YSYmIU0oKSk7KXt2YXIgZD12LmNhbGxiYWNrO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2LmNhbGxiYWNrPW51bGw7eT12LnByaW9yaXR5TGV2ZWw7dmFyIGU9ZCh2LmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/di5jYWxsYmFjaz1lOnY9PT1oKHIpJiZrKHIpO0coYil9ZWxzZSBrKHIpO3Y9aChyKX1pZihudWxsIT09dil2YXIgdz0hMDtlbHNle3ZhciBtPWgodCk7bnVsbCE9PW0mJksoSCxtLnN0YXJ0VGltZS1iKTt3PSExfXJldHVybiB3fWZpbmFsbHl7dj1udWxsLHk9Yyx6PSExfX12YXIgTj0hMSxPPW51bGwsTD0tMSxQPTUsUT0tMTtcbmZ1bmN0aW9uIE0oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKS1RPFA/ITE6ITB9ZnVuY3Rpb24gUigpe2lmKG51bGwhPT1PKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO1E9YTt2YXIgYj0hMDt0cnl7Yj1PKCEwLGEpfWZpbmFsbHl7Yj9TKCk6KE49ITEsTz1udWxsKX19ZWxzZSBOPSExfXZhciBTO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBGKVM9ZnVuY3Rpb24oKXtGKFIpfTtlbHNlIGlmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBUPW5ldyBNZXNzYWdlQ2hhbm5lbCxVPVQucG9ydDI7VC5wb3J0MS5vbm1lc3NhZ2U9UjtTPWZ1bmN0aW9uKCl7VS5wb3N0TWVzc2FnZShudWxsKX19ZWxzZSBTPWZ1bmN0aW9uKCl7RChSLDApfTtmdW5jdGlvbiBJKGEpe089YTtOfHwoTj0hMCxTKCkpfWZ1bmN0aW9uIEsoYSxiKXtMPUQoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX1cbmV4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtBfHx6fHwoQT0hMCxJKEopKX07XG5leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lIHJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHN1cHBvcnRlZFwiKTpQPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIHl9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gaChyKX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaCh5KXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj15fXZhciBjPXk7eT1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7eT1jfX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307XG5leHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz15O3k9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e3k9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWM/KGM9Yy5kZWxheSxjPVwibnVtYmVyXCI9PT10eXBlb2YgYyYmMDxjP2QrYzpkKTpjPWQ7c3dpdGNoKGEpe2Nhc2UgMTp2YXIgZT0tMTticmVhaztjYXNlIDI6ZT0yNTA7YnJlYWs7Y2FzZSA1OmU9MTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6ZT0xRTQ7YnJlYWs7ZGVmYXVsdDplPTVFM31lPWMrZTthPXtpZDp1KyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmMsZXhwaXJhdGlvblRpbWU6ZSxzb3J0SW5kZXg6LTF9O2M+ZD8oYS5zb3J0SW5kZXg9YyxmKHQsYSksbnVsbD09PWgocikmJmE9PT1oKHQpJiYoQj8oRShMKSxMPS0xKTpCPSEwLEsoSCxjLWQpKSk6KGEuc29ydEluZGV4PWUsZihyLGEpLEF8fHp8fChBPSEwLEkoSikpKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPU07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9eTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz15O3k9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7eT1jfX19O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiB1c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgZT1yZXF1aXJlKFwicmVhY3RcIik7ZnVuY3Rpb24gaChhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIGs9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6aCxsPWUudXNlU3RhdGUsbT1lLnVzZUVmZmVjdCxuPWUudXNlTGF5b3V0RWZmZWN0LHA9ZS51c2VEZWJ1Z1ZhbHVlO2Z1bmN0aW9uIHEoYSxiKXt2YXIgZD1iKCksZj1sKHtpbnN0Ont2YWx1ZTpkLGdldFNuYXBzaG90OmJ9fSksYz1mWzBdLmluc3QsZz1mWzFdO24oZnVuY3Rpb24oKXtjLnZhbHVlPWQ7Yy5nZXRTbmFwc2hvdD1iO3IoYykmJmcoe2luc3Q6Y30pfSxbYSxkLGJdKTttKGZ1bmN0aW9uKCl7cihjKSYmZyh7aW5zdDpjfSk7cmV0dXJuIGEoZnVuY3Rpb24oKXtyKGMpJiZnKHtpbnN0OmN9KX0pfSxbYV0pO3AoZCk7cmV0dXJuIGR9XG5mdW5jdGlvbiByKGEpe3ZhciBiPWEuZ2V0U25hcHNob3Q7YT1hLnZhbHVlO3RyeXt2YXIgZD1iKCk7cmV0dXJuIWsoYSxkKX1jYXRjaChmKXtyZXR1cm4hMH19ZnVuY3Rpb24gdChhLGIpe3JldHVybiBiKCl9dmFyIHU9XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50P3Q6cTtleHBvcnRzLnVzZVN5bmNFeHRlcm5hbFN0b3JlPXZvaWQgMCE9PWUudXNlU3luY0V4dGVybmFsU3RvcmU/ZS51c2VTeW5jRXh0ZXJuYWxTdG9yZTp1O1xuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS93aXRoLXNlbGVjdG9yLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgaD1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwidXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbVwiKTtmdW5jdGlvbiBwKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgcT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpwLHI9bi51c2VTeW5jRXh0ZXJuYWxTdG9yZSx0PWgudXNlUmVmLHU9aC51c2VFZmZlY3Qsdj1oLnVzZU1lbW8sdz1oLnVzZURlYnVnVmFsdWU7XG5leHBvcnRzLnVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yPWZ1bmN0aW9uKGEsYixlLGwsZyl7dmFyIGM9dChudWxsKTtpZihudWxsPT09Yy5jdXJyZW50KXt2YXIgZj17aGFzVmFsdWU6ITEsdmFsdWU6bnVsbH07Yy5jdXJyZW50PWZ9ZWxzZSBmPWMuY3VycmVudDtjPXYoZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEpe2lmKCFjKXtjPSEwO2Q9YTthPWwoYSk7aWYodm9pZCAwIT09ZyYmZi5oYXNWYWx1ZSl7dmFyIGI9Zi52YWx1ZTtpZihnKGIsYSkpcmV0dXJuIGs9Yn1yZXR1cm4gaz1hfWI9aztpZihxKGQsYSkpcmV0dXJuIGI7dmFyIGU9bChhKTtpZih2b2lkIDAhPT1nJiZnKGIsZSkpcmV0dXJuIGI7ZD1hO3JldHVybiBrPWV9dmFyIGM9ITEsZCxrLG09dm9pZCAwPT09ZT9udWxsOmU7cmV0dXJuW2Z1bmN0aW9uKCl7cmV0dXJuIGEoYigpKX0sbnVsbD09PW0/dm9pZCAwOmZ1bmN0aW9uKCl7cmV0dXJuIGEobSgpKX1dfSxbYixlLGwsZ10pO3ZhciBkPXIoYSxjWzBdLGNbMV0pO1xudShmdW5jdGlvbigpe2YuaGFzVmFsdWU9ITA7Zi52YWx1ZT1kfSxbZF0pO3coZCk7cmV0dXJuIGR9O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0vd2l0aC1zZWxlY3Rvci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS93aXRoLXNlbGVjdG9yLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJ2YXIgX3R5cGVvZiA9IHJlcXVpcmUoXCIuL3R5cGVvZi5qc1wiKVtcImRlZmF1bHRcIl07XG5cbmZ1bmN0aW9uIF9yZWdlbmVyYXRvclJ1bnRpbWUoKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuICAvKiEgcmVnZW5lcmF0b3ItcnVudGltZSAtLSBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy4gLS0gbGljZW5zZSAoTUlUKTogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL2Jsb2IvbWFpbi9MSUNFTlNFICovXG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBfcmVnZW5lcmF0b3JSdW50aW1lID0gZnVuY3Rpb24gX3JlZ2VuZXJhdG9yUnVudGltZSgpIHtcbiAgICByZXR1cm4gZXhwb3J0cztcbiAgfSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzO1xuICB2YXIgZXhwb3J0cyA9IHt9LFxuICAgICAgT3AgPSBPYmplY3QucHJvdG90eXBlLFxuICAgICAgaGFzT3duID0gT3AuaGFzT3duUHJvcGVydHksXG4gICAgICAkU3ltYm9sID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgPyBTeW1ib2wgOiB7fSxcbiAgICAgIGl0ZXJhdG9yU3ltYm9sID0gJFN5bWJvbC5pdGVyYXRvciB8fCBcIkBAaXRlcmF0b3JcIixcbiAgICAgIGFzeW5jSXRlcmF0b3JTeW1ib2wgPSAkU3ltYm9sLmFzeW5jSXRlcmF0b3IgfHwgXCJAQGFzeW5jSXRlcmF0b3JcIixcbiAgICAgIHRvU3RyaW5nVGFnU3ltYm9sID0gJFN5bWJvbC50b1N0cmluZ1RhZyB8fCBcIkBAdG9TdHJpbmdUYWdcIjtcblxuICBmdW5jdGlvbiBkZWZpbmUob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogITAsXG4gICAgICBjb25maWd1cmFibGU6ICEwLFxuICAgICAgd3JpdGFibGU6ICEwXG4gICAgfSksIG9ialtrZXldO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBkZWZpbmUoe30sIFwiXCIpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBkZWZpbmUgPSBmdW5jdGlvbiBkZWZpbmUob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgICByZXR1cm4gb2JqW2tleV0gPSB2YWx1ZTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCkge1xuICAgIHZhciBwcm90b0dlbmVyYXRvciA9IG91dGVyRm4gJiYgb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IgPyBvdXRlckZuIDogR2VuZXJhdG9yLFxuICAgICAgICBnZW5lcmF0b3IgPSBPYmplY3QuY3JlYXRlKHByb3RvR2VuZXJhdG9yLnByb3RvdHlwZSksXG4gICAgICAgIGNvbnRleHQgPSBuZXcgQ29udGV4dCh0cnlMb2NzTGlzdCB8fCBbXSk7XG4gICAgcmV0dXJuIGdlbmVyYXRvci5faW52b2tlID0gZnVuY3Rpb24gKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpIHtcbiAgICAgIHZhciBzdGF0ZSA9IFwic3VzcGVuZGVkU3RhcnRcIjtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAobWV0aG9kLCBhcmcpIHtcbiAgICAgICAgaWYgKFwiZXhlY3V0aW5nXCIgPT09IHN0YXRlKSB0aHJvdyBuZXcgRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBydW5uaW5nXCIpO1xuXG4gICAgICAgIGlmIChcImNvbXBsZXRlZFwiID09PSBzdGF0ZSkge1xuICAgICAgICAgIGlmIChcInRocm93XCIgPT09IG1ldGhvZCkgdGhyb3cgYXJnO1xuICAgICAgICAgIHJldHVybiBkb25lUmVzdWx0KCk7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGNvbnRleHQubWV0aG9kID0gbWV0aG9kLCBjb250ZXh0LmFyZyA9IGFyZzs7KSB7XG4gICAgICAgICAgdmFyIGRlbGVnYXRlID0gY29udGV4dC5kZWxlZ2F0ZTtcblxuICAgICAgICAgIGlmIChkZWxlZ2F0ZSkge1xuICAgICAgICAgICAgdmFyIGRlbGVnYXRlUmVzdWx0ID0gbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCk7XG5cbiAgICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCkge1xuICAgICAgICAgICAgICBpZiAoZGVsZWdhdGVSZXN1bHQgPT09IENvbnRpbnVlU2VudGluZWwpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICByZXR1cm4gZGVsZWdhdGVSZXN1bHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKFwibmV4dFwiID09PSBjb250ZXh0Lm1ldGhvZCkgY29udGV4dC5zZW50ID0gY29udGV4dC5fc2VudCA9IGNvbnRleHQuYXJnO2Vsc2UgaWYgKFwidGhyb3dcIiA9PT0gY29udGV4dC5tZXRob2QpIHtcbiAgICAgICAgICAgIGlmIChcInN1c3BlbmRlZFN0YXJ0XCIgPT09IHN0YXRlKSB0aHJvdyBzdGF0ZSA9IFwiY29tcGxldGVkXCIsIGNvbnRleHQuYXJnO1xuICAgICAgICAgICAgY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZyk7XG4gICAgICAgICAgfSBlbHNlIFwicmV0dXJuXCIgPT09IGNvbnRleHQubWV0aG9kICYmIGNvbnRleHQuYWJydXB0KFwicmV0dXJuXCIsIGNvbnRleHQuYXJnKTtcbiAgICAgICAgICBzdGF0ZSA9IFwiZXhlY3V0aW5nXCI7XG4gICAgICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuXG4gICAgICAgICAgaWYgKFwibm9ybWFsXCIgPT09IHJlY29yZC50eXBlKSB7XG4gICAgICAgICAgICBpZiAoc3RhdGUgPSBjb250ZXh0LmRvbmUgPyBcImNvbXBsZXRlZFwiIDogXCJzdXNwZW5kZWRZaWVsZFwiLCByZWNvcmQuYXJnID09PSBDb250aW51ZVNlbnRpbmVsKSBjb250aW51ZTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIHZhbHVlOiByZWNvcmQuYXJnLFxuICAgICAgICAgICAgICBkb25lOiBjb250ZXh0LmRvbmVcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgXCJ0aHJvd1wiID09PSByZWNvcmQudHlwZSAmJiAoc3RhdGUgPSBcImNvbXBsZXRlZFwiLCBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIiwgY29udGV4dC5hcmcgPSByZWNvcmQuYXJnKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KGlubmVyRm4sIHNlbGYsIGNvbnRleHQpLCBnZW5lcmF0b3I7XG4gIH1cblxuICBmdW5jdGlvbiB0cnlDYXRjaChmbiwgb2JqLCBhcmcpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogXCJub3JtYWxcIixcbiAgICAgICAgYXJnOiBmbi5jYWxsKG9iaiwgYXJnKVxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwidGhyb3dcIixcbiAgICAgICAgYXJnOiBlcnJcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgZXhwb3J0cy53cmFwID0gd3JhcDtcbiAgdmFyIENvbnRpbnVlU2VudGluZWwgPSB7fTtcblxuICBmdW5jdGlvbiBHZW5lcmF0b3IoKSB7fVxuXG4gIGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uKCkge31cblxuICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSgpIHt9XG5cbiAgdmFyIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG4gIGRlZmluZShJdGVyYXRvclByb3RvdHlwZSwgaXRlcmF0b3JTeW1ib2wsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfSk7XG4gIHZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZixcbiAgICAgIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG8gJiYgZ2V0UHJvdG8oZ2V0UHJvdG8odmFsdWVzKFtdKSkpO1xuICBOYXRpdmVJdGVyYXRvclByb3RvdHlwZSAmJiBOYXRpdmVJdGVyYXRvclByb3RvdHlwZSAhPT0gT3AgJiYgaGFzT3duLmNhbGwoTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUsIGl0ZXJhdG9yU3ltYm9sKSAmJiAoSXRlcmF0b3JQcm90b3R5cGUgPSBOYXRpdmVJdGVyYXRvclByb3RvdHlwZSk7XG4gIHZhciBHcCA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLnByb3RvdHlwZSA9IEdlbmVyYXRvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlKTtcblxuICBmdW5jdGlvbiBkZWZpbmVJdGVyYXRvck1ldGhvZHMocHJvdG90eXBlKSB7XG4gICAgW1wibmV4dFwiLCBcInRocm93XCIsIFwicmV0dXJuXCJdLmZvckVhY2goZnVuY3Rpb24gKG1ldGhvZCkge1xuICAgICAgZGVmaW5lKHByb3RvdHlwZSwgbWV0aG9kLCBmdW5jdGlvbiAoYXJnKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnZva2UobWV0aG9kLCBhcmcpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBBc3luY0l0ZXJhdG9yKGdlbmVyYXRvciwgUHJvbWlzZUltcGwpIHtcbiAgICBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGdlbmVyYXRvclttZXRob2RdLCBnZW5lcmF0b3IsIGFyZyk7XG5cbiAgICAgIGlmIChcInRocm93XCIgIT09IHJlY29yZC50eXBlKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSByZWNvcmQuYXJnLFxuICAgICAgICAgICAgdmFsdWUgPSByZXN1bHQudmFsdWU7XG4gICAgICAgIHJldHVybiB2YWx1ZSAmJiBcIm9iamVjdFwiID09IF90eXBlb2YodmFsdWUpICYmIGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIikgPyBQcm9taXNlSW1wbC5yZXNvbHZlKHZhbHVlLl9fYXdhaXQpLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgaW52b2tlKFwibmV4dFwiLCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgIGludm9rZShcInRocm93XCIsIGVyciwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSkgOiBQcm9taXNlSW1wbC5yZXNvbHZlKHZhbHVlKS50aGVuKGZ1bmN0aW9uICh1bndyYXBwZWQpIHtcbiAgICAgICAgICByZXN1bHQudmFsdWUgPSB1bndyYXBwZWQsIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgcmV0dXJuIGludm9rZShcInRocm93XCIsIGVycm9yLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmVqZWN0KHJlY29yZC5hcmcpO1xuICAgIH1cblxuICAgIHZhciBwcmV2aW91c1Byb21pc2U7XG5cbiAgICB0aGlzLl9pbnZva2UgPSBmdW5jdGlvbiAobWV0aG9kLCBhcmcpIHtcbiAgICAgIGZ1bmN0aW9uIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2VJbXBsKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJldmlvdXNQcm9taXNlID0gcHJldmlvdXNQcm9taXNlID8gcHJldmlvdXNQcm9taXNlLnRoZW4oY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcsIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKSA6IGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpIHtcbiAgICB2YXIgbWV0aG9kID0gZGVsZWdhdGUuaXRlcmF0b3JbY29udGV4dC5tZXRob2RdO1xuXG4gICAgaWYgKHVuZGVmaW5lZCA9PT0gbWV0aG9kKSB7XG4gICAgICBpZiAoY29udGV4dC5kZWxlZ2F0ZSA9IG51bGwsIFwidGhyb3dcIiA9PT0gY29udGV4dC5tZXRob2QpIHtcbiAgICAgICAgaWYgKGRlbGVnYXRlLml0ZXJhdG9yW1wicmV0dXJuXCJdICYmIChjb250ZXh0Lm1ldGhvZCA9IFwicmV0dXJuXCIsIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkLCBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KSwgXCJ0aHJvd1wiID09PSBjb250ZXh0Lm1ldGhvZCkpIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIiwgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFwiVGhlIGl0ZXJhdG9yIGRvZXMgbm90IHByb3ZpZGUgYSAndGhyb3cnIG1ldGhvZFwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKG1ldGhvZCwgZGVsZWdhdGUuaXRlcmF0b3IsIGNvbnRleHQuYXJnKTtcbiAgICBpZiAoXCJ0aHJvd1wiID09PSByZWNvcmQudHlwZSkgcmV0dXJuIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiLCBjb250ZXh0LmFyZyA9IHJlY29yZC5hcmcsIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsLCBDb250aW51ZVNlbnRpbmVsO1xuICAgIHZhciBpbmZvID0gcmVjb3JkLmFyZztcbiAgICByZXR1cm4gaW5mbyA/IGluZm8uZG9uZSA/IChjb250ZXh0W2RlbGVnYXRlLnJlc3VsdE5hbWVdID0gaW5mby52YWx1ZSwgY29udGV4dC5uZXh0ID0gZGVsZWdhdGUubmV4dExvYywgXCJyZXR1cm5cIiAhPT0gY29udGV4dC5tZXRob2QgJiYgKGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCIsIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkKSwgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGwsIENvbnRpbnVlU2VudGluZWwpIDogaW5mbyA6IChjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIiwgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFwiaXRlcmF0b3IgcmVzdWx0IGlzIG5vdCBhbiBvYmplY3RcIiksIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsLCBDb250aW51ZVNlbnRpbmVsKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2hUcnlFbnRyeShsb2NzKSB7XG4gICAgdmFyIGVudHJ5ID0ge1xuICAgICAgdHJ5TG9jOiBsb2NzWzBdXG4gICAgfTtcbiAgICAxIGluIGxvY3MgJiYgKGVudHJ5LmNhdGNoTG9jID0gbG9jc1sxXSksIDIgaW4gbG9jcyAmJiAoZW50cnkuZmluYWxseUxvYyA9IGxvY3NbMl0sIGVudHJ5LmFmdGVyTG9jID0gbG9jc1szXSksIHRoaXMudHJ5RW50cmllcy5wdXNoKGVudHJ5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlc2V0VHJ5RW50cnkoZW50cnkpIHtcbiAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbiB8fCB7fTtcbiAgICByZWNvcmQudHlwZSA9IFwibm9ybWFsXCIsIGRlbGV0ZSByZWNvcmQuYXJnLCBlbnRyeS5jb21wbGV0aW9uID0gcmVjb3JkO1xuICB9XG5cbiAgZnVuY3Rpb24gQ29udGV4dCh0cnlMb2NzTGlzdCkge1xuICAgIHRoaXMudHJ5RW50cmllcyA9IFt7XG4gICAgICB0cnlMb2M6IFwicm9vdFwiXG4gICAgfV0sIHRyeUxvY3NMaXN0LmZvckVhY2gocHVzaFRyeUVudHJ5LCB0aGlzKSwgdGhpcy5yZXNldCghMCk7XG4gIH1cblxuICBmdW5jdGlvbiB2YWx1ZXMoaXRlcmFibGUpIHtcbiAgICBpZiAoaXRlcmFibGUpIHtcbiAgICAgIHZhciBpdGVyYXRvck1ldGhvZCA9IGl0ZXJhYmxlW2l0ZXJhdG9yU3ltYm9sXTtcbiAgICAgIGlmIChpdGVyYXRvck1ldGhvZCkgcmV0dXJuIGl0ZXJhdG9yTWV0aG9kLmNhbGwoaXRlcmFibGUpO1xuICAgICAgaWYgKFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgaXRlcmFibGUubmV4dCkgcmV0dXJuIGl0ZXJhYmxlO1xuXG4gICAgICBpZiAoIWlzTmFOKGl0ZXJhYmxlLmxlbmd0aCkpIHtcbiAgICAgICAgdmFyIGkgPSAtMSxcbiAgICAgICAgICAgIG5leHQgPSBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICAgIGZvciAoOyArK2kgPCBpdGVyYWJsZS5sZW5ndGg7KSB7XG4gICAgICAgICAgICBpZiAoaGFzT3duLmNhbGwoaXRlcmFibGUsIGkpKSByZXR1cm4gbmV4dC52YWx1ZSA9IGl0ZXJhYmxlW2ldLCBuZXh0LmRvbmUgPSAhMSwgbmV4dDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gbmV4dC52YWx1ZSA9IHVuZGVmaW5lZCwgbmV4dC5kb25lID0gITAsIG5leHQ7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIG5leHQubmV4dCA9IG5leHQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIG5leHQ6IGRvbmVSZXN1bHRcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gZG9uZVJlc3VsdCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdmFsdWU6IHVuZGVmaW5lZCxcbiAgICAgIGRvbmU6ICEwXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBHZW5lcmF0b3JGdW5jdGlvbi5wcm90b3R5cGUgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgZGVmaW5lKEdwLCBcImNvbnN0cnVjdG9yXCIsIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKSwgZGVmaW5lKEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLCBcImNvbnN0cnVjdG9yXCIsIEdlbmVyYXRvckZ1bmN0aW9uKSwgR2VuZXJhdG9yRnVuY3Rpb24uZGlzcGxheU5hbWUgPSBkZWZpbmUoR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIHRvU3RyaW5nVGFnU3ltYm9sLCBcIkdlbmVyYXRvckZ1bmN0aW9uXCIpLCBleHBvcnRzLmlzR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiAoZ2VuRnVuKSB7XG4gICAgdmFyIGN0b3IgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGdlbkZ1biAmJiBnZW5GdW4uY29uc3RydWN0b3I7XG4gICAgcmV0dXJuICEhY3RvciAmJiAoY3RvciA9PT0gR2VuZXJhdG9yRnVuY3Rpb24gfHwgXCJHZW5lcmF0b3JGdW5jdGlvblwiID09PSAoY3Rvci5kaXNwbGF5TmFtZSB8fCBjdG9yLm5hbWUpKTtcbiAgfSwgZXhwb3J0cy5tYXJrID0gZnVuY3Rpb24gKGdlbkZ1bikge1xuICAgIHJldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YoZ2VuRnVuLCBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSkgOiAoZ2VuRnVuLl9fcHJvdG9fXyA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLCBkZWZpbmUoZ2VuRnVuLCB0b1N0cmluZ1RhZ1N5bWJvbCwgXCJHZW5lcmF0b3JGdW5jdGlvblwiKSksIGdlbkZ1bi5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEdwKSwgZ2VuRnVuO1xuICB9LCBleHBvcnRzLmF3cmFwID0gZnVuY3Rpb24gKGFyZykge1xuICAgIHJldHVybiB7XG4gICAgICBfX2F3YWl0OiBhcmdcbiAgICB9O1xuICB9LCBkZWZpbmVJdGVyYXRvck1ldGhvZHMoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUpLCBkZWZpbmUoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUsIGFzeW5jSXRlcmF0b3JTeW1ib2wsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfSksIGV4cG9ydHMuQXN5bmNJdGVyYXRvciA9IEFzeW5jSXRlcmF0b3IsIGV4cG9ydHMuYXN5bmMgPSBmdW5jdGlvbiAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QsIFByb21pc2VJbXBsKSB7XG4gICAgdm9pZCAwID09PSBQcm9taXNlSW1wbCAmJiAoUHJvbWlzZUltcGwgPSBQcm9taXNlKTtcbiAgICB2YXIgaXRlciA9IG5ldyBBc3luY0l0ZXJhdG9yKHdyYXAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpLCBQcm9taXNlSW1wbCk7XG4gICAgcmV0dXJuIGV4cG9ydHMuaXNHZW5lcmF0b3JGdW5jdGlvbihvdXRlckZuKSA/IGl0ZXIgOiBpdGVyLm5leHQoKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgIHJldHVybiByZXN1bHQuZG9uZSA/IHJlc3VsdC52YWx1ZSA6IGl0ZXIubmV4dCgpO1xuICAgIH0pO1xuICB9LCBkZWZpbmVJdGVyYXRvck1ldGhvZHMoR3ApLCBkZWZpbmUoR3AsIHRvU3RyaW5nVGFnU3ltYm9sLCBcIkdlbmVyYXRvclwiKSwgZGVmaW5lKEdwLCBpdGVyYXRvclN5bWJvbCwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9KSwgZGVmaW5lKEdwLCBcInRvU3RyaW5nXCIsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gXCJbb2JqZWN0IEdlbmVyYXRvcl1cIjtcbiAgfSksIGV4cG9ydHMua2V5cyA9IGZ1bmN0aW9uIChvYmplY3QpIHtcbiAgICB2YXIga2V5cyA9IFtdO1xuXG4gICAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuICAgICAga2V5cy5wdXNoKGtleSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGtleXMucmV2ZXJzZSgpLCBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgZm9yICg7IGtleXMubGVuZ3RoOykge1xuICAgICAgICB2YXIga2V5ID0ga2V5cy5wb3AoKTtcbiAgICAgICAgaWYgKGtleSBpbiBvYmplY3QpIHJldHVybiBuZXh0LnZhbHVlID0ga2V5LCBuZXh0LmRvbmUgPSAhMSwgbmV4dDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5leHQuZG9uZSA9ICEwLCBuZXh0O1xuICAgIH07XG4gIH0sIGV4cG9ydHMudmFsdWVzID0gdmFsdWVzLCBDb250ZXh0LnByb3RvdHlwZSA9IHtcbiAgICBjb25zdHJ1Y3RvcjogQ29udGV4dCxcbiAgICByZXNldDogZnVuY3Rpb24gcmVzZXQoc2tpcFRlbXBSZXNldCkge1xuICAgICAgaWYgKHRoaXMucHJldiA9IDAsIHRoaXMubmV4dCA9IDAsIHRoaXMuc2VudCA9IHRoaXMuX3NlbnQgPSB1bmRlZmluZWQsIHRoaXMuZG9uZSA9ICExLCB0aGlzLmRlbGVnYXRlID0gbnVsbCwgdGhpcy5tZXRob2QgPSBcIm5leHRcIiwgdGhpcy5hcmcgPSB1bmRlZmluZWQsIHRoaXMudHJ5RW50cmllcy5mb3JFYWNoKHJlc2V0VHJ5RW50cnkpLCAhc2tpcFRlbXBSZXNldCkgZm9yICh2YXIgbmFtZSBpbiB0aGlzKSB7XG4gICAgICAgIFwidFwiID09PSBuYW1lLmNoYXJBdCgwKSAmJiBoYXNPd24uY2FsbCh0aGlzLCBuYW1lKSAmJiAhaXNOYU4oK25hbWUuc2xpY2UoMSkpICYmICh0aGlzW25hbWVdID0gdW5kZWZpbmVkKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHN0b3A6IGZ1bmN0aW9uIHN0b3AoKSB7XG4gICAgICB0aGlzLmRvbmUgPSAhMDtcbiAgICAgIHZhciByb290UmVjb3JkID0gdGhpcy50cnlFbnRyaWVzWzBdLmNvbXBsZXRpb247XG4gICAgICBpZiAoXCJ0aHJvd1wiID09PSByb290UmVjb3JkLnR5cGUpIHRocm93IHJvb3RSZWNvcmQuYXJnO1xuICAgICAgcmV0dXJuIHRoaXMucnZhbDtcbiAgICB9LFxuICAgIGRpc3BhdGNoRXhjZXB0aW9uOiBmdW5jdGlvbiBkaXNwYXRjaEV4Y2VwdGlvbihleGNlcHRpb24pIHtcbiAgICAgIGlmICh0aGlzLmRvbmUpIHRocm93IGV4Y2VwdGlvbjtcbiAgICAgIHZhciBjb250ZXh0ID0gdGhpcztcblxuICAgICAgZnVuY3Rpb24gaGFuZGxlKGxvYywgY2F1Z2h0KSB7XG4gICAgICAgIHJldHVybiByZWNvcmQudHlwZSA9IFwidGhyb3dcIiwgcmVjb3JkLmFyZyA9IGV4Y2VwdGlvbiwgY29udGV4dC5uZXh0ID0gbG9jLCBjYXVnaHQgJiYgKGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCIsIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkKSwgISFjYXVnaHQ7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldLFxuICAgICAgICAgICAgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbjtcbiAgICAgICAgaWYgKFwicm9vdFwiID09PSBlbnRyeS50cnlMb2MpIHJldHVybiBoYW5kbGUoXCJlbmRcIik7XG5cbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA8PSB0aGlzLnByZXYpIHtcbiAgICAgICAgICB2YXIgaGFzQ2F0Y2ggPSBoYXNPd24uY2FsbChlbnRyeSwgXCJjYXRjaExvY1wiKSxcbiAgICAgICAgICAgICAgaGFzRmluYWxseSA9IGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIik7XG5cbiAgICAgICAgICBpZiAoaGFzQ2F0Y2ggJiYgaGFzRmluYWxseSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmNhdGNoTG9jKSByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCAhMCk7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGhhc0NhdGNoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHJldHVybiBoYW5kbGUoZW50cnkuY2F0Y2hMb2MsICEwKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKCFoYXNGaW5hbGx5KSB0aHJvdyBuZXcgRXJyb3IoXCJ0cnkgc3RhdGVtZW50IHdpdGhvdXQgY2F0Y2ggb3IgZmluYWxseVwiKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSByZXR1cm4gaGFuZGxlKGVudHJ5LmZpbmFsbHlMb2MpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgYWJydXB0OiBmdW5jdGlvbiBhYnJ1cHQodHlwZSwgYXJnKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldiAmJiBoYXNPd24uY2FsbChlbnRyeSwgXCJmaW5hbGx5TG9jXCIpICYmIHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICB2YXIgZmluYWxseUVudHJ5ID0gZW50cnk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZmluYWxseUVudHJ5ICYmIChcImJyZWFrXCIgPT09IHR5cGUgfHwgXCJjb250aW51ZVwiID09PSB0eXBlKSAmJiBmaW5hbGx5RW50cnkudHJ5TG9jIDw9IGFyZyAmJiBhcmcgPD0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2MgJiYgKGZpbmFsbHlFbnRyeSA9IG51bGwpO1xuICAgICAgdmFyIHJlY29yZCA9IGZpbmFsbHlFbnRyeSA/IGZpbmFsbHlFbnRyeS5jb21wbGV0aW9uIDoge307XG4gICAgICByZXR1cm4gcmVjb3JkLnR5cGUgPSB0eXBlLCByZWNvcmQuYXJnID0gYXJnLCBmaW5hbGx5RW50cnkgPyAodGhpcy5tZXRob2QgPSBcIm5leHRcIiwgdGhpcy5uZXh0ID0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2MsIENvbnRpbnVlU2VudGluZWwpIDogdGhpcy5jb21wbGV0ZShyZWNvcmQpO1xuICAgIH0sXG4gICAgY29tcGxldGU6IGZ1bmN0aW9uIGNvbXBsZXRlKHJlY29yZCwgYWZ0ZXJMb2MpIHtcbiAgICAgIGlmIChcInRocm93XCIgPT09IHJlY29yZC50eXBlKSB0aHJvdyByZWNvcmQuYXJnO1xuICAgICAgcmV0dXJuIFwiYnJlYWtcIiA9PT0gcmVjb3JkLnR5cGUgfHwgXCJjb250aW51ZVwiID09PSByZWNvcmQudHlwZSA/IHRoaXMubmV4dCA9IHJlY29yZC5hcmcgOiBcInJldHVyblwiID09PSByZWNvcmQudHlwZSA/ICh0aGlzLnJ2YWwgPSB0aGlzLmFyZyA9IHJlY29yZC5hcmcsIHRoaXMubWV0aG9kID0gXCJyZXR1cm5cIiwgdGhpcy5uZXh0ID0gXCJlbmRcIikgOiBcIm5vcm1hbFwiID09PSByZWNvcmQudHlwZSAmJiBhZnRlckxvYyAmJiAodGhpcy5uZXh0ID0gYWZ0ZXJMb2MpLCBDb250aW51ZVNlbnRpbmVsO1xuICAgIH0sXG4gICAgZmluaXNoOiBmdW5jdGlvbiBmaW5pc2goZmluYWxseUxvYykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS5maW5hbGx5TG9jID09PSBmaW5hbGx5TG9jKSByZXR1cm4gdGhpcy5jb21wbGV0ZShlbnRyeS5jb21wbGV0aW9uLCBlbnRyeS5hZnRlckxvYyksIHJlc2V0VHJ5RW50cnkoZW50cnkpLCBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgfVxuICAgIH0sXG4gICAgXCJjYXRjaFwiOiBmdW5jdGlvbiBfY2F0Y2godHJ5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jID09PSB0cnlMb2MpIHtcbiAgICAgICAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbjtcblxuICAgICAgICAgIGlmIChcInRocm93XCIgPT09IHJlY29yZC50eXBlKSB7XG4gICAgICAgICAgICB2YXIgdGhyb3duID0gcmVjb3JkLmFyZztcbiAgICAgICAgICAgIHJlc2V0VHJ5RW50cnkoZW50cnkpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiB0aHJvd247XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaWxsZWdhbCBjYXRjaCBhdHRlbXB0XCIpO1xuICAgIH0sXG4gICAgZGVsZWdhdGVZaWVsZDogZnVuY3Rpb24gZGVsZWdhdGVZaWVsZChpdGVyYWJsZSwgcmVzdWx0TmFtZSwgbmV4dExvYykge1xuICAgICAgcmV0dXJuIHRoaXMuZGVsZWdhdGUgPSB7XG4gICAgICAgIGl0ZXJhdG9yOiB2YWx1ZXMoaXRlcmFibGUpLFxuICAgICAgICByZXN1bHROYW1lOiByZXN1bHROYW1lLFxuICAgICAgICBuZXh0TG9jOiBuZXh0TG9jXG4gICAgICB9LCBcIm5leHRcIiA9PT0gdGhpcy5tZXRob2QgJiYgKHRoaXMuYXJnID0gdW5kZWZpbmVkKSwgQ29udGludWVTZW50aW5lbDtcbiAgICB9XG4gIH0sIGV4cG9ydHM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3JlZ2VuZXJhdG9yUnVudGltZSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyIsImZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICByZXR1cm4gKG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvYmopIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgfSA6IGZ1bmN0aW9uIChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xuICB9LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHMpLCBfdHlwZW9mKG9iaik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyIsIi8vIFRPRE8oQmFiZWwgOCk6IFJlbW92ZSB0aGlzIGZpbGUuXG5cbnZhciBydW50aW1lID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvcmVnZW5lcmF0b3JSdW50aW1lXCIpKCk7XG5tb2R1bGUuZXhwb3J0cyA9IHJ1bnRpbWU7XG5cbi8vIENvcGllZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWdlbmVyYXRvci9ibG9iL21haW4vcGFja2FnZXMvcnVudGltZS9ydW50aW1lLmpzI0w3MzY9XG50cnkge1xuICByZWdlbmVyYXRvclJ1bnRpbWUgPSBydW50aW1lO1xufSBjYXRjaCAoYWNjaWRlbnRhbFN0cmljdE1vZGUpIHtcbiAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSBcIm9iamVjdFwiKSB7XG4gICAgZ2xvYmFsVGhpcy5yZWdlbmVyYXRvclJ1bnRpbWUgPSBydW50aW1lO1xuICB9IGVsc2Uge1xuICAgIEZ1bmN0aW9uKFwiclwiLCBcInJlZ2VuZXJhdG9yUnVudGltZSA9IHJcIikocnVudGltZSk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuXG4gIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykge1xuICAgIGFycjJbaV0gPSBhcnJbaV07XG4gIH1cblxuICByZXR1cm4gYXJyMjtcbn0iLCJmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7XG4gIHRyeSB7XG4gICAgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpO1xuICAgIHZhciB2YWx1ZSA9IGluZm8udmFsdWU7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmVqZWN0KGVycm9yKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoaW5mby5kb25lKSB7XG4gICAgcmVzb2x2ZSh2YWx1ZSk7XG4gIH0gZWxzZSB7XG4gICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKGZuKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzLFxuICAgICAgICBhcmdzID0gYXJndW1lbnRzO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7XG5cbiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIHZhbHVlKTtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gX3Rocm93KGVycikge1xuICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwidGhyb3dcIiwgZXJyKTtcbiAgICAgIH1cblxuICAgICAgX25leHQodW5kZWZpbmVkKTtcbiAgICB9KTtcbiAgfTtcbn0iLCJpbXBvcnQgYXJyYXlXaXRoSG9sZXMgZnJvbSBcIi4vYXJyYXlXaXRoSG9sZXMuanNcIjtcbmltcG9ydCBpdGVyYWJsZVRvQXJyYXlMaW1pdCBmcm9tIFwiLi9pdGVyYWJsZVRvQXJyYXlMaW1pdC5qc1wiO1xuaW1wb3J0IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IGZyb20gXCIuL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzXCI7XG5pbXBvcnQgbm9uSXRlcmFibGVSZXN0IGZyb20gXCIuL25vbkl0ZXJhYmxlUmVzdC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7XG4gIHJldHVybiBhcnJheVdpdGhIb2xlcyhhcnIpIHx8IGl0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBub25JdGVyYWJsZVJlc3QoKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkge1xuICB2YXIgX2kgPSBhcnIgPT0gbnVsbCA/IG51bGwgOiB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIGFycltTeW1ib2wuaXRlcmF0b3JdIHx8IGFycltcIkBAaXRlcmF0b3JcIl07XG5cbiAgaWYgKF9pID09IG51bGwpIHJldHVybjtcbiAgdmFyIF9hcnIgPSBbXTtcbiAgdmFyIF9uID0gdHJ1ZTtcbiAgdmFyIF9kID0gZmFsc2U7XG5cbiAgdmFyIF9zLCBfZTtcblxuICB0cnkge1xuICAgIGZvciAoX2kgPSBfaS5jYWxsKGFycik7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHtcbiAgICAgIF9hcnIucHVzaChfcy52YWx1ZSk7XG5cbiAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhaztcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIF9kID0gdHJ1ZTtcbiAgICBfZSA9IGVycjtcbiAgfSBmaW5hbGx5IHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpZiAoX2QpIHRocm93IF9lO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBfYXJyO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7XG4gIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59IiwiaW1wb3J0IGFycmF5V2l0aG91dEhvbGVzIGZyb20gXCIuL2FycmF5V2l0aG91dEhvbGVzLmpzXCI7XG5pbXBvcnQgaXRlcmFibGVUb0FycmF5IGZyb20gXCIuL2l0ZXJhYmxlVG9BcnJheS5qc1wiO1xuaW1wb3J0IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IGZyb20gXCIuL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzXCI7XG5pbXBvcnQgbm9uSXRlcmFibGVTcHJlYWQgZnJvbSBcIi4vbm9uSXRlcmFibGVTcHJlYWQuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIGFycmF5V2l0aG91dEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5KGFycikgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBub25JdGVyYWJsZVNwcmVhZCgpO1xufSIsImltcG9ydCBhcnJheUxpa2VUb0FycmF5IGZyb20gXCIuL2FycmF5TGlrZVRvQXJyYXkuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkoYXJyKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgaXRlcltTeW1ib2wuaXRlcmF0b3JdICE9IG51bGwgfHwgaXRlcltcIkBAaXRlcmF0b3JcIl0gIT0gbnVsbCkgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTtcbn0iLCJpbXBvcnQgYXJyYXlMaWtlVG9BcnJheSBmcm9tIFwiLi9hcnJheUxpa2VUb0FycmF5LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7XG4gIGlmICghbykgcmV0dXJuO1xuICBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG4gIHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTtcbiAgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTtcbiAgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7XG4gIGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xufSJdLCJuYW1lcyI6WyJuIiwiciIsImFyZ3VtZW50cyIsImxlbmd0aCIsInQiLCJBcnJheSIsImUiLCJFcnJvciIsIm1hcCIsImpvaW4iLCJRIiwiT2JqZWN0IiwiZ2V0UHJvdG90eXBlT2YiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJjb25zdHJ1Y3RvciIsIkZ1bmN0aW9uIiwidG9TdHJpbmciLCJaIiwiaXNBcnJheSIsIkwiLCJzIiwidiIsImkiLCJvIiwia2V5cyIsIm5uIiwiZm9yRWFjaCIsInUiLCJoYXMiLCJwcm90b3R5cGUiLCJmIiwic2V0IiwiZGVsZXRlIiwiYWRkIiwiYyIsIlgiLCJNYXAiLCJxIiwiU2V0IiwicCIsImwiLCJzbGljZSIsInJuIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJnZXQiLCJlbnVtZXJhYmxlIiwidmFsdWUiLCJjcmVhdGUiLCJkIiwieSIsImNsZWFyIiwiaCIsImZyZWV6ZSIsImlzRnJvemVuIiwiYiIsInRuIiwiXyIsIlUiLCJqIiwiTyIsImciLCJTIiwidyIsIm0iLCJQIiwiTSIsIngiLCJIIiwiQSIsIkkiLCJrIiwiUiIsImEiLCJEIiwiY29uY2F0IiwiRiIsInoiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJFIiwiTiIsIlQiLCJDIiwiZW4iLCJvbiIsIlByb3h5IiwicmV2b2NhYmxlIiwicmV2b2tlIiwicHJveHkiLCJKIiwicHVzaCIsIksiLCJmcm9tIiwiRyIsIlciLCJTeW1ib2wiLCJCIiwiUmVmbGVjdCIsImZvciIsIml0ZXJhdG9yIiwib3duS2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5TmFtZXMiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVsZXRlUHJvcGVydHkiLCJkZWZpbmVQcm9wZXJ0eSIsInNldFByb3RvdHlwZU9mIiwiYXBwbHkiLCJ0aGlzIiwidW4iLCJwcm9kdWNlIiwiUHJvbWlzZSIsInRoZW4iLCJwcm9kdWNlV2l0aFBhdGNoZXMiLCJ1c2VQcm94aWVzIiwic2V0VXNlUHJveGllcyIsImF1dG9GcmVlemUiLCJzZXRBdXRvRnJlZXplIiwiY3JlYXRlRHJhZnQiLCJmaW5pc2hEcmFmdCIsImFwcGx5UGF0Y2hlcyIsInBhdGgiLCJvcCIsIiQiLCJhbiIsImZuIiwiYmluZCIsIl9kZWZpbmVQcm9wZXJ0eSIsIm9iaiIsImtleSIsIm9iamVjdCIsImVudW1lcmFibGVPbmx5Iiwic3ltYm9scyIsImZpbHRlciIsInN5bSIsIl9vYmplY3RTcHJlYWQyIiwidGFyZ2V0Iiwic291cmNlIiwiZGVmaW5lUHJvcGVydGllcyIsImZvcm1hdFByb2RFcnJvck1lc3NhZ2UiLCJjb2RlIiwiJCRvYnNlcnZhYmxlIiwib2JzZXJ2YWJsZSIsInJhbmRvbVN0cmluZyIsIk1hdGgiLCJyYW5kb20iLCJzdWJzdHJpbmciLCJzcGxpdCIsIkFjdGlvblR5cGVzIiwiSU5JVCIsIlJFUExBQ0UiLCJQUk9CRV9VTktOT1dOX0FDVElPTiIsImlzUGxhaW5PYmplY3QiLCJwcm90byIsImNyZWF0ZVN0b3JlIiwicmVkdWNlciIsInByZWxvYWRlZFN0YXRlIiwiZW5oYW5jZXIiLCJfcmVmMiIsInVuZGVmaW5lZCIsImN1cnJlbnRSZWR1Y2VyIiwiY3VycmVudFN0YXRlIiwiY3VycmVudExpc3RlbmVycyIsIm5leHRMaXN0ZW5lcnMiLCJpc0Rpc3BhdGNoaW5nIiwiZW5zdXJlQ2FuTXV0YXRlTmV4dExpc3RlbmVycyIsImdldFN0YXRlIiwic3Vic2NyaWJlIiwibGlzdGVuZXIiLCJpc1N1YnNjcmliZWQiLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiLCJkaXNwYXRjaCIsImFjdGlvbiIsInR5cGUiLCJsaXN0ZW5lcnMiLCJyZXBsYWNlUmVkdWNlciIsIm5leHRSZWR1Y2VyIiwiX3JlZiIsIm91dGVyU3Vic2NyaWJlIiwib2JzZXJ2ZXIiLCJvYnNlcnZlU3RhdGUiLCJuZXh0IiwidW5zdWJzY3JpYmUiLCJjb21wb3NlIiwiX2xlbiIsImZ1bmNzIiwiX2tleSIsImFyZyIsInJlZHVjZSIsImFwcGx5TWlkZGxld2FyZSIsIm1pZGRsZXdhcmVzIiwic3RvcmUiLCJfZGlzcGF0Y2giLCJtaWRkbGV3YXJlQVBJIiwiY2hhaW4iLCJtaWRkbGV3YXJlIiwiY3JlYXRlVGh1bmtNaWRkbGV3YXJlIiwiZXh0cmFBcmd1bWVudCIsInRodW5rIiwid2l0aEV4dHJhQXJndW1lbnQiLCJleHRlbmRTdGF0aWNzIiwiX19leHRlbmRzIiwiX19wcm90b19fIiwiVHlwZUVycm9yIiwiU3RyaW5nIiwiX18iLCJfX3NwcmVhZEFycmF5IiwidG8iLCJpbCIsIl9fZGVmUHJvcCIsIl9fZGVmUHJvcHMiLCJfX2dldE93blByb3BEZXNjcyIsIl9fZ2V0T3duUHJvcFN5bWJvbHMiLCJfX2hhc093blByb3AiLCJfX3Byb3BJc0VudW0iLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIl9fZGVmTm9ybWFsUHJvcCIsIl9fc3ByZWFkVmFsdWVzIiwicHJvcCIsIl9pIiwiX2MiLCJfX3NwcmVhZFByb3BzIiwiY29tcG9zZVdpdGhEZXZUb29scyIsIndpbmRvdyIsIl9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX0NPTVBPU0VfXyIsIl9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX18iLCJNaWRkbGV3YXJlQXJyYXkiLCJfc3VwZXIiLCJhcmdzIiwiX3RoaXMiLCJzcGVjaWVzIiwiYXJyIiwicHJlcGVuZCIsImZyZWV6ZURyYWZ0YWJsZSIsInZhbCIsImNvbmZpZ3VyZVN0b3JlIiwib3B0aW9ucyIsInJvb3RSZWR1Y2VyIiwiY3VycmllZEdldERlZmF1bHRNaWRkbGV3YXJlIiwibWlkZGxld2FyZUFycmF5IiwiaW1tdXRhYmxlQ2hlY2siLCJzZXJpYWxpemFibGVDaGVjayIsImlzQm9vbGVhbiIsImdldERlZmF1bHRNaWRkbGV3YXJlIiwiX2QiLCJfZSIsIl9mIiwiZGV2VG9vbHMiLCJfZyIsIl9oIiwiZW5oYW5jZXJzIiwiYmFzZVByb3RvIiwicmVkdWNlcnMiLCJyZWR1Y2VyS2V5cyIsImZpbmFsUmVkdWNlcnMiLCJzaGFwZUFzc2VydGlvbkVycm9yIiwiZmluYWxSZWR1Y2VyS2V5cyIsImFzc2VydFJlZHVjZXJTaGFwZSIsInN0YXRlIiwiaGFzQ2hhbmdlZCIsIm5leHRTdGF0ZSIsInByZXZpb3VzU3RhdGVGb3JLZXkiLCJuZXh0U3RhdGVGb3JLZXkiLCJjb21iaW5lUmVkdWNlcnMiLCJmaW5hbE1pZGRsZXdhcmUiLCJtaWRkbGV3YXJlRW5oYW5jZXIiLCJmaW5hbENvbXBvc2UiLCJ0cmFjZSIsInN0b3JlRW5oYW5jZXJzIiwiY3JlYXRlQWN0aW9uIiwicHJlcGFyZUFjdGlvbiIsImFjdGlvbkNyZWF0b3IiLCJwcmVwYXJlZCIsInBheWxvYWQiLCJtZXRhIiwiZXJyb3IiLCJtYXRjaCIsImV4ZWN1dGVSZWR1Y2VyQnVpbGRlckNhbGxiYWNrIiwiYnVpbGRlckNhbGxiYWNrIiwiZGVmYXVsdENhc2VSZWR1Y2VyIiwiYWN0aW9uc01hcCIsImFjdGlvbk1hdGNoZXJzIiwiYnVpbGRlciIsImFkZENhc2UiLCJ0eXBlT3JBY3Rpb25DcmVhdG9yIiwiYWRkTWF0Y2hlciIsIm1hdGNoZXIiLCJhZGREZWZhdWx0Q2FzZSIsImNyZWF0ZVNsaWNlIiwibmFtZSIsIl9yZWR1Y2VyIiwiaW5pdGlhbFN0YXRlIiwicmVkdWNlck5hbWVzIiwic2xpY2VDYXNlUmVkdWNlcnNCeU5hbWUiLCJzbGljZUNhc2VSZWR1Y2Vyc0J5VHlwZSIsImFjdGlvbkNyZWF0b3JzIiwiYnVpbGRSZWR1Y2VyIiwiZXh0cmFSZWR1Y2VycyIsImZpbmFsQ2FzZVJlZHVjZXJzIiwibWFwT3JCdWlsZGVyQ2FsbGJhY2siLCJnZXRJbml0aWFsU3RhdGUiLCJmaW5hbEFjdGlvbk1hdGNoZXJzIiwiZmluYWxEZWZhdWx0Q2FzZVJlZHVjZXIiLCJpc1N0YXRlRnVuY3Rpb24iLCJmcm96ZW5Jbml0aWFsU3RhdGVfMSIsImNhc2VSZWR1Y2VycyIsImNyIiwicHJldmlvdXNTdGF0ZSIsImNhc2VSZWR1Y2VyIiwicmVzdWx0IiwiZHJhZnQiLCJjcmVhdGVSZWR1Y2VyIiwicmVkdWNlck5hbWUiLCJwcmVwYXJlQ2FsbGJhY2siLCJtYXliZVJlZHVjZXJXaXRoUHJlcGFyZSIsInByZXBhcmUiLCJhY3Rpb25zIiwiY29tbW9uUHJvcGVydGllcyIsIlJlamVjdFdpdGhWYWx1ZSIsIkZ1bGZpbGxXaXRoTWV0YSIsIm1pbmlTZXJpYWxpemVFcnJvciIsInNpbXBsZUVycm9yIiwiY29tbW9uUHJvcGVydGllc18xIiwicHJvcGVydHkiLCJtZXNzYWdlIiwiY3JlYXRlQXN5bmNUaHVuayIsInR5cGVQcmVmaXgiLCJwYXlsb2FkQ3JlYXRvciIsImZ1bGZpbGxlZCIsInJlcXVlc3RJZCIsInJlcXVlc3RTdGF0dXMiLCJwZW5kaW5nIiwicmVqZWN0ZWQiLCJzZXJpYWxpemVFcnJvciIsInJlamVjdGVkV2l0aFZhbHVlIiwiYWJvcnRlZCIsImNvbmRpdGlvbiIsIkFDIiwiQWJvcnRDb250cm9sbGVyIiwiY2xhc3NfMSIsInNpZ25hbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJkaXNwYXRjaEV2ZW50Iiwib25hYm9ydCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJyZWFzb24iLCJ0aHJvd0lmQWJvcnRlZCIsImFib3J0IiwiYXNzaWduIiwiZXh0cmEiLCJhYm9ydFJlYXNvbiIsImlkR2VuZXJhdG9yIiwic2l6ZSIsImlkIiwibmFub2lkIiwiYWJvcnRDb250cm9sbGVyIiwiYWJvcnRlZFByb21pc2UiLCJyZWplY3QiLCJzdGFydGVkIiwicHJvbWlzZSIsIl9fdGhpcyIsIl9fYXJndW1lbnRzIiwiZ2VuZXJhdG9yIiwiX2EiLCJfYiIsImZpbmFsQWN0aW9uIiwiY29uZGl0aW9uUmVzdWx0IiwiZXJyXzEiLCJ0aGlzQXJnIiwiYm9keSIsImxhYmVsIiwic2VudCIsInRyeXMiLCJvcHMiLCJ2ZXJiIiwiZG9uZSIsInBvcCIsInN0ZXAiLCJfX2dlbmVyYXRvciIsImdldFBlbmRpbmdNZXRhIiwicmFjZSIsInJlc29sdmUiLCJyZWplY3RXaXRoVmFsdWUiLCJmdWxmaWxsV2l0aFZhbHVlIiwiZGlzcGF0Y2hDb25kaXRpb25SZWplY3Rpb24iLCJ0aHJvdyIsInVud3JhcCIsInVud3JhcFJlc3VsdCIsImFsbSIsIm1pbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJfayIsInVybCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidGVzdCIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZVJvb3QiLCJkZWJvdW5jZSIsImZ1bmMiLCJ3YWl0IiwiaW1tZWRpYXRlIiwidGltZW91dCIsImNvbnRleHQiLCJ0aW1lc3RhbXAiLCJsYXRlciIsImxhc3QiLCJEYXRlIiwibm93Iiwic2V0VGltZW91dCIsImRlYm91bmNlZCIsImNhbGxOb3ciLCJjbGVhclRpbWVvdXQiLCJmbHVzaCIsInJlYWN0SXMiLCJSRUFDVF9TVEFUSUNTIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJjb250ZXh0VHlwZSIsImNvbnRleHRUeXBlcyIsImRlZmF1bHRQcm9wcyIsImRpc3BsYXlOYW1lIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwibWl4aW5zIiwicHJvcFR5cGVzIiwiS05PV05fU1RBVElDUyIsImNhbGxlciIsImNhbGxlZSIsImFyaXR5IiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsImdldFN0YXRpY3MiLCJjb21wb25lbnQiLCJpc01lbW8iLCJGb3J3YXJkUmVmIiwicmVuZGVyIiwiTWVtbyIsIm9iamVjdFByb3RvdHlwZSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50IiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJkZXNjcmlwdG9yIiwiYWEiLCJjYSIsImRhIiwiZWEiLCJmYSIsImhhIiwiaWEiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJqYSIsImthIiwibGEiLCJtYSIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsInJlbW92ZUVtcHR5U3RyaW5nIiwidG9Mb3dlckNhc2UiLCJyYSIsInNhIiwidG9VcHBlckNhc2UiLCJ0YSIsInBhIiwiaXNOYU4iLCJxYSIsIm9hIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJ4bGlua0hyZWYiLCJ1YSIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwidmEiLCJ3YSIsInlhIiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJNYSIsInN0YWNrIiwidHJpbSIsIk5hIiwiT2EiLCJwcmVwYXJlU3RhY2tUcmFjZSIsImNvbnN0cnVjdCIsImluY2x1ZGVzIiwiUGEiLCJ0YWciLCJRYSIsIiQkdHlwZW9mIiwiX2NvbnRleHQiLCJfcGF5bG9hZCIsIl9pbml0IiwiUmEiLCJTYSIsIlRhIiwibm9kZU5hbWUiLCJWYSIsIl92YWx1ZVRyYWNrZXIiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiVWEiLCJXYSIsImNoZWNrZWQiLCJYYSIsImFjdGl2ZUVsZW1lbnQiLCJZYSIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiWmEiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJvd25lckRvY3VtZW50IiwiZWIiLCJmYiIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZGlzYWJsZWQiLCJnYiIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiY2hpbGRyZW4iLCJoYiIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsIm9iIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJwYiIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYXNwZWN0UmF0aW8iLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJxYiIsInJiIiwic2IiLCJzdHlsZSIsInNldFByb3BlcnR5IiwiY2hhckF0IiwidGIiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwicGFyYW0iLCJ0cmFjayIsIndiciIsInViIiwidmIiLCJpcyIsIndiIiwieGIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwieWIiLCJ6YiIsIkFiIiwiQmIiLCJDYiIsInN0YXRlTm9kZSIsIkRiIiwiRWIiLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiTmIiLCJvbkVycm9yIiwiT2IiLCJQYiIsIlFiIiwiUmIiLCJTYiIsIlRiIiwiVmIiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCJmbGFncyIsIldiIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJYYiIsIlpiIiwiY2hpbGQiLCJzaWJsaW5nIiwiY3VycmVudCIsIlliIiwiJGIiLCJhYyIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJiYyIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiY2MiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsImRjIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwidW5zdGFibGVfbm93IiwiZWMiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsImZjIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJnYyIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiaGMiLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsImljIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJqYyIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsImtjIiwibGMiLCJvYyIsImNsejMyIiwicGMiLCJxYyIsImxvZyIsIkxOMiIsInJjIiwic2MiLCJ0YyIsInVjIiwicGVuZGluZ0xhbmVzIiwic3VzcGVuZGVkTGFuZXMiLCJwaW5nZWRMYW5lcyIsImVudGFuZ2xlZExhbmVzIiwiZW50YW5nbGVtZW50cyIsInZjIiwieGMiLCJ5YyIsInpjIiwiQWMiLCJldmVudFRpbWVzIiwiQ2MiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIlFjIiwiUmMiLCJTYyIsInBvaW50ZXJJZCIsIlRjIiwibmF0aXZlRXZlbnQiLCJibG9ja2VkT24iLCJkb21FdmVudE5hbWUiLCJldmVudFN5c3RlbUZsYWdzIiwidGFyZ2V0Q29udGFpbmVycyIsIlZjIiwiV2MiLCJwcmlvcml0eSIsImlzRGVoeWRyYXRlZCIsImNvbnRhaW5lckluZm8iLCJYYyIsIlljIiwic2hpZnQiLCJaYyIsIiRjIiwiYWQiLCJiZCIsImNkIiwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWciLCJkZCIsImVkIiwidHJhbnNpdGlvbiIsImZkIiwiZ2QiLCJoZCIsIlVjIiwic3RvcFByb3BhZ2F0aW9uIiwiamQiLCJrZCIsImxkIiwibWQiLCJuZCIsIm9kIiwia2V5Q29kZSIsImNoYXJDb2RlIiwicGQiLCJxZCIsInJkIiwiX3JlYWN0TmFtZSIsIl90YXJnZXRJbnN0IiwiY3VycmVudFRhcmdldCIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwicHJldmVudERlZmF1bHQiLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiaXNQZXJzaXN0ZW50Iiwid2QiLCJ4ZCIsInlkIiwic2QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJpc1RydXN0ZWQiLCJ0ZCIsInVkIiwidmlldyIsImRldGFpbCIsInZkIiwiQWQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsImN0cmxLZXkiLCJzaGlmdEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJnZXRNb2RpZmllclN0YXRlIiwiemQiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiQmQiLCJEZCIsImRhdGFUcmFuc2ZlciIsIkZkIiwiSGQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiSWQiLCJjbGlwYm9hcmREYXRhIiwiSmQiLCJMZCIsIk1kIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIk5kIiwiT2QiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiUGQiLCJRZCIsImZyb21DaGFyQ29kZSIsImxvY2F0aW9uIiwicmVwZWF0IiwibG9jYWxlIiwid2hpY2giLCJSZCIsIlRkIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiVmQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwiWGQiLCJZZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwiWmQiLCIkZCIsImFlIiwiYmUiLCJkb2N1bWVudE1vZGUiLCJjZSIsImRlIiwiZWUiLCJmZSIsImdlIiwiaGUiLCJpZSIsImxlIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJlbWFpbCIsIm1vbnRoIiwibnVtYmVyIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwid2VlayIsIm1lIiwibmUiLCJvZSIsImV2ZW50IiwicGUiLCJxZSIsInJlIiwic2UiLCJ0ZSIsInVlIiwidmUiLCJ3ZSIsInhlIiwieWUiLCJ6ZSIsIm9uaW5wdXQiLCJBZSIsImRldGFjaEV2ZW50IiwiQmUiLCJDZSIsImF0dGFjaEV2ZW50IiwiRGUiLCJFZSIsIkZlIiwiSGUiLCJJZSIsIkplIiwiS2UiLCJub2RlIiwib2Zmc2V0IiwibmV4dFNpYmxpbmciLCJMZSIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJNZSIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsImhyZWYiLCJOZSIsImNvbnRlbnRFZGl0YWJsZSIsIk9lIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImRvY3VtZW50RWxlbWVudCIsInN0YXJ0IiwiZW5kIiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJkZWZhdWx0VmlldyIsImdldFNlbGVjdGlvbiIsImV4dGVuZCIsInJhbmdlQ291bnQiLCJhbmNob3JOb2RlIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJlbGVtZW50IiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJmb2N1cyIsIlBlIiwiUWUiLCJSZSIsIlNlIiwiVGUiLCJVZSIsIlZlIiwiV2UiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJYZSIsIlllIiwiWmUiLCJhbmltYXRpb24iLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwiZWYiLCJmZiIsImdmIiwiaGYiLCJsZiIsIm1mIiwibmYiLCJVYiIsImluc3RhbmNlIiwib2YiLCJwZiIsInFmIiwicmYiLCJzZiIsImNhcHR1cmUiLCJwYXNzaXZlIiwidGYiLCJ1ZiIsInBhcmVudFdpbmRvdyIsInZmIiwid2YiLCJuYSIsInhhIiwiJGEiLCJiYSIsImplIiwiY2hhciIsImtlIiwidW5zaGlmdCIsInhmIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJDZiIsIkRmIiwiRWYiLCJfX2h0bWwiLCJGZiIsIkdmIiwiSGYiLCJKZiIsInF1ZXVlTWljcm90YXNrIiwiY2F0Y2giLCJJZiIsIktmIiwiTGYiLCJNZiIsInByZXZpb3VzU2libGluZyIsIk5mIiwiT2YiLCJQZiIsIlFmIiwiUmYiLCJTZiIsIlRmIiwiVWYiLCJWZiIsIldmIiwiWGYiLCJZZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIlpmIiwiJGYiLCJhZyIsImJnIiwiZ2V0Q2hpbGRDb250ZXh0IiwiY2ciLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJqZyIsImtnIiwibGciLCJtZyIsIm5nIiwib2ciLCJwZyIsInFnIiwicmciLCJzZyIsInRnIiwidWciLCJ2ZyIsIndnIiwieGciLCJ5ZyIsInpnIiwiQWciLCJCZyIsImVsZW1lbnRUeXBlIiwiZGVsZXRpb25zIiwiQ2ciLCJwZW5kaW5nUHJvcHMiLCJvdmVyZmxvdyIsInRyZWVDb250ZXh0IiwicmV0cnlMYW5lIiwiRGciLCJtb2RlIiwiRWciLCJGZyIsIkdnIiwibWVtb2l6ZWRQcm9wcyIsIkhnIiwiSWciLCJKZyIsIktnIiwiTGciLCJNZyIsIk5nIiwiT2ciLCJQZyIsIlFnIiwiUmciLCJfY3VycmVudFZhbHVlIiwiU2ciLCJjaGlsZExhbmVzIiwiVGciLCJkZXBlbmRlbmNpZXMiLCJmaXJzdENvbnRleHQiLCJsYW5lcyIsIlVnIiwiVmciLCJtZW1vaXplZFZhbHVlIiwiV2ciLCJYZyIsIllnIiwiaW50ZXJsZWF2ZWQiLCJaZyIsIiRnIiwiYWgiLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImZpcnN0QmFzZVVwZGF0ZSIsImxhc3RCYXNlVXBkYXRlIiwic2hhcmVkIiwiZWZmZWN0cyIsImJoIiwiY2giLCJldmVudFRpbWUiLCJsYW5lIiwiY2FsbGJhY2siLCJkaCIsImVoIiwiZmgiLCJnaCIsImhoIiwiaWgiLCJqaCIsIkNvbXBvbmVudCIsInJlZnMiLCJraCIsIm5oIiwiaXNNb3VudGVkIiwiX3JlYWN0SW50ZXJuYWxzIiwiZW5xdWV1ZVNldFN0YXRlIiwibGgiLCJtaCIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJvaCIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwicGgiLCJ1cGRhdGVyIiwicWgiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJyaCIsInByb3BzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJzaCIsInJlZiIsIl9vd25lciIsIl9zdHJpbmdSZWYiLCJ0aCIsInVoIiwidmgiLCJ3aCIsInhoIiwieWgiLCJpbXBsZW1lbnRhdGlvbiIsInpoIiwiQWgiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsIkloIiwidGFnTmFtZSIsIkpoIiwiS2giLCJMaCIsIk1oIiwicmV2ZWFsT3JkZXIiLCJOaCIsIk9oIiwiX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnkiLCJQaCIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJRaCIsIlJoIiwiU2giLCJUaCIsIlVoIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiYmFzZVF1ZXVlIiwicXVldWUiLCJkaSIsImVpIiwiZmkiLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiaGFzRWFnZXJTdGF0ZSIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImdpIiwiaGkiLCJpaSIsImppIiwia2kiLCJnZXRTbmFwc2hvdCIsImxpIiwibWkiLCJuaSIsImxhc3RFZmZlY3QiLCJzdG9yZXMiLCJvaSIsInBpIiwicWkiLCJyaSIsImRlc3Ryb3kiLCJkZXBzIiwic2kiLCJ0aSIsInVpIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsIkFpIiwiQmkiLCJDaSIsIkRpIiwiRWkiLCJGaSIsIkdpIiwiSGkiLCJJaSIsIkppIiwicmVhZENvbnRleHQiLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlSW5zZXJ0aW9uRWZmZWN0IiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsInVzZURlYnVnVmFsdWUiLCJ1c2VEZWZlcnJlZFZhbHVlIiwidXNlVHJhbnNpdGlvbiIsInVzZU11dGFibGVTb3VyY2UiLCJ1c2VTeW5jRXh0ZXJuYWxTdG9yZSIsInVzZUlkIiwidW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyIiwiaWRlbnRpZmllclByZWZpeCIsIktpIiwiZGlnZXN0IiwiTGkiLCJNaSIsImNvbnNvbGUiLCJOaSIsIldlYWtNYXAiLCJPaSIsIlBpIiwiUWkiLCJSaSIsImNvbXBvbmVudERpZENhdGNoIiwiU2kiLCJjb21wb25lbnRTdGFjayIsIlRpIiwicGluZ0NhY2hlIiwiVWkiLCJWaSIsIldpIiwiWGkiLCJSZWFjdEN1cnJlbnRPd25lciIsIllpIiwiWmkiLCIkaSIsImFqIiwiYmoiLCJjaiIsImRqIiwiZWoiLCJiYXNlTGFuZXMiLCJjYWNoZVBvb2wiLCJ0cmFuc2l0aW9ucyIsImZqIiwiZ2oiLCJoaiIsImlqIiwiamoiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJraiIsImxqIiwicGVuZGluZ0NvbnRleHQiLCJtaiIsIkFqIiwiQ2oiLCJEaiIsIm5qIiwib2oiLCJwaiIsImZhbGxiYWNrIiwicWoiLCJyaiIsInRqIiwiZGF0YXNldCIsImRnc3QiLCJ1aiIsInZqIiwiX3JlYWN0UmV0cnkiLCJzaiIsInN1YnRyZWVGbGFncyIsIndqIiwieGoiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsInRhaWwiLCJ0YWlsTW9kZSIsInlqIiwiRWoiLCJGaiIsIkdqIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsInN1cHByZXNzSHlkcmF0aW9uV2FybmluZyIsIm9uQ2xpY2siLCJvbmNsaWNrIiwiY3JlYXRlRWxlbWVudE5TIiwiYXV0b0ZvY3VzIiwiY3JlYXRlVGV4dE5vZGUiLCJIaiIsIklqIiwiSmoiLCJLaiIsIkxqIiwiV2Vha1NldCIsIlYiLCJNaiIsIk5qIiwiT2oiLCJRaiIsIlJqIiwiU2oiLCJUaiIsIlVqIiwiVmoiLCJXaiIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJYaiIsIllqIiwiWmoiLCJhayIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJiayIsImNrIiwiZGsiLCJlayIsImZrIiwiaXNIaWRkZW4iLCJnayIsImhrIiwiZGlzcGxheSIsImlrIiwiamsiLCJrayIsImxrIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJzcmMiLCJXayIsIm1rIiwiY2VpbCIsIm5rIiwib2siLCJwayIsIlkiLCJxayIsInJrIiwic2siLCJ0ayIsInVrIiwiSW5maW5pdHkiLCJ2ayIsIndrIiwieGsiLCJ5ayIsInprIiwiQWsiLCJCayIsIkNrIiwiRGsiLCJFayIsImNhbGxiYWNrTm9kZSIsImV4cGlyYXRpb25UaW1lcyIsImV4cGlyZWRMYW5lcyIsIndjIiwiY2FsbGJhY2tQcmlvcml0eSIsImlnIiwiRmsiLCJHayIsIkhrIiwiSWsiLCJKayIsIktrIiwiTGsiLCJNayIsIk5rIiwiT2siLCJQayIsImZpbmlzaGVkV29yayIsImZpbmlzaGVkTGFuZXMiLCJRayIsInRpbWVvdXRIYW5kbGUiLCJSayIsIlNrIiwiVGsiLCJVayIsIlZrIiwibXV0YWJsZVJlYWRMYW5lcyIsIkJjIiwiUGoiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm1jIiwib25SZWNvdmVyYWJsZUVycm9yIiwiWGsiLCJvblBvc3RDb21taXRGaWJlclJvb3QiLCJZayIsIlprIiwiYWwiLCJpc1JlYWN0Q29tcG9uZW50IiwicGVuZGluZ0NoaWxkcmVuIiwiYmwiLCJtdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhIiwiY2wiLCJjYWNoZSIsInBlbmRpbmdTdXNwZW5zZUJvdW5kYXJpZXMiLCJkbCIsImVsIiwiZmwiLCJnbCIsImhsIiwiamwiLCJ6aiIsIiRrIiwibGwiLCJyZXBvcnRFcnJvciIsIm1sIiwiX2ludGVybmFsUm9vdCIsIm5sIiwib2wiLCJwbCIsInFsIiwic2wiLCJybCIsInVubW91bnQiLCJ1bnN0YWJsZV9zY2hlZHVsZUh5ZHJhdGlvbiIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtIiwidGwiLCJ1c2luZ0NsaWVudEVudHJ5UG9pbnQiLCJFdmVudHMiLCJ1bCIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInZlcnNpb24iLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwidmwiLCJyZW5kZXJlckNvbmZpZyIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoIiwib3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoIiwib3ZlcnJpZGVQcm9wcyIsIm92ZXJyaWRlUHJvcHNEZWxldGVQYXRoIiwib3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGgiLCJzZXRFcnJvckhhbmRsZXIiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsInJlY29uY2lsZXJWZXJzaW9uIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwid2wiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsImNyZWF0ZVBvcnRhbCIsImNyZWF0ZVJvb3QiLCJ1bnN0YWJsZV9zdHJpY3RNb2RlIiwiZmluZERPTU5vZGUiLCJmbHVzaFN5bmMiLCJoeWRyYXRlIiwiaHlkcmF0ZVJvb3QiLCJoeWRyYXRlZFNvdXJjZXMiLCJfZ2V0VmVyc2lvbiIsIl9zb3VyY2UiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImNoZWNrRENFIiwiZXJyIiwiQXN5bmNNb2RlIiwiQ29uY3VycmVudE1vZGUiLCJDb250ZXh0Q29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJFbGVtZW50IiwiRnJhZ21lbnQiLCJMYXp5IiwiUG9ydGFsIiwiUHJvZmlsZXIiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJ0eXBlT2YiLCJiYXRjaCIsImdldEJhdGNoIiwidXNlU3luY0V4dGVybmFsU3RvcmVXaXRoU2VsZWN0b3IiLCJyZWZFcXVhbGl0eSIsImNyZWF0ZVNlbGVjdG9ySG9vayIsInVzZVJlZHV4Q29udGV4dCIsInNlbGVjdG9yIiwiZXF1YWxpdHlGbiIsInN1YnNjcmlwdGlvbiIsImdldFNlcnZlclN0YXRlIiwic2VsZWN0ZWRTdGF0ZSIsImFkZE5lc3RlZFN1YiIsInVzZVNlbGVjdG9yIiwibnVsbExpc3RlbmVycyIsIm5vdGlmeSIsInNlcnZlclN0YXRlIiwiY29udGV4dFZhbHVlIiwicGFyZW50U3ViIiwiaGFuZGxlQ2hhbmdlV3JhcHBlciIsIm9uU3RhdGVDaGFuZ2UiLCJ0cnlTdWJzY3JpYmUiLCJmaXJzdCIsInByZXYiLCJjcmVhdGVMaXN0ZW5lckNvbGxlY3Rpb24iLCJub3RpZnlOZXN0ZWRTdWJzIiwiQm9vbGVhbiIsInRyeVVuc3Vic2NyaWJlIiwiZ2V0TGlzdGVuZXJzIiwiQ29udGV4dCIsIlByb3ZpZGVyIiwiY3JlYXRlU3RvcmVIb29rIiwiY3JlYXRlRGlzcGF0Y2hIb29rIiwidXNlU3RvcmUiLCJ1c2VEaXNwYXRjaCIsIm5ld0JhdGNoIiwiaW5pdGlhbGl6ZUNvbm5lY3QiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJlc2NhcGUiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsIkNoaWxkcmVuIiwiY291bnQiLCJ0b0FycmF5Iiwib25seSIsIlB1cmVDb21wb25lbnQiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJDb25zdW1lciIsIl9kZWZhdWx0VmFsdWUiLCJfZ2xvYmFsTmFtZSIsImNyZWF0ZUZhY3RvcnkiLCJjcmVhdGVSZWYiLCJmb3J3YXJkUmVmIiwiaXNWYWxpZEVsZW1lbnQiLCJsYXp5IiwibWVtbyIsInN0YXJ0VHJhbnNpdGlvbiIsInVuc3RhYmxlX2FjdCIsInNvcnRJbmRleCIsInBlcmZvcm1hbmNlIiwic2V0SW1tZWRpYXRlIiwic3RhcnRUaW1lIiwiZXhwaXJhdGlvblRpbWUiLCJwcmlvcml0eUxldmVsIiwibmF2aWdhdG9yIiwic2NoZWR1bGluZyIsImlzSW5wdXRQZW5kaW5nIiwiTWVzc2FnZUNoYW5uZWwiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwiZmxvb3IiLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJpbmRleEJ5SWRlbnRpZmllciIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4IiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pbmRleCIsImluc2VydCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJnZXRUYXJnZXQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImluc3QiLCJoYXNWYWx1ZSIsIl90eXBlb2YiLCJfcmVnZW5lcmF0b3JSdW50aW1lIiwiT3AiLCJoYXNPd24iLCIkU3ltYm9sIiwiaXRlcmF0b3JTeW1ib2wiLCJhc3luY0l0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvciIsInRvU3RyaW5nVGFnU3ltYm9sIiwidG9TdHJpbmdUYWciLCJkZWZpbmUiLCJ3cmFwIiwiaW5uZXJGbiIsIm91dGVyRm4iLCJzZWxmIiwidHJ5TG9jc0xpc3QiLCJwcm90b0dlbmVyYXRvciIsIkdlbmVyYXRvciIsIl9pbnZva2UiLCJtZXRob2QiLCJkZWxlZ2F0ZSIsImRlbGVnYXRlUmVzdWx0IiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsIkNvbnRpbnVlU2VudGluZWwiLCJfc2VudCIsImRpc3BhdGNoRXhjZXB0aW9uIiwiYWJydXB0IiwicmVjb3JkIiwidHJ5Q2F0Y2giLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwiSXRlcmF0b3JQcm90b3R5cGUiLCJnZXRQcm90byIsIk5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlIiwidmFsdWVzIiwiR3AiLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJBc3luY0l0ZXJhdG9yIiwiUHJvbWlzZUltcGwiLCJpbnZva2UiLCJfX2F3YWl0IiwidW53cmFwcGVkIiwicHJldmlvdXNQcm9taXNlIiwiY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmciLCJpbmZvIiwicmVzdWx0TmFtZSIsIm5leHRMb2MiLCJwdXNoVHJ5RW50cnkiLCJsb2NzIiwiZW50cnkiLCJ0cnlMb2MiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhZnRlckxvYyIsInRyeUVudHJpZXMiLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsInJlc2V0IiwiaXRlcmFibGUiLCJpdGVyYXRvck1ldGhvZCIsImRvbmVSZXN1bHQiLCJpc0dlbmVyYXRvckZ1bmN0aW9uIiwiZ2VuRnVuIiwiY3RvciIsIm1hcmsiLCJhd3JhcCIsImFzeW5jIiwiaXRlciIsInJldmVyc2UiLCJza2lwVGVtcFJlc2V0Iiwic3RvcCIsInJvb3RSZWNvcmQiLCJydmFsIiwiZXhjZXB0aW9uIiwiaGFuZGxlIiwibG9jIiwiY2F1Z2h0IiwiaGFzQ2F0Y2giLCJoYXNGaW5hbGx5IiwiZmluYWxseUVudHJ5IiwiY29tcGxldGUiLCJmaW5pc2giLCJ0aHJvd24iLCJkZWxlZ2F0ZVlpZWxkIiwicnVudGltZSIsInJlZ2VuZXJhdG9yUnVudGltZSIsImFjY2lkZW50YWxTdHJpY3RNb2RlIiwiZ2xvYmFsVGhpcyIsIl9hcnJheUxpa2VUb0FycmF5IiwibGVuIiwiYXJyMiIsImFzeW5jR2VuZXJhdG9yU3RlcCIsImdlbiIsIl9uZXh0IiwiX3Rocm93IiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJfc2xpY2VkVG9BcnJheSIsIl9zIiwiX2FyciIsIl9uIiwidW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJhcnJheUxpa2VUb0FycmF5IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwibWluTGVuIl0sInNvdXJjZVJvb3QiOiIifQ==