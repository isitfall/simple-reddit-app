/*! For license information please see main.js.LICENSE.txt */
(()=>{var e,n,t={714:(e,n,t)=>{"use strict";var r=t(294),o=t(745);function a(e,n,t,r,o,a,l){try{var i=e[a](l),u=i.value}catch(e){return void t(e)}i.done?n(u):Promise.resolve(u).then(r,o)}function l(e){return function(){var n=this,t=arguments;return new Promise((function(r,o){var l=e.apply(n,t);function i(e){a(l,r,o,i,u,"next",e)}function u(e){a(l,r,o,i,u,"throw",e)}i(void 0)}))}}function i(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function u(e,n){if(e){if("string"==typeof e)return i(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?i(e,n):void 0}}var c=t(687),s=t.n(c),f=t(296);function d(e){return function(e){if(Array.isArray(e))return i(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||u(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function p(e){for(var n=arguments.length,t=Array(n>1?n-1:0),r=1;r<n;r++)t[r-1]=arguments[r];throw Error("[Immer] minified error nr: "+e+(t.length?" "+t.map((function(e){return"'"+e+"'"})).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function A(e){return!!e&&!!e[ee]}function h(e){return!!e&&(function(e){if(!e||"object"!=typeof e)return!1;var n=Object.getPrototypeOf(e);if(null===n)return!0;var t=Object.hasOwnProperty.call(n,"constructor")&&n.constructor;return t===Object||"function"==typeof t&&Function.toString.call(t)===ne}(e)||Array.isArray(e)||!!e[Z]||!!e.constructor[Z]||w(e)||B(e))}function m(e,n,t){void 0===t&&(t=!1),0===y(e)?(t?Object.keys:te)(e).forEach((function(r){t&&"symbol"==typeof r||n(r,e[r],e)})):e.forEach((function(t,r){return n(r,t,e)}))}function y(e){var n=e[ee];return n?n.i>3?n.i-4:n.i:Array.isArray(e)?1:w(e)?2:B(e)?3:0}function v(e,n){return 2===y(e)?e.has(n):Object.prototype.hasOwnProperty.call(e,n)}function g(e,n,t){var r=y(e);2===r?e.set(n,t):3===r?(e.delete(n),e.add(t)):e[n]=t}function b(e,n){return e===n?0!==e||1/e==1/n:e!=e&&n!=n}function w(e){return Y&&e instanceof Map}function B(e){return G&&e instanceof Set}function E(e){return e.o||e.t}function k(e){if(Array.isArray(e))return Array.prototype.slice.call(e);var n=re(e);delete n[ee];for(var t=te(n),r=0;r<t.length;r++){var o=t[r],a=n[o];!1===a.writable&&(a.writable=!0,a.configurable=!0),(a.get||a.set)&&(n[o]={configurable:!0,writable:!0,enumerable:a.enumerable,value:e[o]})}return Object.create(Object.getPrototypeOf(e),n)}function S(e,n){return void 0===n&&(n=!1),C(e)||A(e)||!h(e)||(y(e)>1&&(e.set=e.add=e.clear=e.delete=x),Object.freeze(e),n&&m(e,(function(e,n){return S(n,!0)}),!0)),e}function x(){p(2)}function C(e){return null==e||"object"!=typeof e||Object.isFrozen(e)}function _(e){var n=oe[e];return n||p(18,e),n}function P(){return Q}function O(e,n){n&&(_("Patches"),e.u=[],e.s=[],e.v=n)}function N(e){z(e),e.p.forEach(L),e.p=null}function z(e){e===Q&&(Q=e.l)}function M(e){return Q={p:[],l:Q,h:e,m:!0,_:0}}function L(e){var n=e[ee];0===n.i||1===n.i?n.j():n.O=!0}function T(e,n){n._=n.p.length;var t=n.p[0],r=void 0!==e&&e!==t;return n.h.g||_("ES5").S(n,e,r),r?(t[ee].P&&(N(n),p(4)),h(e)&&(e=I(n,e),n.l||R(n,e)),n.u&&_("Patches").M(t[ee].t,e,n.u,n.s)):e=I(n,t,[]),N(n),n.u&&n.v(n.u,n.s),e!==J?e:void 0}function I(e,n,t){if(C(n))return n;var r=n[ee];if(!r)return m(n,(function(o,a){return j(e,r,n,o,a,t)}),!0),n;if(r.A!==e)return n;if(!r.P)return R(e,r.t,!0),r.t;if(!r.I){r.I=!0,r.A._--;var o=4===r.i||5===r.i?r.o=k(r.k):r.o;m(3===r.i?new Set(o):o,(function(n,a){return j(e,r,o,n,a,t)})),R(e,o,!1),t&&e.u&&_("Patches").R(r,t,e.u,e.s)}return r.o}function j(e,n,t,r,o,a){if(A(o)){var l=I(e,o,a&&n&&3!==n.i&&!v(n.D,r)?a.concat(r):void 0);if(g(t,r,l),!A(l))return;e.m=!1}if(h(o)&&!C(o)){if(!e.h.F&&e._<1)return;I(e,o),n&&n.A.l||R(e,o)}}function R(e,n,t){void 0===t&&(t=!1),e.h.F&&e.m&&S(n,t)}function D(e,n){var t=e[ee];return(t?E(t):e)[n]}function F(e,n){if(n in e)for(var t=Object.getPrototypeOf(e);t;){var r=Object.getOwnPropertyDescriptor(t,n);if(r)return r;t=Object.getPrototypeOf(t)}}function U(e){e.P||(e.P=!0,e.l&&U(e.l))}function $(e){e.o||(e.o=k(e.t))}function V(e,n,t){var r=w(n)?_("MapSet").N(n,t):B(n)?_("MapSet").T(n,t):e.g?function(e,n){var t=Array.isArray(e),r={i:t?1:0,A:n?n.A:P(),P:!1,I:!1,D:{},l:n,t:e,k:null,o:null,j:null,C:!1},o=r,a=ae;t&&(o=[r],a=le);var l=Proxy.revocable(o,a),i=l.revoke,u=l.proxy;return r.k=u,r.j=i,u}(n,t):_("ES5").J(n,t);return(t?t.A:P()).p.push(r),r}function H(e){return A(e)||p(22,e),function e(n){if(!h(n))return n;var t,r=n[ee],o=y(n);if(r){if(!r.P&&(r.i<4||!_("ES5").K(r)))return r.t;r.I=!0,t=W(n,o),r.I=!1}else t=W(n,o);return m(t,(function(n,o){r&&function(e,n){return 2===y(e)?e.get(n):e[n]}(r.t,n)===o||g(t,n,e(o))})),3===o?new Set(t):t}(e)}function W(e,n){switch(n){case 2:return new Map(e);case 3:return Array.from(e)}return k(e)}var q,Q,K="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),Y="undefined"!=typeof Map,G="undefined"!=typeof Set,X="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,J=K?Symbol.for("immer-nothing"):((q={})["immer-nothing"]=!0,q),Z=K?Symbol.for("immer-draftable"):"__$immer_draftable",ee=K?Symbol.for("immer-state"):"__$immer_state",ne=("undefined"!=typeof Symbol&&Symbol.iterator,""+Object.prototype.constructor),te="undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Object.getOwnPropertyNames,re=Object.getOwnPropertyDescriptors||function(e){var n={};return te(e).forEach((function(t){n[t]=Object.getOwnPropertyDescriptor(e,t)})),n},oe={},ae={get:function(e,n){if(n===ee)return e;var t=E(e);if(!v(t,n))return function(e,n,t){var r,o=F(n,t);return o?"value"in o?o.value:null===(r=o.get)||void 0===r?void 0:r.call(e.k):void 0}(e,t,n);var r=t[n];return e.I||!h(r)?r:r===D(e.t,n)?($(e),e.o[n]=V(e.A.h,r,e)):r},has:function(e,n){return n in E(e)},ownKeys:function(e){return Reflect.ownKeys(E(e))},set:function(e,n,t){var r=F(E(e),n);if(null==r?void 0:r.set)return r.set.call(e.k,t),!0;if(!e.P){var o=D(E(e),n),a=null==o?void 0:o[ee];if(a&&a.t===t)return e.o[n]=t,e.D[n]=!1,!0;if(b(t,o)&&(void 0!==t||v(e.t,n)))return!0;$(e),U(e)}return e.o[n]===t&&"number"!=typeof t&&(void 0!==t||n in e.o)||(e.o[n]=t,e.D[n]=!0,!0)},deleteProperty:function(e,n){return void 0!==D(e.t,n)||n in e.t?(e.D[n]=!1,$(e),U(e)):delete e.D[n],e.o&&delete e.o[n],!0},getOwnPropertyDescriptor:function(e,n){var t=E(e),r=Reflect.getOwnPropertyDescriptor(t,n);return r?{writable:!0,configurable:1!==e.i||"length"!==n,enumerable:r.enumerable,value:t[n]}:r},defineProperty:function(){p(11)},getPrototypeOf:function(e){return Object.getPrototypeOf(e.t)},setPrototypeOf:function(){p(12)}},le={};m(ae,(function(e,n){le[e]=function(){return arguments[0]=arguments[0][0],n.apply(this,arguments)}})),le.deleteProperty=function(e,n){return le.set.call(this,e,n,void 0)},le.set=function(e,n,t){return ae.set.call(this,e[0],n,t,e[0])};var ie=function(){function e(e){var n=this;this.g=X,this.F=!0,this.produce=function(e,t,r){if("function"==typeof e&&"function"!=typeof t){var o=t;t=e;var a=n;return function(e){var n=this;void 0===e&&(e=o);for(var r=arguments.length,l=Array(r>1?r-1:0),i=1;i<r;i++)l[i-1]=arguments[i];return a.produce(e,(function(e){var r;return(r=t).call.apply(r,[n,e].concat(l))}))}}var l;if("function"!=typeof t&&p(6),void 0!==r&&"function"!=typeof r&&p(7),h(e)){var i=M(n),u=V(n,e,void 0),c=!0;try{l=t(u),c=!1}finally{c?N(i):z(i)}return"undefined"!=typeof Promise&&l instanceof Promise?l.then((function(e){return O(i,r),T(e,i)}),(function(e){throw N(i),e})):(O(i,r),T(l,i))}if(!e||"object"!=typeof e){if(void 0===(l=t(e))&&(l=e),l===J&&(l=void 0),n.F&&S(l,!0),r){var s=[],f=[];_("Patches").M(e,l,s,f),r(s,f)}return l}p(21,e)},this.produceWithPatches=function(e,t){if("function"==typeof e)return function(t){for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];return n.produceWithPatches(t,(function(n){return e.apply(void 0,[n].concat(o))}))};var r,o,a=n.produce(e,t,(function(e,n){r=e,o=n}));return"undefined"!=typeof Promise&&a instanceof Promise?a.then((function(e){return[e,r,o]})):[a,r,o]},"boolean"==typeof(null==e?void 0:e.useProxies)&&this.setUseProxies(e.useProxies),"boolean"==typeof(null==e?void 0:e.autoFreeze)&&this.setAutoFreeze(e.autoFreeze)}var n=e.prototype;return n.createDraft=function(e){h(e)||p(8),A(e)&&(e=H(e));var n=M(this),t=V(this,e,void 0);return t[ee].C=!0,z(n),t},n.finishDraft=function(e,n){var t=(e&&e[ee]).A;return O(t,n),T(void 0,t)},n.setAutoFreeze=function(e){this.F=e},n.setUseProxies=function(e){e&&!X&&p(20),this.g=e},n.applyPatches=function(e,n){var t;for(t=n.length-1;t>=0;t--){var r=n[t];if(0===r.path.length&&"replace"===r.op){e=r.value;break}}t>-1&&(n=n.slice(t+1));var o=_("Patches").$;return A(e)?o(e,n):this.produce(e,(function(e){return o(e,n)}))},e}(),ue=new ie,ce=ue.produce;ue.produceWithPatches.bind(ue),ue.setAutoFreeze.bind(ue),ue.setUseProxies.bind(ue),ue.applyPatches.bind(ue),ue.createDraft.bind(ue),ue.finishDraft.bind(ue);const se=ce;function fe(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function de(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function pe(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?de(Object(t),!0).forEach((function(n){fe(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):de(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function Ae(e){return"Minified Redux error #"+e+"; visit https://redux.js.org/Errors?code="+e+" for the full message or use the non-minified dev environment for full errors. "}var he="function"==typeof Symbol&&Symbol.observable||"@@observable",me=function(){return Math.random().toString(36).substring(7).split("").join(".")},ye={INIT:"@@redux/INIT"+me(),REPLACE:"@@redux/REPLACE"+me(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+me()}};function ve(e){if("object"!=typeof e||null===e)return!1;for(var n=e;null!==Object.getPrototypeOf(n);)n=Object.getPrototypeOf(n);return Object.getPrototypeOf(e)===n}function ge(e,n,t){var r;if("function"==typeof n&&"function"==typeof t||"function"==typeof t&&"function"==typeof arguments[3])throw new Error(Ae(0));if("function"==typeof n&&void 0===t&&(t=n,n=void 0),void 0!==t){if("function"!=typeof t)throw new Error(Ae(1));return t(ge)(e,n)}if("function"!=typeof e)throw new Error(Ae(2));var o=e,a=n,l=[],i=l,u=!1;function c(){i===l&&(i=l.slice())}function s(){if(u)throw new Error(Ae(3));return a}function f(e){if("function"!=typeof e)throw new Error(Ae(4));if(u)throw new Error(Ae(5));var n=!0;return c(),i.push(e),function(){if(n){if(u)throw new Error(Ae(6));n=!1,c();var t=i.indexOf(e);i.splice(t,1),l=null}}}function d(e){if(!ve(e))throw new Error(Ae(7));if(void 0===e.type)throw new Error(Ae(8));if(u)throw new Error(Ae(9));try{u=!0,a=o(a,e)}finally{u=!1}for(var n=l=i,t=0;t<n.length;t++)(0,n[t])();return e}function p(e){if("function"!=typeof e)throw new Error(Ae(10));o=e,d({type:ye.REPLACE})}function A(){var e,n=f;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new Error(Ae(11));function t(){e.next&&e.next(s())}return t(),{unsubscribe:n(t)}}})[he]=function(){return this},e}return d({type:ye.INIT}),(r={dispatch:d,subscribe:f,getState:s,replaceReducer:p})[he]=A,r}function be(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return 0===n.length?function(e){return e}:1===n.length?n[0]:n.reduce((function(e,n){return function(){return e(n.apply(void 0,arguments))}}))}function we(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return function(e){return function(){var t=e.apply(void 0,arguments),r=function(){throw new Error(Ae(15))},o={getState:t.getState,dispatch:function(){return r.apply(void 0,arguments)}},a=n.map((function(e){return e(o)}));return r=be.apply(void 0,a)(t.dispatch),pe(pe({},t),{},{dispatch:r})}}}function Be(e){return function(n){var t=n.dispatch,r=n.getState;return function(n){return function(o){return"function"==typeof o?o(t,r,e):n(o)}}}}var Ee=Be();Ee.withExtraArgument=Be;const ke=Ee;var Se,xe=(Se=function(e,n){return Se=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])},Se(e,n)},function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function t(){this.constructor=e}Se(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}),Ce=function(e,n){for(var t=0,r=n.length,o=e.length;t<r;t++,o++)e[o]=n[t];return e},_e=Object.defineProperty,Pe=Object.defineProperties,Oe=Object.getOwnPropertyDescriptors,Ne=Object.getOwnPropertySymbols,ze=Object.prototype.hasOwnProperty,Me=Object.prototype.propertyIsEnumerable,Le=function(e,n,t){return n in e?_e(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t},Te=function(e,n){for(var t in n||(n={}))ze.call(n,t)&&Le(e,t,n[t]);if(Ne)for(var r=0,o=Ne(n);r<o.length;r++)t=o[r],Me.call(n,t)&&Le(e,t,n[t]);return e},Ie=function(e,n){return Pe(e,Oe(n))},je="undefined"!=typeof window&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__:function(){if(0!==arguments.length)return"object"==typeof arguments[0]?be:be.apply(null,arguments)};"undefined"!=typeof window&&window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__;var Re=function(e){function n(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var o=e.apply(this,t)||this;return Object.setPrototypeOf(o,n.prototype),o}return xe(n,e),Object.defineProperty(n,Symbol.species,{get:function(){return n},enumerable:!1,configurable:!0}),n.prototype.concat=function(){for(var n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return e.prototype.concat.apply(this,n)},n.prototype.prepend=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return 1===e.length&&Array.isArray(e[0])?new(n.bind.apply(n,Ce([void 0],e[0].concat(this)))):new(n.bind.apply(n,Ce([void 0],e.concat(this))))},n}(Array);function De(e){return h(e)?se(e,(function(){})):e}function Fe(e,n){function t(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];if(n){var o=n.apply(void 0,t);if(!o)throw new Error("prepareAction did not return an object");return Te(Te({type:e,payload:o.payload},"meta"in o&&{meta:o.meta}),"error"in o&&{error:o.error})}return{type:e,payload:t[0]}}return t.toString=function(){return""+e},t.type=e,t.match=function(n){return n.type===e},t}function Ue(e){var n,t={},r=[],o={addCase:function(e,n){var r="string"==typeof e?e:e.type;if(r in t)throw new Error("addCase cannot be called with two reducers for the same action type");return t[r]=n,o},addMatcher:function(e,n){return r.push({matcher:e,reducer:n}),o},addDefaultCase:function(e){return n=e,o}};return e(o),[t,r,n]}function $e(e){var n=e.name;if(!n)throw new Error("`name` is a required option for createSlice");var t,r="function"==typeof e.initialState?e.initialState:De(e.initialState),o=e.reducers||{},a=Object.keys(o),l={},i={},u={};function c(){var n="function"==typeof e.extraReducers?Ue(e.extraReducers):[e.extraReducers],t=n[0],o=void 0===t?{}:t,a=n[1],l=void 0===a?[]:a,u=n[2],c=void 0===u?void 0:u,s=Te(Te({},o),i);return function(e,n,t,r){void 0===t&&(t=[]);var o,a="function"==typeof n?Ue(n):[n,t,r],l=a[0],i=a[1],u=a[2];if(function(e){return"function"==typeof e}(e))o=function(){return De(e())};else{var c=De(e);o=function(){return c}}function s(e,n){void 0===e&&(e=o());var t=Ce([l[n.type]],i.filter((function(e){return(0,e.matcher)(n)})).map((function(e){return e.reducer})));return 0===t.filter((function(e){return!!e})).length&&(t=[u]),t.reduce((function(e,t){if(t){var r;if(A(e))return void 0===(r=t(e,n))?e:r;if(h(e))return se(e,(function(e){return t(e,n)}));if(void 0===(r=t(e,n))){if(null===e)return e;throw Error("A case reducer on a non-draftable value must not return undefined")}return r}return e}),e)}return s.getInitialState=o,s}(r,s,l,c)}return a.forEach((function(e){var t,r,a=o[e],c=n+"/"+e;"reducer"in a?(t=a.reducer,r=a.prepare):t=a,l[e]=t,i[c]=t,u[e]=r?Fe(c,r):Fe(c)})),{name:n,reducer:function(e,n){return t||(t=c()),t(e,n)},actions:u,caseReducers:l,getInitialState:function(){return t||(t=c()),t.getInitialState()}}}var Ve=["name","message","stack","code"],He=function(e,n){this.payload=e,this.meta=n},We=function(e,n){this.payload=e,this.meta=n},qe=function(e){if("object"==typeof e&&null!==e){for(var n={},t=0,r=Ve;t<r.length;t++){var o=r[t];"string"==typeof e[o]&&(n[o]=e[o])}return n}return{message:String(e)}};function Qe(e,n,t){var r=Fe(e+"/fulfilled",(function(e,n,t,r){return{payload:e,meta:Ie(Te({},r||{}),{arg:t,requestId:n,requestStatus:"fulfilled"})}})),o=Fe(e+"/pending",(function(e,n,t){return{payload:void 0,meta:Ie(Te({},t||{}),{arg:n,requestId:e,requestStatus:"pending"})}})),a=Fe(e+"/rejected",(function(e,n,r,o,a){return{payload:o,error:(t&&t.serializeError||qe)(e||"Rejected"),meta:Ie(Te({},a||{}),{arg:r,requestId:n,rejectedWithValue:!!o,requestStatus:"rejected",aborted:"AbortError"===(null==e?void 0:e.name),condition:"ConditionError"===(null==e?void 0:e.name)})}})),l="undefined"!=typeof AbortController?AbortController:function(){function e(){this.signal={aborted:!1,addEventListener:function(){},dispatchEvent:function(){return!1},onabort:function(){},removeEventListener:function(){},reason:void 0,throwIfAborted:function(){}}}return e.prototype.abort=function(){},e}();return Object.assign((function(e){return function(i,u,c){var s,f=(null==t?void 0:t.idGenerator)?t.idGenerator(e):function(e){void 0===e&&(e=21);for(var n="",t=e;t--;)n+="ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW"[64*Math.random()|0];return n}(),d=new l,p=new Promise((function(e,n){return d.signal.addEventListener("abort",(function(){return n({name:"AbortError",message:s||"Aborted"})}))})),A=!1,h=function(){return l=this,s=null,h=function(){var l,s,h,m,y;return function(e,n){var t,r,o,a,l={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function i(a){return function(i){return function(a){if(t)throw new TypeError("Generator is already executing.");for(;l;)try{if(t=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return l.label++,{value:a[1],done:!1};case 5:l.label++,r=a[1],a=[0];continue;case 7:a=l.ops.pop(),l.trys.pop();continue;default:if(!((o=(o=l.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){l=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){l.label=a[1];break}if(6===a[0]&&l.label<o[1]){l.label=o[1],o=a;break}if(o&&l.label<o[2]){l.label=o[2],l.ops.push(a);break}o[2]&&l.ops.pop(),l.trys.pop();continue}a=n.call(e,l)}catch(e){a=[6,e],r=0}finally{t=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,i])}}}(this,(function(v){switch(v.label){case 0:return v.trys.push([0,4,,5]),null===(g=m=null==(l=null==t?void 0:t.condition)?void 0:l.call(t,e,{getState:u,extra:c}))||"object"!=typeof g||"function"!=typeof g.then?[3,2]:[4,m];case 1:m=v.sent(),v.label=2;case 2:if(!1===m)throw{name:"ConditionError",message:"Aborted due to condition callback returning false."};return A=!0,i(o(f,e,null==(s=null==t?void 0:t.getPendingMeta)?void 0:s.call(t,{requestId:f,arg:e},{getState:u,extra:c}))),[4,Promise.race([p,Promise.resolve(n(e,{dispatch:i,getState:u,extra:c,requestId:f,signal:d.signal,rejectWithValue:function(e,n){return new He(e,n)},fulfillWithValue:function(e,n){return new We(e,n)}})).then((function(n){if(n instanceof He)throw n;return n instanceof We?r(n.payload,f,e,n.meta):r(n,f,e)}))])];case 3:return h=v.sent(),[3,5];case 4:return y=v.sent(),h=y instanceof He?a(null,f,e,y.payload,y.meta):a(y,f,e),[3,5];case 5:return t&&!t.dispatchConditionRejection&&a.match(h)&&h.meta.condition||i(h),[2,h]}var g}))},new Promise((function(e,n){var t=function(e){try{o(h.next(e))}catch(e){n(e)}},r=function(e){try{o(h.throw(e))}catch(e){n(e)}},o=function(n){return n.done?e(n.value):Promise.resolve(n.value).then(t,r)};o((h=h.apply(l,s)).next())}));var l,s,h}();return Object.assign(h,{abort:function(e){A&&(s=e,d.abort())},requestId:f,arg:e,unwrap:function(){return h.then(Ke)}})}}),{pending:o,rejected:a,fulfilled:r,typePrefix:e})}function Ke(e){if(e.meta&&e.meta.rejectedWithValue)throw e.payload;if(e.error)throw e.error;return e.payload}Object.assign;var Ye="listenerMiddleware";Fe(Ye+"/add"),Fe(Ye+"/removeAll"),Fe(Ye+"/remove"),function(){function e(e,n){var t=o[e];return t?t.enumerable=n:o[e]=t={configurable:!0,enumerable:n,get:function(){var n=this[ee];return ae.get(n,e)},set:function(n){var t=this[ee];ae.set(t,e,n)}},t}function n(e){for(var n=e.length-1;n>=0;n--){var o=e[n][ee];if(!o.P)switch(o.i){case 5:r(o)&&U(o);break;case 4:t(o)&&U(o)}}}function t(e){for(var n=e.t,t=e.k,r=te(t),o=r.length-1;o>=0;o--){var a=r[o];if(a!==ee){var l=n[a];if(void 0===l&&!v(n,a))return!0;var i=t[a],u=i&&i[ee];if(u?u.t!==l:!b(i,l))return!0}}var c=!!n[ee];return r.length!==te(n).length+(c?0:1)}function r(e){var n=e.k;if(n.length!==e.t.length)return!0;var t=Object.getOwnPropertyDescriptor(n,n.length-1);if(t&&!t.get)return!0;for(var r=0;r<n.length;r++)if(!n.hasOwnProperty(r))return!0;return!1}var o={};!function(e,n){oe[e]||(oe[e]=n)}("ES5",{J:function(n,t){var r=Array.isArray(n),o=function(n,t){if(n){for(var r=Array(t.length),o=0;o<t.length;o++)Object.defineProperty(r,""+o,e(o,!0));return r}var a=re(t);delete a[ee];for(var l=te(a),i=0;i<l.length;i++){var u=l[i];a[u]=e(u,n||!!a[u].enumerable)}return Object.create(Object.getPrototypeOf(t),a)}(r,n),a={i:r?5:4,A:t?t.A:P(),P:!1,I:!1,D:{},l:t,t:n,k:o,o:null,O:!1,C:!1};return Object.defineProperty(o,ee,{value:a,writable:!0}),o},S:function(e,t,o){o?A(t)&&t[ee].A===e&&n(e.p):(e.u&&function e(n){if(n&&"object"==typeof n){var t=n[ee];if(t){var o=t.t,a=t.k,l=t.D,i=t.i;if(4===i)m(a,(function(n){n!==ee&&(void 0!==o[n]||v(o,n)?l[n]||e(a[n]):(l[n]=!0,U(t)))})),m(o,(function(e){void 0!==a[e]||v(a,e)||(l[e]=!1,U(t))}));else if(5===i){if(r(t)&&(U(t),l.length=!0),a.length<o.length)for(var u=a.length;u<o.length;u++)l[u]=!1;else for(var c=o.length;c<a.length;c++)l[c]=!0;for(var s=Math.min(a.length,o.length),f=0;f<s;f++)a.hasOwnProperty(f)||(l[f]=!0),void 0===l[f]&&e(a[f])}}}}(e.p[0]),n(e.p))},K:function(e){return 4===e.i?t(e):r(e)}})}();var Ge=function(e){return e.data.children.map((function(e){return e.data}))},Xe=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"_";return e.split(" ").join(n)},Je=Qe("search/fetchSearchResults",function(){var e=l(s().mark((function e(n){var t,r,o;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t="https://www.reddit.com/r/".concat(Xe(n),".json?limit=10"),e.prev=1,e.next=4,fetch(t);case 4:return r=e.sent,e.next=7,r.json();case 7:return o=e.sent,e.abrupt("return",o);case 11:throw e.prev=11,e.t0=e.catch(1),new Error("Something wents wrong...",{cause:e.t0});case 14:case"end":return e.stop()}}),e,null,[[1,11]])})));return function(n){return e.apply(this,arguments)}}()),Ze=Qe("search/fetchMoreSearchResults",function(){var e=l(s().mark((function e(n){var t,r,o,a,l;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=n.search,r=n.after,o="https://www.reddit.com/r/".concat(Xe(t),".json?limit=10&after=").concat(r),e.prev=2,e.next=5,fetch(o);case 5:return a=e.sent,e.next=8,a.json();case 8:return l=e.sent,e.abrupt("return",l);case 12:throw e.prev=12,e.t0=e.catch(2),new Error("Something wents wrong...",{cause:e.t0});case 15:case"end":return e.stop()}}),e,null,[[2,12]])})));return function(n){return e.apply(this,arguments)}}()),en=function(e,n){e.searchResults=d(n.payload)},nn=function(e,n){e.searchResults=[].concat(d(e.searchResults),d(n.payload))},tn=function(e,n){e.getMoreResultsKey=n.payload},rn=function(e){e.loading=!0},on=function(e){e.loading=!1},an=function(e){e.loadingMore=!0},ln=function(e){e.loadingMore=!1},un=$e({name:"search",initialState:{searchResults:[],getMoreResultsKey:null,loading:!1,loadingMore:!1},reducers:{setSearchResults:en,addSearchResults:nn,enableLoading:rn,disableLoading:on,enableLoadingMore:an,disableLoadingMore:ln},extraReducers:function(e){e.addCase(Je.pending,(function(e){rn(e)})),e.addCase(Je.fulfilled,(function(e,n){var t=n.payload;if(t.error)en(e,{payload:[],type:""});else{var r=Ge(t);en(e,{payload:r,type:""}),tn(e,{payload:t.data.after,type:""})}on(e)})),e.addCase(Je.rejected,(function(e){en(e,{payload:[],type:""}),on(e)})),e.addCase(Ze.pending,(function(e){an(e)})),e.addCase(Ze.fulfilled,(function(e,n){var t=n.payload;if(t.error)nn(e,{payload:[],type:""});else{var r=Ge(t);nn(e,{payload:r,type:""}),tn(e,{payload:t.data.after,type:""})}ln(e),console.error(e)})),e.addCase(Ze.rejected,(function(e){nn(e,{payload:[],type:""}),ln(e)}))}}),cn=un.actions,sn=cn.setSearchResults;cn.enableLoading,cn.disableLoading,cn.enableLoadingMore,cn.disableLoadingMore;const fn=un.reducer;var dn=function(e){var n=e.type,t=void 0===n?"text":n,o=e.id,a=e.className,l=e.placeholder,i=e.value,u=e.handleChange,c=e.prefixIcon;return r.createElement("label",{htmlFor:o,className:"flex flex-row justify-center items-center relative "+a},r.createElement("div",{className:"input-prefix-icon"},c),r.createElement("input",{className:"\r outline-none \r bg-gray-50 \r border \r border-gray-300 \r text-gray-900 \r text-sm \r rounded-lg \r focus:ring-blue-500 \r focus:border-blue-500 \r block \r w-full \r p-2.5 \r dark:bg-gray-700 \r dark:border-gray-600 \r dark:placeholder-gray-400 \r dark:text-white \r dark:focus:ring-blue-500 \r dark:focus:border-blue-500\r ",id:o,type:t,placeholder:l,value:i,onChange:u,autoComplete:"off"}))},pn=function(e){var n=e.headerChildren,t=e.children,o=e.showSection;return r.createElement("main",{className:"h-screen bg-black"},r.createElement("header",{className:"app-header flex flex-row justify-center align-center transition-all ease-in-out duration-300 ".concat(o?"h-1/5":"h-full")},n),r.createElement("section",{className:"overflow-y-scroll transition-all ease-in-out duration-300 ".concat(o?"h-4/5":"h-0")},t))},An=(t(826),t(688)),hn=t(798),mn=t(935);let yn=function(e){e()};const vn=()=>yn,gn=r.createContext(null);function bn(){return(0,r.useContext)(gn)}let wn=()=>{throw new Error("uSES not initialized!")};const Bn=(e,n)=>e===n;function En(e=gn){const n=e===gn?bn:()=>(0,r.useContext)(e);return function(e,t=Bn){const{store:o,subscription:a,getServerState:l}=n(),i=wn(a.addNestedSub,o.getState,l||o.getState,e,t);return(0,r.useDebugValue)(i),i}}const kn=En();t(679),t(973);const Sn={notify(){},get:()=>[]};const xn="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?r.useLayoutEffect:r.useEffect;let Cn=null;const _n=function({store:e,context:n,children:t,serverState:o}){const a=(0,r.useMemo)((()=>{const n=function(e,n){let t,r=Sn;function o(){l.onStateChange&&l.onStateChange()}function a(){t||(t=n?n.addNestedSub(o):e.subscribe(o),r=function(){const e=vn();let n=null,t=null;return{clear(){n=null,t=null},notify(){e((()=>{let e=n;for(;e;)e.callback(),e=e.next}))},get(){let e=[],t=n;for(;t;)e.push(t),t=t.next;return e},subscribe(e){let r=!0,o=t={callback:e,next:null,prev:t};return o.prev?o.prev.next=o:n=o,function(){r&&null!==n&&(r=!1,o.next?o.next.prev=o.prev:t=o.prev,o.prev?o.prev.next=o.next:n=o.next)}}}}())}const l={addNestedSub:function(e){return a(),r.subscribe(e)},notifyNestedSubs:function(){r.notify()},handleChangeWrapper:o,isSubscribed:function(){return Boolean(t)},trySubscribe:a,tryUnsubscribe:function(){t&&(t(),t=void 0,r.clear(),r=Sn)},getListeners:()=>r};return l}(e);return{store:e,subscription:n,getServerState:o?()=>o:void 0}}),[e,o]),l=(0,r.useMemo)((()=>e.getState()),[e]);xn((()=>{const{subscription:n}=a;return n.onStateChange=n.notifyNestedSubs,n.trySubscribe(),l!==e.getState()&&n.notifyNestedSubs(),()=>{n.tryUnsubscribe(),n.onStateChange=void 0}}),[a,l]);const i=n||gn;return r.createElement(i.Provider,{value:a},t)};function Pn(e=gn){const n=e===gn?bn:()=>(0,r.useContext)(e);return function(){const{store:e}=n();return e}}const On=Pn();function Nn(e=gn){const n=e===gn?On:Pn(e);return function(){return n().dispatch}}const zn=Nn();var Mn;(e=>{wn=e})(hn.useSyncExternalStoreWithSelector),(e=>{Cn=e})(An.useSyncExternalStore),Mn=mn.unstable_batchedUpdates,yn=Mn;var Ln=zn,Tn=kn,In=function(e){var n=e.children;return r.createElement("div",{className:"p-5 flex flex-col items-center"},n)},jn=function(e){var n=e.className,t=e.size,o=void 0===t?30:t;return r.createElement("svg",{version:"1.1",id:"Capa_1",xmlns:"http://www.w3.org/2000/svg",x:"0px",y:"0px",width:"".concat(o,"px"),height:"".concat(o,"px"),className:n,viewBox:"0 0 26.349 26.35"},r.createElement("g",null,r.createElement("g",null,r.createElement("circle",{cx:"13.792",cy:"3.082",r:"3.082"}),r.createElement("circle",{cx:"13.792",cy:"24.501",r:"1.849"}),r.createElement("circle",{cx:"6.219",cy:"6.218",r:"2.774"}),r.createElement("circle",{cx:"21.365",cy:"21.363",r:"1.541"}),r.createElement("circle",{cx:"3.082",cy:"13.792",r:"2.465"}),r.createElement("circle",{cx:"24.501",cy:"13.791",r:"1.232"}),r.createElement("path",{d:"M4.694,19.84c-0.843,0.843-0.843,2.207,0,3.05c0.842,0.843,2.208,0.843,3.05,0c0.843-0.843,0.843-2.207,0-3.05\r C6.902,18.996,5.537,18.988,4.694,19.84z"}),r.createElement("circle",{cx:"21.364",cy:"6.218",r:"0.924"}))),r.createElement("g",null),r.createElement("g",null),r.createElement("g",null),r.createElement("g",null),r.createElement("g",null),r.createElement("g",null),r.createElement("g",null),r.createElement("g",null),r.createElement("g",null),r.createElement("g",null),r.createElement("g",null),r.createElement("g",null),r.createElement("g",null),r.createElement("g",null),r.createElement("g",null))},Rn=function(e){var n=e.label,t=e.disabled,o=e.loading,a=e.wide,l=e.onClick,i=e.className;return r.createElement("button",{disabled:t,className:"\n    flex \n    relative \n    py-2.5 \n    px-3 \n    outline-none \n    rounded-lg \n    text-slate-50 \n    border \n    border-solid \n    border-slate-50 \n    disabled:opacity-75\n    ".concat(null!=i?i:"","\n    ").concat(a?"min-w-full":"","\n    "),onClick:l},o?r.createElement(jn,{className:"loader animate-spin"}):n)},Dn=function(e){var n=e.currentTarget;n.onerror=null,n.src="https://img.icons8.com/doodle/344/reddit--v4.png"},Fn=function(e){var n=e.title,t=e.url,o=e.thumbnail;return r.createElement("a",{href:t,target:"_blank",rel:"noreferrer",className:"\r flex \r flex-row \r justify-start \r items-center\r gap-2\r rounded-xl \r p-4 \r leading-normal \r bg-gradient-to-r \r from-cyan-500 \r to-blue-500 \r hover:to-blue-100 \r transition-all \r duration-200 w-full\r "},o&&r.createElement("img",{src:o,className:"w-16 h-16 object-cover",onError:Dn}),r.createElement("p",{className:"text-gray-900 text-base"},n))},Un=function(e){var n=e.items,t=e.loading,o=e.handleLoadMore,a=e.showButton;return r.createElement("div",{className:"flex flex-col items-center gap-y-2 max-w-xl w-full"},n.map((function(e){var n=e.id,t=e.title,o=e.url,a=e.thumbnail;return r.createElement(Fn,{key:n,title:t,id:"id",url:o,thumbnail:a})})),a&&r.createElement(Rn,{loading:t,disabled:t,onClick:o,label:"Load More",className:"min-w-[50%] flex align-center justify-center"}))},$n=function(){var e=Ln(),n=Tn((function(e){return function(e){return e.search.searchResults}(e)})),t=Tn((function(e){return function(e){return e.search.loading}(e)})),o=Tn((function(e){return function(e){return e.search.loadingMore}(e)})),a=Tn((function(e){return function(e){return e.search.getMoreResultsKey}(e)})),i=function(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,a=[],l=!0,i=!1;try{for(t=t.call(e);!(l=(r=t.next()).done)&&(a.push(r.value),!n||a.length!==n);l=!0);}catch(e){i=!0,o=e}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(e,n)||u(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}((0,r.useState)(""),2),c=i[0],d=i[1],p=(0,r.useCallback)(l(s().mark((function n(){return s().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,e(Ze({search:c,after:a}));case 2:case"end":return n.stop()}}),n)}))),[e,a,c]);return(0,r.useEffect)((function(){var n=(0,f.debounce)((function(n){return e(Je(n))}),200);return c.length>2?n(c):e(sn([])),function(){n.clear()}}),[c,e]),r.createElement(pn,{showSection:n.length>0,headerChildren:r.createElement(dn,{id:"search",placeholder:"Put thread name...",className:"min-w-[25%]",value:c,handleChange:function(e){d(e.currentTarget.value)},prefixIcon:t?r.createElement(jn,{className:"loader animate-spin"}):void 0})},r.createElement(In,null,n.length>0?r.createElement(Un,{items:n,handleLoadMore:p,loading:o,showButton:!!a}):r.createElement("div",null)))},Vn=$e({name:"layout",initialState:{showResultsSection:!1},reducers:{enableShowResults:function(e){e.showResultsSection=!0},disableShowResults:function(e){e.showResultsSection=!1}}}),Hn=Vn.actions;Hn.enableShowResults,Hn.disableShowResults;var Wn=function(e){var n,t=function(e){return function(e){void 0===e&&(e={});var n=e.thunk,t=void 0===n||n,r=(e.immutableCheck,e.serializableCheck,new Re);return t&&(function(e){return"boolean"==typeof e}(t)?r.push(ke):r.push(ke.withExtraArgument(t.extraArgument))),r}(e)},r=e||{},o=r.reducer,a=void 0===o?void 0:o,l=r.middleware,i=void 0===l?t():l,u=r.devTools,c=void 0===u||u,s=r.preloadedState,f=void 0===s?void 0:s,d=r.enhancers,p=void 0===d?void 0:d;if("function"==typeof a)n=a;else{if(!function(e){if("object"!=typeof e||null===e)return!1;var n=Object.getPrototypeOf(e);if(null===n)return!0;for(var t=n;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return n===t}(a))throw new Error('"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');n=function(e){for(var n=Object.keys(e),t={},r=0;r<n.length;r++){var o=n[r];"function"==typeof e[o]&&(t[o]=e[o])}var a,l=Object.keys(t);try{!function(e){Object.keys(e).forEach((function(n){var t=e[n];if(void 0===t(void 0,{type:ye.INIT}))throw new Error(Ae(12));if(void 0===t(void 0,{type:ye.PROBE_UNKNOWN_ACTION()}))throw new Error(Ae(13))}))}(t)}catch(e){a=e}return function(e,n){if(void 0===e&&(e={}),a)throw a;for(var r=!1,o={},i=0;i<l.length;i++){var u=l[i],c=t[u],s=e[u],f=c(s,n);if(void 0===f)throw n&&n.type,new Error(Ae(14));o[u]=f,r=r||f!==s}return(r=r||l.length!==Object.keys(e).length)?o:e}}(a)}var A=i;"function"==typeof A&&(A=A(t));var h=we.apply(void 0,A),m=be;c&&(m=je(Te({trace:!1},"object"==typeof c&&c)));var y=[h];return Array.isArray(p)?y=Ce([h],p):"function"==typeof p&&(y=p(y)),ge(n,f,m.apply(void 0,y))}({reducer:{search:fn,layout:Vn.reducer}});o.createRoot(document.getElementById("root")).render(r.createElement(_n,{store:Wn},r.createElement($n,null)))},576:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>d});var r=t(537),o=t.n(r),a=t(645),l=t.n(a),i=t(667),u=t.n(i),c=new URL(t(364),t.b),s=l()(o()),f=u()(c);s.push([e.id,'/*\n! tailwindcss v3.1.8 | MIT License | https://tailwindcss.com\n*//*\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\n*/\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: #e5e7eb; /* 2 */\n}\n\n::before,\n::after {\n  --tw-content: \'\';\n}\n\n/*\n1. Use a consistent sensible line-height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n3. Use a more readable tab size.\n4. Use the user\'s configured `sans` font-family by default.\n*/\n\nhtml {\n  line-height: 1.5; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n  -moz-tab-size: 4; /* 3 */\n  -o-tab-size: 4;\n     tab-size: 4; /* 3 */\n  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */\n}\n\n/*\n1. Remove the margin in all browsers.\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\n*/\n\nbody {\n  margin: 0; /* 1 */\n  line-height: inherit; /* 2 */\n}\n\n/*\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n3. Ensure horizontal rules are visible by default.\n*/\n\nhr {\n  height: 0; /* 1 */\n  color: inherit; /* 2 */\n  border-top-width: 1px; /* 3 */\n}\n\n/*\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr:where([title]) {\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n}\n\n/*\nRemove the default font size and weight for headings.\n*/\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/*\nReset links to optimize for opt-in styling instead of opt-out.\n*/\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/*\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/*\n1. Use the user\'s configured `mono` font family by default.\n2. Correct the odd `em` font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/*\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n  font-size: 80%;\n}\n\n/*\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/*\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n3. Remove gaps between table borders by default.\n*/\n\ntable {\n  text-indent: 0; /* 1 */\n  border-color: inherit; /* 2 */\n  border-collapse: collapse; /* 3 */\n}\n\n/*\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n3. Remove default padding in all browsers.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  font-weight: inherit; /* 1 */\n  line-height: inherit; /* 1 */\n  color: inherit; /* 1 */\n  margin: 0; /* 2 */\n  padding: 0; /* 3 */\n}\n\n/*\nRemove the inheritance of text transform in Edge and Firefox.\n*/\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Remove default button styles.\n*/\n\nbutton,\n[type=\'button\'],\n[type=\'reset\'],\n[type=\'submit\'] {\n  -webkit-appearance: button; /* 1 */\n  background-color: transparent; /* 2 */\n  background-image: none; /* 2 */\n}\n\n/*\nUse the modern Firefox focus style for all focusable elements.\n*/\n\n:-moz-focusring {\n  outline: auto;\n}\n\n/*\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\n*/\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\n/*\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n  vertical-align: baseline;\n}\n\n/*\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/*\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type=\'search\'] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/*\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to `inherit` in Safari.\n*/\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n  display: list-item;\n}\n\n/*\nRemoves the default spacing and border for appropriate elements.\n*/\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nlegend {\n  padding: 0;\n}\n\nol,\nul,\nmenu {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/*\nPrevent resizing textareas horizontally by default.\n*/\n\ntextarea {\n  resize: vertical;\n}\n\n/*\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\n2. Set the default placeholder color to the user\'s configured gray 400 color.\n*/\n\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1; /* 1 */\n  color: #9ca3af; /* 2 */\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1; /* 1 */\n  color: #9ca3af; /* 2 */\n}\n\n/*\nSet the default cursor for buttons.\n*/\n\nbutton,\n[role="button"] {\n  cursor: pointer;\n}\n\n/*\nMake sure disabled buttons don\'t get the pointer cursor.\n*/\n:disabled {\n  cursor: default;\n}\n\n/*\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\n   This can trigger a poorly considered lint error in some tools but is included by design.\n*/\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block; /* 1 */\n  vertical-align: middle; /* 2 */\n}\n\n/*\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\n*/\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n*, ::before, ::after {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n}\n\n::-webkit-backdrop {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n}\n\n::backdrop {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n}\r\n.app-header {\r\n    background: url('+f+') center center / cover no-repeat;\r\n  }\r\n.loader {\r\n    fill: white;\r\n  }\r\n.input-prefix-icon {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: -40px;\r\n    transform: translateY(-50%);\r\n  }\r\n* {\r\n    font-family: "Roboto", sans-serif;\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n  }\r\n*::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n.relative {\n  position: relative;\n}\r\n.block {\n  display: block;\n}\r\n.flex {\n  display: flex;\n}\r\n.h-screen {\n  height: 100vh;\n}\r\n.h-1\\/5 {\n  height: 20%;\n}\r\n.h-full {\n  height: 100%;\n}\r\n.h-4\\/5 {\n  height: 80%;\n}\r\n.h-0 {\n  height: 0px;\n}\r\n.h-16 {\n  height: 4rem;\n}\r\n.w-full {\n  width: 100%;\n}\r\n.w-16 {\n  width: 4rem;\n}\r\n.min-w-\\[25\\%\\] {\n  min-width: 25%;\n}\r\n.min-w-\\[50\\%\\] {\n  min-width: 50%;\n}\r\n.min-w-full {\n  min-width: 100%;\n}\r\n.max-w-xl {\n  max-width: 36rem;\n}\r\n@-webkit-keyframes spin {\n\n  to {\n    transform: rotate(360deg);\n  }\n}\r\n@keyframes spin {\n\n  to {\n    transform: rotate(360deg);\n  }\n}\r\n.animate-spin {\n  -webkit-animation: spin 1s linear infinite;\n          animation: spin 1s linear infinite;\n}\r\n.flex-row {\n  flex-direction: row;\n}\r\n.flex-col {\n  flex-direction: column;\n}\r\n.items-center {\n  align-items: center;\n}\r\n.justify-start {\n  justify-content: flex-start;\n}\r\n.justify-center {\n  justify-content: center;\n}\r\n.gap-2 {\n  gap: 0.5rem;\n}\r\n.gap-y-2 {\n  row-gap: 0.5rem;\n}\r\n.self-center {\n  align-self: center;\n}\r\n.overflow-y-scroll {\n  overflow-y: scroll;\n}\r\n.rounded-lg {\n  border-radius: 0.5rem;\n}\r\n.rounded-xl {\n  border-radius: 0.75rem;\n}\r\n.border {\n  border-width: 1px;\n}\r\n.border-solid {\n  border-style: solid;\n}\r\n.border-slate-50 {\n  --tw-border-opacity: 1;\n  border-color: rgb(248 250 252 / var(--tw-border-opacity));\n}\r\n.border-gray-300 {\n  --tw-border-opacity: 1;\n  border-color: rgb(209 213 219 / var(--tw-border-opacity));\n}\r\n.bg-black {\n  --tw-bg-opacity: 1;\n  background-color: rgb(0 0 0 / var(--tw-bg-opacity));\n}\r\n.bg-gray-50 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(249 250 251 / var(--tw-bg-opacity));\n}\r\n.bg-gradient-to-r {\n  background-image: linear-gradient(to right, var(--tw-gradient-stops));\n}\r\n.from-cyan-500 {\n  --tw-gradient-from: #06b6d4;\n  --tw-gradient-to: rgb(6 182 212 / 0);\n  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n}\r\n.to-blue-500 {\n  --tw-gradient-to: #3b82f6;\n}\r\n.object-cover {\n  -o-object-fit: cover;\n     object-fit: cover;\n}\r\n.p-5 {\n  padding: 1.25rem;\n}\r\n.p-4 {\n  padding: 1rem;\n}\r\n.p-2\\.5 {\n  padding: 0.625rem;\n}\r\n.p-2 {\n  padding: 0.5rem;\n}\r\n.py-2\\.5 {\n  padding-top: 0.625rem;\n  padding-bottom: 0.625rem;\n}\r\n.py-2 {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\r\n.px-3 {\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n}\r\n.text-base {\n  font-size: 1rem;\n  line-height: 1.5rem;\n}\r\n.text-sm {\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n}\r\n.leading-normal {\n  line-height: 1.5;\n}\r\n.text-slate-50 {\n  --tw-text-opacity: 1;\n  color: rgb(248 250 252 / var(--tw-text-opacity));\n}\r\n.text-gray-900 {\n  --tw-text-opacity: 1;\n  color: rgb(17 24 39 / var(--tw-text-opacity));\n}\r\n.outline-none {\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\r\n.transition-all {\n  transition-property: all;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}\r\n.duration-300 {\n  transition-duration: 300ms;\n}\r\n.duration-200 {\n  transition-duration: 200ms;\n}\r\n.ease-in-out {\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n}\r\n.hover\\:to-blue-100:hover {\n  --tw-gradient-to: #dbeafe;\n}\r\n.focus\\:border-blue-500:focus {\n  --tw-border-opacity: 1;\n  border-color: rgb(59 130 246 / var(--tw-border-opacity));\n}\r\n.focus\\:ring-blue-500:focus {\n  --tw-ring-opacity: 1;\n  --tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity));\n}\r\n.disabled\\:opacity-75:disabled {\n  opacity: 0.75;\n}\r\n@media (prefers-color-scheme: dark) {\n\n  .dark\\:border-gray-600 {\n    --tw-border-opacity: 1;\n    border-color: rgb(75 85 99 / var(--tw-border-opacity));\n  }\n\n  .dark\\:bg-gray-700 {\n    --tw-bg-opacity: 1;\n    background-color: rgb(55 65 81 / var(--tw-bg-opacity));\n  }\n\n  .dark\\:text-white {\n    --tw-text-opacity: 1;\n    color: rgb(255 255 255 / var(--tw-text-opacity));\n  }\n\n  .dark\\:placeholder-gray-400::-moz-placeholder {\n    --tw-placeholder-opacity: 1;\n    color: rgb(156 163 175 / var(--tw-placeholder-opacity));\n  }\n\n  .dark\\:placeholder-gray-400::placeholder {\n    --tw-placeholder-opacity: 1;\n    color: rgb(156 163 175 / var(--tw-placeholder-opacity));\n  }\n\n  .dark\\:focus\\:border-blue-500:focus {\n    --tw-border-opacity: 1;\n    border-color: rgb(59 130 246 / var(--tw-border-opacity));\n  }\n\n  .dark\\:focus\\:ring-blue-500:focus {\n    --tw-ring-opacity: 1;\n    --tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity));\n  }\n}\r\n',"",{version:3,sources:["webpack://./src/style.css","<no source>"],names:[],mappings:"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",sourcesContent:['@import "tailwindcss/base";\r\n@import "tailwindcss/components";\r\n@import "tailwindcss/utilities";\r\n\r\n@layer components {\r\n  .app-main {\r\n    min-height: 100vh;\r\n    max-height: 100vh;\r\n    min-width: 100vw;\r\n    max-width: 100vw;\r\n  }\r\n\r\n  .app-header {\r\n    background: url("/assets/background/astronaut.jpg") center center / cover no-repeat;\r\n  }\r\n\r\n  .loader {\r\n    fill: white;\r\n  }\r\n\r\n  .input-prefix-icon {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: -40px;\r\n    transform: translateY(-50%);\r\n  }\r\n\r\n  * {\r\n    font-family: "Roboto", sans-serif;\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n  }\r\n\r\n  *::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n}\r\n',null],sourceRoot:""}]);const d=s},645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var l={};if(r)for(var i=0;i<this.length;i++){var u=this[i][0];null!=u&&(l[u]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);r&&l[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),n.push(s))}},n}},667:e=>{"use strict";e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),l=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(l).concat([a]).join("\n")}return[n].join("\n")}},296:e=>{function n(e,n,t){var r,o,a,l,i;function u(){var c=Date.now()-l;c<n&&c>=0?r=setTimeout(u,n-c):(r=null,t||(i=e.apply(a,o),a=o=null))}null==n&&(n=100);var c=function(){a=this,o=arguments,l=Date.now();var c=t&&!r;return r||(r=setTimeout(u,n)),c&&(i=e.apply(a,o),a=o=null),i};return c.clear=function(){r&&(clearTimeout(r),r=null)},c.flush=function(){r&&(i=e.apply(a,o),a=o=null,clearTimeout(r),r=null)},c}n.debounce=n,e.exports=n},679:(e,n,t)=>{"use strict";var r=t(864),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},i={};function u(e){return r.isMemo(e)?l:i[e.$$typeof]||o}i[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},i[r.Memo]=l;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,A=Object.prototype;e.exports=function e(n,t,r){if("string"!=typeof t){if(A){var o=p(t);o&&o!==A&&e(n,o,r)}var l=s(t);f&&(l=l.concat(f(t)));for(var i=u(n),h=u(t),m=0;m<l.length;++m){var y=l[m];if(!(a[y]||r&&r[y]||h&&h[y]||i&&i[y])){var v=d(t,y);try{c(n,y,v)}catch(e){}}}}return n}},448:(e,n,t)=>{"use strict";var r=t(294),o=t(840);function a(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var l=new Set,i={};function u(e,n){c(e,n),c(e+"Capture",n)}function c(e,n){for(i[e]=n,e=0;e<n.length;e++)l.add(n[e])}var s=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),f=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},A={};function h(e,n,t,r,o,a,l){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=a,this.removeEmptyString=l}var m={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){m[e]=new h(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];m[n]=new h(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){m[e]=new h(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){m[e]=new h(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){m[e]=new h(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){m[e]=new h(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){m[e]=new h(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){m[e]=new h(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){m[e]=new h(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function g(e,n,t,r){var o=m.hasOwnProperty(n)?m[n]:null;(null!==o?0!==o.type:r||!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,o,r)&&(t=null),r||null===o?function(e){return!!f.call(A,e)||!f.call(p,e)&&(d.test(e)?A[e]=!0:(p[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):o.mustUseProperty?e[o.propertyName]=null===t?3!==o.type&&"":t:(n=o.attributeName,r=o.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(o=o.type)||4===o&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(y,v);m[n]=new h(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(y,v);m[n]=new h(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(y,v);m[n]=new h(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){m[e]=new h(e,1,!1,e.toLowerCase(),null,!1,!1)})),m.xlinkHref=new h("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){m[e]=new h(e,1,!1,e.toLowerCase(),null,!0,!0)}));var b=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),B=Symbol.for("react.portal"),E=Symbol.for("react.fragment"),k=Symbol.for("react.strict_mode"),S=Symbol.for("react.profiler"),x=Symbol.for("react.provider"),C=Symbol.for("react.context"),_=Symbol.for("react.forward_ref"),P=Symbol.for("react.suspense"),O=Symbol.for("react.suspense_list"),N=Symbol.for("react.memo"),z=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var M=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var L=Symbol.iterator;function T(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=L&&e[L]||e["@@iterator"])?e:null}var I,j=Object.assign;function R(e){if(void 0===I)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);I=n&&n[1]||""}return"\n"+I+e}var D=!1;function F(e,n){if(!e||D)return"";D=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(e){var r=e}Reflect.construct(e,[],n)}else{try{n.call()}catch(e){r=e}e.call(n.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(n){if(n&&r&&"string"==typeof n.stack){for(var o=n.stack.split("\n"),a=r.stack.split("\n"),l=o.length-1,i=a.length-1;1<=l&&0<=i&&o[l]!==a[i];)i--;for(;1<=l&&0<=i;l--,i--)if(o[l]!==a[i]){if(1!==l||1!==i)do{if(l--,0>--i||o[l]!==a[i]){var u="\n"+o[l].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}}while(1<=l&&0<=i);break}}}finally{D=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?R(e):""}function U(e){switch(e.tag){case 5:return R(e.type);case 16:return R("Lazy");case 13:return R("Suspense");case 19:return R("SuspenseList");case 0:case 2:case 15:return F(e.type,!1);case 11:return F(e.type.render,!1);case 1:return F(e.type,!0);default:return""}}function $(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case E:return"Fragment";case B:return"Portal";case S:return"Profiler";case k:return"StrictMode";case P:return"Suspense";case O:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case x:return(e._context.displayName||"Context")+".Provider";case _:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case N:return null!==(n=e.displayName||null)?n:$(e.type)||"Memo";case z:n=e._payload,e=e._init;try{return $(e(n))}catch(e){}}return null}function V(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=n.render).displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return $(n);case 8:return n===k?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof n)return n.displayName||n.name||null;if("string"==typeof n)return n}return null}function H(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function W(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function q(e){e._valueTracker||(e._valueTracker=function(e){var n=W(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var o=t.get,a=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function Q(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=W(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function K(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function Y(e,n){var t=n.checked;return j({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function G(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=H(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function X(e,n){null!=(n=n.checked)&&g(e,"checked",n,!1)}function J(e,n){X(e,n);var t=H(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?ee(e,n.type,t):n.hasOwnProperty("defaultValue")&&ee(e,n.type,H(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function Z(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function ee(e,n,t){"number"===n&&K(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}var ne=Array.isArray;function te(e,n,t,r){if(e=e.options,n){n={};for(var o=0;o<t.length;o++)n["$"+t[o]]=!0;for(t=0;t<e.length;t++)o=n.hasOwnProperty("$"+e[t].value),e[t].selected!==o&&(e[t].selected=o),o&&r&&(e[t].defaultSelected=!0)}else{for(t=""+H(t),n=null,o=0;o<e.length;o++){if(e[o].value===t)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==n||e[o].disabled||(n=e[o])}null!==n&&(n.selected=!0)}}function re(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(a(91));return j({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function oe(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(a(92));if(ne(t)){if(1<t.length)throw Error(a(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:H(t)}}function ae(e,n){var t=H(n.value),r=H(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function le(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ue(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var ce,se,fe=(se=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return se(e,n)}))}:se);function de(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ae=["Webkit","ms","Moz","O"];function he(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||pe.hasOwnProperty(e)&&pe[e]?(""+n).trim():n+"px"}function me(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),o=he(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,o):e[t]=o}}Object.keys(pe).forEach((function(e){Ae.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),pe[n]=pe[e]}))}));var ye=j({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ve(e,n){if(n){if(ye[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(a(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(a(62))}}function ge(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var be=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Be=null,Ee=null,ke=null;function Se(e){if(e=bo(e)){if("function"!=typeof Be)throw Error(a(280));var n=e.stateNode;n&&(n=Bo(n),Be(e.stateNode,e.type,n))}}function xe(e){Ee?ke?ke.push(e):ke=[e]:Ee=e}function Ce(){if(Ee){var e=Ee,n=ke;if(ke=Ee=null,Se(e),n)for(e=0;e<n.length;e++)Se(n[e])}}function _e(e,n){return e(n)}function Pe(){}var Oe=!1;function Ne(e,n,t){if(Oe)return e(n,t);Oe=!0;try{return _e(e,n,t)}finally{Oe=!1,(null!==Ee||null!==ke)&&(Pe(),Ce())}}function ze(e,n){var t=e.stateNode;if(null===t)return null;var r=Bo(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(a(231,n,typeof t));return t}var Me=!1;if(s)try{var Le={};Object.defineProperty(Le,"passive",{get:function(){Me=!0}}),window.addEventListener("test",Le,Le),window.removeEventListener("test",Le,Le)}catch(se){Me=!1}function Te(e,n,t,r,o,a,l,i,u){var c=Array.prototype.slice.call(arguments,3);try{n.apply(t,c)}catch(e){this.onError(e)}}var Ie=!1,je=null,Re=!1,De=null,Fe={onError:function(e){Ie=!0,je=e}};function Ue(e,n,t,r,o,a,l,i,u){Ie=!1,je=null,Te.apply(Fe,arguments)}function $e(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!=(4098&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function Ve(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&null!==(e=e.alternate)&&(n=e.memoizedState),null!==n)return n.dehydrated}return null}function He(e){if($e(e)!==e)throw Error(a(188))}function We(e){return null!==(e=function(e){var n=e.alternate;if(!n){if(null===(n=$e(e)))throw Error(a(188));return n!==e?null:e}for(var t=e,r=n;;){var o=t.return;if(null===o)break;var l=o.alternate;if(null===l){if(null!==(r=o.return)){t=r;continue}break}if(o.child===l.child){for(l=o.child;l;){if(l===t)return He(o),e;if(l===r)return He(o),n;l=l.sibling}throw Error(a(188))}if(t.return!==r.return)t=o,r=l;else{for(var i=!1,u=o.child;u;){if(u===t){i=!0,t=o,r=l;break}if(u===r){i=!0,r=o,t=l;break}u=u.sibling}if(!i){for(u=l.child;u;){if(u===t){i=!0,t=l,r=o;break}if(u===r){i=!0,r=l,t=o;break}u=u.sibling}if(!i)throw Error(a(189))}}if(t.alternate!==r)throw Error(a(190))}if(3!==t.tag)throw Error(a(188));return t.stateNode.current===t?e:n}(e))?qe(e):null}function qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var n=qe(e);if(null!==n)return n;e=e.sibling}return null}var Qe=o.unstable_scheduleCallback,Ke=o.unstable_cancelCallback,Ye=o.unstable_shouldYield,Ge=o.unstable_requestPaint,Xe=o.unstable_now,Je=o.unstable_getCurrentPriorityLevel,Ze=o.unstable_ImmediatePriority,en=o.unstable_UserBlockingPriority,nn=o.unstable_NormalPriority,tn=o.unstable_LowPriority,rn=o.unstable_IdlePriority,on=null,an=null,ln=Math.clz32?Math.clz32:function(e){return 0==(e>>>=0)?32:31-(un(e)/cn|0)|0},un=Math.log,cn=Math.LN2,sn=64,fn=4194304;function dn(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pn(e,n){var t=e.pendingLanes;if(0===t)return 0;var r=0,o=e.suspendedLanes,a=e.pingedLanes,l=268435455&t;if(0!==l){var i=l&~o;0!==i?r=dn(i):0!=(a&=l)&&(r=dn(a))}else 0!=(l=t&~o)?r=dn(l):0!==a&&(r=dn(a));if(0===r)return 0;if(0!==n&&n!==r&&0==(n&o)&&((o=r&-r)>=(a=n&-n)||16===o&&0!=(4194240&a)))return n;if(0!=(4&r)&&(r|=16&t),0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)o=1<<(t=31-ln(n)),r|=e[t],n&=~o;return r}function An(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function hn(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mn(){var e=sn;return 0==(4194240&(sn<<=1))&&(sn=64),e}function yn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function vn(e,n,t){e.pendingLanes|=n,536870912!==n&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[n=31-ln(n)]=t}function gn(e,n){var t=e.entangledLanes|=n;for(e=e.entanglements;t;){var r=31-ln(t),o=1<<r;o&n|e[r]&n&&(e[r]|=n),t&=~o}}var bn=0;function wn(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var Bn,En,kn,Sn,xn,Cn=!1,_n=[],Pn=null,On=null,Nn=null,zn=new Map,Mn=new Map,Ln=[],Tn="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function In(e,n){switch(e){case"focusin":case"focusout":Pn=null;break;case"dragenter":case"dragleave":On=null;break;case"mouseover":case"mouseout":Nn=null;break;case"pointerover":case"pointerout":zn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":Mn.delete(n.pointerId)}}function jn(e,n,t,r,o,a){return null===e||e.nativeEvent!==a?(e={blockedOn:n,domEventName:t,eventSystemFlags:r,nativeEvent:a,targetContainers:[o]},null!==n&&null!==(n=bo(n))&&En(n),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==o&&-1===n.indexOf(o)&&n.push(o),e)}function Rn(e){var n=go(e.target);if(null!==n){var t=$e(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=Ve(t)))return e.blockedOn=n,void xn(e.priority,(function(){kn(t)}))}else if(3===n&&t.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function Dn(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=Gn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=bo(t))&&En(n),e.blockedOn=t,!1;var r=new(t=e.nativeEvent).constructor(t.type,t);be=r,t.target.dispatchEvent(r),be=null,n.shift()}return!0}function Fn(e,n,t){Dn(e)&&t.delete(n)}function Un(){Cn=!1,null!==Pn&&Dn(Pn)&&(Pn=null),null!==On&&Dn(On)&&(On=null),null!==Nn&&Dn(Nn)&&(Nn=null),zn.forEach(Fn),Mn.forEach(Fn)}function $n(e,n){e.blockedOn===n&&(e.blockedOn=null,Cn||(Cn=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,Un)))}function Vn(e){function n(n){return $n(n,e)}if(0<_n.length){$n(_n[0],e);for(var t=1;t<_n.length;t++){var r=_n[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Pn&&$n(Pn,e),null!==On&&$n(On,e),null!==Nn&&$n(Nn,e),zn.forEach(n),Mn.forEach(n),t=0;t<Ln.length;t++)(r=Ln[t]).blockedOn===e&&(r.blockedOn=null);for(;0<Ln.length&&null===(t=Ln[0]).blockedOn;)Rn(t),null===t.blockedOn&&Ln.shift()}var Hn=b.ReactCurrentBatchConfig,Wn=!0;function qn(e,n,t,r){var o=bn,a=Hn.transition;Hn.transition=null;try{bn=1,Kn(e,n,t,r)}finally{bn=o,Hn.transition=a}}function Qn(e,n,t,r){var o=bn,a=Hn.transition;Hn.transition=null;try{bn=4,Kn(e,n,t,r)}finally{bn=o,Hn.transition=a}}function Kn(e,n,t,r){if(Wn){var o=Gn(e,n,t,r);if(null===o)Hr(e,n,r,Yn,t),In(e,r);else if(function(e,n,t,r,o){switch(n){case"focusin":return Pn=jn(Pn,e,n,t,r,o),!0;case"dragenter":return On=jn(On,e,n,t,r,o),!0;case"mouseover":return Nn=jn(Nn,e,n,t,r,o),!0;case"pointerover":var a=o.pointerId;return zn.set(a,jn(zn.get(a)||null,e,n,t,r,o)),!0;case"gotpointercapture":return a=o.pointerId,Mn.set(a,jn(Mn.get(a)||null,e,n,t,r,o)),!0}return!1}(o,e,n,t,r))r.stopPropagation();else if(In(e,r),4&n&&-1<Tn.indexOf(e)){for(;null!==o;){var a=bo(o);if(null!==a&&Bn(a),null===(a=Gn(e,n,t,r))&&Hr(e,n,r,Yn,t),a===o)break;o=a}null!==o&&r.stopPropagation()}else Hr(e,n,r,null,t)}}var Yn=null;function Gn(e,n,t,r){if(Yn=null,null!==(e=go(e=we(r))))if(null===(n=$e(e)))e=null;else if(13===(t=n.tag)){if(null!==(e=Ve(n)))return e;e=null}else if(3===t){if(n.stateNode.current.memoizedState.isDehydrated)return 3===n.tag?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null);return Yn=e,null}function Xn(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case Ze:return 1;case en:return 4;case nn:case tn:return 16;case rn:return 536870912;default:return 16}default:return 16}}var Jn=null,Zn=null,et=null;function nt(){if(et)return et;var e,n,t=Zn,r=t.length,o="value"in Jn?Jn.value:Jn.textContent,a=o.length;for(e=0;e<r&&t[e]===o[e];e++);var l=r-e;for(n=1;n<=l&&t[r-n]===o[a-n];n++);return et=o.slice(e,1<n?1-n:void 0)}function tt(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function rt(){return!0}function ot(){return!1}function at(e){function n(n,t,r,o,a){for(var l in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(l)&&(n=e[l],this[l]=n?n(o):o[l]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?rt:ot,this.isPropagationStopped=ot,this}return j(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rt)},persist:function(){},isPersistent:rt}),n}var lt,it,ut,ct={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},st=at(ct),ft=j({},ct,{view:0,detail:0}),dt=at(ft),pt=j({},ft,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:St,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ut&&(ut&&"mousemove"===e.type?(lt=e.screenX-ut.screenX,it=e.screenY-ut.screenY):it=lt=0,ut=e),lt)},movementY:function(e){return"movementY"in e?e.movementY:it}}),At=at(pt),ht=at(j({},pt,{dataTransfer:0})),mt=at(j({},ft,{relatedTarget:0})),yt=at(j({},ct,{animationName:0,elapsedTime:0,pseudoElement:0})),vt=j({},ct,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),gt=at(vt),bt=at(j({},ct,{data:0})),wt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Bt={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Et={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function kt(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=Et[e])&&!!n[e]}function St(){return kt}var xt=j({},ft,{key:function(e){if(e.key){var n=wt[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=tt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Bt[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:St,charCode:function(e){return"keypress"===e.type?tt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Ct=at(xt),_t=at(j({},pt,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Pt=at(j({},ft,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:St})),Ot=at(j({},ct,{propertyName:0,elapsedTime:0,pseudoElement:0})),Nt=j({},pt,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),zt=at(Nt),Mt=[9,13,27,32],Lt=s&&"CompositionEvent"in window,Tt=null;s&&"documentMode"in document&&(Tt=document.documentMode);var It=s&&"TextEvent"in window&&!Tt,jt=s&&(!Lt||Tt&&8<Tt&&11>=Tt),Rt=String.fromCharCode(32),Dt=!1;function Ft(e,n){switch(e){case"keyup":return-1!==Mt.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ut(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var $t=!1,Vt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ht(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Vt[e.type]:"textarea"===n}function Wt(e,n,t,r){xe(r),0<(n=qr(n,"onChange")).length&&(t=new st("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var qt=null,Qt=null;function Kt(e){Rr(e,0)}function Yt(e){if(Q(wo(e)))return e}function Gt(e,n){if("change"===e)return n}var Xt=!1;if(s){var Jt;if(s){var Zt="oninput"in document;if(!Zt){var er=document.createElement("div");er.setAttribute("oninput","return;"),Zt="function"==typeof er.oninput}Jt=Zt}else Jt=!1;Xt=Jt&&(!document.documentMode||9<document.documentMode)}function nr(){qt&&(qt.detachEvent("onpropertychange",tr),Qt=qt=null)}function tr(e){if("value"===e.propertyName&&Yt(Qt)){var n=[];Wt(n,Qt,e,we(e)),Ne(Kt,n)}}function rr(e,n,t){"focusin"===e?(nr(),Qt=t,(qt=n).attachEvent("onpropertychange",tr)):"focusout"===e&&nr()}function or(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yt(Qt)}function ar(e,n){if("click"===e)return Yt(n)}function lr(e,n){if("input"===e||"change"===e)return Yt(n)}var ir="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n};function ur(e,n){if(ir(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var o=t[r];if(!f.call(n,o)||!ir(e[o],n[o]))return!1}return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,n){var t,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function fr(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?fr(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function dr(){for(var e=window,n=K();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(e){t=!1}if(!t)break;n=K((e=n.contentWindow).document)}return n}function pr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}function Ar(e){var n=dr(),t=e.focusedElem,r=e.selectionRange;if(n!==t&&t&&t.ownerDocument&&fr(t.ownerDocument.documentElement,t)){if(null!==r&&pr(t))if(n=r.start,void 0===(e=r.end)&&(e=n),"selectionStart"in t)t.selectionStart=n,t.selectionEnd=Math.min(e,t.value.length);else if((e=(n=t.ownerDocument||document)&&n.defaultView||window).getSelection){e=e.getSelection();var o=t.textContent.length,a=Math.min(r.start,o);r=void 0===r.end?a:Math.min(r.end,o),!e.extend&&a>r&&(o=r,r=a,a=o),o=sr(t,a);var l=sr(t,r);o&&l&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==l.node||e.focusOffset!==l.offset)&&((n=n.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),a>r?(e.addRange(n),e.extend(l.node,l.offset)):(n.setEnd(l.node,l.offset),e.addRange(n)))}for(n=[],e=t;e=e.parentNode;)1===e.nodeType&&n.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof t.focus&&t.focus(),t=0;t<n.length;t++)(e=n[t]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var hr=s&&"documentMode"in document&&11>=document.documentMode,mr=null,yr=null,vr=null,gr=!1;function br(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;gr||null==mr||mr!==K(r)||(r="selectionStart"in(r=mr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&ur(vr,r)||(vr=r,0<(r=qr(yr,"onSelect")).length&&(n=new st("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=mr)))}function wr(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var Br={animationend:wr("Animation","AnimationEnd"),animationiteration:wr("Animation","AnimationIteration"),animationstart:wr("Animation","AnimationStart"),transitionend:wr("Transition","TransitionEnd")},Er={},kr={};function Sr(e){if(Er[e])return Er[e];if(!Br[e])return e;var n,t=Br[e];for(n in t)if(t.hasOwnProperty(n)&&n in kr)return Er[e]=t[n];return e}s&&(kr=document.createElement("div").style,"AnimationEvent"in window||(delete Br.animationend.animation,delete Br.animationiteration.animation,delete Br.animationstart.animation),"TransitionEvent"in window||delete Br.transitionend.transition);var xr=Sr("animationend"),Cr=Sr("animationiteration"),_r=Sr("animationstart"),Pr=Sr("transitionend"),Or=new Map,Nr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function zr(e,n){Or.set(e,n),u(n,[e])}for(var Mr=0;Mr<Nr.length;Mr++){var Lr=Nr[Mr];zr(Lr.toLowerCase(),"on"+(Lr[0].toUpperCase()+Lr.slice(1)))}zr(xr,"onAnimationEnd"),zr(Cr,"onAnimationIteration"),zr(_r,"onAnimationStart"),zr("dblclick","onDoubleClick"),zr("focusin","onFocus"),zr("focusout","onBlur"),zr(Pr,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Tr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ir=new Set("cancel close invalid load scroll toggle".split(" ").concat(Tr));function jr(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,o,l,i,u,c){if(Ue.apply(this,arguments),Ie){if(!Ie)throw Error(a(198));var s=je;Ie=!1,je=null,Re||(Re=!0,De=s)}}(r,n,void 0,e),e.currentTarget=null}function Rr(e,n){n=0!=(4&n);for(var t=0;t<e.length;t++){var r=e[t],o=r.event;r=r.listeners;e:{var a=void 0;if(n)for(var l=r.length-1;0<=l;l--){var i=r[l],u=i.instance,c=i.currentTarget;if(i=i.listener,u!==a&&o.isPropagationStopped())break e;jr(o,i,c),a=u}else for(l=0;l<r.length;l++){if(u=(i=r[l]).instance,c=i.currentTarget,i=i.listener,u!==a&&o.isPropagationStopped())break e;jr(o,i,c),a=u}}}if(Re)throw e=De,Re=!1,De=null,e}function Dr(e,n){var t=n[mo];void 0===t&&(t=n[mo]=new Set);var r=e+"__bubble";t.has(r)||(Vr(n,e,2,!1),t.add(r))}function Fr(e,n,t){var r=0;n&&(r|=4),Vr(t,e,r,n)}var Ur="_reactListening"+Math.random().toString(36).slice(2);function $r(e){if(!e[Ur]){e[Ur]=!0,l.forEach((function(n){"selectionchange"!==n&&(Ir.has(n)||Fr(n,!1,e),Fr(n,!0,e))}));var n=9===e.nodeType?e:e.ownerDocument;null===n||n[Ur]||(n[Ur]=!0,Fr("selectionchange",!1,n))}}function Vr(e,n,t,r){switch(Xn(n)){case 1:var o=qn;break;case 4:o=Qn;break;default:o=Kn}t=o.bind(null,n,t,e),o=void 0,!Me||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(o=!0),r?void 0!==o?e.addEventListener(n,t,{capture:!0,passive:o}):e.addEventListener(n,t,!0):void 0!==o?e.addEventListener(n,t,{passive:o}):e.addEventListener(n,t,!1)}function Hr(e,n,t,r,o){var a=r;if(0==(1&n)&&0==(2&n)&&null!==r)e:for(;;){if(null===r)return;var l=r.tag;if(3===l||4===l){var i=r.stateNode.containerInfo;if(i===o||8===i.nodeType&&i.parentNode===o)break;if(4===l)for(l=r.return;null!==l;){var u=l.tag;if((3===u||4===u)&&((u=l.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;l=l.return}for(;null!==i;){if(null===(l=go(i)))return;if(5===(u=l.tag)||6===u){r=a=l;continue e}i=i.parentNode}}r=r.return}Ne((function(){var r=a,o=we(t),l=[];e:{var i=Or.get(e);if(void 0!==i){var u=st,c=e;switch(e){case"keypress":if(0===tt(t))break e;case"keydown":case"keyup":u=Ct;break;case"focusin":c="focus",u=mt;break;case"focusout":c="blur",u=mt;break;case"beforeblur":case"afterblur":u=mt;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=At;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=ht;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Pt;break;case xr:case Cr:case _r:u=yt;break;case Pr:u=Ot;break;case"scroll":u=dt;break;case"wheel":u=zt;break;case"copy":case"cut":case"paste":u=gt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=_t}var s=0!=(4&n),f=!s&&"scroll"===e,d=s?null!==i?i+"Capture":null:i;s=[];for(var p,A=r;null!==A;){var h=(p=A).stateNode;if(5===p.tag&&null!==h&&(p=h,null!==d&&null!=(h=ze(A,d))&&s.push(Wr(A,h,p))),f)break;A=A.return}0<s.length&&(i=new u(i,c,null,t,o),l.push({event:i,listeners:s}))}}if(0==(7&n)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||t===be||!(c=t.relatedTarget||t.fromElement)||!go(c)&&!c[ho])&&(u||i)&&(i=o.window===o?o:(i=o.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(c=(c=t.relatedTarget||t.toElement)?go(c):null)&&(c!==(f=$e(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=At,h="onMouseLeave",d="onMouseEnter",A="mouse","pointerout"!==e&&"pointerover"!==e||(s=_t,h="onPointerLeave",d="onPointerEnter",A="pointer"),f=null==u?i:wo(u),p=null==c?i:wo(c),(i=new s(h,A+"leave",u,t,o)).target=f,i.relatedTarget=p,h=null,go(o)===r&&((s=new s(d,A+"enter",c,t,o)).target=p,s.relatedTarget=f,h=s),f=h,u&&c)e:{for(d=c,A=0,p=s=u;p;p=Qr(p))A++;for(p=0,h=d;h;h=Qr(h))p++;for(;0<A-p;)s=Qr(s),A--;for(;0<p-A;)d=Qr(d),p--;for(;A--;){if(s===d||null!==d&&s===d.alternate)break e;s=Qr(s),d=Qr(d)}s=null}else s=null;null!==u&&Kr(l,i,u,s,!1),null!==c&&null!==f&&Kr(l,f,c,s,!0)}if("select"===(u=(i=r?wo(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var m=Gt;else if(Ht(i))if(Xt)m=lr;else{m=or;var y=rr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(m=ar);switch(m&&(m=m(e,r))?Wt(l,m,t,o):(y&&y(e,i,r),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ee(i,"number",i.value)),y=r?wo(r):window,e){case"focusin":(Ht(y)||"true"===y.contentEditable)&&(mr=y,yr=r,vr=null);break;case"focusout":vr=yr=mr=null;break;case"mousedown":gr=!0;break;case"contextmenu":case"mouseup":case"dragend":gr=!1,br(l,t,o);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":br(l,t,o)}var v;if(Lt)e:{switch(e){case"compositionstart":var g="onCompositionStart";break e;case"compositionend":g="onCompositionEnd";break e;case"compositionupdate":g="onCompositionUpdate";break e}g=void 0}else $t?Ft(e,t)&&(g="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(g="onCompositionStart");g&&(jt&&"ko"!==t.locale&&($t||"onCompositionStart"!==g?"onCompositionEnd"===g&&$t&&(v=nt()):(Zn="value"in(Jn=o)?Jn.value:Jn.textContent,$t=!0)),0<(y=qr(r,g)).length&&(g=new bt(g,e,null,t,o),l.push({event:g,listeners:y}),(v||null!==(v=Ut(t)))&&(g.data=v))),(v=It?function(e,n){switch(e){case"compositionend":return Ut(n);case"keypress":return 32!==n.which?null:(Dt=!0,Rt);case"textInput":return(e=n.data)===Rt&&Dt?null:e;default:return null}}(e,t):function(e,n){if($t)return"compositionend"===e||!Lt&&Ft(e,n)?(e=nt(),et=Zn=Jn=null,$t=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return jt&&"ko"!==n.locale?null:n.data}}(e,t))&&0<(r=qr(r,"onBeforeInput")).length&&(o=new bt("onBeforeInput","beforeinput",null,t,o),l.push({event:o,listeners:r}),o.data=v)}Rr(l,n)}))}function Wr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function qr(e,n){for(var t=n+"Capture",r=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=ze(e,t))&&r.unshift(Wr(e,a,o)),null!=(a=ze(e,n))&&r.push(Wr(e,a,o))),e=e.return}return r}function Qr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Kr(e,n,t,r,o){for(var a=n._reactName,l=[];null!==t&&t!==r;){var i=t,u=i.alternate,c=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==c&&(i=c,o?null!=(u=ze(t,a))&&l.unshift(Wr(t,u,i)):o||null!=(u=ze(t,a))&&l.push(Wr(t,u,i))),t=t.return}0!==l.length&&e.push({event:n,listeners:l})}var Yr=/\r\n?/g,Gr=/\u0000|\uFFFD/g;function Xr(e){return("string"==typeof e?e:""+e).replace(Yr,"\n").replace(Gr,"")}function Jr(e,n,t){if(n=Xr(n),Xr(e)!==n&&t)throw Error(a(425))}function Zr(){}var eo=null,no=null;function to(e,n){return"textarea"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var ro="function"==typeof setTimeout?setTimeout:void 0,oo="function"==typeof clearTimeout?clearTimeout:void 0,ao="function"==typeof Promise?Promise:void 0,lo="function"==typeof queueMicrotask?queueMicrotask:void 0!==ao?function(e){return ao.resolve(null).then(e).catch(io)}:ro;function io(e){setTimeout((function(){throw e}))}function uo(e,n){var t=n,r=0;do{var o=t.nextSibling;if(e.removeChild(t),o&&8===o.nodeType)if("/$"===(t=o.data)){if(0===r)return e.removeChild(o),void Vn(n);r--}else"$"!==t&&"$?"!==t&&"$!"!==t||r++;t=o}while(t);Vn(n)}function co(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break;if(8===n){if("$"===(n=e.data)||"$!"===n||"$?"===n)break;if("/$"===n)return null}}return e}function so(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var fo=Math.random().toString(36).slice(2),po="__reactFiber$"+fo,Ao="__reactProps$"+fo,ho="__reactContainer$"+fo,mo="__reactEvents$"+fo,yo="__reactListeners$"+fo,vo="__reactHandles$"+fo;function go(e){var n=e[po];if(n)return n;for(var t=e.parentNode;t;){if(n=t[ho]||t[po]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=so(e);null!==e;){if(t=e[po])return t;e=so(e)}return n}t=(e=t).parentNode}return null}function bo(e){return!(e=e[po]||e[ho])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function wo(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function Bo(e){return e[Ao]||null}var Eo=[],ko=-1;function So(e){return{current:e}}function xo(e){0>ko||(e.current=Eo[ko],Eo[ko]=null,ko--)}function Co(e,n){ko++,Eo[ko]=e.current,e.current=n}var _o={},Po=So(_o),Oo=So(!1),No=_o;function zo(e,n){var t=e.type.contextTypes;if(!t)return _o;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in t)a[o]=n[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=a),a}function Mo(e){return null!=e.childContextTypes}function Lo(){xo(Oo),xo(Po)}function To(e,n,t){if(Po.current!==_o)throw Error(a(168));Co(Po,n),Co(Oo,t)}function Io(e,n,t){var r=e.stateNode;if(n=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var o in r=r.getChildContext())if(!(o in n))throw Error(a(108,V(e)||"Unknown",o));return j({},t,r)}function jo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||_o,No=Po.current,Co(Po,e),Co(Oo,Oo.current),!0}function Ro(e,n,t){var r=e.stateNode;if(!r)throw Error(a(169));t?(e=Io(e,n,No),r.__reactInternalMemoizedMergedChildContext=e,xo(Oo),xo(Po),Co(Po,e)):xo(Oo),Co(Oo,t)}var Do=null,Fo=!1,Uo=!1;function $o(e){null===Do?Do=[e]:Do.push(e)}function Vo(){if(!Uo&&null!==Do){Uo=!0;var e=0,n=bn;try{var t=Do;for(bn=1;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}Do=null,Fo=!1}catch(n){throw null!==Do&&(Do=Do.slice(e+1)),Qe(Ze,Vo),n}finally{bn=n,Uo=!1}}return null}var Ho=[],Wo=0,qo=null,Qo=0,Ko=[],Yo=0,Go=null,Xo=1,Jo="";function Zo(e,n){Ho[Wo++]=Qo,Ho[Wo++]=qo,qo=e,Qo=n}function ea(e,n,t){Ko[Yo++]=Xo,Ko[Yo++]=Jo,Ko[Yo++]=Go,Go=e;var r=Xo;e=Jo;var o=32-ln(r)-1;r&=~(1<<o),t+=1;var a=32-ln(n)+o;if(30<a){var l=o-o%5;a=(r&(1<<l)-1).toString(32),r>>=l,o-=l,Xo=1<<32-ln(n)+o|t<<o|r,Jo=a+e}else Xo=1<<a|t<<o|r,Jo=e}function na(e){null!==e.return&&(Zo(e,1),ea(e,1,0))}function ta(e){for(;e===qo;)qo=Ho[--Wo],Ho[Wo]=null,Qo=Ho[--Wo],Ho[Wo]=null;for(;e===Go;)Go=Ko[--Yo],Ko[Yo]=null,Jo=Ko[--Yo],Ko[Yo]=null,Xo=Ko[--Yo],Ko[Yo]=null}var ra=null,oa=null,aa=!1,la=null;function ia(e,n){var t=Nc(5,null,null,0);t.elementType="DELETED",t.stateNode=n,t.return=e,null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)}function ua(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,ra=e,oa=co(n.firstChild),!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,ra=e,oa=null,!0);case 13:return null!==(n=8!==n.nodeType?null:n)&&(t=null!==Go?{id:Xo,overflow:Jo}:null,e.memoizedState={dehydrated:n,treeContext:t,retryLane:1073741824},(t=Nc(18,null,null,0)).stateNode=n,t.return=e,e.child=t,ra=e,oa=null,!0);default:return!1}}function ca(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function sa(e){if(aa){var n=oa;if(n){var t=n;if(!ua(e,n)){if(ca(e))throw Error(a(418));n=co(t.nextSibling);var r=ra;n&&ua(e,n)?ia(r,t):(e.flags=-4097&e.flags|2,aa=!1,ra=e)}}else{if(ca(e))throw Error(a(418));e.flags=-4097&e.flags|2,aa=!1,ra=e}}}function fa(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ra=e}function da(e){if(e!==ra)return!1;if(!aa)return fa(e),aa=!0,!1;var n;if((n=3!==e.tag)&&!(n=5!==e.tag)&&(n="head"!==(n=e.type)&&"body"!==n&&!to(e.type,e.memoizedProps)),n&&(n=oa)){if(ca(e))throw pa(),Error(a(418));for(;n;)ia(e,n),n=co(n.nextSibling)}if(fa(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){oa=co(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}oa=null}}else oa=ra?co(e.stateNode.nextSibling):null;return!0}function pa(){for(var e=oa;e;)e=co(e.nextSibling)}function Aa(){oa=ra=null,aa=!1}function ha(e){null===la?la=[e]:la.push(e)}var ma=b.ReactCurrentBatchConfig;function ya(e,n){if(e&&e.defaultProps){for(var t in n=j({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}var va=So(null),ga=null,ba=null,wa=null;function Ba(){wa=ba=ga=null}function Ea(e){var n=va.current;xo(va),e._currentValue=n}function ka(e,n,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==r&&(r.childLanes|=n)):null!==r&&(r.childLanes&n)!==n&&(r.childLanes|=n),e===t)break;e=e.return}}function Sa(e,n){ga=e,wa=ba=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&n)&&(bi=!0),e.firstContext=null)}function xa(e){var n=e._currentValue;if(wa!==e)if(e={context:e,memoizedValue:n,next:null},null===ba){if(null===ga)throw Error(a(308));ba=e,ga.dependencies={lanes:0,firstContext:e}}else ba=ba.next=e;return n}var Ca=null;function _a(e){null===Ca?Ca=[e]:Ca.push(e)}function Pa(e,n,t,r){var o=n.interleaved;return null===o?(t.next=t,_a(n)):(t.next=o.next,o.next=t),n.interleaved=t,Oa(e,r)}function Oa(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}var Na=!1;function za(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ma(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function La(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function Ta(e,n,t){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&_u)){var o=r.pending;return null===o?n.next=n:(n.next=o.next,o.next=n),r.pending=n,Oa(e,t)}return null===(o=r.interleaved)?(n.next=n,_a(r)):(n.next=o.next,o.next=n),r.interleaved=n,Oa(e,t)}function Ia(e,n,t){if(null!==(n=n.updateQueue)&&(n=n.shared,0!=(4194240&t))){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,gn(e,t)}}function ja(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var o=null,a=null;if(null!==(t=t.firstBaseUpdate)){do{var l={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===a?o=a=l:a=a.next=l,t=t.next}while(null!==t);null===a?o=a=n:a=a.next=n}else o=a=n;return t={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function Ra(e,n,t,r){var o=e.updateQueue;Na=!1;var a=o.firstBaseUpdate,l=o.lastBaseUpdate,i=o.shared.pending;if(null!==i){o.shared.pending=null;var u=i,c=u.next;u.next=null,null===l?a=c:l.next=c,l=u;var s=e.alternate;null!==s&&(i=(s=s.updateQueue).lastBaseUpdate)!==l&&(null===i?s.firstBaseUpdate=c:i.next=c,s.lastBaseUpdate=u)}if(null!==a){var f=o.baseState;for(l=0,s=c=u=null,i=a;;){var d=i.lane,p=i.eventTime;if((r&d)===d){null!==s&&(s=s.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var A=e,h=i;switch(d=n,p=t,h.tag){case 1:if("function"==typeof(A=h.payload)){f=A.call(p,f,d);break e}f=A;break e;case 3:A.flags=-65537&A.flags|128;case 0:if(null==(d="function"==typeof(A=h.payload)?A.call(p,f,d):A))break e;f=j({},f,d);break e;case 2:Na=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(d=o.effects)?o.effects=[i]:d.push(i))}else p={eventTime:p,lane:d,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===s?(c=s=p,u=f):s=s.next=p,l|=d;if(null===(i=i.next)){if(null===(i=o.shared.pending))break;i=(d=i).next,d.next=null,o.lastBaseUpdate=d,o.shared.pending=null}}if(null===s&&(u=f),o.baseState=u,o.firstBaseUpdate=c,o.lastBaseUpdate=s,null!==(n=o.shared.interleaved)){o=n;do{l|=o.lane,o=o.next}while(o!==n)}else null===a&&(o.shared.lanes=0);Iu|=l,e.lanes=l,e.memoizedState=f}}function Da(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],o=r.callback;if(null!==o){if(r.callback=null,r=t,"function"!=typeof o)throw Error(a(191,o));o.call(r)}}}var Fa=(new r.Component).refs;function Ua(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:j({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var $a={isMounted:function(e){return!!(e=e._reactInternals)&&$e(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=ec(),o=nc(e),a=La(r,o);a.payload=n,null!=t&&(a.callback=t),null!==(n=Ta(e,a,o))&&(tc(n,e,o,r),Ia(n,e,o))},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=ec(),o=nc(e),a=La(r,o);a.tag=1,a.payload=n,null!=t&&(a.callback=t),null!==(n=Ta(e,a,o))&&(tc(n,e,o,r),Ia(n,e,o))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=ec(),r=nc(e),o=La(t,r);o.tag=2,null!=n&&(o.callback=n),null!==(n=Ta(e,o,r))&&(tc(n,e,r,t),Ia(n,e,r))}};function Va(e,n,t,r,o,a,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,l):!(n.prototype&&n.prototype.isPureReactComponent&&ur(t,r)&&ur(o,a))}function Ha(e,n,t){var r=!1,o=_o,a=n.contextType;return"object"==typeof a&&null!==a?a=xa(a):(o=Mo(n)?No:Po.current,a=(r=null!=(r=n.contextTypes))?zo(e,o):_o),n=new n(t,a),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=$a,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),n}function Wa(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&$a.enqueueReplaceState(n,n.state,null)}function qa(e,n,t,r){var o=e.stateNode;o.props=t,o.state=e.memoizedState,o.refs=Fa,za(e);var a=n.contextType;"object"==typeof a&&null!==a?o.context=xa(a):(a=Mo(n)?No:Po.current,o.context=zo(e,a)),o.state=e.memoizedState,"function"==typeof(a=n.getDerivedStateFromProps)&&(Ua(e,n,a,t),o.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(n=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),n!==o.state&&$a.enqueueReplaceState(o,o.state,null),Ra(e,t,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4194308)}function Qa(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(a(309));var r=t.stateNode}if(!r)throw Error(a(147,e));var o=r,l=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===l?n.ref:(n=function(e){var n=o.refs;n===Fa&&(n=o.refs={}),null===e?delete n[l]:n[l]=e},n._stringRef=l,n)}if("string"!=typeof e)throw Error(a(284));if(!t._owner)throw Error(a(290,e))}return e}function Ka(e,n){throw e=Object.prototype.toString.call(n),Error(a(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function Ya(e){return(0,e._init)(e._payload)}function Ga(e){function n(n,t){if(e){var r=n.deletions;null===r?(n.deletions=[t],n.flags|=16):r.push(t)}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function o(e,n){return(e=Mc(e,n)).index=0,e.sibling=null,e}function l(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags|=2,t):r:(n.flags|=2,t):(n.flags|=1048576,t)}function i(n){return e&&null===n.alternate&&(n.flags|=2),n}function u(e,n,t,r){return null===n||6!==n.tag?((n=jc(t,e.mode,r)).return=e,n):((n=o(n,t)).return=e,n)}function c(e,n,t,r){var a=t.type;return a===E?f(e,n,t.props.children,r,t.key):null!==n&&(n.elementType===a||"object"==typeof a&&null!==a&&a.$$typeof===z&&Ya(a)===n.type)?((r=o(n,t.props)).ref=Qa(e,n,t),r.return=e,r):((r=Lc(t.type,t.key,t.props,null,e.mode,r)).ref=Qa(e,n,t),r.return=e,r)}function s(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Rc(t,e.mode,r)).return=e,n):((n=o(n,t.children||[])).return=e,n)}function f(e,n,t,r,a){return null===n||7!==n.tag?((n=Tc(t,e.mode,r,a)).return=e,n):((n=o(n,t)).return=e,n)}function d(e,n,t){if("string"==typeof n&&""!==n||"number"==typeof n)return(n=jc(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case w:return(t=Lc(n.type,n.key,n.props,null,e.mode,t)).ref=Qa(e,null,n),t.return=e,t;case B:return(n=Rc(n,e.mode,t)).return=e,n;case z:return d(e,(0,n._init)(n._payload),t)}if(ne(n)||T(n))return(n=Tc(n,e.mode,t,null)).return=e,n;Ka(e,n)}return null}function p(e,n,t,r){var o=null!==n?n.key:null;if("string"==typeof t&&""!==t||"number"==typeof t)return null!==o?null:u(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case w:return t.key===o?c(e,n,t,r):null;case B:return t.key===o?s(e,n,t,r):null;case z:return p(e,n,(o=t._init)(t._payload),r)}if(ne(t)||T(t))return null!==o?null:f(e,n,t,r,null);Ka(e,t)}return null}function A(e,n,t,r,o){if("string"==typeof r&&""!==r||"number"==typeof r)return u(n,e=e.get(t)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case w:return c(n,e=e.get(null===r.key?t:r.key)||null,r,o);case B:return s(n,e=e.get(null===r.key?t:r.key)||null,r,o);case z:return A(e,n,t,(0,r._init)(r._payload),o)}if(ne(r)||T(r))return f(n,e=e.get(t)||null,r,o,null);Ka(n,r)}return null}function h(o,a,i,u){for(var c=null,s=null,f=a,h=a=0,m=null;null!==f&&h<i.length;h++){f.index>h?(m=f,f=null):m=f.sibling;var y=p(o,f,i[h],u);if(null===y){null===f&&(f=m);break}e&&f&&null===y.alternate&&n(o,f),a=l(y,a,h),null===s?c=y:s.sibling=y,s=y,f=m}if(h===i.length)return t(o,f),aa&&Zo(o,h),c;if(null===f){for(;h<i.length;h++)null!==(f=d(o,i[h],u))&&(a=l(f,a,h),null===s?c=f:s.sibling=f,s=f);return aa&&Zo(o,h),c}for(f=r(o,f);h<i.length;h++)null!==(m=A(f,o,h,i[h],u))&&(e&&null!==m.alternate&&f.delete(null===m.key?h:m.key),a=l(m,a,h),null===s?c=m:s.sibling=m,s=m);return e&&f.forEach((function(e){return n(o,e)})),aa&&Zo(o,h),c}function m(o,i,u,c){var s=T(u);if("function"!=typeof s)throw Error(a(150));if(null==(u=s.call(u)))throw Error(a(151));for(var f=s=null,h=i,m=i=0,y=null,v=u.next();null!==h&&!v.done;m++,v=u.next()){h.index>m?(y=h,h=null):y=h.sibling;var g=p(o,h,v.value,c);if(null===g){null===h&&(h=y);break}e&&h&&null===g.alternate&&n(o,h),i=l(g,i,m),null===f?s=g:f.sibling=g,f=g,h=y}if(v.done)return t(o,h),aa&&Zo(o,m),s;if(null===h){for(;!v.done;m++,v=u.next())null!==(v=d(o,v.value,c))&&(i=l(v,i,m),null===f?s=v:f.sibling=v,f=v);return aa&&Zo(o,m),s}for(h=r(o,h);!v.done;m++,v=u.next())null!==(v=A(h,o,m,v.value,c))&&(e&&null!==v.alternate&&h.delete(null===v.key?m:v.key),i=l(v,i,m),null===f?s=v:f.sibling=v,f=v);return e&&h.forEach((function(e){return n(o,e)})),aa&&Zo(o,m),s}return function e(r,a,l,u){if("object"==typeof l&&null!==l&&l.type===E&&null===l.key&&(l=l.props.children),"object"==typeof l&&null!==l){switch(l.$$typeof){case w:e:{for(var c=l.key,s=a;null!==s;){if(s.key===c){if((c=l.type)===E){if(7===s.tag){t(r,s.sibling),(a=o(s,l.props.children)).return=r,r=a;break e}}else if(s.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===z&&Ya(c)===s.type){t(r,s.sibling),(a=o(s,l.props)).ref=Qa(r,s,l),a.return=r,r=a;break e}t(r,s);break}n(r,s),s=s.sibling}l.type===E?((a=Tc(l.props.children,r.mode,u,l.key)).return=r,r=a):((u=Lc(l.type,l.key,l.props,null,r.mode,u)).ref=Qa(r,a,l),u.return=r,r=u)}return i(r);case B:e:{for(s=l.key;null!==a;){if(a.key===s){if(4===a.tag&&a.stateNode.containerInfo===l.containerInfo&&a.stateNode.implementation===l.implementation){t(r,a.sibling),(a=o(a,l.children||[])).return=r,r=a;break e}t(r,a);break}n(r,a),a=a.sibling}(a=Rc(l,r.mode,u)).return=r,r=a}return i(r);case z:return e(r,a,(s=l._init)(l._payload),u)}if(ne(l))return h(r,a,l,u);if(T(l))return m(r,a,l,u);Ka(r,l)}return"string"==typeof l&&""!==l||"number"==typeof l?(l=""+l,null!==a&&6===a.tag?(t(r,a.sibling),(a=o(a,l)).return=r,r=a):(t(r,a),(a=jc(l,r.mode,u)).return=r,r=a),i(r)):t(r,a)}}var Xa=Ga(!0),Ja=Ga(!1),Za={},el=So(Za),nl=So(Za),tl=So(Za);function rl(e){if(e===Za)throw Error(a(174));return e}function ol(e,n){switch(Co(tl,n),Co(nl,e),Co(el,Za),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:ue(null,"");break;default:n=ue(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}xo(el),Co(el,n)}function al(){xo(el),xo(nl),xo(tl)}function ll(e){rl(tl.current);var n=rl(el.current),t=ue(n,e.type);n!==t&&(Co(nl,e),Co(el,t))}function il(e){nl.current===e&&(xo(el),xo(nl))}var ul=So(0);function cl(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!=(128&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var sl=[];function fl(){for(var e=0;e<sl.length;e++)sl[e]._workInProgressVersionPrimary=null;sl.length=0}var dl=b.ReactCurrentDispatcher,pl=b.ReactCurrentBatchConfig,Al=0,hl=null,ml=null,yl=null,vl=!1,gl=!1,bl=0,wl=0;function Bl(){throw Error(a(321))}function El(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!ir(e[t],n[t]))return!1;return!0}function kl(e,n,t,r,o,l){if(Al=l,hl=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,dl.current=null===e||null===e.memoizedState?ii:ui,e=t(r,o),gl){l=0;do{if(gl=!1,bl=0,25<=l)throw Error(a(301));l+=1,yl=ml=null,n.updateQueue=null,dl.current=ci,e=t(r,o)}while(gl)}if(dl.current=li,n=null!==ml&&null!==ml.next,Al=0,yl=ml=hl=null,vl=!1,n)throw Error(a(300));return e}function Sl(){var e=0!==bl;return bl=0,e}function xl(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===yl?hl.memoizedState=yl=e:yl=yl.next=e,yl}function Cl(){if(null===ml){var e=hl.alternate;e=null!==e?e.memoizedState:null}else e=ml.next;var n=null===yl?hl.memoizedState:yl.next;if(null!==n)yl=n,ml=e;else{if(null===e)throw Error(a(310));e={memoizedState:(ml=e).memoizedState,baseState:ml.baseState,baseQueue:ml.baseQueue,queue:ml.queue,next:null},null===yl?hl.memoizedState=yl=e:yl=yl.next=e}return yl}function _l(e,n){return"function"==typeof n?n(e):n}function Pl(e){var n=Cl(),t=n.queue;if(null===t)throw Error(a(311));t.lastRenderedReducer=e;var r=ml,o=r.baseQueue,l=t.pending;if(null!==l){if(null!==o){var i=o.next;o.next=l.next,l.next=i}r.baseQueue=o=l,t.pending=null}if(null!==o){l=o.next,r=r.baseState;var u=i=null,c=null,s=l;do{var f=s.lane;if((Al&f)===f)null!==c&&(c=c.next={lane:0,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null}),r=s.hasEagerState?s.eagerState:e(r,s.action);else{var d={lane:f,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null};null===c?(u=c=d,i=r):c=c.next=d,hl.lanes|=f,Iu|=f}s=s.next}while(null!==s&&s!==l);null===c?i=r:c.next=u,ir(r,n.memoizedState)||(bi=!0),n.memoizedState=r,n.baseState=i,n.baseQueue=c,t.lastRenderedState=r}if(null!==(e=t.interleaved)){o=e;do{l=o.lane,hl.lanes|=l,Iu|=l,o=o.next}while(o!==e)}else null===o&&(t.lanes=0);return[n.memoizedState,t.dispatch]}function Ol(e){var n=Cl(),t=n.queue;if(null===t)throw Error(a(311));t.lastRenderedReducer=e;var r=t.dispatch,o=t.pending,l=n.memoizedState;if(null!==o){t.pending=null;var i=o=o.next;do{l=e(l,i.action),i=i.next}while(i!==o);ir(l,n.memoizedState)||(bi=!0),n.memoizedState=l,null===n.baseQueue&&(n.baseState=l),t.lastRenderedState=l}return[l,r]}function Nl(){}function zl(e,n){var t=hl,r=Cl(),o=n(),l=!ir(r.memoizedState,o);if(l&&(r.memoizedState=o,bi=!0),r=r.queue,Hl(Tl.bind(null,t,r,e),[e]),r.getSnapshot!==n||l||null!==yl&&1&yl.memoizedState.tag){if(t.flags|=2048,Dl(9,Ll.bind(null,t,r,o,n),void 0,null),null===Pu)throw Error(a(349));0!=(30&Al)||Ml(t,n,o)}return o}function Ml(e,n,t){e.flags|=16384,e={getSnapshot:n,value:t},null===(n=hl.updateQueue)?(n={lastEffect:null,stores:null},hl.updateQueue=n,n.stores=[e]):null===(t=n.stores)?n.stores=[e]:t.push(e)}function Ll(e,n,t,r){n.value=t,n.getSnapshot=r,Il(n)&&jl(e)}function Tl(e,n,t){return t((function(){Il(n)&&jl(e)}))}function Il(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!ir(e,t)}catch(e){return!0}}function jl(e){var n=Oa(e,1);null!==n&&tc(n,e,1,-1)}function Rl(e){var n=xl();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:_l,lastRenderedState:e},n.queue=e,e=e.dispatch=ti.bind(null,hl,e),[n.memoizedState,e]}function Dl(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=hl.updateQueue)?(n={lastEffect:null,stores:null},hl.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function Fl(){return Cl().memoizedState}function Ul(e,n,t,r){var o=xl();hl.flags|=e,o.memoizedState=Dl(1|n,t,void 0,void 0===r?null:r)}function $l(e,n,t,r){var o=Cl();r=void 0===r?null:r;var a=void 0;if(null!==ml){var l=ml.memoizedState;if(a=l.destroy,null!==r&&El(r,l.deps))return void(o.memoizedState=Dl(n,t,a,r))}hl.flags|=e,o.memoizedState=Dl(1|n,t,a,r)}function Vl(e,n){return Ul(8390656,8,e,n)}function Hl(e,n){return $l(2048,8,e,n)}function Wl(e,n){return $l(4,2,e,n)}function ql(e,n){return $l(4,4,e,n)}function Ql(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function Kl(e,n,t){return t=null!=t?t.concat([e]):null,$l(4,4,Ql.bind(null,n,e),t)}function Yl(){}function Gl(e,n){var t=Cl();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&El(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Xl(e,n){var t=Cl();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&El(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function Jl(e,n,t){return 0==(21&Al)?(e.baseState&&(e.baseState=!1,bi=!0),e.memoizedState=t):(ir(t,n)||(t=mn(),hl.lanes|=t,Iu|=t,e.baseState=!0),n)}function Zl(e,n){var t=bn;bn=0!==t&&4>t?t:4,e(!0);var r=pl.transition;pl.transition={};try{e(!1),n()}finally{bn=t,pl.transition=r}}function ei(){return Cl().memoizedState}function ni(e,n,t){var r=nc(e);t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},ri(e)?oi(n,t):null!==(t=Pa(e,n,t,r))&&(tc(t,e,r,ec()),ai(t,n,r))}function ti(e,n,t){var r=nc(e),o={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(ri(e))oi(n,o);else{var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=n.lastRenderedReducer))try{var l=n.lastRenderedState,i=a(l,t);if(o.hasEagerState=!0,o.eagerState=i,ir(i,l)){var u=n.interleaved;return null===u?(o.next=o,_a(n)):(o.next=u.next,u.next=o),void(n.interleaved=o)}}catch(e){}null!==(t=Pa(e,n,o,r))&&(tc(t,e,r,o=ec()),ai(t,n,r))}}function ri(e){var n=e.alternate;return e===hl||null!==n&&n===hl}function oi(e,n){gl=vl=!0;var t=e.pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}function ai(e,n,t){if(0!=(4194240&t)){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,gn(e,t)}}var li={readContext:xa,useCallback:Bl,useContext:Bl,useEffect:Bl,useImperativeHandle:Bl,useInsertionEffect:Bl,useLayoutEffect:Bl,useMemo:Bl,useReducer:Bl,useRef:Bl,useState:Bl,useDebugValue:Bl,useDeferredValue:Bl,useTransition:Bl,useMutableSource:Bl,useSyncExternalStore:Bl,useId:Bl,unstable_isNewReconciler:!1},ii={readContext:xa,useCallback:function(e,n){return xl().memoizedState=[e,void 0===n?null:n],e},useContext:xa,useEffect:Vl,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,Ul(4194308,4,Ql.bind(null,n,e),t)},useLayoutEffect:function(e,n){return Ul(4194308,4,e,n)},useInsertionEffect:function(e,n){return Ul(4,2,e,n)},useMemo:function(e,n){var t=xl();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=xl();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},r.queue=e,e=e.dispatch=ni.bind(null,hl,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},xl().memoizedState=e},useState:Rl,useDebugValue:Yl,useDeferredValue:function(e){return xl().memoizedState=e},useTransition:function(){var e=Rl(!1),n=e[0];return e=Zl.bind(null,e[1]),xl().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,t){var r=hl,o=xl();if(aa){if(void 0===t)throw Error(a(407));t=t()}else{if(t=n(),null===Pu)throw Error(a(349));0!=(30&Al)||Ml(r,n,t)}o.memoizedState=t;var l={value:t,getSnapshot:n};return o.queue=l,Vl(Tl.bind(null,r,l,e),[e]),r.flags|=2048,Dl(9,Ll.bind(null,r,l,t,n),void 0,null),t},useId:function(){var e=xl(),n=Pu.identifierPrefix;if(aa){var t=Jo;n=":"+n+"R"+(t=(Xo&~(1<<32-ln(Xo)-1)).toString(32)+t),0<(t=bl++)&&(n+="H"+t.toString(32)),n+=":"}else n=":"+n+"r"+(t=wl++).toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},ui={readContext:xa,useCallback:Gl,useContext:xa,useEffect:Hl,useImperativeHandle:Kl,useInsertionEffect:Wl,useLayoutEffect:ql,useMemo:Xl,useReducer:Pl,useRef:Fl,useState:function(){return Pl(_l)},useDebugValue:Yl,useDeferredValue:function(e){return Jl(Cl(),ml.memoizedState,e)},useTransition:function(){return[Pl(_l)[0],Cl().memoizedState]},useMutableSource:Nl,useSyncExternalStore:zl,useId:ei,unstable_isNewReconciler:!1},ci={readContext:xa,useCallback:Gl,useContext:xa,useEffect:Hl,useImperativeHandle:Kl,useInsertionEffect:Wl,useLayoutEffect:ql,useMemo:Xl,useReducer:Ol,useRef:Fl,useState:function(){return Ol(_l)},useDebugValue:Yl,useDeferredValue:function(e){var n=Cl();return null===ml?n.memoizedState=e:Jl(n,ml.memoizedState,e)},useTransition:function(){return[Ol(_l)[0],Cl().memoizedState]},useMutableSource:Nl,useSyncExternalStore:zl,useId:ei,unstable_isNewReconciler:!1};function si(e,n){try{var t="",r=n;do{t+=U(r),r=r.return}while(r);var o=t}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:n,stack:o,digest:null}}function fi(e,n,t){return{value:e,source:null,stack:null!=t?t:null,digest:null!=n?n:null}}function di(e,n){try{console.error(n.value)}catch(e){setTimeout((function(){throw e}))}}var pi="function"==typeof WeakMap?WeakMap:Map;function Ai(e,n,t){(t=La(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){Hu||(Hu=!0,Wu=r),di(0,n)},t}function hi(e,n,t){(t=La(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=n.value;t.payload=function(){return r(o)},t.callback=function(){di(0,n)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(t.callback=function(){di(0,n),"function"!=typeof r&&(null===qu?qu=new Set([this]):qu.add(this));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}function mi(e,n,t){var r=e.pingCache;if(null===r){r=e.pingCache=new pi;var o=new Set;r.set(n,o)}else void 0===(o=r.get(n))&&(o=new Set,r.set(n,o));o.has(t)||(o.add(t),e=Sc.bind(null,e,n,t),n.then(e,e))}function yi(e){do{var n;if((n=13===e.tag)&&(n=null===(n=e.memoizedState)||null!==n.dehydrated),n)return e;e=e.return}while(null!==e);return null}function vi(e,n,t,r,o){return 0==(1&e.mode)?(e===n?e.flags|=65536:(e.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((n=La(-1,1)).tag=2,Ta(t,n,1))),t.lanes|=1),e):(e.flags|=65536,e.lanes=o,e)}var gi=b.ReactCurrentOwner,bi=!1;function wi(e,n,t,r){n.child=null===e?Ja(n,null,t,r):Xa(n,e.child,t,r)}function Bi(e,n,t,r,o){t=t.render;var a=n.ref;return Sa(n,o),r=kl(e,n,t,r,a,o),t=Sl(),null===e||bi?(aa&&t&&na(n),n.flags|=1,wi(e,n,r,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~o,Hi(e,n,o))}function Ei(e,n,t,r,o){if(null===e){var a=t.type;return"function"!=typeof a||zc(a)||void 0!==a.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Lc(t.type,null,r,n,n.mode,o)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=a,ki(e,n,a,r,o))}if(a=e.child,0==(e.lanes&o)){var l=a.memoizedProps;if((t=null!==(t=t.compare)?t:ur)(l,r)&&e.ref===n.ref)return Hi(e,n,o)}return n.flags|=1,(e=Mc(a,r)).ref=n.ref,e.return=n,n.child=e}function ki(e,n,t,r,o){if(null!==e){var a=e.memoizedProps;if(ur(a,r)&&e.ref===n.ref){if(bi=!1,n.pendingProps=r=a,0==(e.lanes&o))return n.lanes=e.lanes,Hi(e,n,o);0!=(131072&e.flags)&&(bi=!0)}}return Ci(e,n,t,r,o)}function Si(e,n,t){var r=n.pendingProps,o=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&n.mode))n.memoizedState={baseLanes:0,cachePool:null,transitions:null},Co(Mu,zu),zu|=t;else{if(0==(1073741824&t))return e=null!==a?a.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null,transitions:null},n.updateQueue=null,Co(Mu,zu),zu|=e,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==a?a.baseLanes:t,Co(Mu,zu),zu|=r}else null!==a?(r=a.baseLanes|t,n.memoizedState=null):r=t,Co(Mu,zu),zu|=r;return wi(e,n,o,t),n.child}function xi(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=512,n.flags|=2097152)}function Ci(e,n,t,r,o){var a=Mo(t)?No:Po.current;return a=zo(n,a),Sa(n,o),t=kl(e,n,t,r,a,o),r=Sl(),null===e||bi?(aa&&r&&na(n),n.flags|=1,wi(e,n,t,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~o,Hi(e,n,o))}function _i(e,n,t,r,o){if(Mo(t)){var a=!0;jo(n)}else a=!1;if(Sa(n,o),null===n.stateNode)Vi(e,n),Ha(n,t,r),qa(n,t,r,o),r=!0;else if(null===e){var l=n.stateNode,i=n.memoizedProps;l.props=i;var u=l.context,c=t.contextType;c="object"==typeof c&&null!==c?xa(c):zo(n,c=Mo(t)?No:Po.current);var s=t.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==r||u!==c)&&Wa(n,l,r,c),Na=!1;var d=n.memoizedState;l.state=d,Ra(n,r,l,o),u=n.memoizedState,i!==r||d!==u||Oo.current||Na?("function"==typeof s&&(Ua(n,t,s,r),u=n.memoizedState),(i=Na||Va(n,t,i,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(n.flags|=4194308)):("function"==typeof l.componentDidMount&&(n.flags|=4194308),n.memoizedProps=r,n.memoizedState=u),l.props=r,l.state=u,l.context=c,r=i):("function"==typeof l.componentDidMount&&(n.flags|=4194308),r=!1)}else{l=n.stateNode,Ma(e,n),i=n.memoizedProps,c=n.type===n.elementType?i:ya(n.type,i),l.props=c,f=n.pendingProps,d=l.context,u="object"==typeof(u=t.contextType)&&null!==u?xa(u):zo(n,u=Mo(t)?No:Po.current);var p=t.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==f||d!==u)&&Wa(n,l,r,u),Na=!1,d=n.memoizedState,l.state=d,Ra(n,r,l,o);var A=n.memoizedState;i!==f||d!==A||Oo.current||Na?("function"==typeof p&&(Ua(n,t,p,r),A=n.memoizedState),(c=Na||Va(n,t,c,r,d,A,u)||!1)?(s||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,A,u),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,A,u)),"function"==typeof l.componentDidUpdate&&(n.flags|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(n.flags|=1024),n.memoizedProps=r,n.memoizedState=A),l.props=r,l.state=A,l.context=u,r=c):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(n.flags|=1024),r=!1)}return Pi(e,n,t,r,a,o)}function Pi(e,n,t,r,o,a){xi(e,n);var l=0!=(128&n.flags);if(!r&&!l)return o&&Ro(n,t,!1),Hi(e,n,a);r=n.stateNode,gi.current=n;var i=l&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&l?(n.child=Xa(n,e.child,null,a),n.child=Xa(n,null,i,a)):wi(e,n,i,a),n.memoizedState=r.state,o&&Ro(n,t,!0),n.child}function Oi(e){var n=e.stateNode;n.pendingContext?To(0,n.pendingContext,n.pendingContext!==n.context):n.context&&To(0,n.context,!1),ol(e,n.containerInfo)}function Ni(e,n,t,r,o){return Aa(),ha(o),n.flags|=256,wi(e,n,t,r),n.child}var zi,Mi,Li,Ti={dehydrated:null,treeContext:null,retryLane:0};function Ii(e){return{baseLanes:e,cachePool:null,transitions:null}}function ji(e,n,t){var r,o=n.pendingProps,l=ul.current,i=!1,u=0!=(128&n.flags);if((r=u)||(r=(null===e||null!==e.memoizedState)&&0!=(2&l)),r?(i=!0,n.flags&=-129):null!==e&&null===e.memoizedState||(l|=1),Co(ul,1&l),null===e)return sa(n),null!==(e=n.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&n.mode)?n.lanes=1:"$!"===e.data?n.lanes=8:n.lanes=1073741824,null):(u=o.children,e=o.fallback,i?(o=n.mode,i=n.child,u={mode:"hidden",children:u},0==(1&o)&&null!==i?(i.childLanes=0,i.pendingProps=u):i=Ic(u,o,0,null),e=Tc(e,o,t,null),i.return=n,e.return=n,i.sibling=e,n.child=i,n.child.memoizedState=Ii(t),n.memoizedState=Ti,e):Ri(n,u));if(null!==(l=e.memoizedState)&&null!==(r=l.dehydrated))return function(e,n,t,r,o,l,i){if(t)return 256&n.flags?(n.flags&=-257,Di(e,n,i,r=fi(Error(a(422))))):null!==n.memoizedState?(n.child=e.child,n.flags|=128,null):(l=r.fallback,o=n.mode,r=Ic({mode:"visible",children:r.children},o,0,null),(l=Tc(l,o,i,null)).flags|=2,r.return=n,l.return=n,r.sibling=l,n.child=r,0!=(1&n.mode)&&Xa(n,e.child,null,i),n.child.memoizedState=Ii(i),n.memoizedState=Ti,l);if(0==(1&n.mode))return Di(e,n,i,null);if("$!"===o.data){if(r=o.nextSibling&&o.nextSibling.dataset)var u=r.dgst;return r=u,Di(e,n,i,r=fi(l=Error(a(419)),r,void 0))}if(u=0!=(i&e.childLanes),bi||u){if(null!==(r=Pu)){switch(i&-i){case 4:o=2;break;case 16:o=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:o=32;break;case 536870912:o=268435456;break;default:o=0}0!==(o=0!=(o&(r.suspendedLanes|i))?0:o)&&o!==l.retryLane&&(l.retryLane=o,Oa(e,o),tc(r,e,o,-1))}return hc(),Di(e,n,i,r=fi(Error(a(421))))}return"$?"===o.data?(n.flags|=128,n.child=e.child,n=Cc.bind(null,e),o._reactRetry=n,null):(e=l.treeContext,oa=co(o.nextSibling),ra=n,aa=!0,la=null,null!==e&&(Ko[Yo++]=Xo,Ko[Yo++]=Jo,Ko[Yo++]=Go,Xo=e.id,Jo=e.overflow,Go=n),(n=Ri(n,r.children)).flags|=4096,n)}(e,n,u,o,r,l,t);if(i){i=o.fallback,u=n.mode,r=(l=e.child).sibling;var c={mode:"hidden",children:o.children};return 0==(1&u)&&n.child!==l?((o=n.child).childLanes=0,o.pendingProps=c,n.deletions=null):(o=Mc(l,c)).subtreeFlags=14680064&l.subtreeFlags,null!==r?i=Mc(r,i):(i=Tc(i,u,t,null)).flags|=2,i.return=n,o.return=n,o.sibling=i,n.child=o,o=i,i=n.child,u=null===(u=e.child.memoizedState)?Ii(t):{baseLanes:u.baseLanes|t,cachePool:null,transitions:u.transitions},i.memoizedState=u,i.childLanes=e.childLanes&~t,n.memoizedState=Ti,o}return e=(i=e.child).sibling,o=Mc(i,{mode:"visible",children:o.children}),0==(1&n.mode)&&(o.lanes=t),o.return=n,o.sibling=null,null!==e&&(null===(t=n.deletions)?(n.deletions=[e],n.flags|=16):t.push(e)),n.child=o,n.memoizedState=null,o}function Ri(e,n){return(n=Ic({mode:"visible",children:n},e.mode,0,null)).return=e,e.child=n}function Di(e,n,t,r){return null!==r&&ha(r),Xa(n,e.child,null,t),(e=Ri(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function Fi(e,n,t){e.lanes|=n;var r=e.alternate;null!==r&&(r.lanes|=n),ka(e.return,n,t)}function Ui(e,n,t,r,o){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:o}:(a.isBackwards=n,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=t,a.tailMode=o)}function $i(e,n,t){var r=n.pendingProps,o=r.revealOrder,a=r.tail;if(wi(e,n,r.children,t),0!=(2&(r=ul.current)))r=1&r|2,n.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Fi(e,t,n);else if(19===e.tag)Fi(e,t,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Co(ul,r),0==(1&n.mode))n.memoizedState=null;else switch(o){case"forwards":for(t=n.child,o=null;null!==t;)null!==(e=t.alternate)&&null===cl(e)&&(o=t),t=t.sibling;null===(t=o)?(o=n.child,n.child=null):(o=t.sibling,t.sibling=null),Ui(n,!1,o,t,a);break;case"backwards":for(t=null,o=n.child,n.child=null;null!==o;){if(null!==(e=o.alternate)&&null===cl(e)){n.child=o;break}e=o.sibling,o.sibling=t,t=o,o=e}Ui(n,!0,t,null,a);break;case"together":Ui(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function Vi(e,n){0==(1&n.mode)&&null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2)}function Hi(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Iu|=n.lanes,0==(t&n.childLanes))return null;if(null!==e&&n.child!==e.child)throw Error(a(153));if(null!==n.child){for(t=Mc(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Mc(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function Wi(e,n){if(!aa)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function qi(e){var n=null!==e.alternate&&e.alternate.child===e.child,t=0,r=0;if(n)for(var o=e.child;null!==o;)t|=o.lanes|o.childLanes,r|=14680064&o.subtreeFlags,r|=14680064&o.flags,o.return=e,o=o.sibling;else for(o=e.child;null!==o;)t|=o.lanes|o.childLanes,r|=o.subtreeFlags,r|=o.flags,o.return=e,o=o.sibling;return e.subtreeFlags|=r,e.childLanes=t,n}function Qi(e,n,t){var r=n.pendingProps;switch(ta(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qi(n),null;case 1:case 17:return Mo(n.type)&&Lo(),qi(n),null;case 3:return r=n.stateNode,al(),xo(Oo),xo(Po),fl(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(da(n)?n.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&n.flags)||(n.flags|=1024,null!==la&&(lc(la),la=null))),qi(n),null;case 5:il(n);var o=rl(tl.current);if(t=n.type,null!==e&&null!=n.stateNode)Mi(e,n,t,r),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!r){if(null===n.stateNode)throw Error(a(166));return qi(n),null}if(e=rl(el.current),da(n)){r=n.stateNode,t=n.type;var l=n.memoizedProps;switch(r[po]=n,r[Ao]=l,e=0!=(1&n.mode),t){case"dialog":Dr("cancel",r),Dr("close",r);break;case"iframe":case"object":case"embed":Dr("load",r);break;case"video":case"audio":for(o=0;o<Tr.length;o++)Dr(Tr[o],r);break;case"source":Dr("error",r);break;case"img":case"image":case"link":Dr("error",r),Dr("load",r);break;case"details":Dr("toggle",r);break;case"input":G(r,l),Dr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Dr("invalid",r);break;case"textarea":oe(r,l),Dr("invalid",r)}for(var u in ve(t,l),o=null,l)if(l.hasOwnProperty(u)){var c=l[u];"children"===u?"string"==typeof c?r.textContent!==c&&(!0!==l.suppressHydrationWarning&&Jr(r.textContent,c,e),o=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(!0!==l.suppressHydrationWarning&&Jr(r.textContent,c,e),o=["children",""+c]):i.hasOwnProperty(u)&&null!=c&&"onScroll"===u&&Dr("scroll",r)}switch(t){case"input":q(r),Z(r,l,!0);break;case"textarea":q(r),le(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Zr)}r=o,n.updateQueue=r,null!==r&&(n.flags|=4)}else{u=9===o.nodeType?o:o.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(t)),"http://www.w3.org/1999/xhtml"===e?"script"===t?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(t,{is:r.is}):(e=u.createElement(t),"select"===t&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,t),e[po]=n,e[Ao]=r,zi(e,n),n.stateNode=e;e:{switch(u=ge(t,r),t){case"dialog":Dr("cancel",e),Dr("close",e),o=r;break;case"iframe":case"object":case"embed":Dr("load",e),o=r;break;case"video":case"audio":for(o=0;o<Tr.length;o++)Dr(Tr[o],e);o=r;break;case"source":Dr("error",e),o=r;break;case"img":case"image":case"link":Dr("error",e),Dr("load",e),o=r;break;case"details":Dr("toggle",e),o=r;break;case"input":G(e,r),o=Y(e,r),Dr("invalid",e);break;case"option":default:o=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=j({},r,{value:void 0}),Dr("invalid",e);break;case"textarea":oe(e,r),o=re(e,r),Dr("invalid",e)}for(l in ve(t,o),c=o)if(c.hasOwnProperty(l)){var s=c[l];"style"===l?me(e,s):"dangerouslySetInnerHTML"===l?null!=(s=s?s.__html:void 0)&&fe(e,s):"children"===l?"string"==typeof s?("textarea"!==t||""!==s)&&de(e,s):"number"==typeof s&&de(e,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(i.hasOwnProperty(l)?null!=s&&"onScroll"===l&&Dr("scroll",e):null!=s&&g(e,l,s,u))}switch(t){case"input":q(e),Z(e,r,!1);break;case"textarea":q(e),le(e);break;case"option":null!=r.value&&e.setAttribute("value",""+H(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?te(e,!!r.multiple,l,!1):null!=r.defaultValue&&te(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=Zr)}switch(t){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(n.flags|=4)}null!==n.ref&&(n.flags|=512,n.flags|=2097152)}return qi(n),null;case 6:if(e&&null!=n.stateNode)Li(0,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(a(166));if(t=rl(tl.current),rl(el.current),da(n)){if(r=n.stateNode,t=n.memoizedProps,r[po]=n,(l=r.nodeValue!==t)&&null!==(e=ra))switch(e.tag){case 3:Jr(r.nodeValue,t,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Jr(r.nodeValue,t,0!=(1&e.mode))}l&&(n.flags|=4)}else(r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[po]=n,n.stateNode=r}return qi(n),null;case 13:if(xo(ul),r=n.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(aa&&null!==oa&&0!=(1&n.mode)&&0==(128&n.flags))pa(),Aa(),n.flags|=98560,l=!1;else if(l=da(n),null!==r&&null!==r.dehydrated){if(null===e){if(!l)throw Error(a(318));if(!(l=null!==(l=n.memoizedState)?l.dehydrated:null))throw Error(a(317));l[po]=n}else Aa(),0==(128&n.flags)&&(n.memoizedState=null),n.flags|=4;qi(n),l=!1}else null!==la&&(lc(la),la=null),l=!0;if(!l)return 65536&n.flags?n:null}return 0!=(128&n.flags)?(n.lanes=t,n):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(n.child.flags|=8192,0!=(1&n.mode)&&(null===e||0!=(1&ul.current)?0===Lu&&(Lu=3):hc())),null!==n.updateQueue&&(n.flags|=4),qi(n),null);case 4:return al(),null===e&&$r(n.stateNode.containerInfo),qi(n),null;case 10:return Ea(n.type._context),qi(n),null;case 19:if(xo(ul),null===(l=n.memoizedState))return qi(n),null;if(r=0!=(128&n.flags),null===(u=l.rendering))if(r)Wi(l,!1);else{if(0!==Lu||null!==e&&0!=(128&e.flags))for(e=n.child;null!==e;){if(null!==(u=cl(e))){for(n.flags|=128,Wi(l,!1),null!==(r=u.updateQueue)&&(n.updateQueue=r,n.flags|=4),n.subtreeFlags=0,r=t,t=n.child;null!==t;)e=r,(l=t).flags&=14680066,null===(u=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.subtreeFlags=0,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=u.childLanes,l.lanes=u.lanes,l.child=u.child,l.subtreeFlags=0,l.deletions=null,l.memoizedProps=u.memoizedProps,l.memoizedState=u.memoizedState,l.updateQueue=u.updateQueue,l.type=u.type,e=u.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return Co(ul,1&ul.current|2),n.child}e=e.sibling}null!==l.tail&&Xe()>$u&&(n.flags|=128,r=!0,Wi(l,!1),n.lanes=4194304)}else{if(!r)if(null!==(e=cl(u))){if(n.flags|=128,r=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),Wi(l,!0),null===l.tail&&"hidden"===l.tailMode&&!u.alternate&&!aa)return qi(n),null}else 2*Xe()-l.renderingStartTime>$u&&1073741824!==t&&(n.flags|=128,r=!0,Wi(l,!1),n.lanes=4194304);l.isBackwards?(u.sibling=n.child,n.child=u):(null!==(t=l.last)?t.sibling=u:n.child=u,l.last=u)}return null!==l.tail?(n=l.tail,l.rendering=n,l.tail=n.sibling,l.renderingStartTime=Xe(),n.sibling=null,t=ul.current,Co(ul,r?1&t|2:1&t),n):(qi(n),null);case 22:case 23:return fc(),r=null!==n.memoizedState,null!==e&&null!==e.memoizedState!==r&&(n.flags|=8192),r&&0!=(1&n.mode)?0!=(1073741824&zu)&&(qi(n),6&n.subtreeFlags&&(n.flags|=8192)):qi(n),null;case 24:case 25:return null}throw Error(a(156,n.tag))}function Ki(e,n){switch(ta(n),n.tag){case 1:return Mo(n.type)&&Lo(),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return al(),xo(Oo),xo(Po),fl(),0!=(65536&(e=n.flags))&&0==(128&e)?(n.flags=-65537&e|128,n):null;case 5:return il(n),null;case 13:if(xo(ul),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(a(340));Aa()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return xo(ul),null;case 4:return al(),null;case 10:return Ea(n.type._context),null;case 22:case 23:return fc(),null;default:return null}}zi=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Mi=function(e,n,t,r){var o=e.memoizedProps;if(o!==r){e=n.stateNode,rl(el.current);var a,l=null;switch(t){case"input":o=Y(e,o),r=Y(e,r),l=[];break;case"select":o=j({},o,{value:void 0}),r=j({},r,{value:void 0}),l=[];break;case"textarea":o=re(e,o),r=re(e,r),l=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=Zr)}for(s in ve(t,r),t=null,o)if(!r.hasOwnProperty(s)&&o.hasOwnProperty(s)&&null!=o[s])if("style"===s){var u=o[s];for(a in u)u.hasOwnProperty(a)&&(t||(t={}),t[a]="")}else"dangerouslySetInnerHTML"!==s&&"children"!==s&&"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(i.hasOwnProperty(s)?l||(l=[]):(l=l||[]).push(s,null));for(s in r){var c=r[s];if(u=null!=o?o[s]:void 0,r.hasOwnProperty(s)&&c!==u&&(null!=c||null!=u))if("style"===s)if(u){for(a in u)!u.hasOwnProperty(a)||c&&c.hasOwnProperty(a)||(t||(t={}),t[a]="");for(a in c)c.hasOwnProperty(a)&&u[a]!==c[a]&&(t||(t={}),t[a]=c[a])}else t||(l||(l=[]),l.push(s,t)),t=c;else"dangerouslySetInnerHTML"===s?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(l=l||[]).push(s,c)):"children"===s?"string"!=typeof c&&"number"!=typeof c||(l=l||[]).push(s,""+c):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&(i.hasOwnProperty(s)?(null!=c&&"onScroll"===s&&Dr("scroll",e),l||u===c||(l=[])):(l=l||[]).push(s,c))}t&&(l=l||[]).push("style",t);var s=l;(n.updateQueue=s)&&(n.flags|=4)}},Li=function(e,n,t,r){t!==r&&(n.flags|=4)};var Yi=!1,Gi=!1,Xi="function"==typeof WeakSet?WeakSet:Set,Ji=null;function Zi(e,n){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){kc(e,n,t)}else t.current=null}function eu(e,n,t){try{t()}catch(t){kc(e,n,t)}}var nu=!1;function tu(e,n,t){var r=n.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var o=r=r.next;do{if((o.tag&e)===e){var a=o.destroy;o.destroy=void 0,void 0!==a&&eu(n,t,a)}o=o.next}while(o!==r)}}function ru(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.create;t.destroy=r()}t=t.next}while(t!==n)}}function ou(e){var n=e.ref;if(null!==n){var t=e.stateNode;e.tag,e=t,"function"==typeof n?n(e):n.current=e}}function au(e){var n=e.alternate;null!==n&&(e.alternate=null,au(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(n=e.stateNode)&&(delete n[po],delete n[Ao],delete n[mo],delete n[yo],delete n[vo]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function lu(e){return 5===e.tag||3===e.tag||4===e.tag}function iu(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||lu(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function uu(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=Zr));else if(4!==r&&null!==(e=e.child))for(uu(e,n,t),e=e.sibling;null!==e;)uu(e,n,t),e=e.sibling}function cu(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cu(e,n,t),e=e.sibling;null!==e;)cu(e,n,t),e=e.sibling}var su=null,fu=!1;function du(e,n,t){for(t=t.child;null!==t;)pu(e,n,t),t=t.sibling}function pu(e,n,t){if(an&&"function"==typeof an.onCommitFiberUnmount)try{an.onCommitFiberUnmount(on,t)}catch(e){}switch(t.tag){case 5:Gi||Zi(t,n);case 6:var r=su,o=fu;su=null,du(e,n,t),fu=o,null!==(su=r)&&(fu?(e=su,t=t.stateNode,8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)):su.removeChild(t.stateNode));break;case 18:null!==su&&(fu?(e=su,t=t.stateNode,8===e.nodeType?uo(e.parentNode,t):1===e.nodeType&&uo(e,t),Vn(e)):uo(su,t.stateNode));break;case 4:r=su,o=fu,su=t.stateNode.containerInfo,fu=!0,du(e,n,t),su=r,fu=o;break;case 0:case 11:case 14:case 15:if(!Gi&&null!==(r=t.updateQueue)&&null!==(r=r.lastEffect)){o=r=r.next;do{var a=o,l=a.destroy;a=a.tag,void 0!==l&&(0!=(2&a)||0!=(4&a))&&eu(t,n,l),o=o.next}while(o!==r)}du(e,n,t);break;case 1:if(!Gi&&(Zi(t,n),"function"==typeof(r=t.stateNode).componentWillUnmount))try{r.props=t.memoizedProps,r.state=t.memoizedState,r.componentWillUnmount()}catch(e){kc(t,n,e)}du(e,n,t);break;case 21:du(e,n,t);break;case 22:1&t.mode?(Gi=(r=Gi)||null!==t.memoizedState,du(e,n,t),Gi=r):du(e,n,t);break;default:du(e,n,t)}}function Au(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new Xi),n.forEach((function(n){var r=_c.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function hu(e,n){var t=n.deletions;if(null!==t)for(var r=0;r<t.length;r++){var o=t[r];try{var l=e,i=n,u=i;e:for(;null!==u;){switch(u.tag){case 5:su=u.stateNode,fu=!1;break e;case 3:case 4:su=u.stateNode.containerInfo,fu=!0;break e}u=u.return}if(null===su)throw Error(a(160));pu(l,i,o),su=null,fu=!1;var c=o.alternate;null!==c&&(c.return=null),o.return=null}catch(e){kc(o,n,e)}}if(12854&n.subtreeFlags)for(n=n.child;null!==n;)mu(n,e),n=n.sibling}function mu(e,n){var t=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(hu(n,e),yu(e),4&r){try{tu(3,e,e.return),ru(3,e)}catch(n){kc(e,e.return,n)}try{tu(5,e,e.return)}catch(n){kc(e,e.return,n)}}break;case 1:hu(n,e),yu(e),512&r&&null!==t&&Zi(t,t.return);break;case 5:if(hu(n,e),yu(e),512&r&&null!==t&&Zi(t,t.return),32&e.flags){var o=e.stateNode;try{de(o,"")}catch(n){kc(e,e.return,n)}}if(4&r&&null!=(o=e.stateNode)){var l=e.memoizedProps,i=null!==t?t.memoizedProps:l,u=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===u&&"radio"===l.type&&null!=l.name&&X(o,l),ge(u,i);var s=ge(u,l);for(i=0;i<c.length;i+=2){var f=c[i],d=c[i+1];"style"===f?me(o,d):"dangerouslySetInnerHTML"===f?fe(o,d):"children"===f?de(o,d):g(o,f,d,s)}switch(u){case"input":J(o,l);break;case"textarea":ae(o,l);break;case"select":var p=o._wrapperState.wasMultiple;o._wrapperState.wasMultiple=!!l.multiple;var A=l.value;null!=A?te(o,!!l.multiple,A,!1):p!==!!l.multiple&&(null!=l.defaultValue?te(o,!!l.multiple,l.defaultValue,!0):te(o,!!l.multiple,l.multiple?[]:"",!1))}o[Ao]=l}catch(n){kc(e,e.return,n)}}break;case 6:if(hu(n,e),yu(e),4&r){if(null===e.stateNode)throw Error(a(162));o=e.stateNode,l=e.memoizedProps;try{o.nodeValue=l}catch(n){kc(e,e.return,n)}}break;case 3:if(hu(n,e),yu(e),4&r&&null!==t&&t.memoizedState.isDehydrated)try{Vn(n.containerInfo)}catch(n){kc(e,e.return,n)}break;case 4:default:hu(n,e),yu(e);break;case 13:hu(n,e),yu(e),8192&(o=e.child).flags&&(l=null!==o.memoizedState,o.stateNode.isHidden=l,!l||null!==o.alternate&&null!==o.alternate.memoizedState||(Uu=Xe())),4&r&&Au(e);break;case 22:if(f=null!==t&&null!==t.memoizedState,1&e.mode?(Gi=(s=Gi)||f,hu(n,e),Gi=s):hu(n,e),yu(e),8192&r){if(s=null!==e.memoizedState,(e.stateNode.isHidden=s)&&!f&&0!=(1&e.mode))for(Ji=e,f=e.child;null!==f;){for(d=Ji=f;null!==Ji;){switch(A=(p=Ji).child,p.tag){case 0:case 11:case 14:case 15:tu(4,p,p.return);break;case 1:Zi(p,p.return);var h=p.stateNode;if("function"==typeof h.componentWillUnmount){r=p,t=p.return;try{n=r,h.props=n.memoizedProps,h.state=n.memoizedState,h.componentWillUnmount()}catch(e){kc(r,t,e)}}break;case 5:Zi(p,p.return);break;case 22:if(null!==p.memoizedState){wu(d);continue}}null!==A?(A.return=p,Ji=A):wu(d)}f=f.sibling}e:for(f=null,d=e;;){if(5===d.tag){if(null===f){f=d;try{o=d.stateNode,s?"function"==typeof(l=o.style).setProperty?l.setProperty("display","none","important"):l.display="none":(u=d.stateNode,i=null!=(c=d.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,u.style.display=he("display",i))}catch(n){kc(e,e.return,n)}}}else if(6===d.tag){if(null===f)try{d.stateNode.nodeValue=s?"":d.memoizedProps}catch(n){kc(e,e.return,n)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;f===d&&(f=null),d=d.return}f===d&&(f=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:hu(n,e),yu(e),4&r&&Au(e);case 21:}}function yu(e){var n=e.flags;if(2&n){try{e:{for(var t=e.return;null!==t;){if(lu(t)){var r=t;break e}t=t.return}throw Error(a(160))}switch(r.tag){case 5:var o=r.stateNode;32&r.flags&&(de(o,""),r.flags&=-33),cu(e,iu(e),o);break;case 3:case 4:var l=r.stateNode.containerInfo;uu(e,iu(e),l);break;default:throw Error(a(161))}}catch(n){kc(e,e.return,n)}e.flags&=-3}4096&n&&(e.flags&=-4097)}function vu(e,n,t){Ji=e,gu(e,n,t)}function gu(e,n,t){for(var r=0!=(1&e.mode);null!==Ji;){var o=Ji,a=o.child;if(22===o.tag&&r){var l=null!==o.memoizedState||Yi;if(!l){var i=o.alternate,u=null!==i&&null!==i.memoizedState||Gi;i=Yi;var c=Gi;if(Yi=l,(Gi=u)&&!c)for(Ji=o;null!==Ji;)u=(l=Ji).child,22===l.tag&&null!==l.memoizedState?Bu(o):null!==u?(u.return=l,Ji=u):Bu(o);for(;null!==a;)Ji=a,gu(a,n,t),a=a.sibling;Ji=o,Yi=i,Gi=c}bu(e)}else 0!=(8772&o.subtreeFlags)&&null!==a?(a.return=o,Ji=a):bu(e)}}function bu(e){for(;null!==Ji;){var n=Ji;if(0!=(8772&n.flags)){var t=n.alternate;try{if(0!=(8772&n.flags))switch(n.tag){case 0:case 11:case 15:Gi||ru(5,n);break;case 1:var r=n.stateNode;if(4&n.flags&&!Gi)if(null===t)r.componentDidMount();else{var o=n.elementType===n.type?t.memoizedProps:ya(n.type,t.memoizedProps);r.componentDidUpdate(o,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var l=n.updateQueue;null!==l&&Da(n,l,r);break;case 3:var i=n.updateQueue;if(null!==i){if(t=null,null!==n.child)switch(n.child.tag){case 5:case 1:t=n.child.stateNode}Da(n,i,t)}break;case 5:var u=n.stateNode;if(null===t&&4&n.flags){t=u;var c=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&t.focus();break;case"img":c.src&&(t.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===n.memoizedState){var s=n.alternate;if(null!==s){var f=s.memoizedState;if(null!==f){var d=f.dehydrated;null!==d&&Vn(d)}}}break;default:throw Error(a(163))}Gi||512&n.flags&&ou(n)}catch(e){kc(n,n.return,e)}}if(n===e){Ji=null;break}if(null!==(t=n.sibling)){t.return=n.return,Ji=t;break}Ji=n.return}}function wu(e){for(;null!==Ji;){var n=Ji;if(n===e){Ji=null;break}var t=n.sibling;if(null!==t){t.return=n.return,Ji=t;break}Ji=n.return}}function Bu(e){for(;null!==Ji;){var n=Ji;try{switch(n.tag){case 0:case 11:case 15:var t=n.return;try{ru(4,n)}catch(e){kc(n,t,e)}break;case 1:var r=n.stateNode;if("function"==typeof r.componentDidMount){var o=n.return;try{r.componentDidMount()}catch(e){kc(n,o,e)}}var a=n.return;try{ou(n)}catch(e){kc(n,a,e)}break;case 5:var l=n.return;try{ou(n)}catch(e){kc(n,l,e)}}}catch(e){kc(n,n.return,e)}if(n===e){Ji=null;break}var i=n.sibling;if(null!==i){i.return=n.return,Ji=i;break}Ji=n.return}}var Eu,ku=Math.ceil,Su=b.ReactCurrentDispatcher,xu=b.ReactCurrentOwner,Cu=b.ReactCurrentBatchConfig,_u=0,Pu=null,Ou=null,Nu=0,zu=0,Mu=So(0),Lu=0,Tu=null,Iu=0,ju=0,Ru=0,Du=null,Fu=null,Uu=0,$u=1/0,Vu=null,Hu=!1,Wu=null,qu=null,Qu=!1,Ku=null,Yu=0,Gu=0,Xu=null,Ju=-1,Zu=0;function ec(){return 0!=(6&_u)?Xe():-1!==Ju?Ju:Ju=Xe()}function nc(e){return 0==(1&e.mode)?1:0!=(2&_u)&&0!==Nu?Nu&-Nu:null!==ma.transition?(0===Zu&&(Zu=mn()),Zu):0!==(e=bn)?e:e=void 0===(e=window.event)?16:Xn(e.type)}function tc(e,n,t,r){if(50<Gu)throw Gu=0,Xu=null,Error(a(185));vn(e,t,r),0!=(2&_u)&&e===Pu||(e===Pu&&(0==(2&_u)&&(ju|=t),4===Lu&&ic(e,Nu)),rc(e,r),1===t&&0===_u&&0==(1&n.mode)&&($u=Xe()+500,Fo&&Vo()))}function rc(e,n){var t=e.callbackNode;!function(e,n){for(var t=e.suspendedLanes,r=e.pingedLanes,o=e.expirationTimes,a=e.pendingLanes;0<a;){var l=31-ln(a),i=1<<l,u=o[l];-1===u?0!=(i&t)&&0==(i&r)||(o[l]=An(i,n)):u<=n&&(e.expiredLanes|=i),a&=~i}}(e,n);var r=pn(e,e===Pu?Nu:0);if(0===r)null!==t&&Ke(t),e.callbackNode=null,e.callbackPriority=0;else if(n=r&-r,e.callbackPriority!==n){if(null!=t&&Ke(t),1===n)0===e.tag?function(e){Fo=!0,$o(e)}(uc.bind(null,e)):$o(uc.bind(null,e)),lo((function(){0==(6&_u)&&Vo()})),t=null;else{switch(wn(r)){case 1:t=Ze;break;case 4:t=en;break;case 16:default:t=nn;break;case 536870912:t=rn}t=Pc(t,oc.bind(null,e))}e.callbackPriority=n,e.callbackNode=t}}function oc(e,n){if(Ju=-1,Zu=0,0!=(6&_u))throw Error(a(327));var t=e.callbackNode;if(Bc()&&e.callbackNode!==t)return null;var r=pn(e,e===Pu?Nu:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||n)n=mc(e,r);else{n=r;var o=_u;_u|=2;var l=Ac();for(Pu===e&&Nu===n||(Vu=null,$u=Xe()+500,dc(e,n));;)try{vc();break}catch(n){pc(e,n)}Ba(),Su.current=l,_u=o,null!==Ou?n=0:(Pu=null,Nu=0,n=Lu)}if(0!==n){if(2===n&&0!==(o=hn(e))&&(r=o,n=ac(e,o)),1===n)throw t=Tu,dc(e,0),ic(e,r),rc(e,Xe()),t;if(6===n)ic(e,r);else{if(o=e.current.alternate,0==(30&r)&&!function(e){for(var n=e;;){if(16384&n.flags){var t=n.updateQueue;if(null!==t&&null!==(t=t.stores))for(var r=0;r<t.length;r++){var o=t[r],a=o.getSnapshot;o=o.value;try{if(!ir(a(),o))return!1}catch(e){return!1}}}if(t=n.child,16384&n.subtreeFlags&&null!==t)t.return=n,n=t;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}(o)&&(2===(n=mc(e,r))&&0!==(l=hn(e))&&(r=l,n=ac(e,l)),1===n))throw t=Tu,dc(e,0),ic(e,r),rc(e,Xe()),t;switch(e.finishedWork=o,e.finishedLanes=r,n){case 0:case 1:throw Error(a(345));case 2:case 5:wc(e,Fu,Vu);break;case 3:if(ic(e,r),(130023424&r)===r&&10<(n=Uu+500-Xe())){if(0!==pn(e,0))break;if(((o=e.suspendedLanes)&r)!==r){ec(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=ro(wc.bind(null,e,Fu,Vu),n);break}wc(e,Fu,Vu);break;case 4:if(ic(e,r),(4194240&r)===r)break;for(n=e.eventTimes,o=-1;0<r;){var i=31-ln(r);l=1<<i,(i=n[i])>o&&(o=i),r&=~l}if(r=o,10<(r=(120>(r=Xe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*ku(r/1960))-r)){e.timeoutHandle=ro(wc.bind(null,e,Fu,Vu),r);break}wc(e,Fu,Vu);break;default:throw Error(a(329))}}}return rc(e,Xe()),e.callbackNode===t?oc.bind(null,e):null}function ac(e,n){var t=Du;return e.current.memoizedState.isDehydrated&&(dc(e,n).flags|=256),2!==(e=mc(e,n))&&(n=Fu,Fu=t,null!==n&&lc(n)),e}function lc(e){null===Fu?Fu=e:Fu.push.apply(Fu,e)}function ic(e,n){for(n&=~Ru,n&=~ju,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-ln(n),r=1<<t;e[t]=-1,n&=~r}}function uc(e){if(0!=(6&_u))throw Error(a(327));Bc();var n=pn(e,0);if(0==(1&n))return rc(e,Xe()),null;var t=mc(e,n);if(0!==e.tag&&2===t){var r=hn(e);0!==r&&(n=r,t=ac(e,r))}if(1===t)throw t=Tu,dc(e,0),ic(e,n),rc(e,Xe()),t;if(6===t)throw Error(a(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,wc(e,Fu,Vu),rc(e,Xe()),null}function cc(e,n){var t=_u;_u|=1;try{return e(n)}finally{0===(_u=t)&&($u=Xe()+500,Fo&&Vo())}}function sc(e){null!==Ku&&0===Ku.tag&&0==(6&_u)&&Bc();var n=_u;_u|=1;var t=Cu.transition,r=bn;try{if(Cu.transition=null,bn=1,e)return e()}finally{bn=r,Cu.transition=t,0==(6&(_u=n))&&Vo()}}function fc(){zu=Mu.current,xo(Mu)}function dc(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,oo(t)),null!==Ou)for(t=Ou.return;null!==t;){var r=t;switch(ta(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Lo();break;case 3:al(),xo(Oo),xo(Po),fl();break;case 5:il(r);break;case 4:al();break;case 13:case 19:xo(ul);break;case 10:Ea(r.type._context);break;case 22:case 23:fc()}t=t.return}if(Pu=e,Ou=e=Mc(e.current,null),Nu=zu=n,Lu=0,Tu=null,Ru=ju=Iu=0,Fu=Du=null,null!==Ca){for(n=0;n<Ca.length;n++)if(null!==(r=(t=Ca[n]).interleaved)){t.interleaved=null;var o=r.next,a=t.pending;if(null!==a){var l=a.next;a.next=o,r.next=l}t.pending=r}Ca=null}return e}function pc(e,n){for(;;){var t=Ou;try{if(Ba(),dl.current=li,vl){for(var r=hl.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}vl=!1}if(Al=0,yl=ml=hl=null,gl=!1,bl=0,xu.current=null,null===t||null===t.return){Lu=1,Tu=n,Ou=null;break}e:{var l=e,i=t.return,u=t,c=n;if(n=Nu,u.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var s=c,f=u,d=f.tag;if(0==(1&f.mode)&&(0===d||11===d||15===d)){var p=f.alternate;p?(f.updateQueue=p.updateQueue,f.memoizedState=p.memoizedState,f.lanes=p.lanes):(f.updateQueue=null,f.memoizedState=null)}var A=yi(i);if(null!==A){A.flags&=-257,vi(A,i,u,0,n),1&A.mode&&mi(l,s,n),c=s;var h=(n=A).updateQueue;if(null===h){var m=new Set;m.add(c),n.updateQueue=m}else h.add(c);break e}if(0==(1&n)){mi(l,s,n),hc();break e}c=Error(a(426))}else if(aa&&1&u.mode){var y=yi(i);if(null!==y){0==(65536&y.flags)&&(y.flags|=256),vi(y,i,u,0,n),ha(si(c,u));break e}}l=c=si(c,u),4!==Lu&&(Lu=2),null===Du?Du=[l]:Du.push(l),l=i;do{switch(l.tag){case 3:l.flags|=65536,n&=-n,l.lanes|=n,ja(l,Ai(0,c,n));break e;case 1:u=c;var v=l.type,g=l.stateNode;if(0==(128&l.flags)&&("function"==typeof v.getDerivedStateFromError||null!==g&&"function"==typeof g.componentDidCatch&&(null===qu||!qu.has(g)))){l.flags|=65536,n&=-n,l.lanes|=n,ja(l,hi(l,u,n));break e}}l=l.return}while(null!==l)}bc(t)}catch(e){n=e,Ou===t&&null!==t&&(Ou=t=t.return);continue}break}}function Ac(){var e=Su.current;return Su.current=li,null===e?li:e}function hc(){0!==Lu&&3!==Lu&&2!==Lu||(Lu=4),null===Pu||0==(268435455&Iu)&&0==(268435455&ju)||ic(Pu,Nu)}function mc(e,n){var t=_u;_u|=2;var r=Ac();for(Pu===e&&Nu===n||(Vu=null,dc(e,n));;)try{yc();break}catch(n){pc(e,n)}if(Ba(),_u=t,Su.current=r,null!==Ou)throw Error(a(261));return Pu=null,Nu=0,Lu}function yc(){for(;null!==Ou;)gc(Ou)}function vc(){for(;null!==Ou&&!Ye();)gc(Ou)}function gc(e){var n=Eu(e.alternate,e,zu);e.memoizedProps=e.pendingProps,null===n?bc(e):Ou=n,xu.current=null}function bc(e){var n=e;do{var t=n.alternate;if(e=n.return,0==(32768&n.flags)){if(null!==(t=Qi(t,n,zu)))return void(Ou=t)}else{if(null!==(t=Ki(t,n)))return t.flags&=32767,void(Ou=t);if(null===e)return Lu=6,void(Ou=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(n=n.sibling))return void(Ou=n);Ou=n=e}while(null!==n);0===Lu&&(Lu=5)}function wc(e,n,t){var r=bn,o=Cu.transition;try{Cu.transition=null,bn=1,function(e,n,t,r){do{Bc()}while(null!==Ku);if(0!=(6&_u))throw Error(a(327));t=e.finishedWork;var o=e.finishedLanes;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(a(177));e.callbackNode=null,e.callbackPriority=0;var l=t.lanes|t.childLanes;if(function(e,n){var t=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<t;){var o=31-ln(t),a=1<<o;n[o]=0,r[o]=-1,e[o]=-1,t&=~a}}(e,l),e===Pu&&(Ou=Pu=null,Nu=0),0==(2064&t.subtreeFlags)&&0==(2064&t.flags)||Qu||(Qu=!0,Pc(nn,(function(){return Bc(),null}))),l=0!=(15990&t.flags),0!=(15990&t.subtreeFlags)||l){l=Cu.transition,Cu.transition=null;var i=bn;bn=1;var u=_u;_u|=4,xu.current=null,function(e,n){if(eo=Wn,pr(e=dr())){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(r&&0!==r.rangeCount){t=r.anchorNode;var o=r.anchorOffset,l=r.focusNode;r=r.focusOffset;try{t.nodeType,l.nodeType}catch(e){t=null;break e}var i=0,u=-1,c=-1,s=0,f=0,d=e,p=null;n:for(;;){for(var A;d!==t||0!==o&&3!==d.nodeType||(u=i+o),d!==l||0!==r&&3!==d.nodeType||(c=i+r),3===d.nodeType&&(i+=d.nodeValue.length),null!==(A=d.firstChild);)p=d,d=A;for(;;){if(d===e)break n;if(p===t&&++s===o&&(u=i),p===l&&++f===r&&(c=i),null!==(A=d.nextSibling))break;p=(d=p).parentNode}d=A}t=-1===u||-1===c?null:{start:u,end:c}}else t=null}t=t||{start:0,end:0}}else t=null;for(no={focusedElem:e,selectionRange:t},Wn=!1,Ji=n;null!==Ji;)if(e=(n=Ji).child,0!=(1028&n.subtreeFlags)&&null!==e)e.return=n,Ji=e;else for(;null!==Ji;){n=Ji;try{var h=n.alternate;if(0!=(1024&n.flags))switch(n.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==h){var m=h.memoizedProps,y=h.memoizedState,v=n.stateNode,g=v.getSnapshotBeforeUpdate(n.elementType===n.type?m:ya(n.type,m),y);v.__reactInternalSnapshotBeforeUpdate=g}break;case 3:var b=n.stateNode.containerInfo;1===b.nodeType?b.textContent="":9===b.nodeType&&b.documentElement&&b.removeChild(b.documentElement);break;default:throw Error(a(163))}}catch(e){kc(n,n.return,e)}if(null!==(e=n.sibling)){e.return=n.return,Ji=e;break}Ji=n.return}h=nu,nu=!1}(e,t),mu(t,e),Ar(no),Wn=!!eo,no=eo=null,e.current=t,vu(t,e,o),Ge(),_u=u,bn=i,Cu.transition=l}else e.current=t;if(Qu&&(Qu=!1,Ku=e,Yu=o),0===(l=e.pendingLanes)&&(qu=null),function(e){if(an&&"function"==typeof an.onCommitFiberRoot)try{an.onCommitFiberRoot(on,e,void 0,128==(128&e.current.flags))}catch(e){}}(t.stateNode),rc(e,Xe()),null!==n)for(r=e.onRecoverableError,t=0;t<n.length;t++)r((o=n[t]).value,{componentStack:o.stack,digest:o.digest});if(Hu)throw Hu=!1,e=Wu,Wu=null,e;0!=(1&Yu)&&0!==e.tag&&Bc(),0!=(1&(l=e.pendingLanes))?e===Xu?Gu++:(Gu=0,Xu=e):Gu=0,Vo()}(e,n,t,r)}finally{Cu.transition=o,bn=r}return null}function Bc(){if(null!==Ku){var e=wn(Yu),n=Cu.transition,t=bn;try{if(Cu.transition=null,bn=16>e?16:e,null===Ku)var r=!1;else{if(e=Ku,Ku=null,Yu=0,0!=(6&_u))throw Error(a(331));var o=_u;for(_u|=4,Ji=e.current;null!==Ji;){var l=Ji,i=l.child;if(0!=(16&Ji.flags)){var u=l.deletions;if(null!==u){for(var c=0;c<u.length;c++){var s=u[c];for(Ji=s;null!==Ji;){var f=Ji;switch(f.tag){case 0:case 11:case 15:tu(8,f,l)}var d=f.child;if(null!==d)d.return=f,Ji=d;else for(;null!==Ji;){var p=(f=Ji).sibling,A=f.return;if(au(f),f===s){Ji=null;break}if(null!==p){p.return=A,Ji=p;break}Ji=A}}}var h=l.alternate;if(null!==h){var m=h.child;if(null!==m){h.child=null;do{var y=m.sibling;m.sibling=null,m=y}while(null!==m)}}Ji=l}}if(0!=(2064&l.subtreeFlags)&&null!==i)i.return=l,Ji=i;else e:for(;null!==Ji;){if(0!=(2048&(l=Ji).flags))switch(l.tag){case 0:case 11:case 15:tu(9,l,l.return)}var v=l.sibling;if(null!==v){v.return=l.return,Ji=v;break e}Ji=l.return}}var g=e.current;for(Ji=g;null!==Ji;){var b=(i=Ji).child;if(0!=(2064&i.subtreeFlags)&&null!==b)b.return=i,Ji=b;else e:for(i=g;null!==Ji;){if(0!=(2048&(u=Ji).flags))try{switch(u.tag){case 0:case 11:case 15:ru(9,u)}}catch(e){kc(u,u.return,e)}if(u===i){Ji=null;break e}var w=u.sibling;if(null!==w){w.return=u.return,Ji=w;break e}Ji=u.return}}if(_u=o,Vo(),an&&"function"==typeof an.onPostCommitFiberRoot)try{an.onPostCommitFiberRoot(on,e)}catch(e){}r=!0}return r}finally{bn=t,Cu.transition=n}}return!1}function Ec(e,n,t){e=Ta(e,n=Ai(0,n=si(t,n),1),1),n=ec(),null!==e&&(vn(e,1,n),rc(e,n))}function kc(e,n,t){if(3===e.tag)Ec(e,e,t);else for(;null!==n;){if(3===n.tag){Ec(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===qu||!qu.has(r))){n=Ta(n,e=hi(n,e=si(t,e),1),1),e=ec(),null!==n&&(vn(n,1,e),rc(n,e));break}}n=n.return}}function Sc(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=ec(),e.pingedLanes|=e.suspendedLanes&t,Pu===e&&(Nu&t)===t&&(4===Lu||3===Lu&&(130023424&Nu)===Nu&&500>Xe()-Uu?dc(e,0):Ru|=t),rc(e,n)}function xc(e,n){0===n&&(0==(1&e.mode)?n=1:(n=fn,0==(130023424&(fn<<=1))&&(fn=4194304)));var t=ec();null!==(e=Oa(e,n))&&(vn(e,n,t),rc(e,t))}function Cc(e){var n=e.memoizedState,t=0;null!==n&&(t=n.retryLane),xc(e,t)}function _c(e,n){var t=0;switch(e.tag){case 13:var r=e.stateNode,o=e.memoizedState;null!==o&&(t=o.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(a(314))}null!==r&&r.delete(n),xc(e,t)}function Pc(e,n){return Qe(e,n)}function Oc(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Nc(e,n,t,r){return new Oc(e,n,t,r)}function zc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Mc(e,n){var t=e.alternate;return null===t?((t=Nc(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&e.flags,t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Lc(e,n,t,r,o,l){var i=2;if(r=e,"function"==typeof e)zc(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case E:return Tc(t.children,o,l,n);case k:i=8,o|=8;break;case S:return(e=Nc(12,t,n,2|o)).elementType=S,e.lanes=l,e;case P:return(e=Nc(13,t,n,o)).elementType=P,e.lanes=l,e;case O:return(e=Nc(19,t,n,o)).elementType=O,e.lanes=l,e;case M:return Ic(t,o,l,n);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case x:i=10;break e;case C:i=9;break e;case _:i=11;break e;case N:i=14;break e;case z:i=16,r=null;break e}throw Error(a(130,null==e?e:typeof e,""))}return(n=Nc(i,t,n,o)).elementType=e,n.type=r,n.lanes=l,n}function Tc(e,n,t,r){return(e=Nc(7,e,r,n)).lanes=t,e}function Ic(e,n,t,r){return(e=Nc(22,e,r,n)).elementType=M,e.lanes=t,e.stateNode={isHidden:!1},e}function jc(e,n,t){return(e=Nc(6,e,null,n)).lanes=t,e}function Rc(e,n,t){return(n=Nc(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function Dc(e,n,t,r,o){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=yn(0),this.expirationTimes=yn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=yn(0),this.identifierPrefix=r,this.onRecoverableError=o,this.mutableSourceEagerHydrationData=null}function Fc(e,n,t,r,o,a,l,i,u){return e=new Dc(e,n,t,i,u),1===n?(n=1,!0===a&&(n|=8)):n=0,a=Nc(3,null,null,n),e.current=a,a.stateNode=e,a.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},za(a),e}function Uc(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:B,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}function $c(e){if(!e)return _o;e:{if($e(e=e._reactInternals)!==e||1!==e.tag)throw Error(a(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(Mo(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(null!==n);throw Error(a(171))}if(1===e.tag){var t=e.type;if(Mo(t))return Io(e,t,n)}return n}function Vc(e,n,t,r,o,a,l,i,u){return(e=Fc(t,r,!0,e,0,a,0,i,u)).context=$c(null),t=e.current,(a=La(r=ec(),o=nc(t))).callback=null!=n?n:null,Ta(t,a,o),e.current.lanes=o,vn(e,o,r),rc(e,r),e}function Hc(e,n,t,r){var o=n.current,a=ec(),l=nc(o);return t=$c(t),null===n.context?n.context=t:n.pendingContext=t,(n=La(a,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),null!==(e=Ta(o,n,l))&&(tc(e,o,l,a),Ia(e,o,l)),l}function Wc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function qc(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function Qc(e,n){qc(e,n),(e=e.alternate)&&qc(e,n)}Eu=function(e,n,t){if(null!==e)if(e.memoizedProps!==n.pendingProps||Oo.current)bi=!0;else{if(0==(e.lanes&t)&&0==(128&n.flags))return bi=!1,function(e,n,t){switch(n.tag){case 3:Oi(n),Aa();break;case 5:ll(n);break;case 1:Mo(n.type)&&jo(n);break;case 4:ol(n,n.stateNode.containerInfo);break;case 10:var r=n.type._context,o=n.memoizedProps.value;Co(va,r._currentValue),r._currentValue=o;break;case 13:if(null!==(r=n.memoizedState))return null!==r.dehydrated?(Co(ul,1&ul.current),n.flags|=128,null):0!=(t&n.child.childLanes)?ji(e,n,t):(Co(ul,1&ul.current),null!==(e=Hi(e,n,t))?e.sibling:null);Co(ul,1&ul.current);break;case 19:if(r=0!=(t&n.childLanes),0!=(128&e.flags)){if(r)return $i(e,n,t);n.flags|=128}if(null!==(o=n.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),Co(ul,ul.current),r)break;return null;case 22:case 23:return n.lanes=0,Si(e,n,t)}return Hi(e,n,t)}(e,n,t);bi=0!=(131072&e.flags)}else bi=!1,aa&&0!=(1048576&n.flags)&&ea(n,Qo,n.index);switch(n.lanes=0,n.tag){case 2:var r=n.type;Vi(e,n),e=n.pendingProps;var o=zo(n,Po.current);Sa(n,t),o=kl(null,n,r,e,o,t);var l=Sl();return n.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof?(n.tag=1,n.memoizedState=null,n.updateQueue=null,Mo(r)?(l=!0,jo(n)):l=!1,n.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,za(n),o.updater=$a,n.stateNode=o,o._reactInternals=n,qa(n,r,e,t),n=Pi(null,n,r,!0,l,t)):(n.tag=0,aa&&l&&na(n),wi(null,n,o,t),n=n.child),n;case 16:r=n.elementType;e:{switch(Vi(e,n),e=n.pendingProps,r=(o=r._init)(r._payload),n.type=r,o=n.tag=function(e){if("function"==typeof e)return zc(e)?1:0;if(null!=e){if((e=e.$$typeof)===_)return 11;if(e===N)return 14}return 2}(r),e=ya(r,e),o){case 0:n=Ci(null,n,r,e,t);break e;case 1:n=_i(null,n,r,e,t);break e;case 11:n=Bi(null,n,r,e,t);break e;case 14:n=Ei(null,n,r,ya(r.type,e),t);break e}throw Error(a(306,r,""))}return n;case 0:return r=n.type,o=n.pendingProps,Ci(e,n,r,o=n.elementType===r?o:ya(r,o),t);case 1:return r=n.type,o=n.pendingProps,_i(e,n,r,o=n.elementType===r?o:ya(r,o),t);case 3:e:{if(Oi(n),null===e)throw Error(a(387));r=n.pendingProps,o=(l=n.memoizedState).element,Ma(e,n),Ra(n,r,null,t);var i=n.memoizedState;if(r=i.element,l.isDehydrated){if(l={element:r,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},n.updateQueue.baseState=l,n.memoizedState=l,256&n.flags){n=Ni(e,n,r,t,o=si(Error(a(423)),n));break e}if(r!==o){n=Ni(e,n,r,t,o=si(Error(a(424)),n));break e}for(oa=co(n.stateNode.containerInfo.firstChild),ra=n,aa=!0,la=null,t=Ja(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(Aa(),r===o){n=Hi(e,n,t);break e}wi(e,n,r,t)}n=n.child}return n;case 5:return ll(n),null===e&&sa(n),r=n.type,o=n.pendingProps,l=null!==e?e.memoizedProps:null,i=o.children,to(r,o)?i=null:null!==l&&to(r,l)&&(n.flags|=32),xi(e,n),wi(e,n,i,t),n.child;case 6:return null===e&&sa(n),null;case 13:return ji(e,n,t);case 4:return ol(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=Xa(n,null,r,t):wi(e,n,r,t),n.child;case 11:return r=n.type,o=n.pendingProps,Bi(e,n,r,o=n.elementType===r?o:ya(r,o),t);case 7:return wi(e,n,n.pendingProps,t),n.child;case 8:case 12:return wi(e,n,n.pendingProps.children,t),n.child;case 10:e:{if(r=n.type._context,o=n.pendingProps,l=n.memoizedProps,i=o.value,Co(va,r._currentValue),r._currentValue=i,null!==l)if(ir(l.value,i)){if(l.children===o.children&&!Oo.current){n=Hi(e,n,t);break e}}else for(null!==(l=n.child)&&(l.return=n);null!==l;){var u=l.dependencies;if(null!==u){i=l.child;for(var c=u.firstContext;null!==c;){if(c.context===r){if(1===l.tag){(c=La(-1,t&-t)).tag=2;var s=l.updateQueue;if(null!==s){var f=(s=s.shared).pending;null===f?c.next=c:(c.next=f.next,f.next=c),s.pending=c}}l.lanes|=t,null!==(c=l.alternate)&&(c.lanes|=t),ka(l.return,t,n),u.lanes|=t;break}c=c.next}}else if(10===l.tag)i=l.type===n.type?null:l.child;else if(18===l.tag){if(null===(i=l.return))throw Error(a(341));i.lanes|=t,null!==(u=i.alternate)&&(u.lanes|=t),ka(i,t,n),i=l.sibling}else i=l.child;if(null!==i)i.return=l;else for(i=l;null!==i;){if(i===n){i=null;break}if(null!==(l=i.sibling)){l.return=i.return,i=l;break}i=i.return}l=i}wi(e,n,o.children,t),n=n.child}return n;case 9:return o=n.type,r=n.pendingProps.children,Sa(n,t),r=r(o=xa(o)),n.flags|=1,wi(e,n,r,t),n.child;case 14:return o=ya(r=n.type,n.pendingProps),Ei(e,n,r,o=ya(r.type,o),t);case 15:return ki(e,n,n.type,n.pendingProps,t);case 17:return r=n.type,o=n.pendingProps,o=n.elementType===r?o:ya(r,o),Vi(e,n),n.tag=1,Mo(r)?(e=!0,jo(n)):e=!1,Sa(n,t),Ha(n,r,o),qa(n,r,o,t),Pi(null,n,r,!0,e,t);case 19:return $i(e,n,t);case 22:return Si(e,n,t)}throw Error(a(156,n.tag))};var Kc="function"==typeof reportError?reportError:function(e){console.error(e)};function Yc(e){this._internalRoot=e}function Gc(e){this._internalRoot=e}function Xc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Jc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Zc(){}function es(e,n,t,r,o){var a=t._reactRootContainer;if(a){var l=a;if("function"==typeof o){var i=o;o=function(){var e=Wc(l);i.call(e)}}Hc(n,l,e,o)}else l=function(e,n,t,r,o){if(o){if("function"==typeof r){var a=r;r=function(){var e=Wc(l);a.call(e)}}var l=Vc(n,r,e,0,null,!1,0,"",Zc);return e._reactRootContainer=l,e[ho]=l.current,$r(8===e.nodeType?e.parentNode:e),sc(),l}for(;o=e.lastChild;)e.removeChild(o);if("function"==typeof r){var i=r;r=function(){var e=Wc(u);i.call(e)}}var u=Fc(e,0,!1,null,0,!1,0,"",Zc);return e._reactRootContainer=u,e[ho]=u.current,$r(8===e.nodeType?e.parentNode:e),sc((function(){Hc(n,u,t,r)})),u}(t,n,e,o,r);return Wc(l)}Gc.prototype.render=Yc.prototype.render=function(e){var n=this._internalRoot;if(null===n)throw Error(a(409));Hc(e,n,null,null)},Gc.prototype.unmount=Yc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var n=e.containerInfo;sc((function(){Hc(null,e,null,null)})),n[ho]=null}},Gc.prototype.unstable_scheduleHydration=function(e){if(e){var n=Sn();e={blockedOn:null,target:e,priority:n};for(var t=0;t<Ln.length&&0!==n&&n<Ln[t].priority;t++);Ln.splice(t,0,e),0===t&&Rn(e)}},Bn=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var t=dn(n.pendingLanes);0!==t&&(gn(n,1|t),rc(n,Xe()),0==(6&_u)&&($u=Xe()+500,Vo()))}break;case 13:sc((function(){var n=Oa(e,1);if(null!==n){var t=ec();tc(n,e,1,t)}})),Qc(e,1)}},En=function(e){if(13===e.tag){var n=Oa(e,134217728);null!==n&&tc(n,e,134217728,ec()),Qc(e,134217728)}},kn=function(e){if(13===e.tag){var n=nc(e),t=Oa(e,n);null!==t&&tc(t,e,n,ec()),Qc(e,n)}},Sn=function(){return bn},xn=function(e,n){var t=bn;try{return bn=e,n()}finally{bn=t}},Be=function(e,n,t){switch(n){case"input":if(J(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var o=Bo(r);if(!o)throw Error(a(90));Q(r),J(r,o)}}}break;case"textarea":ae(e,t);break;case"select":null!=(n=t.value)&&te(e,!!t.multiple,n,!1)}},_e=cc,Pe=sc;var ns={usingClientEntryPoint:!1,Events:[bo,wo,Bo,xe,Ce,cc]},ts={findFiberByHostInstance:go,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rs={bundleType:ts.bundleType,version:ts.version,rendererPackageName:ts.rendererPackageName,rendererConfig:ts.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:b.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=We(e))?null:e.stateNode},findFiberByHostInstance:ts.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var os=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!os.isDisabled&&os.supportsFiber)try{on=os.inject(rs),an=os}catch(se){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ns,n.createPortal=function(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Xc(n))throw Error(a(200));return Uc(e,n,null,t)},n.createRoot=function(e,n){if(!Xc(e))throw Error(a(299));var t=!1,r="",o=Kc;return null!=n&&(!0===n.unstable_strictMode&&(t=!0),void 0!==n.identifierPrefix&&(r=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),n=Fc(e,1,!1,null,0,t,0,r,o),e[ho]=n.current,$r(8===e.nodeType?e.parentNode:e),new Yc(n)},n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(a(188));throw e=Object.keys(e).join(","),Error(a(268,e))}return null===(e=We(n))?null:e.stateNode},n.flushSync=function(e){return sc(e)},n.hydrate=function(e,n,t){if(!Jc(n))throw Error(a(200));return es(null,e,n,!0,t)},n.hydrateRoot=function(e,n,t){if(!Xc(e))throw Error(a(405));var r=null!=t&&t.hydratedSources||null,o=!1,l="",i=Kc;if(null!=t&&(!0===t.unstable_strictMode&&(o=!0),void 0!==t.identifierPrefix&&(l=t.identifierPrefix),void 0!==t.onRecoverableError&&(i=t.onRecoverableError)),n=Vc(n,null,e,1,null!=t?t:null,o,0,l,i),e[ho]=n.current,$r(e),r)for(e=0;e<r.length;e++)o=(o=(t=r[e])._getVersion)(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,o]:n.mutableSourceEagerHydrationData.push(t,o);return new Gc(n)},n.render=function(e,n,t){if(!Jc(n))throw Error(a(200));return es(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!Jc(e))throw Error(a(40));return!!e._reactRootContainer&&(sc((function(){es(null,null,e,!1,(function(){e._reactRootContainer=null,e[ho]=null}))})),!0)},n.unstable_batchedUpdates=cc,n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!Jc(t))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return es(e,n,t,!1,r)},n.version="18.2.0-next-9e3b772b8-20220608"},745:(e,n,t)=>{"use strict";var r=t(935);n.createRoot=r.createRoot,n.hydrateRoot=r.hydrateRoot},935:(e,n,t)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=t(448)},921:(e,n)=>{"use strict";var t="function"==typeof Symbol&&Symbol.for,r=t?Symbol.for("react.element"):60103,o=t?Symbol.for("react.portal"):60106,a=t?Symbol.for("react.fragment"):60107,l=t?Symbol.for("react.strict_mode"):60108,i=t?Symbol.for("react.profiler"):60114,u=t?Symbol.for("react.provider"):60109,c=t?Symbol.for("react.context"):60110,s=t?Symbol.for("react.async_mode"):60111,f=t?Symbol.for("react.concurrent_mode"):60111,d=t?Symbol.for("react.forward_ref"):60112,p=t?Symbol.for("react.suspense"):60113,A=t?Symbol.for("react.suspense_list"):60120,h=t?Symbol.for("react.memo"):60115,m=t?Symbol.for("react.lazy"):60116,y=t?Symbol.for("react.block"):60121,v=t?Symbol.for("react.fundamental"):60117,g=t?Symbol.for("react.responder"):60118,b=t?Symbol.for("react.scope"):60119;function w(e){if("object"==typeof e&&null!==e){var n=e.$$typeof;switch(n){case r:switch(e=e.type){case s:case f:case a:case i:case l:case p:return e;default:switch(e=e&&e.$$typeof){case c:case d:case m:case h:case u:return e;default:return n}}case o:return n}}}function B(e){return w(e)===f}n.AsyncMode=s,n.ConcurrentMode=f,n.ContextConsumer=c,n.ContextProvider=u,n.Element=r,n.ForwardRef=d,n.Fragment=a,n.Lazy=m,n.Memo=h,n.Portal=o,n.Profiler=i,n.StrictMode=l,n.Suspense=p,n.isAsyncMode=function(e){return B(e)||w(e)===s},n.isConcurrentMode=B,n.isContextConsumer=function(e){return w(e)===c},n.isContextProvider=function(e){return w(e)===u},n.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},n.isForwardRef=function(e){return w(e)===d},n.isFragment=function(e){return w(e)===a},n.isLazy=function(e){return w(e)===m},n.isMemo=function(e){return w(e)===h},n.isPortal=function(e){return w(e)===o},n.isProfiler=function(e){return w(e)===i},n.isStrictMode=function(e){return w(e)===l},n.isSuspense=function(e){return w(e)===p},n.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===f||e===i||e===l||e===p||e===A||"object"==typeof e&&null!==e&&(e.$$typeof===m||e.$$typeof===h||e.$$typeof===u||e.$$typeof===c||e.$$typeof===d||e.$$typeof===v||e.$$typeof===g||e.$$typeof===b||e.$$typeof===y)},n.typeOf=w},864:(e,n,t)=>{"use strict";e.exports=t(921)},359:(e,n)=>{"use strict";Symbol.for("react.element"),Symbol.for("react.portal"),Symbol.for("react.fragment"),Symbol.for("react.strict_mode"),Symbol.for("react.profiler"),Symbol.for("react.provider"),Symbol.for("react.context"),Symbol.for("react.server_context"),Symbol.for("react.forward_ref"),Symbol.for("react.suspense"),Symbol.for("react.suspense_list"),Symbol.for("react.memo"),Symbol.for("react.lazy"),Symbol.for("react.offscreen");Symbol.for("react.module.reference")},973:(e,n,t)=>{"use strict";t(359)},408:(e,n)=>{"use strict";var t=Symbol.for("react.element"),r=Symbol.for("react.portal"),o=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),l=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),u=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),s=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator,A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h=Object.assign,m={};function y(e,n,t){this.props=e,this.context=n,this.refs=m,this.updater=t||A}function v(){}function g(e,n,t){this.props=e,this.context=n,this.refs=m,this.updater=t||A}y.prototype.isReactComponent={},y.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=y.prototype;var b=g.prototype=new v;b.constructor=g,h(b,y.prototype),b.isPureReactComponent=!0;var w=Array.isArray,B=Object.prototype.hasOwnProperty,E={current:null},k={key:!0,ref:!0,__self:!0,__source:!0};function S(e,n,r){var o,a={},l=null,i=null;if(null!=n)for(o in void 0!==n.ref&&(i=n.ref),void 0!==n.key&&(l=""+n.key),n)B.call(n,o)&&!k.hasOwnProperty(o)&&(a[o]=n[o]);var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];a.children=c}if(e&&e.defaultProps)for(o in u=e.defaultProps)void 0===a[o]&&(a[o]=u[o]);return{$$typeof:t,type:e,key:l,ref:i,props:a,_owner:E.current}}function x(e){return"object"==typeof e&&null!==e&&e.$$typeof===t}var C=/\/+/g;function _(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function P(e,n,o,a,l){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case t:case r:u=!0}}if(u)return l=l(u=e),e=""===a?"."+_(u,0):a,w(l)?(o="",null!=e&&(o=e.replace(C,"$&/")+"/"),P(l,n,o,"",(function(e){return e}))):null!=l&&(x(l)&&(l=function(e,n){return{$$typeof:t,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(l,o+(!l.key||u&&u.key===l.key?"":(""+l.key).replace(C,"$&/")+"/")+e)),n.push(l)),1;if(u=0,a=""===a?".":a+":",w(e))for(var c=0;c<e.length;c++){var s=a+_(i=e[c],c);u+=P(i,n,o,s,l)}else if(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof s)for(e=s.call(e),c=0;!(i=e.next()).done;)u+=P(i=i.value,n,o,s=a+_(i,c++),l);else if("object"===i)throw n=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return u}function O(e,n,t){if(null==e)return e;var r=[],o=0;return P(e,r,"","",(function(e){return n.call(t,e,o++)})),r}function N(e){if(-1===e._status){var n=e._result;(n=n()).then((function(n){0!==e._status&&-1!==e._status||(e._status=1,e._result=n)}),(function(n){0!==e._status&&-1!==e._status||(e._status=2,e._result=n)})),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var z={current:null},M={transition:null},L={ReactCurrentDispatcher:z,ReactCurrentBatchConfig:M,ReactCurrentOwner:E};n.Children={map:O,forEach:function(e,n,t){O(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return O(e,(function(){n++})),n},toArray:function(e){return O(e,(function(e){return e}))||[]},only:function(e){if(!x(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=y,n.Fragment=o,n.Profiler=l,n.PureComponent=g,n.StrictMode=a,n.Suspense=s,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=L,n.cloneElement=function(e,n,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var o=h({},e.props),a=e.key,l=e.ref,i=e._owner;if(null!=n){if(void 0!==n.ref&&(l=n.ref,i=E.current),void 0!==n.key&&(a=""+n.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in n)B.call(n,c)&&!k.hasOwnProperty(c)&&(o[c]=void 0===n[c]&&void 0!==u?u[c]:n[c])}var c=arguments.length-2;if(1===c)o.children=r;else if(1<c){u=Array(c);for(var s=0;s<c;s++)u[s]=arguments[s+2];o.children=u}return{$$typeof:t,type:e.type,key:a,ref:l,props:o,_owner:i}},n.createContext=function(e){return(e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},n.createElement=S,n.createFactory=function(e){var n=S.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:c,render:e}},n.isValidElement=x,n.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:N}},n.memo=function(e,n){return{$$typeof:f,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=M.transition;M.transition={};try{e()}finally{M.transition=n}},n.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},n.useCallback=function(e,n){return z.current.useCallback(e,n)},n.useContext=function(e){return z.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return z.current.useDeferredValue(e)},n.useEffect=function(e,n){return z.current.useEffect(e,n)},n.useId=function(){return z.current.useId()},n.useImperativeHandle=function(e,n,t){return z.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return z.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return z.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return z.current.useMemo(e,n)},n.useReducer=function(e,n,t){return z.current.useReducer(e,n,t)},n.useRef=function(e){return z.current.useRef(e)},n.useState=function(e){return z.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return z.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return z.current.useTransition()},n.version="18.2.0"},294:(e,n,t)=>{"use strict";e.exports=t(408)},53:(e,n)=>{"use strict";function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,o=e[r];if(!(0<a(o,n)))break e;e[r]=n,e[t]=o,t=r}}function r(e){return 0===e.length?null:e[0]}function o(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,o=e.length,l=o>>>1;r<l;){var i=2*(r+1)-1,u=e[i],c=i+1,s=e[c];if(0>a(u,t))c<o&&0>a(s,u)?(e[r]=s,e[c]=t,r=c):(e[r]=u,e[i]=t,r=i);else{if(!(c<o&&0>a(s,t)))break e;e[r]=s,e[c]=t,r=c}}}return n}function a(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"==typeof performance&&"function"==typeof performance.now){var l=performance;n.unstable_now=function(){return l.now()}}else{var i=Date,u=i.now();n.unstable_now=function(){return i.now()-u}}var c=[],s=[],f=1,d=null,p=3,A=!1,h=!1,m=!1,y="function"==typeof setTimeout?setTimeout:null,v="function"==typeof clearTimeout?clearTimeout:null,g="undefined"!=typeof setImmediate?setImmediate:null;function b(e){for(var n=r(s);null!==n;){if(null===n.callback)o(s);else{if(!(n.startTime<=e))break;o(s),n.sortIndex=n.expirationTime,t(c,n)}n=r(s)}}function w(e){if(m=!1,b(e),!h)if(null!==r(c))h=!0,M(B);else{var n=r(s);null!==n&&L(w,n.startTime-e)}}function B(e,t){h=!1,m&&(m=!1,v(x),x=-1),A=!0;var a=p;try{for(b(t),d=r(c);null!==d&&(!(d.expirationTime>t)||e&&!P());){var l=d.callback;if("function"==typeof l){d.callback=null,p=d.priorityLevel;var i=l(d.expirationTime<=t);t=n.unstable_now(),"function"==typeof i?d.callback=i:d===r(c)&&o(c),b(t)}else o(c);d=r(c)}if(null!==d)var u=!0;else{var f=r(s);null!==f&&L(w,f.startTime-t),u=!1}return u}finally{d=null,p=a,A=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var E,k=!1,S=null,x=-1,C=5,_=-1;function P(){return!(n.unstable_now()-_<C)}function O(){if(null!==S){var e=n.unstable_now();_=e;var t=!0;try{t=S(!0,e)}finally{t?E():(k=!1,S=null)}}else k=!1}if("function"==typeof g)E=function(){g(O)};else if("undefined"!=typeof MessageChannel){var N=new MessageChannel,z=N.port2;N.port1.onmessage=O,E=function(){z.postMessage(null)}}else E=function(){y(O,0)};function M(e){S=e,k||(k=!0,E())}function L(e,t){x=y((function(){e(n.unstable_now())}),t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){h||A||(h=!0,M(B))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return r(c)},n.unstable_next=function(e){switch(p){case 1:case 2:case 3:var n=3;break;default:n=p}var t=p;p=n;try{return e()}finally{p=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=p;p=e;try{return n()}finally{p=t}},n.unstable_scheduleCallback=function(e,o,a){var l=n.unstable_now();switch(a="object"==typeof a&&null!==a&&"number"==typeof(a=a.delay)&&0<a?l+a:l,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:f++,callback:o,priorityLevel:e,startTime:a,expirationTime:i=a+i,sortIndex:-1},a>l?(e.sortIndex=a,t(s,e),null===r(c)&&e===r(s)&&(m?(v(x),x=-1):m=!0,L(w,a-l))):(e.sortIndex=i,t(c,e),h||A||(h=!0,M(B))),e},n.unstable_shouldYield=P,n.unstable_wrapCallback=function(e){var n=p;return function(){var t=p;p=n;try{return e.apply(this,arguments)}finally{p=t}}}},840:(e,n,t)=>{"use strict";e.exports=t(53)},826:(e,n,t)=>{"use strict";var r=t(379),o=t.n(r),a=t(795),l=t.n(a),i=t(569),u=t.n(i),c=t(565),s=t.n(c),f=t(216),d=t.n(f),p=t(589),A=t.n(p),h=t(576),m={};m.styleTagTransform=A(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=l(),m.insertStyleElement=d();var y=o()(h.default,m);if(!h.default.locals||e.hot.invalidate){var v=!h.default.locals,g=v?h:h.default.locals;e.hot.accept(576,(n=>{h=t(576),function(e,n,t){if(!e&&n||e&&!n)return!1;var r;for(r in e)if((!t||"default"!==r)&&e[r]!==n[r])return!1;for(r in n)if(!(t&&"default"===r||e[r]))return!1;return!0}(g,v?h:h.default.locals,v)?(g=v?h:h.default.locals,y(h.default)):e.hot.invalidate()}))}e.hot.dispose((function(){y()})),h.default&&h.default.locals&&h.default.locals},379:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},l=[],i=0;i<e.length;i++){var u=e[i],c=r.base?u[0]+r.base:u[0],s=a[c]||0,f="".concat(c," ").concat(s);a[c]=s+1;var d=t(f),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==d)n[d].references++,n[d].updater(p);else{var A=o(p,r);r.byIndex=i,n.splice(i,0,{identifier:f,updater:A,references:1})}l.push(f)}return l}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var l=0;l<a.length;l++){var i=t(a[l]);n[i].references--}for(var u=r(e,o),c=0;c<a.length;c++){var s=t(a[c]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}a=u}}},569:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{"use strict";e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},250:(e,n,t)=>{"use strict";var r=t(294),o="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n},a=r.useState,l=r.useEffect,i=r.useLayoutEffect,u=r.useDebugValue;function c(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!o(e,t)}catch(e){return!0}}var s="undefined"==typeof window||void 0===window.document||void 0===window.document.createElement?function(e,n){return n()}:function(e,n){var t=n(),r=a({inst:{value:t,getSnapshot:n}}),o=r[0].inst,s=r[1];return i((function(){o.value=t,o.getSnapshot=n,c(o)&&s({inst:o})}),[e,t,n]),l((function(){return c(o)&&s({inst:o}),e((function(){c(o)&&s({inst:o})}))}),[e]),u(t),t};n.useSyncExternalStore=void 0!==r.useSyncExternalStore?r.useSyncExternalStore:s},139:(e,n,t)=>{"use strict";var r=t(294),o=t(688),a="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n},l=o.useSyncExternalStore,i=r.useRef,u=r.useEffect,c=r.useMemo,s=r.useDebugValue;n.useSyncExternalStoreWithSelector=function(e,n,t,r,o){var f=i(null);if(null===f.current){var d={hasValue:!1,value:null};f.current=d}else d=f.current;f=c((function(){function e(e){if(!u){if(u=!0,l=e,e=r(e),void 0!==o&&d.hasValue){var n=d.value;if(o(n,e))return i=n}return i=e}if(n=i,a(l,e))return n;var t=r(e);return void 0!==o&&o(n,t)?n:(l=e,i=t)}var l,i,u=!1,c=void 0===t?null:t;return[function(){return e(n())},null===c?void 0:function(){return e(c())}]}),[n,t,r,o]);var p=l(e,f[0],f[1]);return u((function(){d.hasValue=!0,d.value=p}),[p]),s(p),p}},688:(e,n,t)=>{"use strict";e.exports=t(250)},798:(e,n,t)=>{"use strict";e.exports=t(139)},364:(e,n,t)=>{"use strict";e.exports=t.p+"0fdbb4f5269db92a4377.jpg"},61:(e,n,t)=>{var r=t(698).default;function o(){"use strict";e.exports=o=function(){return n},e.exports.__esModule=!0,e.exports.default=e.exports;var n={},t=Object.prototype,a=t.hasOwnProperty,l="function"==typeof Symbol?Symbol:{},i=l.iterator||"@@iterator",u=l.asyncIterator||"@@asyncIterator",c=l.toStringTag||"@@toStringTag";function s(e,n,t){return Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[n]}try{s({},"")}catch(e){s=function(e,n,t){return e[n]=t}}function f(e,n,t,r){var o=n&&n.prototype instanceof A?n:A,a=Object.create(o.prototype),l=new x(r||[]);return a._invoke=function(e,n,t){var r="suspendedStart";return function(o,a){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw a;return{value:void 0,done:!0}}for(t.method=o,t.arg=a;;){var l=t.delegate;if(l){var i=E(l,t);if(i){if(i===p)continue;return i}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var u=d(e,n,t);if("normal"===u.type){if(r=t.done?"completed":"suspendedYield",u.arg===p)continue;return{value:u.arg,done:t.done}}"throw"===u.type&&(r="completed",t.method="throw",t.arg=u.arg)}}}(e,t,l),a}function d(e,n,t){try{return{type:"normal",arg:e.call(n,t)}}catch(e){return{type:"throw",arg:e}}}n.wrap=f;var p={};function A(){}function h(){}function m(){}var y={};s(y,i,(function(){return this}));var v=Object.getPrototypeOf,g=v&&v(v(C([])));g&&g!==t&&a.call(g,i)&&(y=g);var b=m.prototype=A.prototype=Object.create(y);function w(e){["next","throw","return"].forEach((function(n){s(e,n,(function(e){return this._invoke(n,e)}))}))}function B(e,n){function t(o,l,i,u){var c=d(e[o],e,l);if("throw"!==c.type){var s=c.arg,f=s.value;return f&&"object"==r(f)&&a.call(f,"__await")?n.resolve(f.__await).then((function(e){t("next",e,i,u)}),(function(e){t("throw",e,i,u)})):n.resolve(f).then((function(e){s.value=e,i(s)}),(function(e){return t("throw",e,i,u)}))}u(c.arg)}var o;this._invoke=function(e,r){function a(){return new n((function(n,o){t(e,r,n,o)}))}return o=o?o.then(a,a):a()}}function E(e,n){var t=e.iterator[n.method];if(void 0===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=void 0,E(e,n),"throw"===n.method))return p;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return p}var r=d(t,e.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,p;var o=r.arg;return o?o.done?(n[e.resultName]=o.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,p):o:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,p)}function k(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function S(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function x(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function C(e){if(e){var n=e[i];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var t=-1,r=function n(){for(;++t<e.length;)if(a.call(e,t))return n.value=e[t],n.done=!1,n;return n.value=void 0,n.done=!0,n};return r.next=r}}return{next:_}}function _(){return{value:void 0,done:!0}}return h.prototype=m,s(b,"constructor",m),s(m,"constructor",h),h.displayName=s(m,c,"GeneratorFunction"),n.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===h||"GeneratorFunction"===(n.displayName||n.name))},n.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,m):(e.__proto__=m,s(e,c,"GeneratorFunction")),e.prototype=Object.create(b),e},n.awrap=function(e){return{__await:e}},w(B.prototype),s(B.prototype,u,(function(){return this})),n.AsyncIterator=B,n.async=function(e,t,r,o,a){void 0===a&&(a=Promise);var l=new B(f(e,t,r,o),a);return n.isGeneratorFunction(t)?l:l.next().then((function(e){return e.done?e.value:l.next()}))},w(b),s(b,c,"Generator"),s(b,i,(function(){return this})),s(b,"toString",(function(){return"[object Generator]"})),n.keys=function(e){var n=[];for(var t in e)n.push(t);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},n.values=C,x.prototype={constructor:x,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(S),!e)for(var n in this)"t"===n.charAt(0)&&a.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function t(t,r){return l.type="throw",l.arg=e,n.next=t,r&&(n.method="next",n.arg=void 0),!!r}for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r],l=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var i=a.call(o,"catchLoc"),u=a.call(o,"finallyLoc");if(i&&u){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(i){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(e,n){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc<=this.prev&&a.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var o=r;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=n&&n<=o.finallyLoc&&(o=null);var l=o?o.completion:{};return l.type=e,l.arg=n,o?(this.method="next",this.next=o.finallyLoc,p):this.complete(l)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),p},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),S(t),p}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.tryLoc===e){var r=t.completion;if("throw"===r.type){var o=r.arg;S(t)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,t){return this.delegate={iterator:C(e),resultName:n,nextLoc:t},"next"===this.method&&(this.arg=void 0),p}},n}e.exports=o,e.exports.__esModule=!0,e.exports.default=e.exports},698:e=>{function n(t){return e.exports=n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,n(t)}e.exports=n,e.exports.__esModule=!0,e.exports.default=e.exports},687:(e,n,t)=>{var r=t(61)();e.exports=r;try{regeneratorRuntime=r}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=r:Function("r","regeneratorRuntime = r")(r)}}},r={};function o(e){var n=r[e];if(void 0!==n){if(void 0!==n.error)throw n.error;return n.exports}var a=r[e]={id:e,exports:{}};try{var l={id:e,module:a,factory:t[e],require:o};o.i.forEach((function(e){e(l)})),a=l.module,l.factory.call(a.exports,a,a.exports,l.require)}catch(e){throw a.error=e,e}return a.exports}o.m=t,o.c=r,o.i=[],o.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return o.d(n,{a:n}),n},o.d=(e,n)=>{for(var t in n)o.o(n,t)&&!o.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},o.hu=e=>e+"."+o.h()+".hot-update.js",o.hmrF=()=>"main."+o.h()+".hot-update.json",o.h=()=>"2d3ceadf2927abaee2b4",o.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),e={},n="simple-reddit-app:",o.l=(t,r,a,l)=>{if(e[t])e[t].push(r);else{var i,u;if(void 0!==a)for(var c=document.getElementsByTagName("script"),s=0;s<c.length;s++){var f=c[s];if(f.getAttribute("src")==t||f.getAttribute("data-webpack")==n+a){i=f;break}}i||(u=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,o.nc&&i.setAttribute("nonce",o.nc),i.setAttribute("data-webpack",n+a),i.src=t),e[t]=[r];var d=(n,r)=>{i.onerror=i.onload=null,clearTimeout(p);var o=e[t];if(delete e[t],i.parentNode&&i.parentNode.removeChild(i),o&&o.forEach((e=>e(r))),n)return n(r)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=d.bind(null,i.onerror),i.onload=d.bind(null,i.onload),u&&document.head.appendChild(i)}},o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e,n,t,r={},a=o.c,l=[],i=[],u="idle",c=0,s=[];function f(e){u=e;for(var n=[],t=0;t<i.length;t++)n[t]=i[t].call(null,e);return Promise.all(n)}function d(){0==--c&&f("ready").then((function(){if(0===c){var e=s;s=[];for(var n=0;n<e.length;n++)e[n]()}}))}function p(e){if("idle"!==u)throw new Error("check() is only allowed in idle status");return f("check").then(o.hmrM).then((function(t){return t?f("prepare").then((function(){var r=[];return n=[],Promise.all(Object.keys(o.hmrC).reduce((function(e,a){return o.hmrC[a](t.c,t.r,t.m,e,n,r),e}),[])).then((function(){return n=function(){return e?h(e):f("ready").then((function(){return r}))},0===c?n():new Promise((function(e){s.push((function(){e(n())}))}));var n}))})):f(m()?"ready":"idle").then((function(){return null}))}))}function A(e){return"ready"!==u?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+u+")")})):h(e)}function h(e){e=e||{},m();var r=n.map((function(n){return n(e)}));n=void 0;var o=r.map((function(e){return e.error})).filter(Boolean);if(o.length>0)return f("abort").then((function(){throw o[0]}));var a=f("dispose");r.forEach((function(e){e.dispose&&e.dispose()}));var l,i=f("apply"),u=function(e){l||(l=e)},c=[];return r.forEach((function(e){if(e.apply){var n=e.apply(u);if(n)for(var t=0;t<n.length;t++)c.push(n[t])}})),Promise.all([a,i]).then((function(){return l?f("fail").then((function(){throw l})):t?h(e).then((function(e){return c.forEach((function(n){e.indexOf(n)<0&&e.push(n)})),e})):f("idle").then((function(){return c}))}))}function m(){if(t)return n||(n=[]),Object.keys(o.hmrI).forEach((function(e){t.forEach((function(t){o.hmrI[e](t,n)}))})),t=void 0,!0}o.hmrD=r,o.i.push((function(s){var h,m,y,v,g=s.module,b=function(n,t){var r=a[t];if(!r)return n;var o=function(o){if(r.hot.active){if(a[o]){var i=a[o].parents;-1===i.indexOf(t)&&i.push(t)}else l=[t],e=o;-1===r.children.indexOf(o)&&r.children.push(o)}else console.warn("[HMR] unexpected require("+o+") from disposed module "+t),l=[];return n(o)},i=function(e){return{configurable:!0,enumerable:!0,get:function(){return n[e]},set:function(t){n[e]=t}}};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&"e"!==s&&Object.defineProperty(o,s,i(s));return o.e=function(e){return function(e){switch(u){case"ready":f("prepare");case"prepare":return c++,e.then(d,d),e;default:return e}}(n.e(e))},o}(s.require,s.id);g.hot=(h=s.id,m=g,v={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:y=e!==h,_requireSelf:function(){l=m.parents.slice(),e=y?void 0:h,o(h)},active:!0,accept:function(e,n,t){if(void 0===e)v._selfAccepted=!0;else if("function"==typeof e)v._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var r=0;r<e.length;r++)v._acceptedDependencies[e[r]]=n||function(){},v._acceptedErrorHandlers[e[r]]=t;else v._acceptedDependencies[e]=n||function(){},v._acceptedErrorHandlers[e]=t},decline:function(e){if(void 0===e)v._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var n=0;n<e.length;n++)v._declinedDependencies[e[n]]=!0;else v._declinedDependencies[e]=!0},dispose:function(e){v._disposeHandlers.push(e)},addDisposeHandler:function(e){v._disposeHandlers.push(e)},removeDisposeHandler:function(e){var n=v._disposeHandlers.indexOf(e);n>=0&&v._disposeHandlers.splice(n,1)},invalidate:function(){switch(this._selfInvalidated=!0,u){case"idle":n=[],Object.keys(o.hmrI).forEach((function(e){o.hmrI[e](h,n)})),f("ready");break;case"ready":Object.keys(o.hmrI).forEach((function(e){o.hmrI[e](h,n)}));break;case"prepare":case"check":case"dispose":case"apply":(t=t||[]).push(h)}},check:p,apply:A,status:function(e){if(!e)return u;i.push(e)},addStatusHandler:function(e){i.push(e)},removeStatusHandler:function(e){var n=i.indexOf(e);n>=0&&i.splice(n,1)},data:r[h]},e=void 0,v),g.parents=l,g.children=[],l=[],s.require=b})),o.hmrC={},o.hmrI={}})(),o.p="/",(()=>{o.b=document.baseURI||self.location.href;var e,n,t,r,a,l=o.hmrS_jsonp=o.hmrS_jsonp||{179:0},i={};function u(n,t){return e=t,new Promise(((e,t)=>{i[n]=e;var r=o.p+o.hu(n),a=new Error;o.l(r,(e=>{if(i[n]){i[n]=void 0;var r=e&&("load"===e.type?"missing":e.type),o=e&&e.target&&e.target.src;a.message="Loading hot update chunk "+n+" failed.\n("+r+": "+o+")",a.name="ChunkLoadError",a.type=r,a.request=o,t(a)}}))}))}function c(e){function i(e){for(var n=[e],t={},r=n.map((function(e){return{chain:[e],id:e}}));r.length>0;){var a=r.pop(),l=a.id,i=a.chain,c=o.c[l];if(c&&(!c.hot._selfAccepted||c.hot._selfInvalidated)){if(c.hot._selfDeclined)return{type:"self-declined",chain:i,moduleId:l};if(c.hot._main)return{type:"unaccepted",chain:i,moduleId:l};for(var s=0;s<c.parents.length;s++){var f=c.parents[s],d=o.c[f];if(d){if(d.hot._declinedDependencies[l])return{type:"declined",chain:i.concat([f]),moduleId:l,parentId:f};-1===n.indexOf(f)&&(d.hot._acceptedDependencies[l]?(t[f]||(t[f]=[]),u(t[f],[l])):(delete t[f],n.push(f),r.push({chain:i.concat([f]),id:f})))}}}}return{type:"accepted",moduleId:e,outdatedModules:n,outdatedDependencies:t}}function u(e,n){for(var t=0;t<n.length;t++){var r=n[t];-1===e.indexOf(r)&&e.push(r)}}o.f&&delete o.f.jsonpHmr,n=void 0;var c={},s=[],f={},d=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var p in t)if(o.o(t,p)){var A,h=t[p],m=!1,y=!1,v=!1,g="";switch((A=h?i(p):{type:"disposed",moduleId:p}).chain&&(g="\nUpdate propagation: "+A.chain.join(" -> ")),A.type){case"self-declined":e.onDeclined&&e.onDeclined(A),e.ignoreDeclined||(m=new Error("Aborted because of self decline: "+A.moduleId+g));break;case"declined":e.onDeclined&&e.onDeclined(A),e.ignoreDeclined||(m=new Error("Aborted because of declined dependency: "+A.moduleId+" in "+A.parentId+g));break;case"unaccepted":e.onUnaccepted&&e.onUnaccepted(A),e.ignoreUnaccepted||(m=new Error("Aborted because "+p+" is not accepted"+g));break;case"accepted":e.onAccepted&&e.onAccepted(A),y=!0;break;case"disposed":e.onDisposed&&e.onDisposed(A),v=!0;break;default:throw new Error("Unexception type "+A.type)}if(m)return{error:m};if(y)for(p in f[p]=h,u(s,A.outdatedModules),A.outdatedDependencies)o.o(A.outdatedDependencies,p)&&(c[p]||(c[p]=[]),u(c[p],A.outdatedDependencies[p]));v&&(u(s,[A.moduleId]),f[p]=d)}t=void 0;for(var b,w=[],B=0;B<s.length;B++){var E=s[B],k=o.c[E];k&&(k.hot._selfAccepted||k.hot._main)&&f[E]!==d&&!k.hot._selfInvalidated&&w.push({module:E,require:k.hot._requireSelf,errorHandler:k.hot._selfAccepted})}return{dispose:function(){var e;r.forEach((function(e){delete l[e]})),r=void 0;for(var n,t=s.slice();t.length>0;){var a=t.pop(),i=o.c[a];if(i){var u={},f=i.hot._disposeHandlers;for(B=0;B<f.length;B++)f[B].call(null,u);for(o.hmrD[a]=u,i.hot.active=!1,delete o.c[a],delete c[a],B=0;B<i.children.length;B++){var d=o.c[i.children[B]];d&&(e=d.parents.indexOf(a))>=0&&d.parents.splice(e,1)}}}for(var p in c)if(o.o(c,p)&&(i=o.c[p]))for(b=c[p],B=0;B<b.length;B++)n=b[B],(e=i.children.indexOf(n))>=0&&i.children.splice(e,1)},apply:function(n){for(var t in f)o.o(f,t)&&(o.m[t]=f[t]);for(var r=0;r<a.length;r++)a[r](o);for(var l in c)if(o.o(c,l)){var i=o.c[l];if(i){b=c[l];for(var u=[],d=[],p=[],A=0;A<b.length;A++){var h=b[A],m=i.hot._acceptedDependencies[h],y=i.hot._acceptedErrorHandlers[h];if(m){if(-1!==u.indexOf(m))continue;u.push(m),d.push(y),p.push(h)}}for(var v=0;v<u.length;v++)try{u[v].call(null,b)}catch(t){if("function"==typeof d[v])try{d[v](t,{moduleId:l,dependencyId:p[v]})}catch(r){e.onErrored&&e.onErrored({type:"accept-error-handler-errored",moduleId:l,dependencyId:p[v],error:r,originalError:t}),e.ignoreErrored||(n(r),n(t))}else e.onErrored&&e.onErrored({type:"accept-errored",moduleId:l,dependencyId:p[v],error:t}),e.ignoreErrored||n(t)}}}for(var g=0;g<w.length;g++){var B=w[g],E=B.module;try{B.require(E)}catch(t){if("function"==typeof B.errorHandler)try{B.errorHandler(t,{moduleId:E,module:o.c[E]})}catch(r){e.onErrored&&e.onErrored({type:"self-accept-error-handler-errored",moduleId:E,error:r,originalError:t}),e.ignoreErrored||(n(r),n(t))}else e.onErrored&&e.onErrored({type:"self-accept-errored",moduleId:E,error:t}),e.ignoreErrored||n(t)}}return s}}}self.webpackHotUpdatesimple_reddit_app=(n,r,l)=>{for(var u in r)o.o(r,u)&&(t[u]=r[u],e&&e.push(u));l&&a.push(l),i[n]&&(i[n](),i[n]=void 0)},o.hmrI.jsonp=function(e,n){t||(t={},a=[],r=[],n.push(c)),o.o(t,e)||(t[e]=o.m[e])},o.hmrC.jsonp=function(e,i,s,f,d,p){d.push(c),n={},r=i,t=s.reduce((function(e,n){return e[n]=!1,e}),{}),a=[],e.forEach((function(e){o.o(l,e)&&void 0!==l[e]?(f.push(u(e,p)),n[e]=!0):n[e]=!1})),o.f&&(o.f.jsonpHmr=function(e,t){n&&o.o(n,e)&&!n[e]&&(t.push(u(e)),n[e]=!0)})},o.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(o.p+o.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),o.nc=void 0,o(714)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ekQsRUFBb0JXLFFBQVE1M0QsTUFBTWlYLElBQ3RFLEdBQXVCLE1BQXBCQSxFQUFTMmtELE9BQVosQ0FDQSxJQUFJM2tELEVBQVMrcUMsR0FBSSxNQUFNLElBQUl6L0MsTUFBTSxtQ0FBcUMwVSxFQUFTcW9ELFlBQy9FLE9BQU9yb0QsRUFBU1csTUFGa0IsQ0FFWixHQUNyQixNQ3pmSHEvQyxFQUFvQmtCLFFBQUsxM0QsRUNHQ3cyRCxFQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwL3dlYnBhY2svcnVudGltZS9sb2FkIHNjcmlwdCIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5TGlrZVRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlXaXRob3V0SG9sZXMuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXRlcmFibGVUb0FycmF5LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL25vbkl0ZXJhYmxlU3ByZWFkLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL2ltbWVyL2Rpc3QvaW1tZXIuZXNtLm1qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlZHV4L2VzL3JlZHV4LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlZHV4LXRodW5rL2VzL2luZGV4LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0ByZWR1eGpzL3Rvb2xraXQvZGlzdC9yZWR1eC10b29sa2l0LmVzbS5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL3NyYy91dGlscy9tYXBTZWFyY2hSZXN1bHRUb0FycmF5LnRzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vc3JjL3V0aWxzL3JlcGxhY2VTdHJTcGFjZXMudHMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9zcmMvc3RvcmUvcmVkdWNlcnMvc2VhcmNoLnRzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vc3JjL2NvbXBvbmVudHMvY29tbW9uL2Zvcm0vaW5wdXQvaW5wdXQudHN4Iiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vc3JjL2xheW91dC9hcHAtbGF5b3V0L2FwcC1sYXlvdXQudHN4Iiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL2JhdGNoLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2NvbXBvbmVudHMvQ29udGV4dC5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9ob29rcy91c2VSZWR1eENvbnRleHQuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvaG9va3MvdXNlU2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvdXNlU3luY0V4dGVybmFsU3RvcmUuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvU3Vic2NyaXB0aW9uLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL3VzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29tcG9uZW50cy9jb25uZWN0LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2NvbXBvbmVudHMvUHJvdmlkZXIuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvaG9va3MvdXNlU3RvcmUuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvaG9va3MvdXNlRGlzcGF0Y2guanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9zcmMvc3RvcmUvaG9va3MudHMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9zcmMvbGF5b3V0L2NvbnRhaW5lci9jb250YWluZXIudHN4Iiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vc3JjL2NvbXBvbmVudHMvY29tbW9uL2xvYWRlci9sb2FkZXIudHN4Iiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vc3JjL2NvbXBvbmVudHMvY29tbW9uL2Jhc2UtYnV0dG9uL2Jhc2UtYnV0dG9uLnRzeCIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL3NyYy9jb21wb25lbnRzL2xpc3QvY29tcG9uZW50cy9jYXJkLnRzeCIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL3NyYy9jb21wb25lbnRzL2xpc3QvbGlzdC50c3giLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9zcmMvYXBwLnRzeCIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aEhvbGVzLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2l0ZXJhYmxlVG9BcnJheUxpbWl0LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL25vbkl0ZXJhYmxlUmVzdC5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL3NyYy9zdG9yZS9yZWR1Y2Vycy9sYXlvdXQudHMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9zcmMvc3RvcmUvc3RvcmUudHMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9zcmMvaW5kZXgudHN4Iiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvZGVib3VuY2UvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2NsaWVudC5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9zcmMvc3R5bGUuY3NzPzkwMTEiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS93aXRoLXNlbGVjdG9yLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL3NoaW0vaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvLi9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS93aXRoLXNlbGVjdG9yLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvcmVnZW5lcmF0b3JSdW50aW1lLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mLmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC93ZWJwYWNrL3J1bnRpbWUvZ2V0IGphdmFzY3JpcHQgdXBkYXRlIGNodW5rIGZpbGVuYW1lIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwL3dlYnBhY2svcnVudGltZS9nZXQgdXBkYXRlIG1hbmlmZXN0IGZpbGVuYW1lIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCIsIndlYnBhY2s6Ly9zaW1wbGUtcmVkZGl0LWFwcC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvd2VicGFjay9ydW50aW1lL2hvdCBtb2R1bGUgcmVwbGFjZW1lbnQiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vc2ltcGxlLXJlZGRpdC1hcHAvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3NpbXBsZS1yZWRkaXQtYXBwL3dlYnBhY2svc3RhcnR1cCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaW5Qcm9ncmVzcyA9IHt9O1xudmFyIGRhdGFXZWJwYWNrUHJlZml4ID0gXCJzaW1wbGUtcmVkZGl0LWFwcDpcIjtcbi8vIGxvYWRTY3JpcHQgZnVuY3Rpb24gdG8gbG9hZCBhIHNjcmlwdCB2aWEgc2NyaXB0IHRhZ1xuX193ZWJwYWNrX3JlcXVpcmVfXy5sID0gKHVybCwgZG9uZSwga2V5LCBjaHVua0lkKSA9PiB7XG5cdGlmKGluUHJvZ3Jlc3NbdXJsXSkgeyBpblByb2dyZXNzW3VybF0ucHVzaChkb25lKTsgcmV0dXJuOyB9XG5cdHZhciBzY3JpcHQsIG5lZWRBdHRhY2g7XG5cdGlmKGtleSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgc2NyaXB0cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIHMgPSBzY3JpcHRzW2ldO1xuXHRcdFx0aWYocy5nZXRBdHRyaWJ1dGUoXCJzcmNcIikgPT0gdXJsIHx8IHMuZ2V0QXR0cmlidXRlKFwiZGF0YS13ZWJwYWNrXCIpID09IGRhdGFXZWJwYWNrUHJlZml4ICsga2V5KSB7IHNjcmlwdCA9IHM7IGJyZWFrOyB9XG5cdFx0fVxuXHR9XG5cdGlmKCFzY3JpcHQpIHtcblx0XHRuZWVkQXR0YWNoID0gdHJ1ZTtcblx0XHRzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcblxuXHRcdHNjcmlwdC5jaGFyc2V0ID0gJ3V0Zi04Jztcblx0XHRzY3JpcHQudGltZW91dCA9IDEyMDtcblx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5uYykge1xuXHRcdFx0c2NyaXB0LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIF9fd2VicGFja19yZXF1aXJlX18ubmMpO1xuXHRcdH1cblx0XHRzY3JpcHQuc2V0QXR0cmlidXRlKFwiZGF0YS13ZWJwYWNrXCIsIGRhdGFXZWJwYWNrUHJlZml4ICsga2V5KTtcblx0XHRzY3JpcHQuc3JjID0gdXJsO1xuXHR9XG5cdGluUHJvZ3Jlc3NbdXJsXSA9IFtkb25lXTtcblx0dmFyIG9uU2NyaXB0Q29tcGxldGUgPSAocHJldiwgZXZlbnQpID0+IHtcblx0XHQvLyBhdm9pZCBtZW0gbGVha3MgaW4gSUUuXG5cdFx0c2NyaXB0Lm9uZXJyb3IgPSBzY3JpcHQub25sb2FkID0gbnVsbDtcblx0XHRjbGVhclRpbWVvdXQodGltZW91dCk7XG5cdFx0dmFyIGRvbmVGbnMgPSBpblByb2dyZXNzW3VybF07XG5cdFx0ZGVsZXRlIGluUHJvZ3Jlc3NbdXJsXTtcblx0XHRzY3JpcHQucGFyZW50Tm9kZSAmJiBzY3JpcHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzY3JpcHQpO1xuXHRcdGRvbmVGbnMgJiYgZG9uZUZucy5mb3JFYWNoKChmbikgPT4gKGZuKGV2ZW50KSkpO1xuXHRcdGlmKHByZXYpIHJldHVybiBwcmV2KGV2ZW50KTtcblx0fVxuXHQ7XG5cdHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChvblNjcmlwdENvbXBsZXRlLmJpbmQobnVsbCwgdW5kZWZpbmVkLCB7IHR5cGU6ICd0aW1lb3V0JywgdGFyZ2V0OiBzY3JpcHQgfSksIDEyMDAwMCk7XG5cdHNjcmlwdC5vbmVycm9yID0gb25TY3JpcHRDb21wbGV0ZS5iaW5kKG51bGwsIHNjcmlwdC5vbmVycm9yKTtcblx0c2NyaXB0Lm9ubG9hZCA9IG9uU2NyaXB0Q29tcGxldGUuYmluZChudWxsLCBzY3JpcHQub25sb2FkKTtcblx0bmVlZEF0dGFjaCAmJiBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XG59OyIsImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpbmZvLmRvbmUpIHtcbiAgICByZXNvbHZlKHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcblxuICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgdmFsdWUpO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpO1xuICAgICAgfVxuXG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuXG4gIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykge1xuICAgIGFycjJbaV0gPSBhcnJbaV07XG4gIH1cblxuICByZXR1cm4gYXJyMjtcbn0iLCJpbXBvcnQgYXJyYXlMaWtlVG9BcnJheSBmcm9tIFwiLi9hcnJheUxpa2VUb0FycmF5LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7XG4gIGlmICghbykgcmV0dXJuO1xuICBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG4gIHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTtcbiAgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTtcbiAgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7XG4gIGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xufSIsImltcG9ydCBhcnJheVdpdGhvdXRIb2xlcyBmcm9tIFwiLi9hcnJheVdpdGhvdXRIb2xlcy5qc1wiO1xuaW1wb3J0IGl0ZXJhYmxlVG9BcnJheSBmcm9tIFwiLi9pdGVyYWJsZVRvQXJyYXkuanNcIjtcbmltcG9ydCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSBmcm9tIFwiLi91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qc1wiO1xuaW1wb3J0IG5vbkl0ZXJhYmxlU3ByZWFkIGZyb20gXCIuL25vbkl0ZXJhYmxlU3ByZWFkLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7XG4gIHJldHVybiBhcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IGl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgbm9uSXRlcmFibGVTcHJlYWQoKTtcbn0iLCJpbXBvcnQgYXJyYXlMaWtlVG9BcnJheSBmcm9tIFwiLi9hcnJheUxpa2VUb0FycmF5LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KGFycik7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIGl0ZXJbU3ltYm9sLml0ZXJhdG9yXSAhPSBudWxsIHx8IGl0ZXJbXCJAQGl0ZXJhdG9yXCJdICE9IG51bGwpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59IiwiZnVuY3Rpb24gbihuKXtmb3IodmFyIHI9YXJndW1lbnRzLmxlbmd0aCx0PUFycmF5KHI+MT9yLTE6MCksZT0xO2U8cjtlKyspdFtlLTFdPWFyZ3VtZW50c1tlXTtpZihcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WKXt2YXIgaT1ZW25dLG89aT9cImZ1bmN0aW9uXCI9PXR5cGVvZiBpP2kuYXBwbHkobnVsbCx0KTppOlwidW5rbm93biBlcnJvciBucjogXCIrbjt0aHJvdyBFcnJvcihcIltJbW1lcl0gXCIrbyl9dGhyb3cgRXJyb3IoXCJbSW1tZXJdIG1pbmlmaWVkIGVycm9yIG5yOiBcIituKyh0Lmxlbmd0aD9cIiBcIit0Lm1hcCgoZnVuY3Rpb24obil7cmV0dXJuXCInXCIrbitcIidcIn0pKS5qb2luKFwiLFwiKTpcIlwiKStcIi4gRmluZCB0aGUgZnVsbCBlcnJvciBhdDogaHR0cHM6Ly9iaXQubHkvM2NYRUtXZlwiKX1mdW5jdGlvbiByKG4pe3JldHVybiEhbiYmISFuW1FdfWZ1bmN0aW9uIHQobil7cmV0dXJuISFuJiYoZnVuY3Rpb24obil7aWYoIW58fFwib2JqZWN0XCIhPXR5cGVvZiBuKXJldHVybiExO3ZhciByPU9iamVjdC5nZXRQcm90b3R5cGVPZihuKTtpZihudWxsPT09cilyZXR1cm4hMDt2YXIgdD1PYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChyLFwiY29uc3RydWN0b3JcIikmJnIuY29uc3RydWN0b3I7cmV0dXJuIHQ9PT1PYmplY3R8fFwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJkZ1bmN0aW9uLnRvU3RyaW5nLmNhbGwodCk9PT1afShuKXx8QXJyYXkuaXNBcnJheShuKXx8ISFuW0xdfHwhIW4uY29uc3RydWN0b3JbTF18fHMobil8fHYobikpfWZ1bmN0aW9uIGUodCl7cmV0dXJuIHIodCl8fG4oMjMsdCksdFtRXS50fWZ1bmN0aW9uIGkobixyLHQpe3ZvaWQgMD09PXQmJih0PSExKSwwPT09byhuKT8odD9PYmplY3Qua2V5czpubikobikuZm9yRWFjaCgoZnVuY3Rpb24oZSl7dCYmXCJzeW1ib2xcIj09dHlwZW9mIGV8fHIoZSxuW2VdLG4pfSkpOm4uZm9yRWFjaCgoZnVuY3Rpb24odCxlKXtyZXR1cm4gcihlLHQsbil9KSl9ZnVuY3Rpb24gbyhuKXt2YXIgcj1uW1FdO3JldHVybiByP3IuaT4zP3IuaS00OnIuaTpBcnJheS5pc0FycmF5KG4pPzE6cyhuKT8yOnYobik/MzowfWZ1bmN0aW9uIHUobixyKXtyZXR1cm4gMj09PW8obik/bi5oYXMocik6T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scil9ZnVuY3Rpb24gYShuLHIpe3JldHVybiAyPT09byhuKT9uLmdldChyKTpuW3JdfWZ1bmN0aW9uIGYobixyLHQpe3ZhciBlPW8obik7Mj09PWU/bi5zZXQocix0KTozPT09ZT8obi5kZWxldGUociksbi5hZGQodCkpOm5bcl09dH1mdW5jdGlvbiBjKG4scil7cmV0dXJuIG49PT1yPzAhPT1ufHwxL249PTEvcjpuIT1uJiZyIT1yfWZ1bmN0aW9uIHMobil7cmV0dXJuIFgmJm4gaW5zdGFuY2VvZiBNYXB9ZnVuY3Rpb24gdihuKXtyZXR1cm4gcSYmbiBpbnN0YW5jZW9mIFNldH1mdW5jdGlvbiBwKG4pe3JldHVybiBuLm98fG4udH1mdW5jdGlvbiBsKG4pe2lmKEFycmF5LmlzQXJyYXkobikpcmV0dXJuIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKG4pO3ZhciByPXJuKG4pO2RlbGV0ZSByW1FdO2Zvcih2YXIgdD1ubihyKSxlPTA7ZTx0Lmxlbmd0aDtlKyspe3ZhciBpPXRbZV0sbz1yW2ldOyExPT09by53cml0YWJsZSYmKG8ud3JpdGFibGU9ITAsby5jb25maWd1cmFibGU9ITApLChvLmdldHx8by5zZXQpJiYocltpXT17Y29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLGVudW1lcmFibGU6by5lbnVtZXJhYmxlLHZhbHVlOm5baV19KX1yZXR1cm4gT2JqZWN0LmNyZWF0ZShPYmplY3QuZ2V0UHJvdG90eXBlT2Yobikscil9ZnVuY3Rpb24gZChuLGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT0hMSkseShuKXx8cihuKXx8IXQobik/bjoobyhuKT4xJiYobi5zZXQ9bi5hZGQ9bi5jbGVhcj1uLmRlbGV0ZT1oKSxPYmplY3QuZnJlZXplKG4pLGUmJmkobiwoZnVuY3Rpb24obixyKXtyZXR1cm4gZChyLCEwKX0pLCEwKSxuKX1mdW5jdGlvbiBoKCl7bigyKX1mdW5jdGlvbiB5KG4pe3JldHVybiBudWxsPT1ufHxcIm9iamVjdFwiIT10eXBlb2Ygbnx8T2JqZWN0LmlzRnJvemVuKG4pfWZ1bmN0aW9uIGIocil7dmFyIHQ9dG5bcl07cmV0dXJuIHR8fG4oMTgsciksdH1mdW5jdGlvbiBtKG4scil7dG5bbl18fCh0bltuXT1yKX1mdW5jdGlvbiBfKCl7cmV0dXJuXCJwcm9kdWN0aW9uXCI9PT1wcm9jZXNzLmVudi5OT0RFX0VOVnx8VXx8bigwKSxVfWZ1bmN0aW9uIGoobixyKXtyJiYoYihcIlBhdGNoZXNcIiksbi51PVtdLG4ucz1bXSxuLnY9cil9ZnVuY3Rpb24gTyhuKXtnKG4pLG4ucC5mb3JFYWNoKFMpLG4ucD1udWxsfWZ1bmN0aW9uIGcobil7bj09PVUmJihVPW4ubCl9ZnVuY3Rpb24gdyhuKXtyZXR1cm4gVT17cDpbXSxsOlUsaDpuLG06ITAsXzowfX1mdW5jdGlvbiBTKG4pe3ZhciByPW5bUV07MD09PXIuaXx8MT09PXIuaT9yLmooKTpyLk89ITB9ZnVuY3Rpb24gUChyLGUpe2UuXz1lLnAubGVuZ3RoO3ZhciBpPWUucFswXSxvPXZvaWQgMCE9PXImJnIhPT1pO3JldHVybiBlLmguZ3x8YihcIkVTNVwiKS5TKGUscixvKSxvPyhpW1FdLlAmJihPKGUpLG4oNCkpLHQocikmJihyPU0oZSxyKSxlLmx8fHgoZSxyKSksZS51JiZiKFwiUGF0Y2hlc1wiKS5NKGlbUV0udCxyLGUudSxlLnMpKTpyPU0oZSxpLFtdKSxPKGUpLGUudSYmZS52KGUudSxlLnMpLHIhPT1IP3I6dm9pZCAwfWZ1bmN0aW9uIE0obixyLHQpe2lmKHkocikpcmV0dXJuIHI7dmFyIGU9cltRXTtpZighZSlyZXR1cm4gaShyLChmdW5jdGlvbihpLG8pe3JldHVybiBBKG4sZSxyLGksbyx0KX0pLCEwKSxyO2lmKGUuQSE9PW4pcmV0dXJuIHI7aWYoIWUuUClyZXR1cm4geChuLGUudCwhMCksZS50O2lmKCFlLkkpe2UuST0hMCxlLkEuXy0tO3ZhciBvPTQ9PT1lLml8fDU9PT1lLmk/ZS5vPWwoZS5rKTplLm87aSgzPT09ZS5pP25ldyBTZXQobyk6bywoZnVuY3Rpb24ocixpKXtyZXR1cm4gQShuLGUsbyxyLGksdCl9KSkseChuLG8sITEpLHQmJm4udSYmYihcIlBhdGNoZXNcIikuUihlLHQsbi51LG4ucyl9cmV0dXJuIGUub31mdW5jdGlvbiBBKGUsaSxvLGEsYyxzKXtpZihcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZjPT09byYmbig1KSxyKGMpKXt2YXIgdj1NKGUsYyxzJiZpJiYzIT09aS5pJiYhdShpLkQsYSk/cy5jb25jYXQoYSk6dm9pZCAwKTtpZihmKG8sYSx2KSwhcih2KSlyZXR1cm47ZS5tPSExfWlmKHQoYykmJiF5KGMpKXtpZighZS5oLkYmJmUuXzwxKXJldHVybjtNKGUsYyksaSYmaS5BLmx8fHgoZSxjKX19ZnVuY3Rpb24geChuLHIsdCl7dm9pZCAwPT09dCYmKHQ9ITEpLG4uaC5GJiZuLm0mJmQocix0KX1mdW5jdGlvbiB6KG4scil7dmFyIHQ9bltRXTtyZXR1cm4odD9wKHQpOm4pW3JdfWZ1bmN0aW9uIEkobixyKXtpZihyIGluIG4pZm9yKHZhciB0PU9iamVjdC5nZXRQcm90b3R5cGVPZihuKTt0Oyl7dmFyIGU9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LHIpO2lmKGUpcmV0dXJuIGU7dD1PYmplY3QuZ2V0UHJvdG90eXBlT2YodCl9fWZ1bmN0aW9uIGsobil7bi5QfHwobi5QPSEwLG4ubCYmayhuLmwpKX1mdW5jdGlvbiBFKG4pe24ub3x8KG4ubz1sKG4udCkpfWZ1bmN0aW9uIFIobixyLHQpe3ZhciBlPXMocik/YihcIk1hcFNldFwiKS5OKHIsdCk6dihyKT9iKFwiTWFwU2V0XCIpLlQocix0KTpuLmc/ZnVuY3Rpb24obixyKXt2YXIgdD1BcnJheS5pc0FycmF5KG4pLGU9e2k6dD8xOjAsQTpyP3IuQTpfKCksUDohMSxJOiExLEQ6e30sbDpyLHQ6bixrOm51bGwsbzpudWxsLGo6bnVsbCxDOiExfSxpPWUsbz1lbjt0JiYoaT1bZV0sbz1vbik7dmFyIHU9UHJveHkucmV2b2NhYmxlKGksbyksYT11LnJldm9rZSxmPXUucHJveHk7cmV0dXJuIGUuaz1mLGUuaj1hLGZ9KHIsdCk6YihcIkVTNVwiKS5KKHIsdCk7cmV0dXJuKHQ/dC5BOl8oKSkucC5wdXNoKGUpLGV9ZnVuY3Rpb24gRChlKXtyZXR1cm4gcihlKXx8bigyMixlKSxmdW5jdGlvbiBuKHIpe2lmKCF0KHIpKXJldHVybiByO3ZhciBlLHU9cltRXSxjPW8ocik7aWYodSl7aWYoIXUuUCYmKHUuaTw0fHwhYihcIkVTNVwiKS5LKHUpKSlyZXR1cm4gdS50O3UuST0hMCxlPUYocixjKSx1Lkk9ITF9ZWxzZSBlPUYocixjKTtyZXR1cm4gaShlLChmdW5jdGlvbihyLHQpe3UmJmEodS50LHIpPT09dHx8ZihlLHIsbih0KSl9KSksMz09PWM/bmV3IFNldChlKTplfShlKX1mdW5jdGlvbiBGKG4scil7c3dpdGNoKHIpe2Nhc2UgMjpyZXR1cm4gbmV3IE1hcChuKTtjYXNlIDM6cmV0dXJuIEFycmF5LmZyb20obil9cmV0dXJuIGwobil9ZnVuY3Rpb24gTigpe2Z1bmN0aW9uIHQobixyKXt2YXIgdD1zW25dO3JldHVybiB0P3QuZW51bWVyYWJsZT1yOnNbbl09dD17Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6cixnZXQ6ZnVuY3Rpb24oKXt2YXIgcj10aGlzW1FdO3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJmYociksZW4uZ2V0KHIsbil9LHNldDpmdW5jdGlvbihyKXt2YXIgdD10aGlzW1FdO1wicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJmYodCksZW4uc2V0KHQsbixyKX19LHR9ZnVuY3Rpb24gZShuKXtmb3IodmFyIHI9bi5sZW5ndGgtMTtyPj0wO3ItLSl7dmFyIHQ9bltyXVtRXTtpZighdC5QKXN3aXRjaCh0Lmkpe2Nhc2UgNTphKHQpJiZrKHQpO2JyZWFrO2Nhc2UgNDpvKHQpJiZrKHQpfX19ZnVuY3Rpb24gbyhuKXtmb3IodmFyIHI9bi50LHQ9bi5rLGU9bm4odCksaT1lLmxlbmd0aC0xO2k+PTA7aS0tKXt2YXIgbz1lW2ldO2lmKG8hPT1RKXt2YXIgYT1yW29dO2lmKHZvaWQgMD09PWEmJiF1KHIsbykpcmV0dXJuITA7dmFyIGY9dFtvXSxzPWYmJmZbUV07aWYocz9zLnQhPT1hOiFjKGYsYSkpcmV0dXJuITB9fXZhciB2PSEhcltRXTtyZXR1cm4gZS5sZW5ndGghPT1ubihyKS5sZW5ndGgrKHY/MDoxKX1mdW5jdGlvbiBhKG4pe3ZhciByPW4uaztpZihyLmxlbmd0aCE9PW4udC5sZW5ndGgpcmV0dXJuITA7dmFyIHQ9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihyLHIubGVuZ3RoLTEpO2lmKHQmJiF0LmdldClyZXR1cm4hMDtmb3IodmFyIGU9MDtlPHIubGVuZ3RoO2UrKylpZighci5oYXNPd25Qcm9wZXJ0eShlKSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBmKHIpe3IuTyYmbigzLEpTT04uc3RyaW5naWZ5KHAocikpKX12YXIgcz17fTttKFwiRVM1XCIse0o6ZnVuY3Rpb24obixyKXt2YXIgZT1BcnJheS5pc0FycmF5KG4pLGk9ZnVuY3Rpb24obixyKXtpZihuKXtmb3IodmFyIGU9QXJyYXkoci5sZW5ndGgpLGk9MDtpPHIubGVuZ3RoO2krKylPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIlwiK2ksdChpLCEwKSk7cmV0dXJuIGV9dmFyIG89cm4ocik7ZGVsZXRlIG9bUV07Zm9yKHZhciB1PW5uKG8pLGE9MDthPHUubGVuZ3RoO2ErKyl7dmFyIGY9dVthXTtvW2ZdPXQoZixufHwhIW9bZl0uZW51bWVyYWJsZSl9cmV0dXJuIE9iamVjdC5jcmVhdGUoT2JqZWN0LmdldFByb3RvdHlwZU9mKHIpLG8pfShlLG4pLG89e2k6ZT81OjQsQTpyP3IuQTpfKCksUDohMSxJOiExLEQ6e30sbDpyLHQ6bixrOmksbzpudWxsLE86ITEsQzohMX07cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpLFEse3ZhbHVlOm8sd3JpdGFibGU6ITB9KSxpfSxTOmZ1bmN0aW9uKG4sdCxvKXtvP3IodCkmJnRbUV0uQT09PW4mJmUobi5wKToobi51JiZmdW5jdGlvbiBuKHIpe2lmKHImJlwib2JqZWN0XCI9PXR5cGVvZiByKXt2YXIgdD1yW1FdO2lmKHQpe3ZhciBlPXQudCxvPXQuayxmPXQuRCxjPXQuaTtpZig0PT09YylpKG8sKGZ1bmN0aW9uKHIpe3IhPT1RJiYodm9pZCAwIT09ZVtyXXx8dShlLHIpP2Zbcl18fG4ob1tyXSk6KGZbcl09ITAsayh0KSkpfSkpLGkoZSwoZnVuY3Rpb24obil7dm9pZCAwIT09b1tuXXx8dShvLG4pfHwoZltuXT0hMSxrKHQpKX0pKTtlbHNlIGlmKDU9PT1jKXtpZihhKHQpJiYoayh0KSxmLmxlbmd0aD0hMCksby5sZW5ndGg8ZS5sZW5ndGgpZm9yKHZhciBzPW8ubGVuZ3RoO3M8ZS5sZW5ndGg7cysrKWZbc109ITE7ZWxzZSBmb3IodmFyIHY9ZS5sZW5ndGg7djxvLmxlbmd0aDt2KyspZlt2XT0hMDtmb3IodmFyIHA9TWF0aC5taW4oby5sZW5ndGgsZS5sZW5ndGgpLGw9MDtsPHA7bCsrKW8uaGFzT3duUHJvcGVydHkobCl8fChmW2xdPSEwKSx2b2lkIDA9PT1mW2xdJiZuKG9bbF0pfX19fShuLnBbMF0pLGUobi5wKSl9LEs6ZnVuY3Rpb24obil7cmV0dXJuIDQ9PT1uLmk/byhuKTphKG4pfX0pfWZ1bmN0aW9uIFQoKXtmdW5jdGlvbiBlKG4pe2lmKCF0KG4pKXJldHVybiBuO2lmKEFycmF5LmlzQXJyYXkobikpcmV0dXJuIG4ubWFwKGUpO2lmKHMobikpcmV0dXJuIG5ldyBNYXAoQXJyYXkuZnJvbShuLmVudHJpZXMoKSkubWFwKChmdW5jdGlvbihuKXtyZXR1cm5bblswXSxlKG5bMV0pXX0pKSk7aWYodihuKSlyZXR1cm4gbmV3IFNldChBcnJheS5mcm9tKG4pLm1hcChlKSk7dmFyIHI9T2JqZWN0LmNyZWF0ZShPYmplY3QuZ2V0UHJvdG90eXBlT2YobikpO2Zvcih2YXIgaSBpbiBuKXJbaV09ZShuW2ldKTtyZXR1cm4gdShuLEwpJiYocltMXT1uW0xdKSxyfWZ1bmN0aW9uIGYobil7cmV0dXJuIHIobik/ZShuKTpufXZhciBjPVwiYWRkXCI7bShcIlBhdGNoZXNcIix7JDpmdW5jdGlvbihyLHQpe3JldHVybiB0LmZvckVhY2goKGZ1bmN0aW9uKHQpe2Zvcih2YXIgaT10LnBhdGgsdT10Lm9wLGY9cixzPTA7czxpLmxlbmd0aC0xO3MrKyl7dmFyIHY9byhmKSxwPVwiXCIraVtzXTswIT09diYmMSE9PXZ8fFwiX19wcm90b19fXCIhPT1wJiZcImNvbnN0cnVjdG9yXCIhPT1wfHxuKDI0KSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBmJiZcInByb3RvdHlwZVwiPT09cCYmbigyNCksXCJvYmplY3RcIiE9dHlwZW9mKGY9YShmLHApKSYmbigxNSxpLmpvaW4oXCIvXCIpKX12YXIgbD1vKGYpLGQ9ZSh0LnZhbHVlKSxoPWlbaS5sZW5ndGgtMV07c3dpdGNoKHUpe2Nhc2VcInJlcGxhY2VcIjpzd2l0Y2gobCl7Y2FzZSAyOnJldHVybiBmLnNldChoLGQpO2Nhc2UgMzpuKDE2KTtkZWZhdWx0OnJldHVybiBmW2hdPWR9Y2FzZSBjOnN3aXRjaChsKXtjYXNlIDE6cmV0dXJuXCItXCI9PT1oP2YucHVzaChkKTpmLnNwbGljZShoLDAsZCk7Y2FzZSAyOnJldHVybiBmLnNldChoLGQpO2Nhc2UgMzpyZXR1cm4gZi5hZGQoZCk7ZGVmYXVsdDpyZXR1cm4gZltoXT1kfWNhc2VcInJlbW92ZVwiOnN3aXRjaChsKXtjYXNlIDE6cmV0dXJuIGYuc3BsaWNlKGgsMSk7Y2FzZSAyOnJldHVybiBmLmRlbGV0ZShoKTtjYXNlIDM6cmV0dXJuIGYuZGVsZXRlKHQudmFsdWUpO2RlZmF1bHQ6cmV0dXJuIGRlbGV0ZSBmW2hdfWRlZmF1bHQ6bigxNyx1KX19KSkscn0sUjpmdW5jdGlvbihuLHIsdCxlKXtzd2l0Y2gobi5pKXtjYXNlIDA6Y2FzZSA0OmNhc2UgMjpyZXR1cm4gZnVuY3Rpb24obixyLHQsZSl7dmFyIG89bi50LHM9bi5vO2kobi5ELChmdW5jdGlvbihuLGkpe3ZhciB2PWEobyxuKSxwPWEocyxuKSxsPWk/dShvLG4pP1wicmVwbGFjZVwiOmM6XCJyZW1vdmVcIjtpZih2IT09cHx8XCJyZXBsYWNlXCIhPT1sKXt2YXIgZD1yLmNvbmNhdChuKTt0LnB1c2goXCJyZW1vdmVcIj09PWw/e29wOmwscGF0aDpkfTp7b3A6bCxwYXRoOmQsdmFsdWU6cH0pLGUucHVzaChsPT09Yz97b3A6XCJyZW1vdmVcIixwYXRoOmR9OlwicmVtb3ZlXCI9PT1sP3tvcDpjLHBhdGg6ZCx2YWx1ZTpmKHYpfTp7b3A6XCJyZXBsYWNlXCIscGF0aDpkLHZhbHVlOmYodil9KX19KSl9KG4scix0LGUpO2Nhc2UgNTpjYXNlIDE6cmV0dXJuIGZ1bmN0aW9uKG4scix0LGUpe3ZhciBpPW4udCxvPW4uRCx1PW4ubztpZih1Lmxlbmd0aDxpLmxlbmd0aCl7dmFyIGE9W3UsaV07aT1hWzBdLHU9YVsxXTt2YXIgcz1bZSx0XTt0PXNbMF0sZT1zWzFdfWZvcih2YXIgdj0wO3Y8aS5sZW5ndGg7disrKWlmKG9bdl0mJnVbdl0hPT1pW3ZdKXt2YXIgcD1yLmNvbmNhdChbdl0pO3QucHVzaCh7b3A6XCJyZXBsYWNlXCIscGF0aDpwLHZhbHVlOmYodVt2XSl9KSxlLnB1c2goe29wOlwicmVwbGFjZVwiLHBhdGg6cCx2YWx1ZTpmKGlbdl0pfSl9Zm9yKHZhciBsPWkubGVuZ3RoO2w8dS5sZW5ndGg7bCsrKXt2YXIgZD1yLmNvbmNhdChbbF0pO3QucHVzaCh7b3A6YyxwYXRoOmQsdmFsdWU6Zih1W2xdKX0pfWkubGVuZ3RoPHUubGVuZ3RoJiZlLnB1c2goe29wOlwicmVwbGFjZVwiLHBhdGg6ci5jb25jYXQoW1wibGVuZ3RoXCJdKSx2YWx1ZTppLmxlbmd0aH0pfShuLHIsdCxlKTtjYXNlIDM6cmV0dXJuIGZ1bmN0aW9uKG4scix0LGUpe3ZhciBpPW4udCxvPW4ubyx1PTA7aS5mb3JFYWNoKChmdW5jdGlvbihuKXtpZighby5oYXMobikpe3ZhciBpPXIuY29uY2F0KFt1XSk7dC5wdXNoKHtvcDpcInJlbW92ZVwiLHBhdGg6aSx2YWx1ZTpufSksZS51bnNoaWZ0KHtvcDpjLHBhdGg6aSx2YWx1ZTpufSl9dSsrfSkpLHU9MCxvLmZvckVhY2goKGZ1bmN0aW9uKG4pe2lmKCFpLmhhcyhuKSl7dmFyIG89ci5jb25jYXQoW3VdKTt0LnB1c2goe29wOmMscGF0aDpvLHZhbHVlOm59KSxlLnVuc2hpZnQoe29wOlwicmVtb3ZlXCIscGF0aDpvLHZhbHVlOm59KX11Kyt9KSl9KG4scix0LGUpfX0sTTpmdW5jdGlvbihuLHIsdCxlKXt0LnB1c2goe29wOlwicmVwbGFjZVwiLHBhdGg6W10sdmFsdWU6cj09PUg/dm9pZCAwOnJ9KSxlLnB1c2goe29wOlwicmVwbGFjZVwiLHBhdGg6W10sdmFsdWU6bn0pfX0pfWZ1bmN0aW9uIEMoKXtmdW5jdGlvbiByKG4scil7ZnVuY3Rpb24gdCgpe3RoaXMuY29uc3RydWN0b3I9bn1hKG4sciksbi5wcm90b3R5cGU9KHQucHJvdG90eXBlPXIucHJvdG90eXBlLG5ldyB0KX1mdW5jdGlvbiBlKG4pe24ub3x8KG4uRD1uZXcgTWFwLG4ubz1uZXcgTWFwKG4udCkpfWZ1bmN0aW9uIG8obil7bi5vfHwobi5vPW5ldyBTZXQsbi50LmZvckVhY2goKGZ1bmN0aW9uKHIpe2lmKHQocikpe3ZhciBlPVIobi5BLmgscixuKTtuLnAuc2V0KHIsZSksbi5vLmFkZChlKX1lbHNlIG4uby5hZGQocil9KSkpfWZ1bmN0aW9uIHUocil7ci5PJiZuKDMsSlNPTi5zdHJpbmdpZnkocChyKSkpfXZhciBhPWZ1bmN0aW9uKG4scil7cmV0dXJuKGE9T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKG4scil7bi5fX3Byb3RvX189cn18fGZ1bmN0aW9uKG4scil7Zm9yKHZhciB0IGluIHIpci5oYXNPd25Qcm9wZXJ0eSh0KSYmKG5bdF09clt0XSl9KShuLHIpfSxmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihuLHIpe3JldHVybiB0aGlzW1FdPXtpOjIsbDpyLEE6cj9yLkE6XygpLFA6ITEsSTohMSxvOnZvaWQgMCxEOnZvaWQgMCx0Om4sazp0aGlzLEM6ITEsTzohMX0sdGhpc31yKG4sTWFwKTt2YXIgbz1uLnByb3RvdHlwZTtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sXCJzaXplXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBwKHRoaXNbUV0pLnNpemV9fSksby5oYXM9ZnVuY3Rpb24obil7cmV0dXJuIHAodGhpc1tRXSkuaGFzKG4pfSxvLnNldD1mdW5jdGlvbihuLHIpe3ZhciB0PXRoaXNbUV07cmV0dXJuIHUodCkscCh0KS5oYXMobikmJnAodCkuZ2V0KG4pPT09cnx8KGUodCksayh0KSx0LkQuc2V0KG4sITApLHQuby5zZXQobixyKSx0LkQuc2V0KG4sITApKSx0aGlzfSxvLmRlbGV0ZT1mdW5jdGlvbihuKXtpZighdGhpcy5oYXMobikpcmV0dXJuITE7dmFyIHI9dGhpc1tRXTtyZXR1cm4gdShyKSxlKHIpLGsociksci50LmhhcyhuKT9yLkQuc2V0KG4sITEpOnIuRC5kZWxldGUobiksci5vLmRlbGV0ZShuKSwhMH0sby5jbGVhcj1mdW5jdGlvbigpe3ZhciBuPXRoaXNbUV07dShuKSxwKG4pLnNpemUmJihlKG4pLGsobiksbi5EPW5ldyBNYXAsaShuLnQsKGZ1bmN0aW9uKHIpe24uRC5zZXQociwhMSl9KSksbi5vLmNsZWFyKCkpfSxvLmZvckVhY2g9ZnVuY3Rpb24obixyKXt2YXIgdD10aGlzO3AodGhpc1tRXSkuZm9yRWFjaCgoZnVuY3Rpb24oZSxpKXtuLmNhbGwocix0LmdldChpKSxpLHQpfSkpfSxvLmdldD1mdW5jdGlvbihuKXt2YXIgcj10aGlzW1FdO3Uocik7dmFyIGk9cChyKS5nZXQobik7aWYoci5JfHwhdChpKSlyZXR1cm4gaTtpZihpIT09ci50LmdldChuKSlyZXR1cm4gaTt2YXIgbz1SKHIuQS5oLGkscik7cmV0dXJuIGUociksci5vLnNldChuLG8pLG99LG8ua2V5cz1mdW5jdGlvbigpe3JldHVybiBwKHRoaXNbUV0pLmtleXMoKX0sby52YWx1ZXM9ZnVuY3Rpb24oKXt2YXIgbixyPXRoaXMsdD10aGlzLmtleXMoKTtyZXR1cm4obj17fSlbVl09ZnVuY3Rpb24oKXtyZXR1cm4gci52YWx1ZXMoKX0sbi5uZXh0PWZ1bmN0aW9uKCl7dmFyIG49dC5uZXh0KCk7cmV0dXJuIG4uZG9uZT9uOntkb25lOiExLHZhbHVlOnIuZ2V0KG4udmFsdWUpfX0sbn0sby5lbnRyaWVzPWZ1bmN0aW9uKCl7dmFyIG4scj10aGlzLHQ9dGhpcy5rZXlzKCk7cmV0dXJuKG49e30pW1ZdPWZ1bmN0aW9uKCl7cmV0dXJuIHIuZW50cmllcygpfSxuLm5leHQ9ZnVuY3Rpb24oKXt2YXIgbj10Lm5leHQoKTtpZihuLmRvbmUpcmV0dXJuIG47dmFyIGU9ci5nZXQobi52YWx1ZSk7cmV0dXJue2RvbmU6ITEsdmFsdWU6W24udmFsdWUsZV19fSxufSxvW1ZdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZW50cmllcygpfSxufSgpLGM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4scil7cmV0dXJuIHRoaXNbUV09e2k6MyxsOnIsQTpyP3IuQTpfKCksUDohMSxJOiExLG86dm9pZCAwLHQ6bixrOnRoaXMscDpuZXcgTWFwLE86ITEsQzohMX0sdGhpc31yKG4sU2V0KTt2YXIgdD1uLnByb3RvdHlwZTtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJzaXplXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBwKHRoaXNbUV0pLnNpemV9fSksdC5oYXM9ZnVuY3Rpb24obil7dmFyIHI9dGhpc1tRXTtyZXR1cm4gdShyKSxyLm8/ISFyLm8uaGFzKG4pfHwhKCFyLnAuaGFzKG4pfHwhci5vLmhhcyhyLnAuZ2V0KG4pKSk6ci50LmhhcyhuKX0sdC5hZGQ9ZnVuY3Rpb24obil7dmFyIHI9dGhpc1tRXTtyZXR1cm4gdShyKSx0aGlzLmhhcyhuKXx8KG8ociksayhyKSxyLm8uYWRkKG4pKSx0aGlzfSx0LmRlbGV0ZT1mdW5jdGlvbihuKXtpZighdGhpcy5oYXMobikpcmV0dXJuITE7dmFyIHI9dGhpc1tRXTtyZXR1cm4gdShyKSxvKHIpLGsociksci5vLmRlbGV0ZShuKXx8ISFyLnAuaGFzKG4pJiZyLm8uZGVsZXRlKHIucC5nZXQobikpfSx0LmNsZWFyPWZ1bmN0aW9uKCl7dmFyIG49dGhpc1tRXTt1KG4pLHAobikuc2l6ZSYmKG8obiksayhuKSxuLm8uY2xlYXIoKSl9LHQudmFsdWVzPWZ1bmN0aW9uKCl7dmFyIG49dGhpc1tRXTtyZXR1cm4gdShuKSxvKG4pLG4uby52YWx1ZXMoKX0sdC5lbnRyaWVzPWZ1bmN0aW9uKCl7dmFyIG49dGhpc1tRXTtyZXR1cm4gdShuKSxvKG4pLG4uby5lbnRyaWVzKCl9LHQua2V5cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnZhbHVlcygpfSx0W1ZdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmFsdWVzKCl9LHQuZm9yRWFjaD1mdW5jdGlvbihuLHIpe2Zvcih2YXIgdD10aGlzLnZhbHVlcygpLGU9dC5uZXh0KCk7IWUuZG9uZTspbi5jYWxsKHIsZS52YWx1ZSxlLnZhbHVlLHRoaXMpLGU9dC5uZXh0KCl9LG59KCk7bShcIk1hcFNldFwiLHtOOmZ1bmN0aW9uKG4scil7cmV0dXJuIG5ldyBmKG4scil9LFQ6ZnVuY3Rpb24obixyKXtyZXR1cm4gbmV3IGMobixyKX19KX1mdW5jdGlvbiBKKCl7TigpLEMoKSxUKCl9ZnVuY3Rpb24gSyhuKXtyZXR1cm4gbn1mdW5jdGlvbiAkKG4pe3JldHVybiBufXZhciBHLFUsVz1cInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sKFwieFwiKSxYPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBNYXAscT1cInVuZGVmaW5lZFwiIT10eXBlb2YgU2V0LEI9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFByb3h5JiZ2b2lkIDAhPT1Qcm94eS5yZXZvY2FibGUmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBSZWZsZWN0LEg9Vz9TeW1ib2wuZm9yKFwiaW1tZXItbm90aGluZ1wiKTooKEc9e30pW1wiaW1tZXItbm90aGluZ1wiXT0hMCxHKSxMPVc/U3ltYm9sLmZvcihcImltbWVyLWRyYWZ0YWJsZVwiKTpcIl9fJGltbWVyX2RyYWZ0YWJsZVwiLFE9Vz9TeW1ib2wuZm9yKFwiaW1tZXItc3RhdGVcIik6XCJfXyRpbW1lcl9zdGF0ZVwiLFY9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yfHxcIkBAaXRlcmF0b3JcIixZPXswOlwiSWxsZWdhbCBzdGF0ZVwiLDE6XCJJbW1lciBkcmFmdHMgY2Fubm90IGhhdmUgY29tcHV0ZWQgcHJvcGVydGllc1wiLDI6XCJUaGlzIG9iamVjdCBoYXMgYmVlbiBmcm96ZW4gYW5kIHNob3VsZCBub3QgYmUgbXV0YXRlZFwiLDM6ZnVuY3Rpb24obil7cmV0dXJuXCJDYW5ub3QgdXNlIGEgcHJveHkgdGhhdCBoYXMgYmVlbiByZXZva2VkLiBEaWQgeW91IHBhc3MgYW4gb2JqZWN0IGZyb20gaW5zaWRlIGFuIGltbWVyIGZ1bmN0aW9uIHRvIGFuIGFzeW5jIHByb2Nlc3M/IFwiK259LDQ6XCJBbiBpbW1lciBwcm9kdWNlciByZXR1cm5lZCBhIG5ldyB2YWx1ZSAqYW5kKiBtb2RpZmllZCBpdHMgZHJhZnQuIEVpdGhlciByZXR1cm4gYSBuZXcgdmFsdWUgKm9yKiBtb2RpZnkgdGhlIGRyYWZ0LlwiLDU6XCJJbW1lciBmb3JiaWRzIGNpcmN1bGFyIHJlZmVyZW5jZXNcIiw2OlwiVGhlIGZpcnN0IG9yIHNlY29uZCBhcmd1bWVudCB0byBgcHJvZHVjZWAgbXVzdCBiZSBhIGZ1bmN0aW9uXCIsNzpcIlRoZSB0aGlyZCBhcmd1bWVudCB0byBgcHJvZHVjZWAgbXVzdCBiZSBhIGZ1bmN0aW9uIG9yIHVuZGVmaW5lZFwiLDg6XCJGaXJzdCBhcmd1bWVudCB0byBgY3JlYXRlRHJhZnRgIG11c3QgYmUgYSBwbGFpbiBvYmplY3QsIGFuIGFycmF5LCBvciBhbiBpbW1lcmFibGUgb2JqZWN0XCIsOTpcIkZpcnN0IGFyZ3VtZW50IHRvIGBmaW5pc2hEcmFmdGAgbXVzdCBiZSBhIGRyYWZ0IHJldHVybmVkIGJ5IGBjcmVhdGVEcmFmdGBcIiwxMDpcIlRoZSBnaXZlbiBkcmFmdCBpcyBhbHJlYWR5IGZpbmFsaXplZFwiLDExOlwiT2JqZWN0LmRlZmluZVByb3BlcnR5KCkgY2Fubm90IGJlIHVzZWQgb24gYW4gSW1tZXIgZHJhZnRcIiwxMjpcIk9iamVjdC5zZXRQcm90b3R5cGVPZigpIGNhbm5vdCBiZSB1c2VkIG9uIGFuIEltbWVyIGRyYWZ0XCIsMTM6XCJJbW1lciBvbmx5IHN1cHBvcnRzIGRlbGV0aW5nIGFycmF5IGluZGljZXNcIiwxNDpcIkltbWVyIG9ubHkgc3VwcG9ydHMgc2V0dGluZyBhcnJheSBpbmRpY2VzIGFuZCB0aGUgJ2xlbmd0aCcgcHJvcGVydHlcIiwxNTpmdW5jdGlvbihuKXtyZXR1cm5cIkNhbm5vdCBhcHBseSBwYXRjaCwgcGF0aCBkb2Vzbid0IHJlc29sdmU6IFwiK259LDE2OidTZXRzIGNhbm5vdCBoYXZlIFwicmVwbGFjZVwiIHBhdGNoZXMuJywxNzpmdW5jdGlvbihuKXtyZXR1cm5cIlVuc3VwcG9ydGVkIHBhdGNoIG9wZXJhdGlvbjogXCIrbn0sMTg6ZnVuY3Rpb24obil7cmV0dXJuXCJUaGUgcGx1Z2luIGZvciAnXCIrbitcIicgaGFzIG5vdCBiZWVuIGxvYWRlZCBpbnRvIEltbWVyLiBUbyBlbmFibGUgdGhlIHBsdWdpbiwgaW1wb3J0IGFuZCBjYWxsIGBlbmFibGVcIituK1wiKClgIHdoZW4gaW5pdGlhbGl6aW5nIHlvdXIgYXBwbGljYXRpb24uXCJ9LDIwOlwiQ2Fubm90IHVzZSBwcm94aWVzIGlmIFByb3h5LCBQcm94eS5yZXZvY2FibGUgb3IgUmVmbGVjdCBhcmUgbm90IGF2YWlsYWJsZVwiLDIxOmZ1bmN0aW9uKG4pe3JldHVyblwicHJvZHVjZSBjYW4gb25seSBiZSBjYWxsZWQgb24gdGhpbmdzIHRoYXQgYXJlIGRyYWZ0YWJsZTogcGxhaW4gb2JqZWN0cywgYXJyYXlzLCBNYXAsIFNldCBvciBjbGFzc2VzIHRoYXQgYXJlIG1hcmtlZCB3aXRoICdbaW1tZXJhYmxlXTogdHJ1ZScuIEdvdCAnXCIrbitcIidcIn0sMjI6ZnVuY3Rpb24obil7cmV0dXJuXCInY3VycmVudCcgZXhwZWN0cyBhIGRyYWZ0LCBnb3Q6IFwiK259LDIzOmZ1bmN0aW9uKG4pe3JldHVyblwiJ29yaWdpbmFsJyBleHBlY3RzIGEgZHJhZnQsIGdvdDogXCIrbn0sMjQ6XCJQYXRjaGluZyByZXNlcnZlZCBhdHRyaWJ1dGVzIGxpa2UgX19wcm90b19fLCBwcm90b3R5cGUgYW5kIGNvbnN0cnVjdG9yIGlzIG5vdCBhbGxvd2VkXCJ9LFo9XCJcIitPYmplY3QucHJvdG90eXBlLmNvbnN0cnVjdG9yLG5uPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0Lm93bktleXM/UmVmbGVjdC5vd25LZXlzOnZvaWQgMCE9PU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM/ZnVuY3Rpb24obil7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG4pLmNvbmNhdChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG4pKX06T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMscm49T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnN8fGZ1bmN0aW9uKG4pe3ZhciByPXt9O3JldHVybiBubihuKS5mb3JFYWNoKChmdW5jdGlvbih0KXtyW3RdPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iobix0KX0pKSxyfSx0bj17fSxlbj17Z2V0OmZ1bmN0aW9uKG4scil7aWYocj09PVEpcmV0dXJuIG47dmFyIGU9cChuKTtpZighdShlLHIpKXJldHVybiBmdW5jdGlvbihuLHIsdCl7dmFyIGUsaT1JKHIsdCk7cmV0dXJuIGk/XCJ2YWx1ZVwiaW4gaT9pLnZhbHVlOm51bGw9PT0oZT1pLmdldCl8fHZvaWQgMD09PWU/dm9pZCAwOmUuY2FsbChuLmspOnZvaWQgMH0obixlLHIpO3ZhciBpPWVbcl07cmV0dXJuIG4uSXx8IXQoaSk/aTppPT09eihuLnQscik/KEUobiksbi5vW3JdPVIobi5BLmgsaSxuKSk6aX0saGFzOmZ1bmN0aW9uKG4scil7cmV0dXJuIHIgaW4gcChuKX0sb3duS2V5czpmdW5jdGlvbihuKXtyZXR1cm4gUmVmbGVjdC5vd25LZXlzKHAobikpfSxzZXQ6ZnVuY3Rpb24obixyLHQpe3ZhciBlPUkocChuKSxyKTtpZihudWxsPT1lP3ZvaWQgMDplLnNldClyZXR1cm4gZS5zZXQuY2FsbChuLmssdCksITA7aWYoIW4uUCl7dmFyIGk9eihwKG4pLHIpLG89bnVsbD09aT92b2lkIDA6aVtRXTtpZihvJiZvLnQ9PT10KXJldHVybiBuLm9bcl09dCxuLkRbcl09ITEsITA7aWYoYyh0LGkpJiYodm9pZCAwIT09dHx8dShuLnQscikpKXJldHVybiEwO0UobiksayhuKX1yZXR1cm4gbi5vW3JdPT09dCYmXCJudW1iZXJcIiE9dHlwZW9mIHQmJih2b2lkIDAhPT10fHxyIGluIG4ubyl8fChuLm9bcl09dCxuLkRbcl09ITAsITApfSxkZWxldGVQcm9wZXJ0eTpmdW5jdGlvbihuLHIpe3JldHVybiB2b2lkIDAhPT16KG4udCxyKXx8ciBpbiBuLnQ/KG4uRFtyXT0hMSxFKG4pLGsobikpOmRlbGV0ZSBuLkRbcl0sbi5vJiZkZWxldGUgbi5vW3JdLCEwfSxnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6ZnVuY3Rpb24obixyKXt2YXIgdD1wKG4pLGU9UmVmbGVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxyKTtyZXR1cm4gZT97d3JpdGFibGU6ITAsY29uZmlndXJhYmxlOjEhPT1uLml8fFwibGVuZ3RoXCIhPT1yLGVudW1lcmFibGU6ZS5lbnVtZXJhYmxlLHZhbHVlOnRbcl19OmV9LGRlZmluZVByb3BlcnR5OmZ1bmN0aW9uKCl7bigxMSl9LGdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKG4pe3JldHVybiBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobi50KX0sc2V0UHJvdG90eXBlT2Y6ZnVuY3Rpb24oKXtuKDEyKX19LG9uPXt9O2koZW4sKGZ1bmN0aW9uKG4scil7b25bbl09ZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzWzBdPWFyZ3VtZW50c1swXVswXSxyLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19KSksb24uZGVsZXRlUHJvcGVydHk9ZnVuY3Rpb24ocix0KXtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZpc05hTihwYXJzZUludCh0KSkmJm4oMTMpLG9uLnNldC5jYWxsKHRoaXMscix0LHZvaWQgMCl9LG9uLnNldD1mdW5jdGlvbihyLHQsZSl7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmXCJsZW5ndGhcIiE9PXQmJmlzTmFOKHBhcnNlSW50KHQpKSYmbigxNCksZW4uc2V0LmNhbGwodGhpcyxyWzBdLHQsZSxyWzBdKX07dmFyIHVuPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShyKXt2YXIgZT10aGlzO3RoaXMuZz1CLHRoaXMuRj0hMCx0aGlzLnByb2R1Y2U9ZnVuY3Rpb24ocixpLG8pe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHImJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGkpe3ZhciB1PWk7aT1yO3ZhciBhPWU7cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciByPXRoaXM7dm9pZCAwPT09biYmKG49dSk7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsZT1BcnJheSh0PjE/dC0xOjApLG89MTtvPHQ7bysrKWVbby0xXT1hcmd1bWVudHNbb107cmV0dXJuIGEucHJvZHVjZShuLChmdW5jdGlvbihuKXt2YXIgdDtyZXR1cm4odD1pKS5jYWxsLmFwcGx5KHQsW3Isbl0uY29uY2F0KGUpKX0pKX19dmFyIGY7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgaSYmbig2KSx2b2lkIDAhPT1vJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBvJiZuKDcpLHQocikpe3ZhciBjPXcoZSkscz1SKGUscix2b2lkIDApLHY9ITA7dHJ5e2Y9aShzKSx2PSExfWZpbmFsbHl7dj9PKGMpOmcoYyl9cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFByb21pc2UmJmYgaW5zdGFuY2VvZiBQcm9taXNlP2YudGhlbigoZnVuY3Rpb24obil7cmV0dXJuIGooYyxvKSxQKG4sYyl9KSwoZnVuY3Rpb24obil7dGhyb3cgTyhjKSxufSkpOihqKGMsbyksUChmLGMpKX1pZighcnx8XCJvYmplY3RcIiE9dHlwZW9mIHIpe2lmKHZvaWQgMD09PShmPWkocikpJiYoZj1yKSxmPT09SCYmKGY9dm9pZCAwKSxlLkYmJmQoZiwhMCksbyl7dmFyIHA9W10sbD1bXTtiKFwiUGF0Y2hlc1wiKS5NKHIsZixwLGwpLG8ocCxsKX1yZXR1cm4gZn1uKDIxLHIpfSx0aGlzLnByb2R1Y2VXaXRoUGF0Y2hlcz1mdW5jdGlvbihuLHIpe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG4pcmV0dXJuIGZ1bmN0aW9uKHIpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLGk9QXJyYXkodD4xP3QtMTowKSxvPTE7bzx0O28rKylpW28tMV09YXJndW1lbnRzW29dO3JldHVybiBlLnByb2R1Y2VXaXRoUGF0Y2hlcyhyLChmdW5jdGlvbihyKXtyZXR1cm4gbi5hcHBseSh2b2lkIDAsW3JdLmNvbmNhdChpKSl9KSl9O3ZhciB0LGksbz1lLnByb2R1Y2UobixyLChmdW5jdGlvbihuLHIpe3Q9bixpPXJ9KSk7cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFByb21pc2UmJm8gaW5zdGFuY2VvZiBQcm9taXNlP28udGhlbigoZnVuY3Rpb24obil7cmV0dXJuW24sdCxpXX0pKTpbbyx0LGldfSxcImJvb2xlYW5cIj09dHlwZW9mKG51bGw9PXI/dm9pZCAwOnIudXNlUHJveGllcykmJnRoaXMuc2V0VXNlUHJveGllcyhyLnVzZVByb3hpZXMpLFwiYm9vbGVhblwiPT10eXBlb2YobnVsbD09cj92b2lkIDA6ci5hdXRvRnJlZXplKSYmdGhpcy5zZXRBdXRvRnJlZXplKHIuYXV0b0ZyZWV6ZSl9dmFyIGk9ZS5wcm90b3R5cGU7cmV0dXJuIGkuY3JlYXRlRHJhZnQ9ZnVuY3Rpb24oZSl7dChlKXx8big4KSxyKGUpJiYoZT1EKGUpKTt2YXIgaT13KHRoaXMpLG89Uih0aGlzLGUsdm9pZCAwKTtyZXR1cm4gb1tRXS5DPSEwLGcoaSksb30saS5maW5pc2hEcmFmdD1mdW5jdGlvbihyLHQpe3ZhciBlPXImJnJbUV07XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKGUmJmUuQ3x8big5KSxlLkkmJm4oMTApKTt2YXIgaT1lLkE7cmV0dXJuIGooaSx0KSxQKHZvaWQgMCxpKX0saS5zZXRBdXRvRnJlZXplPWZ1bmN0aW9uKG4pe3RoaXMuRj1ufSxpLnNldFVzZVByb3hpZXM9ZnVuY3Rpb24ocil7ciYmIUImJm4oMjApLHRoaXMuZz1yfSxpLmFwcGx5UGF0Y2hlcz1mdW5jdGlvbihuLHQpe3ZhciBlO2ZvcihlPXQubGVuZ3RoLTE7ZT49MDtlLS0pe3ZhciBpPXRbZV07aWYoMD09PWkucGF0aC5sZW5ndGgmJlwicmVwbGFjZVwiPT09aS5vcCl7bj1pLnZhbHVlO2JyZWFrfX1lPi0xJiYodD10LnNsaWNlKGUrMSkpO3ZhciBvPWIoXCJQYXRjaGVzXCIpLiQ7cmV0dXJuIHIobik/byhuLHQpOnRoaXMucHJvZHVjZShuLChmdW5jdGlvbihuKXtyZXR1cm4gbyhuLHQpfSkpfSxlfSgpLGFuPW5ldyB1bixmbj1hbi5wcm9kdWNlLGNuPWFuLnByb2R1Y2VXaXRoUGF0Y2hlcy5iaW5kKGFuKSxzbj1hbi5zZXRBdXRvRnJlZXplLmJpbmQoYW4pLHZuPWFuLnNldFVzZVByb3hpZXMuYmluZChhbikscG49YW4uYXBwbHlQYXRjaGVzLmJpbmQoYW4pLGxuPWFuLmNyZWF0ZURyYWZ0LmJpbmQoYW4pLGRuPWFuLmZpbmlzaERyYWZ0LmJpbmQoYW4pO2V4cG9ydCBkZWZhdWx0IGZuO2V4cG9ydHt1biBhcyBJbW1lcixwbiBhcyBhcHBseVBhdGNoZXMsSyBhcyBjYXN0RHJhZnQsJCBhcyBjYXN0SW1tdXRhYmxlLGxuIGFzIGNyZWF0ZURyYWZ0LEQgYXMgY3VycmVudCxKIGFzIGVuYWJsZUFsbFBsdWdpbnMsTiBhcyBlbmFibGVFUzUsQyBhcyBlbmFibGVNYXBTZXQsVCBhcyBlbmFibGVQYXRjaGVzLGRuIGFzIGZpbmlzaERyYWZ0LGQgYXMgZnJlZXplLEwgYXMgaW1tZXJhYmxlLHIgYXMgaXNEcmFmdCx0IGFzIGlzRHJhZnRhYmxlLEggYXMgbm90aGluZyxlIGFzIG9yaWdpbmFsLGZuIGFzIHByb2R1Y2UsY24gYXMgcHJvZHVjZVdpdGhQYXRjaGVzLHNuIGFzIHNldEF1dG9GcmVlemUsdm4gYXMgc2V0VXNlUHJveGllc307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbW1lci5lc20uanMubWFwXG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn0iLCJpbXBvcnQgZGVmaW5lUHJvcGVydHkgZnJvbSBcIi4vZGVmaW5lUHJvcGVydHkuanNcIjtcblxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7XG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTtcblxuICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgIHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpO1xuICAgIGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkge1xuICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7XG4gICAgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7XG4gIH1cblxuICByZXR1cm4ga2V5cztcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFNwcmVhZDIodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IG51bGwgIT0gYXJndW1lbnRzW2ldID8gYXJndW1lbnRzW2ldIDoge307XG4gICAgaSAlIDIgPyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pO1xuICAgIH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwiaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMic7XG5cbi8qKlxuICogQWRhcHRlZCBmcm9tIFJlYWN0OiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi9tYXN0ZXIvcGFja2FnZXMvc2hhcmVkL2Zvcm1hdFByb2RFcnJvck1lc3NhZ2UuanNcbiAqXG4gKiBEbyBub3QgcmVxdWlyZSB0aGlzIG1vZHVsZSBkaXJlY3RseSEgVXNlIG5vcm1hbCB0aHJvdyBlcnJvciBjYWxscy4gVGhlc2UgbWVzc2FnZXMgd2lsbCBiZSByZXBsYWNlZCB3aXRoIGVycm9yIGNvZGVzXG4gKiBkdXJpbmcgYnVpbGQuXG4gKiBAcGFyYW0ge251bWJlcn0gY29kZVxuICovXG5mdW5jdGlvbiBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKGNvZGUpIHtcbiAgcmV0dXJuIFwiTWluaWZpZWQgUmVkdXggZXJyb3IgI1wiICsgY29kZSArIFwiOyB2aXNpdCBodHRwczovL3JlZHV4LmpzLm9yZy9FcnJvcnM/Y29kZT1cIiArIGNvZGUgKyBcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciBcIiArICd1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzLiAnO1xufVxuXG4vLyBJbmxpbmVkIHZlcnNpb24gb2YgdGhlIGBzeW1ib2wtb2JzZXJ2YWJsZWAgcG9seWZpbGxcbnZhciAkJG9ic2VydmFibGUgPSAoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wub2JzZXJ2YWJsZSB8fCAnQEBvYnNlcnZhYmxlJztcbn0pKCk7XG5cbi8qKlxuICogVGhlc2UgYXJlIHByaXZhdGUgYWN0aW9uIHR5cGVzIHJlc2VydmVkIGJ5IFJlZHV4LlxuICogRm9yIGFueSB1bmtub3duIGFjdGlvbnMsIHlvdSBtdXN0IHJldHVybiB0aGUgY3VycmVudCBzdGF0ZS5cbiAqIElmIHRoZSBjdXJyZW50IHN0YXRlIGlzIHVuZGVmaW5lZCwgeW91IG11c3QgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLlxuICogRG8gbm90IHJlZmVyZW5jZSB0aGVzZSBhY3Rpb24gdHlwZXMgZGlyZWN0bHkgaW4geW91ciBjb2RlLlxuICovXG52YXIgcmFuZG9tU3RyaW5nID0gZnVuY3Rpb24gcmFuZG9tU3RyaW5nKCkge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDcpLnNwbGl0KCcnKS5qb2luKCcuJyk7XG59O1xuXG52YXIgQWN0aW9uVHlwZXMgPSB7XG4gIElOSVQ6IFwiQEByZWR1eC9JTklUXCIgKyByYW5kb21TdHJpbmcoKSxcbiAgUkVQTEFDRTogXCJAQHJlZHV4L1JFUExBQ0VcIiArIHJhbmRvbVN0cmluZygpLFxuICBQUk9CRV9VTktOT1dOX0FDVElPTjogZnVuY3Rpb24gUFJPQkVfVU5LTk9XTl9BQ1RJT04oKSB7XG4gICAgcmV0dXJuIFwiQEByZWR1eC9QUk9CRV9VTktOT1dOX0FDVElPTlwiICsgcmFuZG9tU3RyaW5nKCk7XG4gIH1cbn07XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IG9iaiBUaGUgb2JqZWN0IHRvIGluc3BlY3QuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgYXJndW1lbnQgYXBwZWFycyB0byBiZSBhIHBsYWluIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gaXNQbGFpbk9iamVjdChvYmopIHtcbiAgaWYgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnIHx8IG9iaiA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuICB2YXIgcHJvdG8gPSBvYmo7XG5cbiAgd2hpbGUgKE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90bykgIT09IG51bGwpIHtcbiAgICBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90byk7XG4gIH1cblxuICByZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaikgPT09IHByb3RvO1xufVxuXG4vLyBJbmxpbmVkIC8gc2hvcnRlbmVkIHZlcnNpb24gb2YgYGtpbmRPZmAgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vam9uc2NobGlua2VydC9raW5kLW9mXG5mdW5jdGlvbiBtaW5pS2luZE9mKHZhbCkge1xuICBpZiAodmFsID09PSB2b2lkIDApIHJldHVybiAndW5kZWZpbmVkJztcbiAgaWYgKHZhbCA9PT0gbnVsbCkgcmV0dXJuICdudWxsJztcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsO1xuXG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgY2FzZSAnbnVtYmVyJzpcbiAgICBjYXNlICdzeW1ib2wnOlxuICAgIGNhc2UgJ2Z1bmN0aW9uJzpcbiAgICAgIHtcbiAgICAgICAgcmV0dXJuIHR5cGU7XG4gICAgICB9XG4gIH1cblxuICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSByZXR1cm4gJ2FycmF5JztcbiAgaWYgKGlzRGF0ZSh2YWwpKSByZXR1cm4gJ2RhdGUnO1xuICBpZiAoaXNFcnJvcih2YWwpKSByZXR1cm4gJ2Vycm9yJztcbiAgdmFyIGNvbnN0cnVjdG9yTmFtZSA9IGN0b3JOYW1lKHZhbCk7XG5cbiAgc3dpdGNoIChjb25zdHJ1Y3Rvck5hbWUpIHtcbiAgICBjYXNlICdTeW1ib2wnOlxuICAgIGNhc2UgJ1Byb21pc2UnOlxuICAgIGNhc2UgJ1dlYWtNYXAnOlxuICAgIGNhc2UgJ1dlYWtTZXQnOlxuICAgIGNhc2UgJ01hcCc6XG4gICAgY2FzZSAnU2V0JzpcbiAgICAgIHJldHVybiBjb25zdHJ1Y3Rvck5hbWU7XG4gIH0gLy8gb3RoZXJcblxuXG4gIHJldHVybiB0eXBlLnNsaWNlKDgsIC0xKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1xccy9nLCAnJyk7XG59XG5cbmZ1bmN0aW9uIGN0b3JOYW1lKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbC5jb25zdHJ1Y3RvciA9PT0gJ2Z1bmN0aW9uJyA/IHZhbC5jb25zdHJ1Y3Rvci5uYW1lIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gaXNFcnJvcih2YWwpIHtcbiAgcmV0dXJuIHZhbCBpbnN0YW5jZW9mIEVycm9yIHx8IHR5cGVvZiB2YWwubWVzc2FnZSA9PT0gJ3N0cmluZycgJiYgdmFsLmNvbnN0cnVjdG9yICYmIHR5cGVvZiB2YWwuY29uc3RydWN0b3Iuc3RhY2tUcmFjZUxpbWl0ID09PSAnbnVtYmVyJztcbn1cblxuZnVuY3Rpb24gaXNEYXRlKHZhbCkge1xuICBpZiAodmFsIGluc3RhbmNlb2YgRGF0ZSkgcmV0dXJuIHRydWU7XG4gIHJldHVybiB0eXBlb2YgdmFsLnRvRGF0ZVN0cmluZyA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgdmFsLmdldERhdGUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIHZhbC5zZXREYXRlID09PSAnZnVuY3Rpb24nO1xufVxuXG5mdW5jdGlvbiBraW5kT2YodmFsKSB7XG4gIHZhciB0eXBlT2ZWYWwgPSB0eXBlb2YgdmFsO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdHlwZU9mVmFsID0gbWluaUtpbmRPZih2YWwpO1xuICB9XG5cbiAgcmV0dXJuIHR5cGVPZlZhbDtcbn1cblxuLyoqXG4gKiBAZGVwcmVjYXRlZFxuICpcbiAqICoqV2UgcmVjb21tZW5kIHVzaW5nIHRoZSBgY29uZmlndXJlU3RvcmVgIG1ldGhvZFxuICogb2YgdGhlIGBAcmVkdXhqcy90b29sa2l0YCBwYWNrYWdlKiosIHdoaWNoIHJlcGxhY2VzIGBjcmVhdGVTdG9yZWAuXG4gKlxuICogUmVkdXggVG9vbGtpdCBpcyBvdXIgcmVjb21tZW5kZWQgYXBwcm9hY2ggZm9yIHdyaXRpbmcgUmVkdXggbG9naWMgdG9kYXksXG4gKiBpbmNsdWRpbmcgc3RvcmUgc2V0dXAsIHJlZHVjZXJzLCBkYXRhIGZldGNoaW5nLCBhbmQgbW9yZS5cbiAqXG4gKiAqKkZvciBtb3JlIGRldGFpbHMsIHBsZWFzZSByZWFkIHRoaXMgUmVkdXggZG9jcyBwYWdlOioqXG4gKiAqKmh0dHBzOi8vcmVkdXguanMub3JnL2ludHJvZHVjdGlvbi93aHktcnRrLWlzLXJlZHV4LXRvZGF5KipcbiAqXG4gKiBgY29uZmlndXJlU3RvcmVgIGZyb20gUmVkdXggVG9vbGtpdCBpcyBhbiBpbXByb3ZlZCB2ZXJzaW9uIG9mIGBjcmVhdGVTdG9yZWAgdGhhdFxuICogc2ltcGxpZmllcyBzZXR1cCBhbmQgaGVscHMgYXZvaWQgY29tbW9uIGJ1Z3MuXG4gKlxuICogWW91IHNob3VsZCBub3QgYmUgdXNpbmcgdGhlIGByZWR1eGAgY29yZSBwYWNrYWdlIGJ5IGl0c2VsZiB0b2RheSwgZXhjZXB0IGZvciBsZWFybmluZyBwdXJwb3Nlcy5cbiAqIFRoZSBgY3JlYXRlU3RvcmVgIG1ldGhvZCBmcm9tIHRoZSBjb3JlIGByZWR1eGAgcGFja2FnZSB3aWxsIG5vdCBiZSByZW1vdmVkLCBidXQgd2UgZW5jb3VyYWdlXG4gKiBhbGwgdXNlcnMgdG8gbWlncmF0ZSB0byB1c2luZyBSZWR1eCBUb29sa2l0IGZvciBhbGwgUmVkdXggY29kZS5cbiAqXG4gKiBJZiB5b3Ugd2FudCB0byB1c2UgYGNyZWF0ZVN0b3JlYCB3aXRob3V0IHRoaXMgdmlzdWFsIGRlcHJlY2F0aW9uIHdhcm5pbmcsIHVzZVxuICogdGhlIGBsZWdhY3lfY3JlYXRlU3RvcmVgIGltcG9ydCBpbnN0ZWFkOlxuICpcbiAqIGBpbXBvcnQgeyBsZWdhY3lfY3JlYXRlU3RvcmUgYXMgY3JlYXRlU3RvcmV9IGZyb20gJ3JlZHV4J2BcbiAqXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlU3RvcmUocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUsIGVuaGFuY2VyKSB7XG4gIHZhciBfcmVmMjtcblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgZW5oYW5jZXIgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGFyZ3VtZW50c1szXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDApIDogJ0l0IGxvb2tzIGxpa2UgeW91IGFyZSBwYXNzaW5nIHNldmVyYWwgc3RvcmUgZW5oYW5jZXJzIHRvICcgKyAnY3JlYXRlU3RvcmUoKS4gVGhpcyBpcyBub3Qgc3VwcG9ydGVkLiBJbnN0ZWFkLCBjb21wb3NlIHRoZW0gJyArICd0b2dldGhlciB0byBhIHNpbmdsZSBmdW5jdGlvbi4gU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL3R1dG9yaWFscy9mdW5kYW1lbnRhbHMvcGFydC00LXN0b3JlI2NyZWF0aW5nLWEtc3RvcmUtd2l0aC1lbmhhbmNlcnMgZm9yIGFuIGV4YW1wbGUuJyk7XG4gIH1cblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBlbmhhbmNlciA9IHByZWxvYWRlZFN0YXRlO1xuICAgIHByZWxvYWRlZFN0YXRlID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBlbmhhbmNlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBpZiAodHlwZW9mIGVuaGFuY2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxKSA6IFwiRXhwZWN0ZWQgdGhlIGVuaGFuY2VyIHRvIGJlIGEgZnVuY3Rpb24uIEluc3RlYWQsIHJlY2VpdmVkOiAnXCIgKyBraW5kT2YoZW5oYW5jZXIpICsgXCInXCIpO1xuICAgIH1cblxuICAgIHJldHVybiBlbmhhbmNlcihjcmVhdGVTdG9yZSkocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiByZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMikgOiBcIkV4cGVjdGVkIHRoZSByb290IHJlZHVjZXIgdG8gYmUgYSBmdW5jdGlvbi4gSW5zdGVhZCwgcmVjZWl2ZWQ6ICdcIiArIGtpbmRPZihyZWR1Y2VyKSArIFwiJ1wiKTtcbiAgfVxuXG4gIHZhciBjdXJyZW50UmVkdWNlciA9IHJlZHVjZXI7XG4gIHZhciBjdXJyZW50U3RhdGUgPSBwcmVsb2FkZWRTdGF0ZTtcbiAgdmFyIGN1cnJlbnRMaXN0ZW5lcnMgPSBbXTtcbiAgdmFyIG5leHRMaXN0ZW5lcnMgPSBjdXJyZW50TGlzdGVuZXJzO1xuICB2YXIgaXNEaXNwYXRjaGluZyA9IGZhbHNlO1xuICAvKipcbiAgICogVGhpcyBtYWtlcyBhIHNoYWxsb3cgY29weSBvZiBjdXJyZW50TGlzdGVuZXJzIHNvIHdlIGNhbiB1c2VcbiAgICogbmV4dExpc3RlbmVycyBhcyBhIHRlbXBvcmFyeSBsaXN0IHdoaWxlIGRpc3BhdGNoaW5nLlxuICAgKlxuICAgKiBUaGlzIHByZXZlbnRzIGFueSBidWdzIGFyb3VuZCBjb25zdW1lcnMgY2FsbGluZ1xuICAgKiBzdWJzY3JpYmUvdW5zdWJzY3JpYmUgaW4gdGhlIG1pZGRsZSBvZiBhIGRpc3BhdGNoLlxuICAgKi9cblxuICBmdW5jdGlvbiBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCkge1xuICAgIGlmIChuZXh0TGlzdGVuZXJzID09PSBjdXJyZW50TGlzdGVuZXJzKSB7XG4gICAgICBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycy5zbGljZSgpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogUmVhZHMgdGhlIHN0YXRlIHRyZWUgbWFuYWdlZCBieSB0aGUgc3RvcmUuXG4gICAqXG4gICAqIEByZXR1cm5zIHthbnl9IFRoZSBjdXJyZW50IHN0YXRlIHRyZWUgb2YgeW91ciBhcHBsaWNhdGlvbi5cbiAgICovXG5cblxuICBmdW5jdGlvbiBnZXRTdGF0ZSgpIHtcbiAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMykgOiAnWW91IG1heSBub3QgY2FsbCBzdG9yZS5nZXRTdGF0ZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdUaGUgcmVkdWNlciBoYXMgYWxyZWFkeSByZWNlaXZlZCB0aGUgc3RhdGUgYXMgYW4gYXJndW1lbnQuICcgKyAnUGFzcyBpdCBkb3duIGZyb20gdGhlIHRvcCByZWR1Y2VyIGluc3RlYWQgb2YgcmVhZGluZyBpdCBmcm9tIHRoZSBzdG9yZS4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY3VycmVudFN0YXRlO1xuICB9XG4gIC8qKlxuICAgKiBBZGRzIGEgY2hhbmdlIGxpc3RlbmVyLiBJdCB3aWxsIGJlIGNhbGxlZCBhbnkgdGltZSBhbiBhY3Rpb24gaXMgZGlzcGF0Y2hlZCxcbiAgICogYW5kIHNvbWUgcGFydCBvZiB0aGUgc3RhdGUgdHJlZSBtYXkgcG90ZW50aWFsbHkgaGF2ZSBjaGFuZ2VkLiBZb3UgbWF5IHRoZW5cbiAgICogY2FsbCBgZ2V0U3RhdGUoKWAgdG8gcmVhZCB0aGUgY3VycmVudCBzdGF0ZSB0cmVlIGluc2lkZSB0aGUgY2FsbGJhY2suXG4gICAqXG4gICAqIFlvdSBtYXkgY2FsbCBgZGlzcGF0Y2goKWAgZnJvbSBhIGNoYW5nZSBsaXN0ZW5lciwgd2l0aCB0aGUgZm9sbG93aW5nXG4gICAqIGNhdmVhdHM6XG4gICAqXG4gICAqIDEuIFRoZSBzdWJzY3JpcHRpb25zIGFyZSBzbmFwc2hvdHRlZCBqdXN0IGJlZm9yZSBldmVyeSBgZGlzcGF0Y2goKWAgY2FsbC5cbiAgICogSWYgeW91IHN1YnNjcmliZSBvciB1bnN1YnNjcmliZSB3aGlsZSB0aGUgbGlzdGVuZXJzIGFyZSBiZWluZyBpbnZva2VkLCB0aGlzXG4gICAqIHdpbGwgbm90IGhhdmUgYW55IGVmZmVjdCBvbiB0aGUgYGRpc3BhdGNoKClgIHRoYXQgaXMgY3VycmVudGx5IGluIHByb2dyZXNzLlxuICAgKiBIb3dldmVyLCB0aGUgbmV4dCBgZGlzcGF0Y2goKWAgY2FsbCwgd2hldGhlciBuZXN0ZWQgb3Igbm90LCB3aWxsIHVzZSBhIG1vcmVcbiAgICogcmVjZW50IHNuYXBzaG90IG9mIHRoZSBzdWJzY3JpcHRpb24gbGlzdC5cbiAgICpcbiAgICogMi4gVGhlIGxpc3RlbmVyIHNob3VsZCBub3QgZXhwZWN0IHRvIHNlZSBhbGwgc3RhdGUgY2hhbmdlcywgYXMgdGhlIHN0YXRlXG4gICAqIG1pZ2h0IGhhdmUgYmVlbiB1cGRhdGVkIG11bHRpcGxlIHRpbWVzIGR1cmluZyBhIG5lc3RlZCBgZGlzcGF0Y2goKWAgYmVmb3JlXG4gICAqIHRoZSBsaXN0ZW5lciBpcyBjYWxsZWQuIEl0IGlzLCBob3dldmVyLCBndWFyYW50ZWVkIHRoYXQgYWxsIHN1YnNjcmliZXJzXG4gICAqIHJlZ2lzdGVyZWQgYmVmb3JlIHRoZSBgZGlzcGF0Y2goKWAgc3RhcnRlZCB3aWxsIGJlIGNhbGxlZCB3aXRoIHRoZSBsYXRlc3RcbiAgICogc3RhdGUgYnkgdGhlIHRpbWUgaXQgZXhpdHMuXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGxpc3RlbmVyIEEgY2FsbGJhY2sgdG8gYmUgaW52b2tlZCBvbiBldmVyeSBkaXNwYXRjaC5cbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGZ1bmN0aW9uIHRvIHJlbW92ZSB0aGlzIGNoYW5nZSBsaXN0ZW5lci5cbiAgICovXG5cblxuICBmdW5jdGlvbiBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICBpZiAodHlwZW9mIGxpc3RlbmVyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSg0KSA6IFwiRXhwZWN0ZWQgdGhlIGxpc3RlbmVyIHRvIGJlIGEgZnVuY3Rpb24uIEluc3RlYWQsIHJlY2VpdmVkOiAnXCIgKyBraW5kT2YobGlzdGVuZXIpICsgXCInXCIpO1xuICAgIH1cblxuICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSg1KSA6ICdZb3UgbWF5IG5vdCBjYWxsIHN0b3JlLnN1YnNjcmliZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdJZiB5b3Ugd291bGQgbGlrZSB0byBiZSBub3RpZmllZCBhZnRlciB0aGUgc3RvcmUgaGFzIGJlZW4gdXBkYXRlZCwgc3Vic2NyaWJlIGZyb20gYSAnICsgJ2NvbXBvbmVudCBhbmQgaW52b2tlIHN0b3JlLmdldFN0YXRlKCkgaW4gdGhlIGNhbGxiYWNrIHRvIGFjY2VzcyB0aGUgbGF0ZXN0IHN0YXRlLiAnICsgJ1NlZSBodHRwczovL3JlZHV4LmpzLm9yZy9hcGkvc3RvcmUjc3Vic2NyaWJlbGlzdGVuZXIgZm9yIG1vcmUgZGV0YWlscy4nKTtcbiAgICB9XG5cbiAgICB2YXIgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcbiAgICBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCk7XG4gICAgbmV4dExpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7XG4gICAgICBpZiAoIWlzU3Vic2NyaWJlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDYpIDogJ1lvdSBtYXkgbm90IHVuc3Vic2NyaWJlIGZyb20gYSBzdG9yZSBsaXN0ZW5lciB3aGlsZSB0aGUgcmVkdWNlciBpcyBleGVjdXRpbmcuICcgKyAnU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL2FwaS9zdG9yZSNzdWJzY3JpYmVsaXN0ZW5lciBmb3IgbW9yZSBkZXRhaWxzLicpO1xuICAgICAgfVxuXG4gICAgICBpc1N1YnNjcmliZWQgPSBmYWxzZTtcbiAgICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICAgIHZhciBpbmRleCA9IG5leHRMaXN0ZW5lcnMuaW5kZXhPZihsaXN0ZW5lcik7XG4gICAgICBuZXh0TGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICBjdXJyZW50TGlzdGVuZXJzID0gbnVsbDtcbiAgICB9O1xuICB9XG4gIC8qKlxuICAgKiBEaXNwYXRjaGVzIGFuIGFjdGlvbi4gSXQgaXMgdGhlIG9ubHkgd2F5IHRvIHRyaWdnZXIgYSBzdGF0ZSBjaGFuZ2UuXG4gICAqXG4gICAqIFRoZSBgcmVkdWNlcmAgZnVuY3Rpb24sIHVzZWQgdG8gY3JlYXRlIHRoZSBzdG9yZSwgd2lsbCBiZSBjYWxsZWQgd2l0aCB0aGVcbiAgICogY3VycmVudCBzdGF0ZSB0cmVlIGFuZCB0aGUgZ2l2ZW4gYGFjdGlvbmAuIEl0cyByZXR1cm4gdmFsdWUgd2lsbFxuICAgKiBiZSBjb25zaWRlcmVkIHRoZSAqKm5leHQqKiBzdGF0ZSBvZiB0aGUgdHJlZSwgYW5kIHRoZSBjaGFuZ2UgbGlzdGVuZXJzXG4gICAqIHdpbGwgYmUgbm90aWZpZWQuXG4gICAqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9ubHkgc3VwcG9ydHMgcGxhaW4gb2JqZWN0IGFjdGlvbnMuIElmIHlvdSB3YW50IHRvXG4gICAqIGRpc3BhdGNoIGEgUHJvbWlzZSwgYW4gT2JzZXJ2YWJsZSwgYSB0aHVuaywgb3Igc29tZXRoaW5nIGVsc2UsIHlvdSBuZWVkIHRvXG4gICAqIHdyYXAgeW91ciBzdG9yZSBjcmVhdGluZyBmdW5jdGlvbiBpbnRvIHRoZSBjb3JyZXNwb25kaW5nIG1pZGRsZXdhcmUuIEZvclxuICAgKiBleGFtcGxlLCBzZWUgdGhlIGRvY3VtZW50YXRpb24gZm9yIHRoZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UuIEV2ZW4gdGhlXG4gICAqIG1pZGRsZXdhcmUgd2lsbCBldmVudHVhbGx5IGRpc3BhdGNoIHBsYWluIG9iamVjdCBhY3Rpb25zIHVzaW5nIHRoaXMgbWV0aG9kLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gYWN0aW9uIEEgcGxhaW4gb2JqZWN0IHJlcHJlc2VudGluZyDigJx3aGF0IGNoYW5nZWTigJ0uIEl0IGlzXG4gICAqIGEgZ29vZCBpZGVhIHRvIGtlZXAgYWN0aW9ucyBzZXJpYWxpemFibGUgc28geW91IGNhbiByZWNvcmQgYW5kIHJlcGxheSB1c2VyXG4gICAqIHNlc3Npb25zLCBvciB1c2UgdGhlIHRpbWUgdHJhdmVsbGluZyBgcmVkdXgtZGV2dG9vbHNgLiBBbiBhY3Rpb24gbXVzdCBoYXZlXG4gICAqIGEgYHR5cGVgIHByb3BlcnR5IHdoaWNoIG1heSBub3QgYmUgYHVuZGVmaW5lZGAuIEl0IGlzIGEgZ29vZCBpZGVhIHRvIHVzZVxuICAgKiBzdHJpbmcgY29uc3RhbnRzIGZvciBhY3Rpb24gdHlwZXMuXG4gICAqXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IEZvciBjb252ZW5pZW5jZSwgdGhlIHNhbWUgYWN0aW9uIG9iamVjdCB5b3UgZGlzcGF0Y2hlZC5cbiAgICpcbiAgICogTm90ZSB0aGF0LCBpZiB5b3UgdXNlIGEgY3VzdG9tIG1pZGRsZXdhcmUsIGl0IG1heSB3cmFwIGBkaXNwYXRjaCgpYCB0b1xuICAgKiByZXR1cm4gc29tZXRoaW5nIGVsc2UgKGZvciBleGFtcGxlLCBhIFByb21pc2UgeW91IGNhbiBhd2FpdCkuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gZGlzcGF0Y2goYWN0aW9uKSB7XG4gICAgaWYgKCFpc1BsYWluT2JqZWN0KGFjdGlvbikpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDcpIDogXCJBY3Rpb25zIG11c3QgYmUgcGxhaW4gb2JqZWN0cy4gSW5zdGVhZCwgdGhlIGFjdHVhbCB0eXBlIHdhczogJ1wiICsga2luZE9mKGFjdGlvbikgKyBcIicuIFlvdSBtYXkgbmVlZCB0byBhZGQgbWlkZGxld2FyZSB0byB5b3VyIHN0b3JlIHNldHVwIHRvIGhhbmRsZSBkaXNwYXRjaGluZyBvdGhlciB2YWx1ZXMsIHN1Y2ggYXMgJ3JlZHV4LXRodW5rJyB0byBoYW5kbGUgZGlzcGF0Y2hpbmcgZnVuY3Rpb25zLiBTZWUgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvdHV0b3JpYWxzL2Z1bmRhbWVudGFscy9wYXJ0LTQtc3RvcmUjbWlkZGxld2FyZSBhbmQgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvdHV0b3JpYWxzL2Z1bmRhbWVudGFscy9wYXJ0LTYtYXN5bmMtbG9naWMjdXNpbmctdGhlLXJlZHV4LXRodW5rLW1pZGRsZXdhcmUgZm9yIGV4YW1wbGVzLlwiKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbi50eXBlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoOCkgOiAnQWN0aW9ucyBtYXkgbm90IGhhdmUgYW4gdW5kZWZpbmVkIFwidHlwZVwiIHByb3BlcnR5LiBZb3UgbWF5IGhhdmUgbWlzc3BlbGxlZCBhbiBhY3Rpb24gdHlwZSBzdHJpbmcgY29uc3RhbnQuJyk7XG4gICAgfVxuXG4gICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDkpIDogJ1JlZHVjZXJzIG1heSBub3QgZGlzcGF0Y2ggYWN0aW9ucy4nKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgaXNEaXNwYXRjaGluZyA9IHRydWU7XG4gICAgICBjdXJyZW50U3RhdGUgPSBjdXJyZW50UmVkdWNlcihjdXJyZW50U3RhdGUsIGFjdGlvbik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgbGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycyA9IG5leHRMaXN0ZW5lcnM7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGxpc3RlbmVyID0gbGlzdGVuZXJzW2ldO1xuICAgICAgbGlzdGVuZXIoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWN0aW9uO1xuICB9XG4gIC8qKlxuICAgKiBSZXBsYWNlcyB0aGUgcmVkdWNlciBjdXJyZW50bHkgdXNlZCBieSB0aGUgc3RvcmUgdG8gY2FsY3VsYXRlIHRoZSBzdGF0ZS5cbiAgICpcbiAgICogWW91IG1pZ2h0IG5lZWQgdGhpcyBpZiB5b3VyIGFwcCBpbXBsZW1lbnRzIGNvZGUgc3BsaXR0aW5nIGFuZCB5b3Ugd2FudCB0b1xuICAgKiBsb2FkIHNvbWUgb2YgdGhlIHJlZHVjZXJzIGR5bmFtaWNhbGx5LiBZb3UgbWlnaHQgYWxzbyBuZWVkIHRoaXMgaWYgeW91XG4gICAqIGltcGxlbWVudCBhIGhvdCByZWxvYWRpbmcgbWVjaGFuaXNtIGZvciBSZWR1eC5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gbmV4dFJlZHVjZXIgVGhlIHJlZHVjZXIgZm9yIHRoZSBzdG9yZSB0byB1c2UgaW5zdGVhZC5cbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gcmVwbGFjZVJlZHVjZXIobmV4dFJlZHVjZXIpIHtcbiAgICBpZiAodHlwZW9mIG5leHRSZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxMCkgOiBcIkV4cGVjdGVkIHRoZSBuZXh0UmVkdWNlciB0byBiZSBhIGZ1bmN0aW9uLiBJbnN0ZWFkLCByZWNlaXZlZDogJ1wiICsga2luZE9mKG5leHRSZWR1Y2VyKSk7XG4gICAgfVxuXG4gICAgY3VycmVudFJlZHVjZXIgPSBuZXh0UmVkdWNlcjsgLy8gVGhpcyBhY3Rpb24gaGFzIGEgc2ltaWxpYXIgZWZmZWN0IHRvIEFjdGlvblR5cGVzLklOSVQuXG4gICAgLy8gQW55IHJlZHVjZXJzIHRoYXQgZXhpc3RlZCBpbiBib3RoIHRoZSBuZXcgYW5kIG9sZCByb290UmVkdWNlclxuICAgIC8vIHdpbGwgcmVjZWl2ZSB0aGUgcHJldmlvdXMgc3RhdGUuIFRoaXMgZWZmZWN0aXZlbHkgcG9wdWxhdGVzXG4gICAgLy8gdGhlIG5ldyBzdGF0ZSB0cmVlIHdpdGggYW55IHJlbGV2YW50IGRhdGEgZnJvbSB0aGUgb2xkIG9uZS5cblxuICAgIGRpc3BhdGNoKHtcbiAgICAgIHR5cGU6IEFjdGlvblR5cGVzLlJFUExBQ0VcbiAgICB9KTtcbiAgfVxuICAvKipcbiAgICogSW50ZXJvcGVyYWJpbGl0eSBwb2ludCBmb3Igb2JzZXJ2YWJsZS9yZWFjdGl2ZSBsaWJyYXJpZXMuXG4gICAqIEByZXR1cm5zIHtvYnNlcnZhYmxlfSBBIG1pbmltYWwgb2JzZXJ2YWJsZSBvZiBzdGF0ZSBjaGFuZ2VzLlxuICAgKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBvYnNlcnZhYmxlIHByb3Bvc2FsOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYnNlcnZhYmxlXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gb2JzZXJ2YWJsZSgpIHtcbiAgICB2YXIgX3JlZjtcblxuICAgIHZhciBvdXRlclN1YnNjcmliZSA9IHN1YnNjcmliZTtcbiAgICByZXR1cm4gX3JlZiA9IHtcbiAgICAgIC8qKlxuICAgICAgICogVGhlIG1pbmltYWwgb2JzZXJ2YWJsZSBzdWJzY3JpcHRpb24gbWV0aG9kLlxuICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9ic2VydmVyIEFueSBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCBhcyBhbiBvYnNlcnZlci5cbiAgICAgICAqIFRoZSBvYnNlcnZlciBvYmplY3Qgc2hvdWxkIGhhdmUgYSBgbmV4dGAgbWV0aG9kLlxuICAgICAgICogQHJldHVybnMge3N1YnNjcmlwdGlvbn0gQW4gb2JqZWN0IHdpdGggYW4gYHVuc3Vic2NyaWJlYCBtZXRob2QgdGhhdCBjYW5cbiAgICAgICAqIGJlIHVzZWQgdG8gdW5zdWJzY3JpYmUgdGhlIG9ic2VydmFibGUgZnJvbSB0aGUgc3RvcmUsIGFuZCBwcmV2ZW50IGZ1cnRoZXJcbiAgICAgICAqIGVtaXNzaW9uIG9mIHZhbHVlcyBmcm9tIHRoZSBvYnNlcnZhYmxlLlxuICAgICAgICovXG4gICAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uIHN1YnNjcmliZShvYnNlcnZlcikge1xuICAgICAgICBpZiAodHlwZW9mIG9ic2VydmVyICE9PSAnb2JqZWN0JyB8fCBvYnNlcnZlciA9PT0gbnVsbCkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDExKSA6IFwiRXhwZWN0ZWQgdGhlIG9ic2VydmVyIHRvIGJlIGFuIG9iamVjdC4gSW5zdGVhZCwgcmVjZWl2ZWQ6ICdcIiArIGtpbmRPZihvYnNlcnZlcikgKyBcIidcIik7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBvYnNlcnZlU3RhdGUoKSB7XG4gICAgICAgICAgaWYgKG9ic2VydmVyLm5leHQpIHtcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQoZ2V0U3RhdGUoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgb2JzZXJ2ZVN0YXRlKCk7XG4gICAgICAgIHZhciB1bnN1YnNjcmliZSA9IG91dGVyU3Vic2NyaWJlKG9ic2VydmVTdGF0ZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdW5zdWJzY3JpYmU6IHVuc3Vic2NyaWJlXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSwgX3JlZlskJG9ic2VydmFibGVdID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSwgX3JlZjtcbiAgfSAvLyBXaGVuIGEgc3RvcmUgaXMgY3JlYXRlZCwgYW4gXCJJTklUXCIgYWN0aW9uIGlzIGRpc3BhdGNoZWQgc28gdGhhdCBldmVyeVxuICAvLyByZWR1Y2VyIHJldHVybnMgdGhlaXIgaW5pdGlhbCBzdGF0ZS4gVGhpcyBlZmZlY3RpdmVseSBwb3B1bGF0ZXNcbiAgLy8gdGhlIGluaXRpYWwgc3RhdGUgdHJlZS5cblxuXG4gIGRpc3BhdGNoKHtcbiAgICB0eXBlOiBBY3Rpb25UeXBlcy5JTklUXG4gIH0pO1xuICByZXR1cm4gX3JlZjIgPSB7XG4gICAgZGlzcGF0Y2g6IGRpc3BhdGNoLFxuICAgIHN1YnNjcmliZTogc3Vic2NyaWJlLFxuICAgIGdldFN0YXRlOiBnZXRTdGF0ZSxcbiAgICByZXBsYWNlUmVkdWNlcjogcmVwbGFjZVJlZHVjZXJcbiAgfSwgX3JlZjJbJCRvYnNlcnZhYmxlXSA9IG9ic2VydmFibGUsIF9yZWYyO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgUmVkdXggc3RvcmUgdGhhdCBob2xkcyB0aGUgc3RhdGUgdHJlZS5cbiAqXG4gKiAqKldlIHJlY29tbWVuZCB1c2luZyBgY29uZmlndXJlU3RvcmVgIGZyb20gdGhlXG4gKiBgQHJlZHV4anMvdG9vbGtpdGAgcGFja2FnZSoqLCB3aGljaCByZXBsYWNlcyBgY3JlYXRlU3RvcmVgOlxuICogKipodHRwczovL3JlZHV4LmpzLm9yZy9pbnRyb2R1Y3Rpb24vd2h5LXJ0ay1pcy1yZWR1eC10b2RheSoqXG4gKlxuICogVGhlIG9ubHkgd2F5IHRvIGNoYW5nZSB0aGUgZGF0YSBpbiB0aGUgc3RvcmUgaXMgdG8gY2FsbCBgZGlzcGF0Y2goKWAgb24gaXQuXG4gKlxuICogVGhlcmUgc2hvdWxkIG9ubHkgYmUgYSBzaW5nbGUgc3RvcmUgaW4geW91ciBhcHAuIFRvIHNwZWNpZnkgaG93IGRpZmZlcmVudFxuICogcGFydHMgb2YgdGhlIHN0YXRlIHRyZWUgcmVzcG9uZCB0byBhY3Rpb25zLCB5b3UgbWF5IGNvbWJpbmUgc2V2ZXJhbCByZWR1Y2Vyc1xuICogaW50byBhIHNpbmdsZSByZWR1Y2VyIGZ1bmN0aW9uIGJ5IHVzaW5nIGBjb21iaW5lUmVkdWNlcnNgLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlZHVjZXIgQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIG5leHQgc3RhdGUgdHJlZSwgZ2l2ZW5cbiAqIHRoZSBjdXJyZW50IHN0YXRlIHRyZWUgYW5kIHRoZSBhY3Rpb24gdG8gaGFuZGxlLlxuICpcbiAqIEBwYXJhbSB7YW55fSBbcHJlbG9hZGVkU3RhdGVdIFRoZSBpbml0aWFsIHN0YXRlLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICogdG8gaHlkcmF0ZSB0aGUgc3RhdGUgZnJvbSB0aGUgc2VydmVyIGluIHVuaXZlcnNhbCBhcHBzLCBvciB0byByZXN0b3JlIGFcbiAqIHByZXZpb3VzbHkgc2VyaWFsaXplZCB1c2VyIHNlc3Npb24uXG4gKiBJZiB5b3UgdXNlIGBjb21iaW5lUmVkdWNlcnNgIHRvIHByb2R1Y2UgdGhlIHJvb3QgcmVkdWNlciBmdW5jdGlvbiwgdGhpcyBtdXN0IGJlXG4gKiBhbiBvYmplY3Qgd2l0aCB0aGUgc2FtZSBzaGFwZSBhcyBgY29tYmluZVJlZHVjZXJzYCBrZXlzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtlbmhhbmNlcl0gVGhlIHN0b3JlIGVuaGFuY2VyLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICogdG8gZW5oYW5jZSB0aGUgc3RvcmUgd2l0aCB0aGlyZC1wYXJ0eSBjYXBhYmlsaXRpZXMgc3VjaCBhcyBtaWRkbGV3YXJlLFxuICogdGltZSB0cmF2ZWwsIHBlcnNpc3RlbmNlLCBldGMuIFRoZSBvbmx5IHN0b3JlIGVuaGFuY2VyIHRoYXQgc2hpcHMgd2l0aCBSZWR1eFxuICogaXMgYGFwcGx5TWlkZGxld2FyZSgpYC5cbiAqXG4gKiBAcmV0dXJucyB7U3RvcmV9IEEgUmVkdXggc3RvcmUgdGhhdCBsZXRzIHlvdSByZWFkIHRoZSBzdGF0ZSwgZGlzcGF0Y2ggYWN0aW9uc1xuICogYW5kIHN1YnNjcmliZSB0byBjaGFuZ2VzLlxuICovXG5cbnZhciBsZWdhY3lfY3JlYXRlU3RvcmUgPSBjcmVhdGVTdG9yZTtcblxuLyoqXG4gKiBQcmludHMgYSB3YXJuaW5nIGluIHRoZSBjb25zb2xlIGlmIGl0IGV4aXN0cy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbWVzc2FnZSBUaGUgd2FybmluZyBtZXNzYWdlLlxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmZ1bmN0aW9uIHdhcm5pbmcobWVzc2FnZSkge1xuICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG4gIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGNvbnNvbGUuZXJyb3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xuICB9XG4gIC8qIGVzbGludC1lbmFibGUgbm8tY29uc29sZSAqL1xuXG5cbiAgdHJ5IHtcbiAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IGlmIHlvdSBlbmFibGVcbiAgICAvLyBcImJyZWFrIG9uIGFsbCBleGNlcHRpb25zXCIgaW4geW91ciBjb25zb2xlLFxuICAgIC8vIGl0IHdvdWxkIHBhdXNlIHRoZSBleGVjdXRpb24gYXQgdGhpcyBsaW5lLlxuICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgfSBjYXRjaCAoZSkge30gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1lbXB0eVxuXG59XG5cbmZ1bmN0aW9uIGdldFVuZXhwZWN0ZWRTdGF0ZVNoYXBlV2FybmluZ01lc3NhZ2UoaW5wdXRTdGF0ZSwgcmVkdWNlcnMsIGFjdGlvbiwgdW5leHBlY3RlZEtleUNhY2hlKSB7XG4gIHZhciByZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKHJlZHVjZXJzKTtcbiAgdmFyIGFyZ3VtZW50TmFtZSA9IGFjdGlvbiAmJiBhY3Rpb24udHlwZSA9PT0gQWN0aW9uVHlwZXMuSU5JVCA/ICdwcmVsb2FkZWRTdGF0ZSBhcmd1bWVudCBwYXNzZWQgdG8gY3JlYXRlU3RvcmUnIDogJ3ByZXZpb3VzIHN0YXRlIHJlY2VpdmVkIGJ5IHRoZSByZWR1Y2VyJztcblxuICBpZiAocmVkdWNlcktleXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuICdTdG9yZSBkb2VzIG5vdCBoYXZlIGEgdmFsaWQgcmVkdWNlci4gTWFrZSBzdXJlIHRoZSBhcmd1bWVudCBwYXNzZWQgJyArICd0byBjb21iaW5lUmVkdWNlcnMgaXMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgcmVkdWNlcnMuJztcbiAgfVxuXG4gIGlmICghaXNQbGFpbk9iamVjdChpbnB1dFN0YXRlKSkge1xuICAgIHJldHVybiBcIlRoZSBcIiArIGFyZ3VtZW50TmFtZSArIFwiIGhhcyB1bmV4cGVjdGVkIHR5cGUgb2YgXFxcIlwiICsga2luZE9mKGlucHV0U3RhdGUpICsgXCJcXFwiLiBFeHBlY3RlZCBhcmd1bWVudCB0byBiZSBhbiBvYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIFwiICsgKFwia2V5czogXFxcIlwiICsgcmVkdWNlcktleXMuam9pbignXCIsIFwiJykgKyBcIlxcXCJcIik7XG4gIH1cblxuICB2YXIgdW5leHBlY3RlZEtleXMgPSBPYmplY3Qua2V5cyhpbnB1dFN0YXRlKS5maWx0ZXIoZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiAhcmVkdWNlcnMuaGFzT3duUHJvcGVydHkoa2V5KSAmJiAhdW5leHBlY3RlZEtleUNhY2hlW2tleV07XG4gIH0pO1xuICB1bmV4cGVjdGVkS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICB1bmV4cGVjdGVkS2V5Q2FjaGVba2V5XSA9IHRydWU7XG4gIH0pO1xuICBpZiAoYWN0aW9uICYmIGFjdGlvbi50eXBlID09PSBBY3Rpb25UeXBlcy5SRVBMQUNFKSByZXR1cm47XG5cbiAgaWYgKHVuZXhwZWN0ZWRLZXlzLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gXCJVbmV4cGVjdGVkIFwiICsgKHVuZXhwZWN0ZWRLZXlzLmxlbmd0aCA+IDEgPyAna2V5cycgOiAna2V5JykgKyBcIiBcIiArIChcIlxcXCJcIiArIHVuZXhwZWN0ZWRLZXlzLmpvaW4oJ1wiLCBcIicpICsgXCJcXFwiIGZvdW5kIGluIFwiICsgYXJndW1lbnROYW1lICsgXCIuIFwiKSArIFwiRXhwZWN0ZWQgdG8gZmluZCBvbmUgb2YgdGhlIGtub3duIHJlZHVjZXIga2V5cyBpbnN0ZWFkOiBcIiArIChcIlxcXCJcIiArIHJlZHVjZXJLZXlzLmpvaW4oJ1wiLCBcIicpICsgXCJcXFwiLiBVbmV4cGVjdGVkIGtleXMgd2lsbCBiZSBpZ25vcmVkLlwiKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhc3NlcnRSZWR1Y2VyU2hhcGUocmVkdWNlcnMpIHtcbiAgT2JqZWN0LmtleXMocmVkdWNlcnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciByZWR1Y2VyID0gcmVkdWNlcnNba2V5XTtcbiAgICB2YXIgaW5pdGlhbFN0YXRlID0gcmVkdWNlcih1bmRlZmluZWQsIHtcbiAgICAgIHR5cGU6IEFjdGlvblR5cGVzLklOSVRcbiAgICB9KTtcblxuICAgIGlmICh0eXBlb2YgaW5pdGlhbFN0YXRlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMTIpIDogXCJUaGUgc2xpY2UgcmVkdWNlciBmb3Iga2V5IFxcXCJcIiArIGtleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQgZHVyaW5nIGluaXRpYWxpemF0aW9uLiBcIiArIFwiSWYgdGhlIHN0YXRlIHBhc3NlZCB0byB0aGUgcmVkdWNlciBpcyB1bmRlZmluZWQsIHlvdSBtdXN0IFwiICsgXCJleHBsaWNpdGx5IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZS4gVGhlIGluaXRpYWwgc3RhdGUgbWF5IFwiICsgXCJub3QgYmUgdW5kZWZpbmVkLiBJZiB5b3UgZG9uJ3Qgd2FudCB0byBzZXQgYSB2YWx1ZSBmb3IgdGhpcyByZWR1Y2VyLCBcIiArIFwieW91IGNhbiB1c2UgbnVsbCBpbnN0ZWFkIG9mIHVuZGVmaW5lZC5cIik7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiByZWR1Y2VyKHVuZGVmaW5lZCwge1xuICAgICAgdHlwZTogQWN0aW9uVHlwZXMuUFJPQkVfVU5LTk9XTl9BQ1RJT04oKVxuICAgIH0pID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMTMpIDogXCJUaGUgc2xpY2UgcmVkdWNlciBmb3Iga2V5IFxcXCJcIiArIGtleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQgd2hlbiBwcm9iZWQgd2l0aCBhIHJhbmRvbSB0eXBlLiBcIiArIChcIkRvbid0IHRyeSB0byBoYW5kbGUgJ1wiICsgQWN0aW9uVHlwZXMuSU5JVCArIFwiJyBvciBvdGhlciBhY3Rpb25zIGluIFxcXCJyZWR1eC8qXFxcIiBcIikgKyBcIm5hbWVzcGFjZS4gVGhleSBhcmUgY29uc2lkZXJlZCBwcml2YXRlLiBJbnN0ZWFkLCB5b3UgbXVzdCByZXR1cm4gdGhlIFwiICsgXCJjdXJyZW50IHN0YXRlIGZvciBhbnkgdW5rbm93biBhY3Rpb25zLCB1bmxlc3MgaXQgaXMgdW5kZWZpbmVkLCBcIiArIFwiaW4gd2hpY2ggY2FzZSB5b3UgbXVzdCByZXR1cm4gdGhlIGluaXRpYWwgc3RhdGUsIHJlZ2FyZGxlc3Mgb2YgdGhlIFwiICsgXCJhY3Rpb24gdHlwZS4gVGhlIGluaXRpYWwgc3RhdGUgbWF5IG5vdCBiZSB1bmRlZmluZWQsIGJ1dCBjYW4gYmUgbnVsbC5cIik7XG4gICAgfVxuICB9KTtcbn1cbi8qKlxuICogVHVybnMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgZGlmZmVyZW50IHJlZHVjZXIgZnVuY3Rpb25zLCBpbnRvIGEgc2luZ2xlXG4gKiByZWR1Y2VyIGZ1bmN0aW9uLiBJdCB3aWxsIGNhbGwgZXZlcnkgY2hpbGQgcmVkdWNlciwgYW5kIGdhdGhlciB0aGVpciByZXN1bHRzXG4gKiBpbnRvIGEgc2luZ2xlIHN0YXRlIG9iamVjdCwgd2hvc2Uga2V5cyBjb3JyZXNwb25kIHRvIHRoZSBrZXlzIG9mIHRoZSBwYXNzZWRcbiAqIHJlZHVjZXIgZnVuY3Rpb25zLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSByZWR1Y2VycyBBbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGNvcnJlc3BvbmQgdG8gZGlmZmVyZW50XG4gKiByZWR1Y2VyIGZ1bmN0aW9ucyB0aGF0IG5lZWQgdG8gYmUgY29tYmluZWQgaW50byBvbmUuIE9uZSBoYW5keSB3YXkgdG8gb2J0YWluXG4gKiBpdCBpcyB0byB1c2UgRVM2IGBpbXBvcnQgKiBhcyByZWR1Y2Vyc2Agc3ludGF4LiBUaGUgcmVkdWNlcnMgbWF5IG5ldmVyIHJldHVyblxuICogdW5kZWZpbmVkIGZvciBhbnkgYWN0aW9uLiBJbnN0ZWFkLCB0aGV5IHNob3VsZCByZXR1cm4gdGhlaXIgaW5pdGlhbCBzdGF0ZVxuICogaWYgdGhlIHN0YXRlIHBhc3NlZCB0byB0aGVtIHdhcyB1bmRlZmluZWQsIGFuZCB0aGUgY3VycmVudCBzdGF0ZSBmb3IgYW55XG4gKiB1bnJlY29nbml6ZWQgYWN0aW9uLlxuICpcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSByZWR1Y2VyIGZ1bmN0aW9uIHRoYXQgaW52b2tlcyBldmVyeSByZWR1Y2VyIGluc2lkZSB0aGVcbiAqIHBhc3NlZCBvYmplY3QsIGFuZCBidWlsZHMgYSBzdGF0ZSBvYmplY3Qgd2l0aCB0aGUgc2FtZSBzaGFwZS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNvbWJpbmVSZWR1Y2VycyhyZWR1Y2Vycykge1xuICB2YXIgcmVkdWNlcktleXMgPSBPYmplY3Qua2V5cyhyZWR1Y2Vycyk7XG4gIHZhciBmaW5hbFJlZHVjZXJzID0ge307XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWR1Y2VyS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSByZWR1Y2VyS2V5c1tpXTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBpZiAodHlwZW9mIHJlZHVjZXJzW2tleV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHdhcm5pbmcoXCJObyByZWR1Y2VyIHByb3ZpZGVkIGZvciBrZXkgXFxcIlwiICsga2V5ICsgXCJcXFwiXCIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0eXBlb2YgcmVkdWNlcnNba2V5XSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgZmluYWxSZWR1Y2Vyc1trZXldID0gcmVkdWNlcnNba2V5XTtcbiAgICB9XG4gIH1cblxuICB2YXIgZmluYWxSZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKGZpbmFsUmVkdWNlcnMpOyAvLyBUaGlzIGlzIHVzZWQgdG8gbWFrZSBzdXJlIHdlIGRvbid0IHdhcm4gYWJvdXQgdGhlIHNhbWVcbiAgLy8ga2V5cyBtdWx0aXBsZSB0aW1lcy5cblxuICB2YXIgdW5leHBlY3RlZEtleUNhY2hlO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdW5leHBlY3RlZEtleUNhY2hlID0ge307XG4gIH1cblxuICB2YXIgc2hhcGVBc3NlcnRpb25FcnJvcjtcblxuICB0cnkge1xuICAgIGFzc2VydFJlZHVjZXJTaGFwZShmaW5hbFJlZHVjZXJzKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHNoYXBlQXNzZXJ0aW9uRXJyb3IgPSBlO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIGNvbWJpbmF0aW9uKHN0YXRlLCBhY3Rpb24pIHtcbiAgICBpZiAoc3RhdGUgPT09IHZvaWQgMCkge1xuICAgICAgc3RhdGUgPSB7fTtcbiAgICB9XG5cbiAgICBpZiAoc2hhcGVBc3NlcnRpb25FcnJvcikge1xuICAgICAgdGhyb3cgc2hhcGVBc3NlcnRpb25FcnJvcjtcbiAgICB9XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIHdhcm5pbmdNZXNzYWdlID0gZ2V0VW5leHBlY3RlZFN0YXRlU2hhcGVXYXJuaW5nTWVzc2FnZShzdGF0ZSwgZmluYWxSZWR1Y2VycywgYWN0aW9uLCB1bmV4cGVjdGVkS2V5Q2FjaGUpO1xuXG4gICAgICBpZiAod2FybmluZ01lc3NhZ2UpIHtcbiAgICAgICAgd2FybmluZyh3YXJuaW5nTWVzc2FnZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGhhc0NoYW5nZWQgPSBmYWxzZTtcbiAgICB2YXIgbmV4dFN0YXRlID0ge307XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgZmluYWxSZWR1Y2VyS2V5cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfa2V5ID0gZmluYWxSZWR1Y2VyS2V5c1tfaV07XG4gICAgICB2YXIgcmVkdWNlciA9IGZpbmFsUmVkdWNlcnNbX2tleV07XG4gICAgICB2YXIgcHJldmlvdXNTdGF0ZUZvcktleSA9IHN0YXRlW19rZXldO1xuICAgICAgdmFyIG5leHRTdGF0ZUZvcktleSA9IHJlZHVjZXIocHJldmlvdXNTdGF0ZUZvcktleSwgYWN0aW9uKTtcblxuICAgICAgaWYgKHR5cGVvZiBuZXh0U3RhdGVGb3JLZXkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHZhciBhY3Rpb25UeXBlID0gYWN0aW9uICYmIGFjdGlvbi50eXBlO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxNCkgOiBcIldoZW4gY2FsbGVkIHdpdGggYW4gYWN0aW9uIG9mIHR5cGUgXCIgKyAoYWN0aW9uVHlwZSA/IFwiXFxcIlwiICsgU3RyaW5nKGFjdGlvblR5cGUpICsgXCJcXFwiXCIgOiAnKHVua25vd24gdHlwZSknKSArIFwiLCB0aGUgc2xpY2UgcmVkdWNlciBmb3Iga2V5IFxcXCJcIiArIF9rZXkgKyBcIlxcXCIgcmV0dXJuZWQgdW5kZWZpbmVkLiBcIiArIFwiVG8gaWdub3JlIGFuIGFjdGlvbiwgeW91IG11c3QgZXhwbGljaXRseSByZXR1cm4gdGhlIHByZXZpb3VzIHN0YXRlLiBcIiArIFwiSWYgeW91IHdhbnQgdGhpcyByZWR1Y2VyIHRvIGhvbGQgbm8gdmFsdWUsIHlvdSBjYW4gcmV0dXJuIG51bGwgaW5zdGVhZCBvZiB1bmRlZmluZWQuXCIpO1xuICAgICAgfVxuXG4gICAgICBuZXh0U3RhdGVbX2tleV0gPSBuZXh0U3RhdGVGb3JLZXk7XG4gICAgICBoYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZCB8fCBuZXh0U3RhdGVGb3JLZXkgIT09IHByZXZpb3VzU3RhdGVGb3JLZXk7XG4gICAgfVxuXG4gICAgaGFzQ2hhbmdlZCA9IGhhc0NoYW5nZWQgfHwgZmluYWxSZWR1Y2VyS2V5cy5sZW5ndGggIT09IE9iamVjdC5rZXlzKHN0YXRlKS5sZW5ndGg7XG4gICAgcmV0dXJuIGhhc0NoYW5nZWQgPyBuZXh0U3RhdGUgOiBzdGF0ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvciwgZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZGlzcGF0Y2goYWN0aW9uQ3JlYXRvci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfTtcbn1cbi8qKlxuICogVHVybnMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uIGNyZWF0b3JzLCBpbnRvIGFuIG9iamVjdCB3aXRoIHRoZVxuICogc2FtZSBrZXlzLCBidXQgd2l0aCBldmVyeSBmdW5jdGlvbiB3cmFwcGVkIGludG8gYSBgZGlzcGF0Y2hgIGNhbGwgc28gdGhleVxuICogbWF5IGJlIGludm9rZWQgZGlyZWN0bHkuIFRoaXMgaXMganVzdCBhIGNvbnZlbmllbmNlIG1ldGhvZCwgYXMgeW91IGNhbiBjYWxsXG4gKiBgc3RvcmUuZGlzcGF0Y2goTXlBY3Rpb25DcmVhdG9ycy5kb1NvbWV0aGluZygpKWAgeW91cnNlbGYganVzdCBmaW5lLlxuICpcbiAqIEZvciBjb252ZW5pZW5jZSwgeW91IGNhbiBhbHNvIHBhc3MgYW4gYWN0aW9uIGNyZWF0b3IgYXMgdGhlIGZpcnN0IGFyZ3VtZW50LFxuICogYW5kIGdldCBhIGRpc3BhdGNoIHdyYXBwZWQgZnVuY3Rpb24gaW4gcmV0dXJuLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb258T2JqZWN0fSBhY3Rpb25DcmVhdG9ycyBBbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBhY3Rpb25cbiAqIGNyZWF0b3IgZnVuY3Rpb25zLiBPbmUgaGFuZHkgd2F5IHRvIG9idGFpbiBpdCBpcyB0byB1c2UgRVM2IGBpbXBvcnQgKiBhc2BcbiAqIHN5bnRheC4gWW91IG1heSBhbHNvIHBhc3MgYSBzaW5nbGUgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZGlzcGF0Y2ggVGhlIGBkaXNwYXRjaGAgZnVuY3Rpb24gYXZhaWxhYmxlIG9uIHlvdXIgUmVkdXhcbiAqIHN0b3JlLlxuICpcbiAqIEByZXR1cm5zIHtGdW5jdGlvbnxPYmplY3R9IFRoZSBvYmplY3QgbWltaWNraW5nIHRoZSBvcmlnaW5hbCBvYmplY3QsIGJ1dCB3aXRoXG4gKiBldmVyeSBhY3Rpb24gY3JlYXRvciB3cmFwcGVkIGludG8gdGhlIGBkaXNwYXRjaGAgY2FsbC4gSWYgeW91IHBhc3NlZCBhXG4gKiBmdW5jdGlvbiBhcyBgYWN0aW9uQ3JlYXRvcnNgLCB0aGUgcmV0dXJuIHZhbHVlIHdpbGwgYWxzbyBiZSBhIHNpbmdsZVxuICogZnVuY3Rpb24uXG4gKi9cblxuXG5mdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcnMoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKSB7XG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgIT09ICdvYmplY3QnIHx8IGFjdGlvbkNyZWF0b3JzID09PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMTYpIDogXCJiaW5kQWN0aW9uQ3JlYXRvcnMgZXhwZWN0ZWQgYW4gb2JqZWN0IG9yIGEgZnVuY3Rpb24sIGJ1dCBpbnN0ZWFkIHJlY2VpdmVkOiAnXCIgKyBraW5kT2YoYWN0aW9uQ3JlYXRvcnMpICsgXCInLiBcIiArIFwiRGlkIHlvdSB3cml0ZSBcXFwiaW1wb3J0IEFjdGlvbkNyZWF0b3JzIGZyb21cXFwiIGluc3RlYWQgb2YgXFxcImltcG9ydCAqIGFzIEFjdGlvbkNyZWF0b3JzIGZyb21cXFwiP1wiKTtcbiAgfVxuXG4gIHZhciBib3VuZEFjdGlvbkNyZWF0b3JzID0ge307XG5cbiAgZm9yICh2YXIga2V5IGluIGFjdGlvbkNyZWF0b3JzKSB7XG4gICAgdmFyIGFjdGlvbkNyZWF0b3IgPSBhY3Rpb25DcmVhdG9yc1trZXldO1xuXG4gICAgaWYgKHR5cGVvZiBhY3Rpb25DcmVhdG9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBib3VuZEFjdGlvbkNyZWF0b3JzW2tleV0gPSBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9yLCBkaXNwYXRjaCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGJvdW5kQWN0aW9uQ3JlYXRvcnM7XG59XG5cbi8qKlxuICogQ29tcG9zZXMgc2luZ2xlLWFyZ3VtZW50IGZ1bmN0aW9ucyBmcm9tIHJpZ2h0IHRvIGxlZnQuIFRoZSByaWdodG1vc3RcbiAqIGZ1bmN0aW9uIGNhbiB0YWtlIG11bHRpcGxlIGFyZ3VtZW50cyBhcyBpdCBwcm92aWRlcyB0aGUgc2lnbmF0dXJlIGZvclxuICogdGhlIHJlc3VsdGluZyBjb21wb3NpdGUgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHsuLi5GdW5jdGlvbn0gZnVuY3MgVGhlIGZ1bmN0aW9ucyB0byBjb21wb3NlLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGZ1bmN0aW9uIG9idGFpbmVkIGJ5IGNvbXBvc2luZyB0aGUgYXJndW1lbnQgZnVuY3Rpb25zXG4gKiBmcm9tIHJpZ2h0IHRvIGxlZnQuIEZvciBleGFtcGxlLCBjb21wb3NlKGYsIGcsIGgpIGlzIGlkZW50aWNhbCB0byBkb2luZ1xuICogKC4uLmFyZ3MpID0+IGYoZyhoKC4uLmFyZ3MpKSkuXG4gKi9cbmZ1bmN0aW9uIGNvbXBvc2UoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBmdW5jcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBmdW5jc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIGlmIChmdW5jcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgICAgcmV0dXJuIGFyZztcbiAgICB9O1xuICB9XG5cbiAgaWYgKGZ1bmNzLmxlbmd0aCA9PT0gMSkge1xuICAgIHJldHVybiBmdW5jc1swXTtcbiAgfVxuXG4gIHJldHVybiBmdW5jcy5yZWR1Y2UoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGEoYi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cykpO1xuICAgIH07XG4gIH0pO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBzdG9yZSBlbmhhbmNlciB0aGF0IGFwcGxpZXMgbWlkZGxld2FyZSB0byB0aGUgZGlzcGF0Y2ggbWV0aG9kXG4gKiBvZiB0aGUgUmVkdXggc3RvcmUuIFRoaXMgaXMgaGFuZHkgZm9yIGEgdmFyaWV0eSBvZiB0YXNrcywgc3VjaCBhcyBleHByZXNzaW5nXG4gKiBhc3luY2hyb25vdXMgYWN0aW9ucyBpbiBhIGNvbmNpc2UgbWFubmVyLCBvciBsb2dnaW5nIGV2ZXJ5IGFjdGlvbiBwYXlsb2FkLlxuICpcbiAqIFNlZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UgYXMgYW4gZXhhbXBsZSBvZiB0aGUgUmVkdXggbWlkZGxld2FyZS5cbiAqXG4gKiBCZWNhdXNlIG1pZGRsZXdhcmUgaXMgcG90ZW50aWFsbHkgYXN5bmNocm9ub3VzLCB0aGlzIHNob3VsZCBiZSB0aGUgZmlyc3RcbiAqIHN0b3JlIGVuaGFuY2VyIGluIHRoZSBjb21wb3NpdGlvbiBjaGFpbi5cbiAqXG4gKiBOb3RlIHRoYXQgZWFjaCBtaWRkbGV3YXJlIHdpbGwgYmUgZ2l2ZW4gdGhlIGBkaXNwYXRjaGAgYW5kIGBnZXRTdGF0ZWAgZnVuY3Rpb25zXG4gKiBhcyBuYW1lZCBhcmd1bWVudHMuXG4gKlxuICogQHBhcmFtIHsuLi5GdW5jdGlvbn0gbWlkZGxld2FyZXMgVGhlIG1pZGRsZXdhcmUgY2hhaW4gdG8gYmUgYXBwbGllZC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBzdG9yZSBlbmhhbmNlciBhcHBseWluZyB0aGUgbWlkZGxld2FyZS5cbiAqL1xuXG5mdW5jdGlvbiBhcHBseU1pZGRsZXdhcmUoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBtaWRkbGV3YXJlcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBtaWRkbGV3YXJlc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoY3JlYXRlU3RvcmUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHN0b3JlID0gY3JlYXRlU3RvcmUuYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuXG4gICAgICB2YXIgX2Rpc3BhdGNoID0gZnVuY3Rpb24gZGlzcGF0Y2goKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDE1KSA6ICdEaXNwYXRjaGluZyB3aGlsZSBjb25zdHJ1Y3RpbmcgeW91ciBtaWRkbGV3YXJlIGlzIG5vdCBhbGxvd2VkLiAnICsgJ090aGVyIG1pZGRsZXdhcmUgd291bGQgbm90IGJlIGFwcGxpZWQgdG8gdGhpcyBkaXNwYXRjaC4nKTtcbiAgICAgIH07XG5cbiAgICAgIHZhciBtaWRkbGV3YXJlQVBJID0ge1xuICAgICAgICBnZXRTdGF0ZTogc3RvcmUuZ2V0U3RhdGUsXG4gICAgICAgIGRpc3BhdGNoOiBmdW5jdGlvbiBkaXNwYXRjaCgpIHtcbiAgICAgICAgICByZXR1cm4gX2Rpc3BhdGNoLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBjaGFpbiA9IG1pZGRsZXdhcmVzLm1hcChmdW5jdGlvbiAobWlkZGxld2FyZSkge1xuICAgICAgICByZXR1cm4gbWlkZGxld2FyZShtaWRkbGV3YXJlQVBJKTtcbiAgICAgIH0pO1xuICAgICAgX2Rpc3BhdGNoID0gY29tcG9zZS5hcHBseSh2b2lkIDAsIGNoYWluKShzdG9yZS5kaXNwYXRjaCk7XG4gICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBzdG9yZSksIHt9LCB7XG4gICAgICAgIGRpc3BhdGNoOiBfZGlzcGF0Y2hcbiAgICAgIH0pO1xuICAgIH07XG4gIH07XG59XG5cbi8qXG4gKiBUaGlzIGlzIGEgZHVtbXkgZnVuY3Rpb24gdG8gY2hlY2sgaWYgdGhlIGZ1bmN0aW9uIG5hbWUgaGFzIGJlZW4gYWx0ZXJlZCBieSBtaW5pZmljYXRpb24uXG4gKiBJZiB0aGUgZnVuY3Rpb24gaGFzIGJlZW4gbWluaWZpZWQgYW5kIE5PREVfRU5WICE9PSAncHJvZHVjdGlvbicsIHdhcm4gdGhlIHVzZXIuXG4gKi9cblxuZnVuY3Rpb24gaXNDcnVzaGVkKCkge31cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdHlwZW9mIGlzQ3J1c2hlZC5uYW1lID09PSAnc3RyaW5nJyAmJiBpc0NydXNoZWQubmFtZSAhPT0gJ2lzQ3J1c2hlZCcpIHtcbiAgd2FybmluZygnWW91IGFyZSBjdXJyZW50bHkgdXNpbmcgbWluaWZpZWQgY29kZSBvdXRzaWRlIG9mIE5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIi4gJyArICdUaGlzIG1lYW5zIHRoYXQgeW91IGFyZSBydW5uaW5nIGEgc2xvd2VyIGRldmVsb3BtZW50IGJ1aWxkIG9mIFJlZHV4LiAnICsgJ1lvdSBjYW4gdXNlIGxvb3NlLWVudmlmeSAoaHR0cHM6Ly9naXRodWIuY29tL3plcnRvc2gvbG9vc2UtZW52aWZ5KSBmb3IgYnJvd3NlcmlmeSAnICsgJ29yIHNldHRpbmcgbW9kZSB0byBwcm9kdWN0aW9uIGluIHdlYnBhY2sgKGh0dHBzOi8vd2VicGFjay5qcy5vcmcvY29uY2VwdHMvbW9kZS8pICcgKyAndG8gZW5zdXJlIHlvdSBoYXZlIHRoZSBjb3JyZWN0IGNvZGUgZm9yIHlvdXIgcHJvZHVjdGlvbiBidWlsZC4nKTtcbn1cblxuZXhwb3J0IHsgQWN0aW9uVHlwZXMgYXMgX19ET19OT1RfVVNFX19BY3Rpb25UeXBlcywgYXBwbHlNaWRkbGV3YXJlLCBiaW5kQWN0aW9uQ3JlYXRvcnMsIGNvbWJpbmVSZWR1Y2VycywgY29tcG9zZSwgY3JlYXRlU3RvcmUsIGxlZ2FjeV9jcmVhdGVTdG9yZSB9O1xuIiwiLyoqIEEgZnVuY3Rpb24gdGhhdCBhY2NlcHRzIGEgcG90ZW50aWFsIFwiZXh0cmEgYXJndW1lbnRcIiB2YWx1ZSB0byBiZSBpbmplY3RlZCBsYXRlcixcclxuICogYW5kIHJldHVybnMgYW4gaW5zdGFuY2Ugb2YgdGhlIHRodW5rIG1pZGRsZXdhcmUgdGhhdCB1c2VzIHRoYXQgdmFsdWVcclxuICovXG5mdW5jdGlvbiBjcmVhdGVUaHVua01pZGRsZXdhcmUoZXh0cmFBcmd1bWVudCkge1xuICAvLyBTdGFuZGFyZCBSZWR1eCBtaWRkbGV3YXJlIGRlZmluaXRpb24gcGF0dGVybjpcbiAgLy8gU2VlOiBodHRwczovL3JlZHV4LmpzLm9yZy90dXRvcmlhbHMvZnVuZGFtZW50YWxzL3BhcnQtNC1zdG9yZSN3cml0aW5nLWN1c3RvbS1taWRkbGV3YXJlXG4gIHZhciBtaWRkbGV3YXJlID0gZnVuY3Rpb24gbWlkZGxld2FyZShfcmVmKSB7XG4gICAgdmFyIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaCxcbiAgICAgICAgZ2V0U3RhdGUgPSBfcmVmLmdldFN0YXRlO1xuICAgIHJldHVybiBmdW5jdGlvbiAobmV4dCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcbiAgICAgICAgLy8gVGhlIHRodW5rIG1pZGRsZXdhcmUgbG9va3MgZm9yIGFueSBmdW5jdGlvbnMgdGhhdCB3ZXJlIHBhc3NlZCB0byBgc3RvcmUuZGlzcGF0Y2hgLlxuICAgICAgICAvLyBJZiB0aGlzIFwiYWN0aW9uXCIgaXMgcmVhbGx5IGEgZnVuY3Rpb24sIGNhbGwgaXQgYW5kIHJldHVybiB0aGUgcmVzdWx0LlxuICAgICAgICBpZiAodHlwZW9mIGFjdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIC8vIEluamVjdCB0aGUgc3RvcmUncyBgZGlzcGF0Y2hgIGFuZCBgZ2V0U3RhdGVgIG1ldGhvZHMsIGFzIHdlbGwgYXMgYW55IFwiZXh0cmEgYXJnXCJcbiAgICAgICAgICByZXR1cm4gYWN0aW9uKGRpc3BhdGNoLCBnZXRTdGF0ZSwgZXh0cmFBcmd1bWVudCk7XG4gICAgICAgIH0gLy8gT3RoZXJ3aXNlLCBwYXNzIHRoZSBhY3Rpb24gZG93biB0aGUgbWlkZGxld2FyZSBjaGFpbiBhcyB1c3VhbFxuXG5cbiAgICAgICAgcmV0dXJuIG5leHQoYWN0aW9uKTtcbiAgICAgIH07XG4gICAgfTtcbiAgfTtcblxuICByZXR1cm4gbWlkZGxld2FyZTtcbn1cblxudmFyIHRodW5rID0gY3JlYXRlVGh1bmtNaWRkbGV3YXJlKCk7IC8vIEF0dGFjaCB0aGUgZmFjdG9yeSBmdW5jdGlvbiBzbyB1c2VycyBjYW4gY3JlYXRlIGEgY3VzdG9taXplZCB2ZXJzaW9uXG4vLyB3aXRoIHdoYXRldmVyIFwiZXh0cmEgYXJnXCIgdGhleSB3YW50IHRvIGluamVjdCBpbnRvIHRoZWlyIHRodW5rc1xuXG50aHVuay53aXRoRXh0cmFBcmd1bWVudCA9IGNyZWF0ZVRodW5rTWlkZGxld2FyZTtcbmV4cG9ydCBkZWZhdWx0IHRodW5rOyIsInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcclxuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcclxuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxyXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XHJcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcbiAgICB9O1xyXG59KSgpO1xyXG52YXIgX19nZW5lcmF0b3IgPSAodGhpcyAmJiB0aGlzLl9fZ2VuZXJhdG9yKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgYm9keSkge1xyXG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcclxuICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCBcInRocm93XCI6IHZlcmIoMSksIFwicmV0dXJuXCI6IHZlcmIoMikgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xyXG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IHJldHVybiBmdW5jdGlvbiAodikgeyByZXR1cm4gc3RlcChbbiwgdl0pOyB9OyB9XHJcbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XHJcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xyXG4gICAgICAgIHdoaWxlIChfKSB0cnkge1xyXG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XHJcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTtcclxuICAgICAgICAgICAgc3dpdGNoIChvcFswXSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xyXG4gICAgICAgICAgICAgICAgY2FzZSA1OiBfLmxhYmVsKys7IHkgPSBvcFsxXTsgb3AgPSBbMF07IGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBpZiAoISh0ID0gXy50cnlzLCB0ID0gdC5sZW5ndGggPiAwICYmIHRbdC5sZW5ndGggLSAxXSkgJiYgKG9wWzBdID09PSA2IHx8IG9wWzBdID09PSAyKSkgeyBfID0gMDsgY29udGludWU7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7IF8ubGFiZWwgPSB0WzJdOyBfLm9wcy5wdXNoKG9wKTsgYnJlYWs7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcclxuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XHJcbiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07IHJldHVybiB7IHZhbHVlOiBvcFswXSA/IG9wWzFdIDogdm9pZCAwLCBkb25lOiB0cnVlIH07XHJcbiAgICB9XHJcbn07XHJcbnZhciBfX3NwcmVhZEFycmF5ID0gKHRoaXMgJiYgdGhpcy5fX3NwcmVhZEFycmF5KSB8fCBmdW5jdGlvbiAodG8sIGZyb20pIHtcclxuICAgIGZvciAodmFyIGkgPSAwLCBpbCA9IGZyb20ubGVuZ3RoLCBqID0gdG8ubGVuZ3RoOyBpIDwgaWw7IGkrKywgaisrKVxyXG4gICAgICAgIHRvW2pdID0gZnJvbVtpXTtcclxuICAgIHJldHVybiB0bztcclxufTtcclxudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcclxudmFyIF9fZGVmUHJvcHMgPSBPYmplY3QuZGVmaW5lUHJvcGVydGllcztcclxudmFyIF9fZ2V0T3duUHJvcERlc2NzID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM7XHJcbnZhciBfX2dldE93blByb3BTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcclxudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XHJcbnZhciBfX3Byb3BJc0VudW0gPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xyXG52YXIgX19kZWZOb3JtYWxQcm9wID0gZnVuY3Rpb24gKG9iaiwga2V5LCB2YWx1ZSkgeyByZXR1cm4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlOyB9O1xyXG52YXIgX19zcHJlYWRWYWx1ZXMgPSBmdW5jdGlvbiAoYSwgYikge1xyXG4gICAgZm9yICh2YXIgcHJvcCBpbiBiIHx8IChiID0ge30pKVxyXG4gICAgICAgIGlmIChfX2hhc093blByb3AuY2FsbChiLCBwcm9wKSlcclxuICAgICAgICAgICAgX19kZWZOb3JtYWxQcm9wKGEsIHByb3AsIGJbcHJvcF0pO1xyXG4gICAgaWYgKF9fZ2V0T3duUHJvcFN5bWJvbHMpXHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfYyA9IF9fZ2V0T3duUHJvcFN5bWJvbHMoYik7IF9pIDwgX2MubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBwcm9wID0gX2NbX2ldO1xyXG4gICAgICAgICAgICBpZiAoX19wcm9wSXNFbnVtLmNhbGwoYiwgcHJvcCkpXHJcbiAgICAgICAgICAgICAgICBfX2RlZk5vcm1hbFByb3AoYSwgcHJvcCwgYltwcm9wXSk7XHJcbiAgICAgICAgfVxyXG4gICAgcmV0dXJuIGE7XHJcbn07XHJcbnZhciBfX3NwcmVhZFByb3BzID0gZnVuY3Rpb24gKGEsIGIpIHsgcmV0dXJuIF9fZGVmUHJvcHMoYSwgX19nZXRPd25Qcm9wRGVzY3MoYikpOyB9O1xyXG52YXIgX19hc3luYyA9IGZ1bmN0aW9uIChfX3RoaXMsIF9fYXJndW1lbnRzLCBnZW5lcmF0b3IpIHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgdmFyIGZ1bGZpbGxlZCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciByZWplY3RlZCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgc3RlcChnZW5lcmF0b3IudGhyb3codmFsdWUpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICB2YXIgc3RlcCA9IGZ1bmN0aW9uICh4KSB7IHJldHVybiB4LmRvbmUgPyByZXNvbHZlKHgudmFsdWUpIDogUHJvbWlzZS5yZXNvbHZlKHgudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH07XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KF9fdGhpcywgX19hcmd1bWVudHMpKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn07XHJcbi8vIHNyYy9pbmRleC50c1xyXG5pbXBvcnQgeyBlbmFibGVFUzUgfSBmcm9tIFwiaW1tZXJcIjtcclxuZXhwb3J0ICogZnJvbSBcInJlZHV4XCI7XHJcbmltcG9ydCB7IGRlZmF1bHQgYXMgZGVmYXVsdDIsIGN1cnJlbnQgYXMgY3VycmVudDIsIGZyZWV6ZSwgb3JpZ2luYWwsIGlzRHJhZnQgYXMgaXNEcmFmdDQgfSBmcm9tIFwiaW1tZXJcIjtcclxuaW1wb3J0IHsgY3JlYXRlU2VsZWN0b3IgYXMgY3JlYXRlU2VsZWN0b3IyIH0gZnJvbSBcInJlc2VsZWN0XCI7XHJcbi8vIHNyYy9jcmVhdGVEcmFmdFNhZmVTZWxlY3Rvci50c1xyXG5pbXBvcnQgeyBjdXJyZW50LCBpc0RyYWZ0IH0gZnJvbSBcImltbWVyXCI7XHJcbmltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yIH0gZnJvbSBcInJlc2VsZWN0XCI7XHJcbnZhciBjcmVhdGVEcmFmdFNhZmVTZWxlY3RvciA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBhcmdzID0gW107XHJcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcclxuICAgIH1cclxuICAgIHZhciBzZWxlY3RvciA9IGNyZWF0ZVNlbGVjdG9yLmFwcGx5KHZvaWQgMCwgYXJncyk7XHJcbiAgICB2YXIgd3JhcHBlZFNlbGVjdG9yID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgdmFyIHJlc3QgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBfaSA9IDE7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICByZXN0W19pIC0gMV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gc2VsZWN0b3IuYXBwbHkodm9pZCAwLCBfX3NwcmVhZEFycmF5KFtpc0RyYWZ0KHZhbHVlKSA/IGN1cnJlbnQodmFsdWUpIDogdmFsdWVdLCByZXN0KSk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHdyYXBwZWRTZWxlY3RvcjtcclxufTtcclxuLy8gc3JjL2NvbmZpZ3VyZVN0b3JlLnRzXHJcbmltcG9ydCB7IGNyZWF0ZVN0b3JlLCBjb21wb3NlIGFzIGNvbXBvc2UyLCBhcHBseU1pZGRsZXdhcmUsIGNvbWJpbmVSZWR1Y2VycyB9IGZyb20gXCJyZWR1eFwiO1xyXG4vLyBzcmMvZGV2dG9vbHNFeHRlbnNpb24udHNcclxuaW1wb3J0IHsgY29tcG9zZSB9IGZyb20gXCJyZWR1eFwiO1xyXG52YXIgY29tcG9zZVdpdGhEZXZUb29scyA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93Ll9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX0NPTVBPU0VfXyA/IHdpbmRvdy5fX1JFRFVYX0RFVlRPT0xTX0VYVEVOU0lPTl9DT01QT1NFX18gOiBmdW5jdGlvbiAoKSB7XHJcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMClcclxuICAgICAgICByZXR1cm4gdm9pZCAwO1xyXG4gICAgaWYgKHR5cGVvZiBhcmd1bWVudHNbMF0gPT09IFwib2JqZWN0XCIpXHJcbiAgICAgICAgcmV0dXJuIGNvbXBvc2U7XHJcbiAgICByZXR1cm4gY29tcG9zZS5hcHBseShudWxsLCBhcmd1bWVudHMpO1xyXG59O1xyXG52YXIgZGV2VG9vbHNFbmhhbmNlciA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93Ll9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX18gPyB3aW5kb3cuX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fXyA6IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAobm9vcDIpIHtcclxuICAgICAgICByZXR1cm4gbm9vcDI7XHJcbiAgICB9O1xyXG59O1xyXG4vLyBzcmMvaXNQbGFpbk9iamVjdC50c1xyXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KHZhbHVlKSB7XHJcbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcIm9iamVjdFwiIHx8IHZhbHVlID09PSBudWxsKVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIHZhciBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWx1ZSk7XHJcbiAgICBpZiAocHJvdG8gPT09IG51bGwpXHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB2YXIgYmFzZVByb3RvID0gcHJvdG87XHJcbiAgICB3aGlsZSAoT2JqZWN0LmdldFByb3RvdHlwZU9mKGJhc2VQcm90bykgIT09IG51bGwpIHtcclxuICAgICAgICBiYXNlUHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoYmFzZVByb3RvKTtcclxuICAgIH1cclxuICAgIHJldHVybiBwcm90byA9PT0gYmFzZVByb3RvO1xyXG59XHJcbi8vIHNyYy9nZXREZWZhdWx0TWlkZGxld2FyZS50c1xyXG5pbXBvcnQgdGh1bmtNaWRkbGV3YXJlIGZyb20gXCJyZWR1eC10aHVua1wiO1xyXG4vLyBzcmMvdXRpbHMudHNcclxuaW1wb3J0IGNyZWF0ZU5leHRTdGF0ZSwgeyBpc0RyYWZ0YWJsZSB9IGZyb20gXCJpbW1lclwiO1xyXG5mdW5jdGlvbiBnZXRUaW1lTWVhc3VyZVV0aWxzKG1heERlbGF5LCBmbk5hbWUpIHtcclxuICAgIHZhciBlbGFwc2VkID0gMDtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgbWVhc3VyZVRpbWU6IGZ1bmN0aW9uIChmbikge1xyXG4gICAgICAgICAgICB2YXIgc3RhcnRlZCA9IERhdGUubm93KCk7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZm4oKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmaW5hbGx5IHtcclxuICAgICAgICAgICAgICAgIHZhciBmaW5pc2hlZCA9IERhdGUubm93KCk7XHJcbiAgICAgICAgICAgICAgICBlbGFwc2VkICs9IGZpbmlzaGVkIC0gc3RhcnRlZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgd2FybklmRXhjZWVkZWQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKGVsYXBzZWQgPiBtYXhEZWxheSkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGZuTmFtZSArIFwiIHRvb2sgXCIgKyBlbGFwc2VkICsgXCJtcywgd2hpY2ggaXMgbW9yZSB0aGFuIHRoZSB3YXJuaW5nIHRocmVzaG9sZCBvZiBcIiArIG1heERlbGF5ICsgXCJtcy4gXFxuSWYgeW91ciBzdGF0ZSBvciBhY3Rpb25zIGFyZSB2ZXJ5IGxhcmdlLCB5b3UgbWF5IHdhbnQgdG8gZGlzYWJsZSB0aGUgbWlkZGxld2FyZSBhcyBpdCBtaWdodCBjYXVzZSB0b28gbXVjaCBvZiBhIHNsb3dkb3duIGluIGRldmVsb3BtZW50IG1vZGUuIFNlZSBodHRwczovL3JlZHV4LXRvb2xraXQuanMub3JnL2FwaS9nZXREZWZhdWx0TWlkZGxld2FyZSBmb3IgaW5zdHJ1Y3Rpb25zLlxcbkl0IGlzIGRpc2FibGVkIGluIHByb2R1Y3Rpb24gYnVpbGRzLCBzbyB5b3UgZG9uJ3QgbmVlZCB0byB3b3JyeSBhYm91dCB0aGF0LlwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxudmFyIE1pZGRsZXdhcmVBcnJheSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhNaWRkbGV3YXJlQXJyYXksIF9zdXBlcik7XHJcbiAgICBmdW5jdGlvbiBNaWRkbGV3YXJlQXJyYXkoKSB7XHJcbiAgICAgICAgdmFyIGFyZ3MgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5hcHBseSh0aGlzLCBhcmdzKSB8fCB0aGlzO1xyXG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihfdGhpcywgTWlkZGxld2FyZUFycmF5LnByb3RvdHlwZSk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE1pZGRsZXdhcmVBcnJheSwgU3ltYm9sLnNwZWNpZXMsIHtcclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIE1pZGRsZXdhcmVBcnJheTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBNaWRkbGV3YXJlQXJyYXkucHJvdG90eXBlLmNvbmNhdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgYXJyID0gW107XHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICAgICAgYXJyW19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBfc3VwZXIucHJvdG90eXBlLmNvbmNhdC5hcHBseSh0aGlzLCBhcnIpO1xyXG4gICAgfTtcclxuICAgIE1pZGRsZXdhcmVBcnJheS5wcm90b3R5cGUucHJlcGVuZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgYXJyID0gW107XHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICAgICAgYXJyW19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChhcnIubGVuZ3RoID09PSAxICYmIEFycmF5LmlzQXJyYXkoYXJyWzBdKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbmV3IChNaWRkbGV3YXJlQXJyYXkuYmluZC5hcHBseShNaWRkbGV3YXJlQXJyYXksIF9fc3ByZWFkQXJyYXkoW3ZvaWQgMF0sIGFyclswXS5jb25jYXQodGhpcykpKSkoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG5ldyAoTWlkZGxld2FyZUFycmF5LmJpbmQuYXBwbHkoTWlkZGxld2FyZUFycmF5LCBfX3NwcmVhZEFycmF5KFt2b2lkIDBdLCBhcnIuY29uY2F0KHRoaXMpKSkpKCk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIE1pZGRsZXdhcmVBcnJheTtcclxufShBcnJheSkpO1xyXG5mdW5jdGlvbiBmcmVlemVEcmFmdGFibGUodmFsKSB7XHJcbiAgICByZXR1cm4gaXNEcmFmdGFibGUodmFsKSA/IGNyZWF0ZU5leHRTdGF0ZSh2YWwsIGZ1bmN0aW9uICgpIHtcclxuICAgIH0pIDogdmFsO1xyXG59XHJcbi8vIHNyYy9pbW11dGFibGVTdGF0ZUludmFyaWFudE1pZGRsZXdhcmUudHNcclxudmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIjtcclxudmFyIHByZWZpeCA9IFwiSW52YXJpYW50IGZhaWxlZFwiO1xyXG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBtZXNzYWdlKSB7XHJcbiAgICBpZiAoY29uZGl0aW9uKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKGlzUHJvZHVjdGlvbikge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xyXG4gICAgfVxyXG4gICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCArIFwiOiBcIiArIChtZXNzYWdlIHx8IFwiXCIpKTtcclxufVxyXG5mdW5jdGlvbiBzdHJpbmdpZnkob2JqLCBzZXJpYWxpemVyLCBpbmRlbnQsIGRlY3ljbGVyKSB7XHJcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkob2JqLCBnZXRTZXJpYWxpemUoc2VyaWFsaXplciwgZGVjeWNsZXIpLCBpbmRlbnQpO1xyXG59XHJcbmZ1bmN0aW9uIGdldFNlcmlhbGl6ZShzZXJpYWxpemVyLCBkZWN5Y2xlcikge1xyXG4gICAgdmFyIHN0YWNrID0gW10sIGtleXMgPSBbXTtcclxuICAgIGlmICghZGVjeWNsZXIpXHJcbiAgICAgICAgZGVjeWNsZXIgPSBmdW5jdGlvbiAoXywgdmFsdWUpIHtcclxuICAgICAgICAgICAgaWYgKHN0YWNrWzBdID09PSB2YWx1ZSlcclxuICAgICAgICAgICAgICAgIHJldHVybiBcIltDaXJjdWxhciB+XVwiO1xyXG4gICAgICAgICAgICByZXR1cm4gXCJbQ2lyY3VsYXIgfi5cIiArIGtleXMuc2xpY2UoMCwgc3RhY2suaW5kZXhPZih2YWx1ZSkpLmpvaW4oXCIuXCIpICsgXCJdXCI7XHJcbiAgICAgICAgfTtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xyXG4gICAgICAgIGlmIChzdGFjay5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIHZhciB0aGlzUG9zID0gc3RhY2suaW5kZXhPZih0aGlzKTtcclxuICAgICAgICAgICAgfnRoaXNQb3MgPyBzdGFjay5zcGxpY2UodGhpc1BvcyArIDEpIDogc3RhY2sucHVzaCh0aGlzKTtcclxuICAgICAgICAgICAgfnRoaXNQb3MgPyBrZXlzLnNwbGljZSh0aGlzUG9zLCBJbmZpbml0eSwga2V5KSA6IGtleXMucHVzaChrZXkpO1xyXG4gICAgICAgICAgICBpZiAofnN0YWNrLmluZGV4T2YodmFsdWUpKVxyXG4gICAgICAgICAgICAgICAgdmFsdWUgPSBkZWN5Y2xlci5jYWxsKHRoaXMsIGtleSwgdmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHN0YWNrLnB1c2godmFsdWUpO1xyXG4gICAgICAgIHJldHVybiBzZXJpYWxpemVyID09IG51bGwgPyB2YWx1ZSA6IHNlcmlhbGl6ZXIuY2FsbCh0aGlzLCBrZXksIHZhbHVlKTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gaXNJbW11dGFibGVEZWZhdWx0KHZhbHVlKSB7XHJcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlICE9PSBcIm9iamVjdFwiIHx8IHZhbHVlID09IG51bGwgfHwgT2JqZWN0LmlzRnJvemVuKHZhbHVlKTtcclxufVxyXG5mdW5jdGlvbiB0cmFja0Zvck11dGF0aW9ucyhpc0ltbXV0YWJsZSwgaWdub3JlUGF0aHMsIG9iaikge1xyXG4gICAgdmFyIHRyYWNrZWRQcm9wZXJ0aWVzID0gdHJhY2tQcm9wZXJ0aWVzKGlzSW1tdXRhYmxlLCBpZ25vcmVQYXRocywgb2JqKTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgZGV0ZWN0TXV0YXRpb25zOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBkZXRlY3RNdXRhdGlvbnMoaXNJbW11dGFibGUsIGlnbm9yZVBhdGhzLCB0cmFja2VkUHJvcGVydGllcywgb2JqKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59XHJcbmZ1bmN0aW9uIHRyYWNrUHJvcGVydGllcyhpc0ltbXV0YWJsZSwgaWdub3JlUGF0aHMsIG9iaiwgcGF0aCkge1xyXG4gICAgaWYgKGlnbm9yZVBhdGhzID09PSB2b2lkIDApIHsgaWdub3JlUGF0aHMgPSBbXTsgfVxyXG4gICAgaWYgKHBhdGggPT09IHZvaWQgMCkgeyBwYXRoID0gXCJcIjsgfVxyXG4gICAgdmFyIHRyYWNrZWQgPSB7IHZhbHVlOiBvYmogfTtcclxuICAgIGlmICghaXNJbW11dGFibGUob2JqKSkge1xyXG4gICAgICAgIHRyYWNrZWQuY2hpbGRyZW4gPSB7fTtcclxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XHJcbiAgICAgICAgICAgIHZhciBjaGlsZFBhdGggPSBwYXRoID8gcGF0aCArIFwiLlwiICsga2V5IDoga2V5O1xyXG4gICAgICAgICAgICBpZiAoaWdub3JlUGF0aHMubGVuZ3RoICYmIGlnbm9yZVBhdGhzLmluZGV4T2YoY2hpbGRQYXRoKSAhPT0gLTEpIHtcclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRyYWNrZWQuY2hpbGRyZW5ba2V5XSA9IHRyYWNrUHJvcGVydGllcyhpc0ltbXV0YWJsZSwgaWdub3JlUGF0aHMsIG9ialtrZXldLCBjaGlsZFBhdGgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB0cmFja2VkO1xyXG59XHJcbmZ1bmN0aW9uIGRldGVjdE11dGF0aW9ucyhpc0ltbXV0YWJsZSwgaWdub3JlUGF0aHMsIHRyYWNrZWRQcm9wZXJ0eSwgb2JqLCBzYW1lUGFyZW50UmVmLCBwYXRoKSB7XHJcbiAgICBpZiAoaWdub3JlUGF0aHMgPT09IHZvaWQgMCkgeyBpZ25vcmVQYXRocyA9IFtdOyB9XHJcbiAgICBpZiAoc2FtZVBhcmVudFJlZiA9PT0gdm9pZCAwKSB7IHNhbWVQYXJlbnRSZWYgPSBmYWxzZTsgfVxyXG4gICAgaWYgKHBhdGggPT09IHZvaWQgMCkgeyBwYXRoID0gXCJcIjsgfVxyXG4gICAgdmFyIHByZXZPYmogPSB0cmFja2VkUHJvcGVydHkgPyB0cmFja2VkUHJvcGVydHkudmFsdWUgOiB2b2lkIDA7XHJcbiAgICB2YXIgc2FtZVJlZiA9IHByZXZPYmogPT09IG9iajtcclxuICAgIGlmIChzYW1lUGFyZW50UmVmICYmICFzYW1lUmVmICYmICFOdW1iZXIuaXNOYU4ob2JqKSkge1xyXG4gICAgICAgIHJldHVybiB7IHdhc011dGF0ZWQ6IHRydWUsIHBhdGg6IHBhdGggfTtcclxuICAgIH1cclxuICAgIGlmIChpc0ltbXV0YWJsZShwcmV2T2JqKSB8fCBpc0ltbXV0YWJsZShvYmopKSB7XHJcbiAgICAgICAgcmV0dXJuIHsgd2FzTXV0YXRlZDogZmFsc2UgfTtcclxuICAgIH1cclxuICAgIHZhciBrZXlzVG9EZXRlY3QgPSB7fTtcclxuICAgIGZvciAodmFyIGtleSBpbiB0cmFja2VkUHJvcGVydHkuY2hpbGRyZW4pIHtcclxuICAgICAgICBrZXlzVG9EZXRlY3Rba2V5XSA9IHRydWU7XHJcbiAgICB9XHJcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XHJcbiAgICAgICAga2V5c1RvRGV0ZWN0W2tleV0gPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgZm9yICh2YXIga2V5IGluIGtleXNUb0RldGVjdCkge1xyXG4gICAgICAgIHZhciBjaGlsZFBhdGggPSBwYXRoID8gcGF0aCArIFwiLlwiICsga2V5IDoga2V5O1xyXG4gICAgICAgIGlmIChpZ25vcmVQYXRocy5sZW5ndGggJiYgaWdub3JlUGF0aHMuaW5kZXhPZihjaGlsZFBhdGgpICE9PSAtMSkge1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHJlc3VsdCA9IGRldGVjdE11dGF0aW9ucyhpc0ltbXV0YWJsZSwgaWdub3JlUGF0aHMsIHRyYWNrZWRQcm9wZXJ0eS5jaGlsZHJlbltrZXldLCBvYmpba2V5XSwgc2FtZVJlZiwgY2hpbGRQYXRoKTtcclxuICAgICAgICBpZiAocmVzdWx0Lndhc011dGF0ZWQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4geyB3YXNNdXRhdGVkOiBmYWxzZSB9O1xyXG59XHJcbmZ1bmN0aW9uIGNyZWF0ZUltbXV0YWJsZVN0YXRlSW52YXJpYW50TWlkZGxld2FyZShvcHRpb25zKSB7XHJcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxyXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIikge1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBmdW5jdGlvbiAobmV4dCkgeyByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gbmV4dChhY3Rpb24pOyB9OyB9OyB9O1xyXG4gICAgfVxyXG4gICAgdmFyIF9jID0gb3B0aW9ucy5pc0ltbXV0YWJsZSwgaXNJbW11dGFibGUgPSBfYyA9PT0gdm9pZCAwID8gaXNJbW11dGFibGVEZWZhdWx0IDogX2MsIGlnbm9yZWRQYXRocyA9IG9wdGlvbnMuaWdub3JlZFBhdGhzLCBfZCA9IG9wdGlvbnMud2FybkFmdGVyLCB3YXJuQWZ0ZXIgPSBfZCA9PT0gdm9pZCAwID8gMzIgOiBfZCwgaWdub3JlID0gb3B0aW9ucy5pZ25vcmU7XHJcbiAgICBpZ25vcmVkUGF0aHMgPSBpZ25vcmVkUGF0aHMgfHwgaWdub3JlO1xyXG4gICAgdmFyIHRyYWNrID0gdHJhY2tGb3JNdXRhdGlvbnMuYmluZChudWxsLCBpc0ltbXV0YWJsZSwgaWdub3JlZFBhdGhzKTtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoX2MpIHtcclxuICAgICAgICB2YXIgZ2V0U3RhdGUgPSBfYy5nZXRTdGF0ZTtcclxuICAgICAgICB2YXIgc3RhdGUgPSBnZXRTdGF0ZSgpO1xyXG4gICAgICAgIHZhciB0cmFja2VyID0gdHJhY2soc3RhdGUpO1xyXG4gICAgICAgIHZhciByZXN1bHQ7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChuZXh0KSB7IHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICAgICAgICAgIHZhciBtZWFzdXJlVXRpbHMgPSBnZXRUaW1lTWVhc3VyZVV0aWxzKHdhcm5BZnRlciwgXCJJbW11dGFibGVTdGF0ZUludmFyaWFudE1pZGRsZXdhcmVcIik7XHJcbiAgICAgICAgICAgIG1lYXN1cmVVdGlscy5tZWFzdXJlVGltZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBzdGF0ZSA9IGdldFN0YXRlKCk7XHJcbiAgICAgICAgICAgICAgICByZXN1bHQgPSB0cmFja2VyLmRldGVjdE11dGF0aW9ucygpO1xyXG4gICAgICAgICAgICAgICAgdHJhY2tlciA9IHRyYWNrKHN0YXRlKTtcclxuICAgICAgICAgICAgICAgIGludmFyaWFudCghcmVzdWx0Lndhc011dGF0ZWQsIFwiQSBzdGF0ZSBtdXRhdGlvbiB3YXMgZGV0ZWN0ZWQgYmV0d2VlbiBkaXNwYXRjaGVzLCBpbiB0aGUgcGF0aCAnXCIgKyAocmVzdWx0LnBhdGggfHwgXCJcIikgKyBcIicuICBUaGlzIG1heSBjYXVzZSBpbmNvcnJlY3QgYmVoYXZpb3IuIChodHRwczovL3JlZHV4LmpzLm9yZy9zdHlsZS1ndWlkZS9zdHlsZS1ndWlkZSNkby1ub3QtbXV0YXRlLXN0YXRlKVwiKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHZhciBkaXNwYXRjaGVkQWN0aW9uID0gbmV4dChhY3Rpb24pO1xyXG4gICAgICAgICAgICBtZWFzdXJlVXRpbHMubWVhc3VyZVRpbWUoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgc3RhdGUgPSBnZXRTdGF0ZSgpO1xyXG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gdHJhY2tlci5kZXRlY3RNdXRhdGlvbnMoKTtcclxuICAgICAgICAgICAgICAgIHRyYWNrZXIgPSB0cmFjayhzdGF0ZSk7XHJcbiAgICAgICAgICAgICAgICByZXN1bHQud2FzTXV0YXRlZCAmJiBpbnZhcmlhbnQoIXJlc3VsdC53YXNNdXRhdGVkLCBcIkEgc3RhdGUgbXV0YXRpb24gd2FzIGRldGVjdGVkIGluc2lkZSBhIGRpc3BhdGNoLCBpbiB0aGUgcGF0aDogXCIgKyAocmVzdWx0LnBhdGggfHwgXCJcIikgKyBcIi4gVGFrZSBhIGxvb2sgYXQgdGhlIHJlZHVjZXIocykgaGFuZGxpbmcgdGhlIGFjdGlvbiBcIiArIHN0cmluZ2lmeShhY3Rpb24pICsgXCIuIChodHRwczovL3JlZHV4LmpzLm9yZy9zdHlsZS1ndWlkZS9zdHlsZS1ndWlkZSNkby1ub3QtbXV0YXRlLXN0YXRlKVwiKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIG1lYXN1cmVVdGlscy53YXJuSWZFeGNlZWRlZCgpO1xyXG4gICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2hlZEFjdGlvbjtcclxuICAgICAgICB9OyB9O1xyXG4gICAgfTtcclxufVxyXG4vLyBzcmMvc2VyaWFsaXphYmxlU3RhdGVJbnZhcmlhbnRNaWRkbGV3YXJlLnRzXHJcbmZ1bmN0aW9uIGlzUGxhaW4odmFsKSB7XHJcbiAgICB2YXIgdHlwZSA9IHR5cGVvZiB2YWw7XHJcbiAgICByZXR1cm4gdmFsID09IG51bGwgfHwgdHlwZSA9PT0gXCJzdHJpbmdcIiB8fCB0eXBlID09PSBcImJvb2xlYW5cIiB8fCB0eXBlID09PSBcIm51bWJlclwiIHx8IEFycmF5LmlzQXJyYXkodmFsKSB8fCBpc1BsYWluT2JqZWN0KHZhbCk7XHJcbn1cclxuZnVuY3Rpb24gZmluZE5vblNlcmlhbGl6YWJsZVZhbHVlKHZhbHVlLCBwYXRoLCBpc1NlcmlhbGl6YWJsZSwgZ2V0RW50cmllcywgaWdub3JlZFBhdGhzKSB7XHJcbiAgICBpZiAocGF0aCA9PT0gdm9pZCAwKSB7IHBhdGggPSBcIlwiOyB9XHJcbiAgICBpZiAoaXNTZXJpYWxpemFibGUgPT09IHZvaWQgMCkgeyBpc1NlcmlhbGl6YWJsZSA9IGlzUGxhaW47IH1cclxuICAgIGlmIChpZ25vcmVkUGF0aHMgPT09IHZvaWQgMCkgeyBpZ25vcmVkUGF0aHMgPSBbXTsgfVxyXG4gICAgdmFyIGZvdW5kTmVzdGVkU2VyaWFsaXphYmxlO1xyXG4gICAgaWYgKCFpc1NlcmlhbGl6YWJsZSh2YWx1ZSkpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBrZXlQYXRoOiBwYXRoIHx8IFwiPHJvb3Q+XCIsXHJcbiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcIm9iamVjdFwiIHx8IHZhbHVlID09PSBudWxsKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgdmFyIGVudHJpZXMgPSBnZXRFbnRyaWVzICE9IG51bGwgPyBnZXRFbnRyaWVzKHZhbHVlKSA6IE9iamVjdC5lbnRyaWVzKHZhbHVlKTtcclxuICAgIHZhciBoYXNJZ25vcmVkUGF0aHMgPSBpZ25vcmVkUGF0aHMubGVuZ3RoID4gMDtcclxuICAgIGZvciAodmFyIF9pID0gMCwgZW50cmllc18xID0gZW50cmllczsgX2kgPCBlbnRyaWVzXzEubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgdmFyIF9jID0gZW50cmllc18xW19pXSwga2V5ID0gX2NbMF0sIG5lc3RlZFZhbHVlID0gX2NbMV07XHJcbiAgICAgICAgdmFyIG5lc3RlZFBhdGggPSBwYXRoID8gcGF0aCArIFwiLlwiICsga2V5IDoga2V5O1xyXG4gICAgICAgIGlmIChoYXNJZ25vcmVkUGF0aHMgJiYgaWdub3JlZFBhdGhzLmluZGV4T2YobmVzdGVkUGF0aCkgPj0gMCkge1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFpc1NlcmlhbGl6YWJsZShuZXN0ZWRWYWx1ZSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIGtleVBhdGg6IG5lc3RlZFBhdGgsXHJcbiAgICAgICAgICAgICAgICB2YWx1ZTogbmVzdGVkVmFsdWVcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGVvZiBuZXN0ZWRWYWx1ZSA9PT0gXCJvYmplY3RcIikge1xyXG4gICAgICAgICAgICBmb3VuZE5lc3RlZFNlcmlhbGl6YWJsZSA9IGZpbmROb25TZXJpYWxpemFibGVWYWx1ZShuZXN0ZWRWYWx1ZSwgbmVzdGVkUGF0aCwgaXNTZXJpYWxpemFibGUsIGdldEVudHJpZXMsIGlnbm9yZWRQYXRocyk7XHJcbiAgICAgICAgICAgIGlmIChmb3VuZE5lc3RlZFNlcmlhbGl6YWJsZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZvdW5kTmVzdGVkU2VyaWFsaXphYmxlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG59XHJcbmZ1bmN0aW9uIGNyZWF0ZVNlcmlhbGl6YWJsZVN0YXRlSW52YXJpYW50TWlkZGxld2FyZShvcHRpb25zKSB7XHJcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxyXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIikge1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBmdW5jdGlvbiAobmV4dCkgeyByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gbmV4dChhY3Rpb24pOyB9OyB9OyB9O1xyXG4gICAgfVxyXG4gICAgdmFyIF9jID0gb3B0aW9ucy5pc1NlcmlhbGl6YWJsZSwgaXNTZXJpYWxpemFibGUgPSBfYyA9PT0gdm9pZCAwID8gaXNQbGFpbiA6IF9jLCBnZXRFbnRyaWVzID0gb3B0aW9ucy5nZXRFbnRyaWVzLCBfZCA9IG9wdGlvbnMuaWdub3JlZEFjdGlvbnMsIGlnbm9yZWRBY3Rpb25zID0gX2QgPT09IHZvaWQgMCA/IFtdIDogX2QsIF9lID0gb3B0aW9ucy5pZ25vcmVkQWN0aW9uUGF0aHMsIGlnbm9yZWRBY3Rpb25QYXRocyA9IF9lID09PSB2b2lkIDAgPyBbXCJtZXRhLmFyZ1wiLCBcIm1ldGEuYmFzZVF1ZXJ5TWV0YVwiXSA6IF9lLCBfZiA9IG9wdGlvbnMuaWdub3JlZFBhdGhzLCBpZ25vcmVkUGF0aHMgPSBfZiA9PT0gdm9pZCAwID8gW10gOiBfZiwgX2cgPSBvcHRpb25zLndhcm5BZnRlciwgd2FybkFmdGVyID0gX2cgPT09IHZvaWQgMCA/IDMyIDogX2csIF9oID0gb3B0aW9ucy5pZ25vcmVTdGF0ZSwgaWdub3JlU3RhdGUgPSBfaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfaCwgX2ogPSBvcHRpb25zLmlnbm9yZUFjdGlvbnMsIGlnbm9yZUFjdGlvbnMgPSBfaiA9PT0gdm9pZCAwID8gZmFsc2UgOiBfajtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoc3RvcmVBUEkpIHsgcmV0dXJuIGZ1bmN0aW9uIChuZXh0KSB7IHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICAgICAgdmFyIHJlc3VsdCA9IG5leHQoYWN0aW9uKTtcclxuICAgICAgICB2YXIgbWVhc3VyZVV0aWxzID0gZ2V0VGltZU1lYXN1cmVVdGlscyh3YXJuQWZ0ZXIsIFwiU2VyaWFsaXphYmxlU3RhdGVJbnZhcmlhbnRNaWRkbGV3YXJlXCIpO1xyXG4gICAgICAgIGlmICghaWdub3JlQWN0aW9ucyAmJiAhKGlnbm9yZWRBY3Rpb25zLmxlbmd0aCAmJiBpZ25vcmVkQWN0aW9ucy5pbmRleE9mKGFjdGlvbi50eXBlKSAhPT0gLTEpKSB7XHJcbiAgICAgICAgICAgIG1lYXN1cmVVdGlscy5tZWFzdXJlVGltZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZm91bmRBY3Rpb25Ob25TZXJpYWxpemFibGVWYWx1ZSA9IGZpbmROb25TZXJpYWxpemFibGVWYWx1ZShhY3Rpb24sIFwiXCIsIGlzU2VyaWFsaXphYmxlLCBnZXRFbnRyaWVzLCBpZ25vcmVkQWN0aW9uUGF0aHMpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGZvdW5kQWN0aW9uTm9uU2VyaWFsaXphYmxlVmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIga2V5UGF0aCA9IGZvdW5kQWN0aW9uTm9uU2VyaWFsaXphYmxlVmFsdWUua2V5UGF0aCwgdmFsdWUgPSBmb3VuZEFjdGlvbk5vblNlcmlhbGl6YWJsZVZhbHVlLnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJBIG5vbi1zZXJpYWxpemFibGUgdmFsdWUgd2FzIGRldGVjdGVkIGluIGFuIGFjdGlvbiwgaW4gdGhlIHBhdGg6IGBcIiArIGtleVBhdGggKyBcImAuIFZhbHVlOlwiLCB2YWx1ZSwgXCJcXG5UYWtlIGEgbG9vayBhdCB0aGUgbG9naWMgdGhhdCBkaXNwYXRjaGVkIHRoaXMgYWN0aW9uOiBcIiwgYWN0aW9uLCBcIlxcbihTZWUgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvZmFxL2FjdGlvbnMjd2h5LXNob3VsZC10eXBlLWJlLWEtc3RyaW5nLW9yLWF0LWxlYXN0LXNlcmlhbGl6YWJsZS13aHktc2hvdWxkLW15LWFjdGlvbi10eXBlcy1iZS1jb25zdGFudHMpXCIsIFwiXFxuKFRvIGFsbG93IG5vbi1zZXJpYWxpemFibGUgdmFsdWVzIHNlZTogaHR0cHM6Ly9yZWR1eC10b29sa2l0LmpzLm9yZy91c2FnZS91c2FnZS1ndWlkZSN3b3JraW5nLXdpdGgtbm9uLXNlcmlhbGl6YWJsZS1kYXRhKVwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghaWdub3JlU3RhdGUpIHtcclxuICAgICAgICAgICAgbWVhc3VyZVV0aWxzLm1lYXN1cmVUaW1lKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBzdGF0ZSA9IHN0b3JlQVBJLmdldFN0YXRlKCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZm91bmRTdGF0ZU5vblNlcmlhbGl6YWJsZVZhbHVlID0gZmluZE5vblNlcmlhbGl6YWJsZVZhbHVlKHN0YXRlLCBcIlwiLCBpc1NlcmlhbGl6YWJsZSwgZ2V0RW50cmllcywgaWdub3JlZFBhdGhzKTtcclxuICAgICAgICAgICAgICAgIGlmIChmb3VuZFN0YXRlTm9uU2VyaWFsaXphYmxlVmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIga2V5UGF0aCA9IGZvdW5kU3RhdGVOb25TZXJpYWxpemFibGVWYWx1ZS5rZXlQYXRoLCB2YWx1ZSA9IGZvdW5kU3RhdGVOb25TZXJpYWxpemFibGVWYWx1ZS52YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiQSBub24tc2VyaWFsaXphYmxlIHZhbHVlIHdhcyBkZXRlY3RlZCBpbiB0aGUgc3RhdGUsIGluIHRoZSBwYXRoOiBgXCIgKyBrZXlQYXRoICsgXCJgLiBWYWx1ZTpcIiwgdmFsdWUsIFwiXFxuVGFrZSBhIGxvb2sgYXQgdGhlIHJlZHVjZXIocykgaGFuZGxpbmcgdGhpcyBhY3Rpb24gdHlwZTogXCIgKyBhY3Rpb24udHlwZSArIFwiLlxcbihTZWUgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvZmFxL29yZ2FuaXppbmctc3RhdGUjY2FuLWktcHV0LWZ1bmN0aW9ucy1wcm9taXNlcy1vci1vdGhlci1ub24tc2VyaWFsaXphYmxlLWl0ZW1zLWluLW15LXN0b3JlLXN0YXRlKVwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIG1lYXN1cmVVdGlscy53YXJuSWZFeGNlZWRlZCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfTsgfTsgfTtcclxufVxyXG4vLyBzcmMvZ2V0RGVmYXVsdE1pZGRsZXdhcmUudHNcclxuZnVuY3Rpb24gaXNCb29sZWFuKHgpIHtcclxuICAgIHJldHVybiB0eXBlb2YgeCA9PT0gXCJib29sZWFuXCI7XHJcbn1cclxuZnVuY3Rpb24gY3VycnlHZXREZWZhdWx0TWlkZGxld2FyZSgpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiBjdXJyaWVkR2V0RGVmYXVsdE1pZGRsZXdhcmUob3B0aW9ucykge1xyXG4gICAgICAgIHJldHVybiBnZXREZWZhdWx0TWlkZGxld2FyZShvcHRpb25zKTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gZ2V0RGVmYXVsdE1pZGRsZXdhcmUob3B0aW9ucykge1xyXG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cclxuICAgIHZhciBfYyA9IG9wdGlvbnMudGh1bmssIHRodW5rID0gX2MgPT09IHZvaWQgMCA/IHRydWUgOiBfYywgX2QgPSBvcHRpb25zLmltbXV0YWJsZUNoZWNrLCBpbW11dGFibGVDaGVjayA9IF9kID09PSB2b2lkIDAgPyB0cnVlIDogX2QsIF9lID0gb3B0aW9ucy5zZXJpYWxpemFibGVDaGVjaywgc2VyaWFsaXphYmxlQ2hlY2sgPSBfZSA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9lO1xyXG4gICAgdmFyIG1pZGRsZXdhcmVBcnJheSA9IG5ldyBNaWRkbGV3YXJlQXJyYXkoKTtcclxuICAgIGlmICh0aHVuaykge1xyXG4gICAgICAgIGlmIChpc0Jvb2xlYW4odGh1bmspKSB7XHJcbiAgICAgICAgICAgIG1pZGRsZXdhcmVBcnJheS5wdXNoKHRodW5rTWlkZGxld2FyZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBtaWRkbGV3YXJlQXJyYXkucHVzaCh0aHVua01pZGRsZXdhcmUud2l0aEV4dHJhQXJndW1lbnQodGh1bmsuZXh0cmFBcmd1bWVudCkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICAgICBpZiAoaW1tdXRhYmxlQ2hlY2spIHtcclxuICAgICAgICAgICAgdmFyIGltbXV0YWJsZU9wdGlvbnMgPSB7fTtcclxuICAgICAgICAgICAgaWYgKCFpc0Jvb2xlYW4oaW1tdXRhYmxlQ2hlY2spKSB7XHJcbiAgICAgICAgICAgICAgICBpbW11dGFibGVPcHRpb25zID0gaW1tdXRhYmxlQ2hlY2s7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbWlkZGxld2FyZUFycmF5LnVuc2hpZnQoY3JlYXRlSW1tdXRhYmxlU3RhdGVJbnZhcmlhbnRNaWRkbGV3YXJlKGltbXV0YWJsZU9wdGlvbnMpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHNlcmlhbGl6YWJsZUNoZWNrKSB7XHJcbiAgICAgICAgICAgIHZhciBzZXJpYWxpemFibGVPcHRpb25zID0ge307XHJcbiAgICAgICAgICAgIGlmICghaXNCb29sZWFuKHNlcmlhbGl6YWJsZUNoZWNrKSkge1xyXG4gICAgICAgICAgICAgICAgc2VyaWFsaXphYmxlT3B0aW9ucyA9IHNlcmlhbGl6YWJsZUNoZWNrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG1pZGRsZXdhcmVBcnJheS5wdXNoKGNyZWF0ZVNlcmlhbGl6YWJsZVN0YXRlSW52YXJpYW50TWlkZGxld2FyZShzZXJpYWxpemFibGVPcHRpb25zKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG1pZGRsZXdhcmVBcnJheTtcclxufVxyXG4vLyBzcmMvY29uZmlndXJlU3RvcmUudHNcclxudmFyIElTX1BST0RVQ1RJT04gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCI7XHJcbmZ1bmN0aW9uIGNvbmZpZ3VyZVN0b3JlKG9wdGlvbnMpIHtcclxuICAgIHZhciBjdXJyaWVkR2V0RGVmYXVsdE1pZGRsZXdhcmUgPSBjdXJyeUdldERlZmF1bHRNaWRkbGV3YXJlKCk7XHJcbiAgICB2YXIgX2MgPSBvcHRpb25zIHx8IHt9LCBfZCA9IF9jLnJlZHVjZXIsIHJlZHVjZXIgPSBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QsIF9lID0gX2MubWlkZGxld2FyZSwgbWlkZGxld2FyZSA9IF9lID09PSB2b2lkIDAgPyBjdXJyaWVkR2V0RGVmYXVsdE1pZGRsZXdhcmUoKSA6IF9lLCBfZiA9IF9jLmRldlRvb2xzLCBkZXZUb29scyA9IF9mID09PSB2b2lkIDAgPyB0cnVlIDogX2YsIF9nID0gX2MucHJlbG9hZGVkU3RhdGUsIHByZWxvYWRlZFN0YXRlID0gX2cgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9nLCBfaCA9IF9jLmVuaGFuY2VycywgZW5oYW5jZXJzID0gX2ggPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9oO1xyXG4gICAgdmFyIHJvb3RSZWR1Y2VyO1xyXG4gICAgaWYgKHR5cGVvZiByZWR1Y2VyID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICByb290UmVkdWNlciA9IHJlZHVjZXI7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChpc1BsYWluT2JqZWN0KHJlZHVjZXIpKSB7XHJcbiAgICAgICAgcm9vdFJlZHVjZXIgPSBjb21iaW5lUmVkdWNlcnMocmVkdWNlcik7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1wicmVkdWNlclwiIGlzIGEgcmVxdWlyZWQgYXJndW1lbnQsIGFuZCBtdXN0IGJlIGEgZnVuY3Rpb24gb3IgYW4gb2JqZWN0IG9mIGZ1bmN0aW9ucyB0aGF0IGNhbiBiZSBwYXNzZWQgdG8gY29tYmluZVJlZHVjZXJzJyk7XHJcbiAgICB9XHJcbiAgICB2YXIgZmluYWxNaWRkbGV3YXJlID0gbWlkZGxld2FyZTtcclxuICAgIGlmICh0eXBlb2YgZmluYWxNaWRkbGV3YXJlID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICBmaW5hbE1pZGRsZXdhcmUgPSBmaW5hbE1pZGRsZXdhcmUoY3VycmllZEdldERlZmF1bHRNaWRkbGV3YXJlKTtcclxuICAgICAgICBpZiAoIUlTX1BST0RVQ1RJT04gJiYgIUFycmF5LmlzQXJyYXkoZmluYWxNaWRkbGV3YXJlKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ3aGVuIHVzaW5nIGEgbWlkZGxld2FyZSBidWlsZGVyIGZ1bmN0aW9uLCBhbiBhcnJheSBvZiBtaWRkbGV3YXJlIG11c3QgYmUgcmV0dXJuZWRcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKCFJU19QUk9EVUNUSU9OICYmIGZpbmFsTWlkZGxld2FyZS5zb21lKGZ1bmN0aW9uIChpdGVtKSB7IHJldHVybiB0eXBlb2YgaXRlbSAhPT0gXCJmdW5jdGlvblwiOyB9KSkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImVhY2ggbWlkZGxld2FyZSBwcm92aWRlZCB0byBjb25maWd1cmVTdG9yZSBtdXN0IGJlIGEgZnVuY3Rpb25cIik7XHJcbiAgICB9XHJcbiAgICB2YXIgbWlkZGxld2FyZUVuaGFuY2VyID0gYXBwbHlNaWRkbGV3YXJlLmFwcGx5KHZvaWQgMCwgZmluYWxNaWRkbGV3YXJlKTtcclxuICAgIHZhciBmaW5hbENvbXBvc2UgPSBjb21wb3NlMjtcclxuICAgIGlmIChkZXZUb29scykge1xyXG4gICAgICAgIGZpbmFsQ29tcG9zZSA9IGNvbXBvc2VXaXRoRGV2VG9vbHMoX19zcHJlYWRWYWx1ZXMoe1xyXG4gICAgICAgICAgICB0cmFjZTogIUlTX1BST0RVQ1RJT05cclxuICAgICAgICB9LCB0eXBlb2YgZGV2VG9vbHMgPT09IFwib2JqZWN0XCIgJiYgZGV2VG9vbHMpKTtcclxuICAgIH1cclxuICAgIHZhciBzdG9yZUVuaGFuY2VycyA9IFttaWRkbGV3YXJlRW5oYW5jZXJdO1xyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZW5oYW5jZXJzKSkge1xyXG4gICAgICAgIHN0b3JlRW5oYW5jZXJzID0gX19zcHJlYWRBcnJheShbbWlkZGxld2FyZUVuaGFuY2VyXSwgZW5oYW5jZXJzKTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHR5cGVvZiBlbmhhbmNlcnMgPT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgIHN0b3JlRW5oYW5jZXJzID0gZW5oYW5jZXJzKHN0b3JlRW5oYW5jZXJzKTtcclxuICAgIH1cclxuICAgIHZhciBjb21wb3NlZEVuaGFuY2VyID0gZmluYWxDb21wb3NlLmFwcGx5KHZvaWQgMCwgc3RvcmVFbmhhbmNlcnMpO1xyXG4gICAgcmV0dXJuIGNyZWF0ZVN0b3JlKHJvb3RSZWR1Y2VyLCBwcmVsb2FkZWRTdGF0ZSwgY29tcG9zZWRFbmhhbmNlcik7XHJcbn1cclxuLy8gc3JjL2NyZWF0ZUFjdGlvbi50c1xyXG5mdW5jdGlvbiBjcmVhdGVBY3Rpb24odHlwZSwgcHJlcGFyZUFjdGlvbikge1xyXG4gICAgZnVuY3Rpb24gYWN0aW9uQ3JlYXRvcigpIHtcclxuICAgICAgICB2YXIgYXJncyA9IFtdO1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHByZXBhcmVBY3Rpb24pIHtcclxuICAgICAgICAgICAgdmFyIHByZXBhcmVkID0gcHJlcGFyZUFjdGlvbi5hcHBseSh2b2lkIDAsIGFyZ3MpO1xyXG4gICAgICAgICAgICBpZiAoIXByZXBhcmVkKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJwcmVwYXJlQWN0aW9uIGRpZCBub3QgcmV0dXJuIGFuIG9iamVjdFwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe1xyXG4gICAgICAgICAgICAgICAgdHlwZTogdHlwZSxcclxuICAgICAgICAgICAgICAgIHBheWxvYWQ6IHByZXBhcmVkLnBheWxvYWRcclxuICAgICAgICAgICAgfSwgXCJtZXRhXCIgaW4gcHJlcGFyZWQgJiYgeyBtZXRhOiBwcmVwYXJlZC5tZXRhIH0pLCBcImVycm9yXCIgaW4gcHJlcGFyZWQgJiYgeyBlcnJvcjogcHJlcGFyZWQuZXJyb3IgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB7IHR5cGU6IHR5cGUsIHBheWxvYWQ6IGFyZ3NbMF0gfTtcclxuICAgIH1cclxuICAgIGFjdGlvbkNyZWF0b3IudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBcIlwiICsgdHlwZTsgfTtcclxuICAgIGFjdGlvbkNyZWF0b3IudHlwZSA9IHR5cGU7XHJcbiAgICBhY3Rpb25DcmVhdG9yLm1hdGNoID0gZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnR5cGUgPT09IHR5cGU7IH07XHJcbiAgICByZXR1cm4gYWN0aW9uQ3JlYXRvcjtcclxufVxyXG5mdW5jdGlvbiBpc0ZTQShhY3Rpb24pIHtcclxuICAgIHJldHVybiBpc1BsYWluT2JqZWN0KGFjdGlvbikgJiYgdHlwZW9mIGFjdGlvbi50eXBlID09PSBcInN0cmluZ1wiICYmIE9iamVjdC5rZXlzKGFjdGlvbikuZXZlcnkoaXNWYWxpZEtleSk7XHJcbn1cclxuZnVuY3Rpb24gaXNWYWxpZEtleShrZXkpIHtcclxuICAgIHJldHVybiBbXCJ0eXBlXCIsIFwicGF5bG9hZFwiLCBcImVycm9yXCIsIFwibWV0YVwiXS5pbmRleE9mKGtleSkgPiAtMTtcclxufVxyXG5mdW5jdGlvbiBnZXRUeXBlKGFjdGlvbkNyZWF0b3IpIHtcclxuICAgIHJldHVybiBcIlwiICsgYWN0aW9uQ3JlYXRvcjtcclxufVxyXG4vLyBzcmMvY3JlYXRlUmVkdWNlci50c1xyXG5pbXBvcnQgY3JlYXRlTmV4dFN0YXRlMiwgeyBpc0RyYWZ0IGFzIGlzRHJhZnQyLCBpc0RyYWZ0YWJsZSBhcyBpc0RyYWZ0YWJsZTIgfSBmcm9tIFwiaW1tZXJcIjtcclxuLy8gc3JjL21hcEJ1aWxkZXJzLnRzXHJcbmZ1bmN0aW9uIGV4ZWN1dGVSZWR1Y2VyQnVpbGRlckNhbGxiYWNrKGJ1aWxkZXJDYWxsYmFjaykge1xyXG4gICAgdmFyIGFjdGlvbnNNYXAgPSB7fTtcclxuICAgIHZhciBhY3Rpb25NYXRjaGVycyA9IFtdO1xyXG4gICAgdmFyIGRlZmF1bHRDYXNlUmVkdWNlcjtcclxuICAgIHZhciBidWlsZGVyID0ge1xyXG4gICAgICAgIGFkZENhc2U6IGZ1bmN0aW9uICh0eXBlT3JBY3Rpb25DcmVhdG9yLCByZWR1Y2VyKSB7XHJcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICAgICAgICAgICAgIGlmIChhY3Rpb25NYXRjaGVycy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiYGJ1aWxkZXIuYWRkQ2FzZWAgc2hvdWxkIG9ubHkgYmUgY2FsbGVkIGJlZm9yZSBjYWxsaW5nIGBidWlsZGVyLmFkZE1hdGNoZXJgXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGRlZmF1bHRDYXNlUmVkdWNlcikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImBidWlsZGVyLmFkZENhc2VgIHNob3VsZCBvbmx5IGJlIGNhbGxlZCBiZWZvcmUgY2FsbGluZyBgYnVpbGRlci5hZGREZWZhdWx0Q2FzZWBcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIHR5cGUgPSB0eXBlb2YgdHlwZU9yQWN0aW9uQ3JlYXRvciA9PT0gXCJzdHJpbmdcIiA/IHR5cGVPckFjdGlvbkNyZWF0b3IgOiB0eXBlT3JBY3Rpb25DcmVhdG9yLnR5cGU7XHJcbiAgICAgICAgICAgIGlmICh0eXBlIGluIGFjdGlvbnNNYXApIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImFkZENhc2UgY2Fubm90IGJlIGNhbGxlZCB3aXRoIHR3byByZWR1Y2VycyBmb3IgdGhlIHNhbWUgYWN0aW9uIHR5cGVcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYWN0aW9uc01hcFt0eXBlXSA9IHJlZHVjZXI7XHJcbiAgICAgICAgICAgIHJldHVybiBidWlsZGVyO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYWRkTWF0Y2hlcjogZnVuY3Rpb24gKG1hdGNoZXIsIHJlZHVjZXIpIHtcclxuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gICAgICAgICAgICAgICAgaWYgKGRlZmF1bHRDYXNlUmVkdWNlcikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImBidWlsZGVyLmFkZE1hdGNoZXJgIHNob3VsZCBvbmx5IGJlIGNhbGxlZCBiZWZvcmUgY2FsbGluZyBgYnVpbGRlci5hZGREZWZhdWx0Q2FzZWBcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYWN0aW9uTWF0Y2hlcnMucHVzaCh7IG1hdGNoZXI6IG1hdGNoZXIsIHJlZHVjZXI6IHJlZHVjZXIgfSk7XHJcbiAgICAgICAgICAgIHJldHVybiBidWlsZGVyO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYWRkRGVmYXVsdENhc2U6IGZ1bmN0aW9uIChyZWR1Y2VyKSB7XHJcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICAgICAgICAgICAgIGlmIChkZWZhdWx0Q2FzZVJlZHVjZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJgYnVpbGRlci5hZGREZWZhdWx0Q2FzZWAgY2FuIG9ubHkgYmUgY2FsbGVkIG9uY2VcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZGVmYXVsdENhc2VSZWR1Y2VyID0gcmVkdWNlcjtcclxuICAgICAgICAgICAgcmV0dXJuIGJ1aWxkZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGJ1aWxkZXJDYWxsYmFjayhidWlsZGVyKTtcclxuICAgIHJldHVybiBbYWN0aW9uc01hcCwgYWN0aW9uTWF0Y2hlcnMsIGRlZmF1bHRDYXNlUmVkdWNlcl07XHJcbn1cclxuLy8gc3JjL2NyZWF0ZVJlZHVjZXIudHNcclxuZnVuY3Rpb24gaXNTdGF0ZUZ1bmN0aW9uKHgpIHtcclxuICAgIHJldHVybiB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiO1xyXG59XHJcbmZ1bmN0aW9uIGNyZWF0ZVJlZHVjZXIoaW5pdGlhbFN0YXRlLCBtYXBPckJ1aWxkZXJDYWxsYmFjaywgYWN0aW9uTWF0Y2hlcnMsIGRlZmF1bHRDYXNlUmVkdWNlcikge1xyXG4gICAgaWYgKGFjdGlvbk1hdGNoZXJzID09PSB2b2lkIDApIHsgYWN0aW9uTWF0Y2hlcnMgPSBbXTsgfVxyXG4gICAgdmFyIF9jID0gdHlwZW9mIG1hcE9yQnVpbGRlckNhbGxiYWNrID09PSBcImZ1bmN0aW9uXCIgPyBleGVjdXRlUmVkdWNlckJ1aWxkZXJDYWxsYmFjayhtYXBPckJ1aWxkZXJDYWxsYmFjaykgOiBbbWFwT3JCdWlsZGVyQ2FsbGJhY2ssIGFjdGlvbk1hdGNoZXJzLCBkZWZhdWx0Q2FzZVJlZHVjZXJdLCBhY3Rpb25zTWFwID0gX2NbMF0sIGZpbmFsQWN0aW9uTWF0Y2hlcnMgPSBfY1sxXSwgZmluYWxEZWZhdWx0Q2FzZVJlZHVjZXIgPSBfY1syXTtcclxuICAgIHZhciBnZXRJbml0aWFsU3RhdGU7XHJcbiAgICBpZiAoaXNTdGF0ZUZ1bmN0aW9uKGluaXRpYWxTdGF0ZSkpIHtcclxuICAgICAgICBnZXRJbml0aWFsU3RhdGUgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBmcmVlemVEcmFmdGFibGUoaW5pdGlhbFN0YXRlKCkpOyB9O1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgdmFyIGZyb3plbkluaXRpYWxTdGF0ZV8xID0gZnJlZXplRHJhZnRhYmxlKGluaXRpYWxTdGF0ZSk7XHJcbiAgICAgICAgZ2V0SW5pdGlhbFN0YXRlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gZnJvemVuSW5pdGlhbFN0YXRlXzE7IH07XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiByZWR1Y2VyKHN0YXRlLCBhY3Rpb24pIHtcclxuICAgICAgICBpZiAoc3RhdGUgPT09IHZvaWQgMCkgeyBzdGF0ZSA9IGdldEluaXRpYWxTdGF0ZSgpOyB9XHJcbiAgICAgICAgdmFyIGNhc2VSZWR1Y2VycyA9IF9fc3ByZWFkQXJyYXkoW1xyXG4gICAgICAgICAgICBhY3Rpb25zTWFwW2FjdGlvbi50eXBlXVxyXG4gICAgICAgIF0sIGZpbmFsQWN0aW9uTWF0Y2hlcnMuZmlsdGVyKGZ1bmN0aW9uIChfYykge1xyXG4gICAgICAgICAgICB2YXIgbWF0Y2hlciA9IF9jLm1hdGNoZXI7XHJcbiAgICAgICAgICAgIHJldHVybiBtYXRjaGVyKGFjdGlvbik7XHJcbiAgICAgICAgfSkubWFwKGZ1bmN0aW9uIChfYykge1xyXG4gICAgICAgICAgICB2YXIgcmVkdWNlcjIgPSBfYy5yZWR1Y2VyO1xyXG4gICAgICAgICAgICByZXR1cm4gcmVkdWNlcjI7XHJcbiAgICAgICAgfSkpO1xyXG4gICAgICAgIGlmIChjYXNlUmVkdWNlcnMuZmlsdGVyKGZ1bmN0aW9uIChjcikgeyByZXR1cm4gISFjcjsgfSkubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIGNhc2VSZWR1Y2VycyA9IFtmaW5hbERlZmF1bHRDYXNlUmVkdWNlcl07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBjYXNlUmVkdWNlcnMucmVkdWNlKGZ1bmN0aW9uIChwcmV2aW91c1N0YXRlLCBjYXNlUmVkdWNlcikge1xyXG4gICAgICAgICAgICBpZiAoY2FzZVJlZHVjZXIpIHtcclxuICAgICAgICAgICAgICAgIGlmIChpc0RyYWZ0MihwcmV2aW91c1N0YXRlKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBkcmFmdCA9IHByZXZpb3VzU3RhdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IGNhc2VSZWR1Y2VyKGRyYWZ0LCBhY3Rpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgPT09IHZvaWQgMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJldmlvdXNTdGF0ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKCFpc0RyYWZ0YWJsZTIocHJldmlvdXNTdGF0ZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gY2FzZVJlZHVjZXIocHJldmlvdXNTdGF0ZSwgYWN0aW9uKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0ID09PSB2b2lkIDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByZXZpb3VzU3RhdGUgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcmV2aW91c1N0YXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IEVycm9yKFwiQSBjYXNlIHJlZHVjZXIgb24gYSBub24tZHJhZnRhYmxlIHZhbHVlIG11c3Qgbm90IHJldHVybiB1bmRlZmluZWRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlTmV4dFN0YXRlMihwcmV2aW91c1N0YXRlLCBmdW5jdGlvbiAoZHJhZnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhc2VSZWR1Y2VyKGRyYWZ0LCBhY3Rpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBwcmV2aW91c1N0YXRlO1xyXG4gICAgICAgIH0sIHN0YXRlKTtcclxuICAgIH1cclxuICAgIHJlZHVjZXIuZ2V0SW5pdGlhbFN0YXRlID0gZ2V0SW5pdGlhbFN0YXRlO1xyXG4gICAgcmV0dXJuIHJlZHVjZXI7XHJcbn1cclxuLy8gc3JjL2NyZWF0ZVNsaWNlLnRzXHJcbmZ1bmN0aW9uIGdldFR5cGUyKHNsaWNlLCBhY3Rpb25LZXkpIHtcclxuICAgIHJldHVybiBzbGljZSArIFwiL1wiICsgYWN0aW9uS2V5O1xyXG59XHJcbmZ1bmN0aW9uIGNyZWF0ZVNsaWNlKG9wdGlvbnMpIHtcclxuICAgIHZhciBuYW1lID0gb3B0aW9ucy5uYW1lO1xyXG4gICAgaWYgKCFuYW1lKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiYG5hbWVgIGlzIGEgcmVxdWlyZWQgb3B0aW9uIGZvciBjcmVhdGVTbGljZVwiKTtcclxuICAgIH1cclxuICAgIGlmICh0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiKSB7XHJcbiAgICAgICAgaWYgKG9wdGlvbnMuaW5pdGlhbFN0YXRlID09PSB2b2lkIDApIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIllvdSBtdXN0IHByb3ZpZGUgYW4gYGluaXRpYWxTdGF0ZWAgdmFsdWUgdGhhdCBpcyBub3QgYHVuZGVmaW5lZGAuIFlvdSBtYXkgaGF2ZSBtaXNzcGVsbGVkIGBpbml0aWFsU3RhdGVgXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHZhciBpbml0aWFsU3RhdGUgPSB0eXBlb2Ygb3B0aW9ucy5pbml0aWFsU3RhdGUgPT0gXCJmdW5jdGlvblwiID8gb3B0aW9ucy5pbml0aWFsU3RhdGUgOiBmcmVlemVEcmFmdGFibGUob3B0aW9ucy5pbml0aWFsU3RhdGUpO1xyXG4gICAgdmFyIHJlZHVjZXJzID0gb3B0aW9ucy5yZWR1Y2VycyB8fCB7fTtcclxuICAgIHZhciByZWR1Y2VyTmFtZXMgPSBPYmplY3Qua2V5cyhyZWR1Y2Vycyk7XHJcbiAgICB2YXIgc2xpY2VDYXNlUmVkdWNlcnNCeU5hbWUgPSB7fTtcclxuICAgIHZhciBzbGljZUNhc2VSZWR1Y2Vyc0J5VHlwZSA9IHt9O1xyXG4gICAgdmFyIGFjdGlvbkNyZWF0b3JzID0ge307XHJcbiAgICByZWR1Y2VyTmFtZXMuZm9yRWFjaChmdW5jdGlvbiAocmVkdWNlck5hbWUpIHtcclxuICAgICAgICB2YXIgbWF5YmVSZWR1Y2VyV2l0aFByZXBhcmUgPSByZWR1Y2Vyc1tyZWR1Y2VyTmFtZV07XHJcbiAgICAgICAgdmFyIHR5cGUgPSBnZXRUeXBlMihuYW1lLCByZWR1Y2VyTmFtZSk7XHJcbiAgICAgICAgdmFyIGNhc2VSZWR1Y2VyO1xyXG4gICAgICAgIHZhciBwcmVwYXJlQ2FsbGJhY2s7XHJcbiAgICAgICAgaWYgKFwicmVkdWNlclwiIGluIG1heWJlUmVkdWNlcldpdGhQcmVwYXJlKSB7XHJcbiAgICAgICAgICAgIGNhc2VSZWR1Y2VyID0gbWF5YmVSZWR1Y2VyV2l0aFByZXBhcmUucmVkdWNlcjtcclxuICAgICAgICAgICAgcHJlcGFyZUNhbGxiYWNrID0gbWF5YmVSZWR1Y2VyV2l0aFByZXBhcmUucHJlcGFyZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGNhc2VSZWR1Y2VyID0gbWF5YmVSZWR1Y2VyV2l0aFByZXBhcmU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNsaWNlQ2FzZVJlZHVjZXJzQnlOYW1lW3JlZHVjZXJOYW1lXSA9IGNhc2VSZWR1Y2VyO1xyXG4gICAgICAgIHNsaWNlQ2FzZVJlZHVjZXJzQnlUeXBlW3R5cGVdID0gY2FzZVJlZHVjZXI7XHJcbiAgICAgICAgYWN0aW9uQ3JlYXRvcnNbcmVkdWNlck5hbWVdID0gcHJlcGFyZUNhbGxiYWNrID8gY3JlYXRlQWN0aW9uKHR5cGUsIHByZXBhcmVDYWxsYmFjaykgOiBjcmVhdGVBY3Rpb24odHlwZSk7XHJcbiAgICB9KTtcclxuICAgIGZ1bmN0aW9uIGJ1aWxkUmVkdWNlcigpIHtcclxuICAgICAgICB2YXIgX2MgPSB0eXBlb2Ygb3B0aW9ucy5leHRyYVJlZHVjZXJzID09PSBcImZ1bmN0aW9uXCIgPyBleGVjdXRlUmVkdWNlckJ1aWxkZXJDYWxsYmFjayhvcHRpb25zLmV4dHJhUmVkdWNlcnMpIDogW29wdGlvbnMuZXh0cmFSZWR1Y2Vyc10sIF9kID0gX2NbMF0sIGV4dHJhUmVkdWNlcnMgPSBfZCA9PT0gdm9pZCAwID8ge30gOiBfZCwgX2UgPSBfY1sxXSwgYWN0aW9uTWF0Y2hlcnMgPSBfZSA9PT0gdm9pZCAwID8gW10gOiBfZSwgX2YgPSBfY1syXSwgZGVmYXVsdENhc2VSZWR1Y2VyID0gX2YgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9mO1xyXG4gICAgICAgIHZhciBmaW5hbENhc2VSZWR1Y2VycyA9IF9fc3ByZWFkVmFsdWVzKF9fc3ByZWFkVmFsdWVzKHt9LCBleHRyYVJlZHVjZXJzKSwgc2xpY2VDYXNlUmVkdWNlcnNCeVR5cGUpO1xyXG4gICAgICAgIHJldHVybiBjcmVhdGVSZWR1Y2VyKGluaXRpYWxTdGF0ZSwgZmluYWxDYXNlUmVkdWNlcnMsIGFjdGlvbk1hdGNoZXJzLCBkZWZhdWx0Q2FzZVJlZHVjZXIpO1xyXG4gICAgfVxyXG4gICAgdmFyIF9yZWR1Y2VyO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBuYW1lOiBuYW1lLFxyXG4gICAgICAgIHJlZHVjZXI6IGZ1bmN0aW9uIChzdGF0ZSwgYWN0aW9uKSB7XHJcbiAgICAgICAgICAgIGlmICghX3JlZHVjZXIpXHJcbiAgICAgICAgICAgICAgICBfcmVkdWNlciA9IGJ1aWxkUmVkdWNlcigpO1xyXG4gICAgICAgICAgICByZXR1cm4gX3JlZHVjZXIoc3RhdGUsIGFjdGlvbik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBhY3Rpb25zOiBhY3Rpb25DcmVhdG9ycyxcclxuICAgICAgICBjYXNlUmVkdWNlcnM6IHNsaWNlQ2FzZVJlZHVjZXJzQnlOYW1lLFxyXG4gICAgICAgIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoIV9yZWR1Y2VyKVxyXG4gICAgICAgICAgICAgICAgX3JlZHVjZXIgPSBidWlsZFJlZHVjZXIoKTtcclxuICAgICAgICAgICAgcmV0dXJuIF9yZWR1Y2VyLmdldEluaXRpYWxTdGF0ZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxuLy8gc3JjL2VudGl0aWVzL2VudGl0eV9zdGF0ZS50c1xyXG5mdW5jdGlvbiBnZXRJbml0aWFsRW50aXR5U3RhdGUoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGlkczogW10sXHJcbiAgICAgICAgZW50aXRpZXM6IHt9XHJcbiAgICB9O1xyXG59XHJcbmZ1bmN0aW9uIGNyZWF0ZUluaXRpYWxTdGF0ZUZhY3RvcnkoKSB7XHJcbiAgICBmdW5jdGlvbiBnZXRJbml0aWFsU3RhdGUoYWRkaXRpb25hbFN0YXRlKSB7XHJcbiAgICAgICAgaWYgKGFkZGl0aW9uYWxTdGF0ZSA9PT0gdm9pZCAwKSB7IGFkZGl0aW9uYWxTdGF0ZSA9IHt9OyB9XHJcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oZ2V0SW5pdGlhbEVudGl0eVN0YXRlKCksIGFkZGl0aW9uYWxTdGF0ZSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4geyBnZXRJbml0aWFsU3RhdGU6IGdldEluaXRpYWxTdGF0ZSB9O1xyXG59XHJcbi8vIHNyYy9lbnRpdGllcy9zdGF0ZV9zZWxlY3RvcnMudHNcclxuZnVuY3Rpb24gY3JlYXRlU2VsZWN0b3JzRmFjdG9yeSgpIHtcclxuICAgIGZ1bmN0aW9uIGdldFNlbGVjdG9ycyhzZWxlY3RTdGF0ZSkge1xyXG4gICAgICAgIHZhciBzZWxlY3RJZHMgPSBmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuIHN0YXRlLmlkczsgfTtcclxuICAgICAgICB2YXIgc2VsZWN0RW50aXRpZXMgPSBmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuIHN0YXRlLmVudGl0aWVzOyB9O1xyXG4gICAgICAgIHZhciBzZWxlY3RBbGwgPSBjcmVhdGVEcmFmdFNhZmVTZWxlY3RvcihzZWxlY3RJZHMsIHNlbGVjdEVudGl0aWVzLCBmdW5jdGlvbiAoaWRzLCBlbnRpdGllcykgeyByZXR1cm4gaWRzLm1hcChmdW5jdGlvbiAoaWQpIHsgcmV0dXJuIGVudGl0aWVzW2lkXTsgfSk7IH0pO1xyXG4gICAgICAgIHZhciBzZWxlY3RJZCA9IGZ1bmN0aW9uIChfLCBpZCkgeyByZXR1cm4gaWQ7IH07XHJcbiAgICAgICAgdmFyIHNlbGVjdEJ5SWQgPSBmdW5jdGlvbiAoZW50aXRpZXMsIGlkKSB7IHJldHVybiBlbnRpdGllc1tpZF07IH07XHJcbiAgICAgICAgdmFyIHNlbGVjdFRvdGFsID0gY3JlYXRlRHJhZnRTYWZlU2VsZWN0b3Ioc2VsZWN0SWRzLCBmdW5jdGlvbiAoaWRzKSB7IHJldHVybiBpZHMubGVuZ3RoOyB9KTtcclxuICAgICAgICBpZiAoIXNlbGVjdFN0YXRlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBzZWxlY3RJZHM6IHNlbGVjdElkcyxcclxuICAgICAgICAgICAgICAgIHNlbGVjdEVudGl0aWVzOiBzZWxlY3RFbnRpdGllcyxcclxuICAgICAgICAgICAgICAgIHNlbGVjdEFsbDogc2VsZWN0QWxsLFxyXG4gICAgICAgICAgICAgICAgc2VsZWN0VG90YWw6IHNlbGVjdFRvdGFsLFxyXG4gICAgICAgICAgICAgICAgc2VsZWN0QnlJZDogY3JlYXRlRHJhZnRTYWZlU2VsZWN0b3Ioc2VsZWN0RW50aXRpZXMsIHNlbGVjdElkLCBzZWxlY3RCeUlkKVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgc2VsZWN0R2xvYmFsaXplZEVudGl0aWVzID0gY3JlYXRlRHJhZnRTYWZlU2VsZWN0b3Ioc2VsZWN0U3RhdGUsIHNlbGVjdEVudGl0aWVzKTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBzZWxlY3RJZHM6IGNyZWF0ZURyYWZ0U2FmZVNlbGVjdG9yKHNlbGVjdFN0YXRlLCBzZWxlY3RJZHMpLFxyXG4gICAgICAgICAgICBzZWxlY3RFbnRpdGllczogc2VsZWN0R2xvYmFsaXplZEVudGl0aWVzLFxyXG4gICAgICAgICAgICBzZWxlY3RBbGw6IGNyZWF0ZURyYWZ0U2FmZVNlbGVjdG9yKHNlbGVjdFN0YXRlLCBzZWxlY3RBbGwpLFxyXG4gICAgICAgICAgICBzZWxlY3RUb3RhbDogY3JlYXRlRHJhZnRTYWZlU2VsZWN0b3Ioc2VsZWN0U3RhdGUsIHNlbGVjdFRvdGFsKSxcclxuICAgICAgICAgICAgc2VsZWN0QnlJZDogY3JlYXRlRHJhZnRTYWZlU2VsZWN0b3Ioc2VsZWN0R2xvYmFsaXplZEVudGl0aWVzLCBzZWxlY3RJZCwgc2VsZWN0QnlJZClcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHsgZ2V0U2VsZWN0b3JzOiBnZXRTZWxlY3RvcnMgfTtcclxufVxyXG4vLyBzcmMvZW50aXRpZXMvc3RhdGVfYWRhcHRlci50c1xyXG5pbXBvcnQgY3JlYXRlTmV4dFN0YXRlMywgeyBpc0RyYWZ0IGFzIGlzRHJhZnQzIH0gZnJvbSBcImltbWVyXCI7XHJcbmZ1bmN0aW9uIGNyZWF0ZVNpbmdsZUFyZ3VtZW50U3RhdGVPcGVyYXRvcihtdXRhdG9yKSB7XHJcbiAgICB2YXIgb3BlcmF0b3IgPSBjcmVhdGVTdGF0ZU9wZXJhdG9yKGZ1bmN0aW9uIChfLCBzdGF0ZSkgeyByZXR1cm4gbXV0YXRvcihzdGF0ZSk7IH0pO1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIG9wZXJhdGlvbihzdGF0ZSkge1xyXG4gICAgICAgIHJldHVybiBvcGVyYXRvcihzdGF0ZSwgdm9pZCAwKTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gY3JlYXRlU3RhdGVPcGVyYXRvcihtdXRhdG9yKSB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gb3BlcmF0aW9uKHN0YXRlLCBhcmcpIHtcclxuICAgICAgICBmdW5jdGlvbiBpc1BheWxvYWRBY3Rpb25Bcmd1bWVudChhcmcyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBpc0ZTQShhcmcyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHJ1bk11dGF0b3IgPSBmdW5jdGlvbiAoZHJhZnQpIHtcclxuICAgICAgICAgICAgaWYgKGlzUGF5bG9hZEFjdGlvbkFyZ3VtZW50KGFyZykpIHtcclxuICAgICAgICAgICAgICAgIG11dGF0b3IoYXJnLnBheWxvYWQsIGRyYWZ0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIG11dGF0b3IoYXJnLCBkcmFmdCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmIChpc0RyYWZ0MyhzdGF0ZSkpIHtcclxuICAgICAgICAgICAgcnVuTXV0YXRvcihzdGF0ZSk7XHJcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVOZXh0U3RhdGUzKHN0YXRlLCBydW5NdXRhdG9yKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59XHJcbi8vIHNyYy9lbnRpdGllcy91dGlscy50c1xyXG5mdW5jdGlvbiBzZWxlY3RJZFZhbHVlKGVudGl0eSwgc2VsZWN0SWQpIHtcclxuICAgIHZhciBrZXkgPSBzZWxlY3RJZChlbnRpdHkpO1xyXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiAmJiBrZXkgPT09IHZvaWQgMCkge1xyXG4gICAgICAgIGNvbnNvbGUud2FybihcIlRoZSBlbnRpdHkgcGFzc2VkIHRvIHRoZSBgc2VsZWN0SWRgIGltcGxlbWVudGF0aW9uIHJldHVybmVkIHVuZGVmaW5lZC5cIiwgXCJZb3Ugc2hvdWxkIHByb2JhYmx5IHByb3ZpZGUgeW91ciBvd24gYHNlbGVjdElkYCBpbXBsZW1lbnRhdGlvbi5cIiwgXCJUaGUgZW50aXR5IHRoYXQgd2FzIHBhc3NlZDpcIiwgZW50aXR5LCBcIlRoZSBgc2VsZWN0SWRgIGltcGxlbWVudGF0aW9uOlwiLCBzZWxlY3RJZC50b1N0cmluZygpKTtcclxuICAgIH1cclxuICAgIHJldHVybiBrZXk7XHJcbn1cclxuZnVuY3Rpb24gZW5zdXJlRW50aXRpZXNBcnJheShlbnRpdGllcykge1xyXG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGVudGl0aWVzKSkge1xyXG4gICAgICAgIGVudGl0aWVzID0gT2JqZWN0LnZhbHVlcyhlbnRpdGllcyk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZW50aXRpZXM7XHJcbn1cclxuZnVuY3Rpb24gc3BsaXRBZGRlZFVwZGF0ZWRFbnRpdGllcyhuZXdFbnRpdGllcywgc2VsZWN0SWQsIHN0YXRlKSB7XHJcbiAgICBuZXdFbnRpdGllcyA9IGVuc3VyZUVudGl0aWVzQXJyYXkobmV3RW50aXRpZXMpO1xyXG4gICAgdmFyIGFkZGVkID0gW107XHJcbiAgICB2YXIgdXBkYXRlZCA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwLCBuZXdFbnRpdGllc18xID0gbmV3RW50aXRpZXM7IF9pIDwgbmV3RW50aXRpZXNfMS5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICB2YXIgZW50aXR5ID0gbmV3RW50aXRpZXNfMVtfaV07XHJcbiAgICAgICAgdmFyIGlkID0gc2VsZWN0SWRWYWx1ZShlbnRpdHksIHNlbGVjdElkKTtcclxuICAgICAgICBpZiAoaWQgaW4gc3RhdGUuZW50aXRpZXMpIHtcclxuICAgICAgICAgICAgdXBkYXRlZC5wdXNoKHsgaWQ6IGlkLCBjaGFuZ2VzOiBlbnRpdHkgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBhZGRlZC5wdXNoKGVudGl0eSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIFthZGRlZCwgdXBkYXRlZF07XHJcbn1cclxuLy8gc3JjL2VudGl0aWVzL3Vuc29ydGVkX3N0YXRlX2FkYXB0ZXIudHNcclxuZnVuY3Rpb24gY3JlYXRlVW5zb3J0ZWRTdGF0ZUFkYXB0ZXIoc2VsZWN0SWQpIHtcclxuICAgIGZ1bmN0aW9uIGFkZE9uZU11dGFibHkoZW50aXR5LCBzdGF0ZSkge1xyXG4gICAgICAgIHZhciBrZXkgPSBzZWxlY3RJZFZhbHVlKGVudGl0eSwgc2VsZWN0SWQpO1xyXG4gICAgICAgIGlmIChrZXkgaW4gc3RhdGUuZW50aXRpZXMpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzdGF0ZS5pZHMucHVzaChrZXkpO1xyXG4gICAgICAgIHN0YXRlLmVudGl0aWVzW2tleV0gPSBlbnRpdHk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBhZGRNYW55TXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpIHtcclxuICAgICAgICBuZXdFbnRpdGllcyA9IGVuc3VyZUVudGl0aWVzQXJyYXkobmV3RW50aXRpZXMpO1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgbmV3RW50aXRpZXNfMiA9IG5ld0VudGl0aWVzOyBfaSA8IG5ld0VudGl0aWVzXzIubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBlbnRpdHkgPSBuZXdFbnRpdGllc18yW19pXTtcclxuICAgICAgICAgICAgYWRkT25lTXV0YWJseShlbnRpdHksIHN0YXRlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBzZXRPbmVNdXRhYmx5KGVudGl0eSwgc3RhdGUpIHtcclxuICAgICAgICB2YXIga2V5ID0gc2VsZWN0SWRWYWx1ZShlbnRpdHksIHNlbGVjdElkKTtcclxuICAgICAgICBpZiAoIShrZXkgaW4gc3RhdGUuZW50aXRpZXMpKSB7XHJcbiAgICAgICAgICAgIHN0YXRlLmlkcy5wdXNoKGtleSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHN0YXRlLmVudGl0aWVzW2tleV0gPSBlbnRpdHk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBzZXRNYW55TXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpIHtcclxuICAgICAgICBuZXdFbnRpdGllcyA9IGVuc3VyZUVudGl0aWVzQXJyYXkobmV3RW50aXRpZXMpO1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgbmV3RW50aXRpZXNfMyA9IG5ld0VudGl0aWVzOyBfaSA8IG5ld0VudGl0aWVzXzMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBlbnRpdHkgPSBuZXdFbnRpdGllc18zW19pXTtcclxuICAgICAgICAgICAgc2V0T25lTXV0YWJseShlbnRpdHksIHN0YXRlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBzZXRBbGxNdXRhYmx5KG5ld0VudGl0aWVzLCBzdGF0ZSkge1xyXG4gICAgICAgIG5ld0VudGl0aWVzID0gZW5zdXJlRW50aXRpZXNBcnJheShuZXdFbnRpdGllcyk7XHJcbiAgICAgICAgc3RhdGUuaWRzID0gW107XHJcbiAgICAgICAgc3RhdGUuZW50aXRpZXMgPSB7fTtcclxuICAgICAgICBhZGRNYW55TXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gcmVtb3ZlT25lTXV0YWJseShrZXksIHN0YXRlKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlbW92ZU1hbnlNdXRhYmx5KFtrZXldLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiByZW1vdmVNYW55TXV0YWJseShrZXlzLCBzdGF0ZSkge1xyXG4gICAgICAgIHZhciBkaWRNdXRhdGUgPSBmYWxzZTtcclxuICAgICAgICBrZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xyXG4gICAgICAgICAgICBpZiAoa2V5IGluIHN0YXRlLmVudGl0aWVzKSB7XHJcbiAgICAgICAgICAgICAgICBkZWxldGUgc3RhdGUuZW50aXRpZXNba2V5XTtcclxuICAgICAgICAgICAgICAgIGRpZE11dGF0ZSA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAoZGlkTXV0YXRlKSB7XHJcbiAgICAgICAgICAgIHN0YXRlLmlkcyA9IHN0YXRlLmlkcy5maWx0ZXIoZnVuY3Rpb24gKGlkKSB7IHJldHVybiBpZCBpbiBzdGF0ZS5lbnRpdGllczsgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gcmVtb3ZlQWxsTXV0YWJseShzdGF0ZSkge1xyXG4gICAgICAgIE9iamVjdC5hc3NpZ24oc3RhdGUsIHtcclxuICAgICAgICAgICAgaWRzOiBbXSxcclxuICAgICAgICAgICAgZW50aXRpZXM6IHt9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiB0YWtlTmV3S2V5KGtleXMsIHVwZGF0ZSwgc3RhdGUpIHtcclxuICAgICAgICB2YXIgb3JpZ2luYWwyID0gc3RhdGUuZW50aXRpZXNbdXBkYXRlLmlkXTtcclxuICAgICAgICB2YXIgdXBkYXRlZCA9IE9iamVjdC5hc3NpZ24oe30sIG9yaWdpbmFsMiwgdXBkYXRlLmNoYW5nZXMpO1xyXG4gICAgICAgIHZhciBuZXdLZXkgPSBzZWxlY3RJZFZhbHVlKHVwZGF0ZWQsIHNlbGVjdElkKTtcclxuICAgICAgICB2YXIgaGFzTmV3S2V5ID0gbmV3S2V5ICE9PSB1cGRhdGUuaWQ7XHJcbiAgICAgICAgaWYgKGhhc05ld0tleSkge1xyXG4gICAgICAgICAgICBrZXlzW3VwZGF0ZS5pZF0gPSBuZXdLZXk7XHJcbiAgICAgICAgICAgIGRlbGV0ZSBzdGF0ZS5lbnRpdGllc1t1cGRhdGUuaWRdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzdGF0ZS5lbnRpdGllc1tuZXdLZXldID0gdXBkYXRlZDtcclxuICAgICAgICByZXR1cm4gaGFzTmV3S2V5O1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gdXBkYXRlT25lTXV0YWJseSh1cGRhdGUsIHN0YXRlKSB7XHJcbiAgICAgICAgcmV0dXJuIHVwZGF0ZU1hbnlNdXRhYmx5KFt1cGRhdGVdLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiB1cGRhdGVNYW55TXV0YWJseSh1cGRhdGVzLCBzdGF0ZSkge1xyXG4gICAgICAgIHZhciBuZXdLZXlzID0ge307XHJcbiAgICAgICAgdmFyIHVwZGF0ZXNQZXJFbnRpdHkgPSB7fTtcclxuICAgICAgICB1cGRhdGVzLmZvckVhY2goZnVuY3Rpb24gKHVwZGF0ZSkge1xyXG4gICAgICAgICAgICBpZiAodXBkYXRlLmlkIGluIHN0YXRlLmVudGl0aWVzKSB7XHJcbiAgICAgICAgICAgICAgICB1cGRhdGVzUGVyRW50aXR5W3VwZGF0ZS5pZF0gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWQ6IHVwZGF0ZS5pZCxcclxuICAgICAgICAgICAgICAgICAgICBjaGFuZ2VzOiBfX3NwcmVhZFZhbHVlcyhfX3NwcmVhZFZhbHVlcyh7fSwgdXBkYXRlc1BlckVudGl0eVt1cGRhdGUuaWRdID8gdXBkYXRlc1BlckVudGl0eVt1cGRhdGUuaWRdLmNoYW5nZXMgOiBudWxsKSwgdXBkYXRlLmNoYW5nZXMpXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdXBkYXRlcyA9IE9iamVjdC52YWx1ZXModXBkYXRlc1BlckVudGl0eSk7XHJcbiAgICAgICAgdmFyIGRpZE11dGF0ZUVudGl0aWVzID0gdXBkYXRlcy5sZW5ndGggPiAwO1xyXG4gICAgICAgIGlmIChkaWRNdXRhdGVFbnRpdGllcykge1xyXG4gICAgICAgICAgICB2YXIgZGlkTXV0YXRlSWRzID0gdXBkYXRlcy5maWx0ZXIoZnVuY3Rpb24gKHVwZGF0ZSkgeyByZXR1cm4gdGFrZU5ld0tleShuZXdLZXlzLCB1cGRhdGUsIHN0YXRlKTsgfSkubGVuZ3RoID4gMDtcclxuICAgICAgICAgICAgaWYgKGRpZE11dGF0ZUlkcykge1xyXG4gICAgICAgICAgICAgICAgc3RhdGUuaWRzID0gT2JqZWN0LmtleXMoc3RhdGUuZW50aXRpZXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gdXBzZXJ0T25lTXV0YWJseShlbnRpdHksIHN0YXRlKSB7XHJcbiAgICAgICAgcmV0dXJuIHVwc2VydE1hbnlNdXRhYmx5KFtlbnRpdHldLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiB1cHNlcnRNYW55TXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpIHtcclxuICAgICAgICB2YXIgX2MgPSBzcGxpdEFkZGVkVXBkYXRlZEVudGl0aWVzKG5ld0VudGl0aWVzLCBzZWxlY3RJZCwgc3RhdGUpLCBhZGRlZCA9IF9jWzBdLCB1cGRhdGVkID0gX2NbMV07XHJcbiAgICAgICAgdXBkYXRlTWFueU11dGFibHkodXBkYXRlZCwgc3RhdGUpO1xyXG4gICAgICAgIGFkZE1hbnlNdXRhYmx5KGFkZGVkLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHJlbW92ZUFsbDogY3JlYXRlU2luZ2xlQXJndW1lbnRTdGF0ZU9wZXJhdG9yKHJlbW92ZUFsbE11dGFibHkpLFxyXG4gICAgICAgIGFkZE9uZTogY3JlYXRlU3RhdGVPcGVyYXRvcihhZGRPbmVNdXRhYmx5KSxcclxuICAgICAgICBhZGRNYW55OiBjcmVhdGVTdGF0ZU9wZXJhdG9yKGFkZE1hbnlNdXRhYmx5KSxcclxuICAgICAgICBzZXRPbmU6IGNyZWF0ZVN0YXRlT3BlcmF0b3Ioc2V0T25lTXV0YWJseSksXHJcbiAgICAgICAgc2V0TWFueTogY3JlYXRlU3RhdGVPcGVyYXRvcihzZXRNYW55TXV0YWJseSksXHJcbiAgICAgICAgc2V0QWxsOiBjcmVhdGVTdGF0ZU9wZXJhdG9yKHNldEFsbE11dGFibHkpLFxyXG4gICAgICAgIHVwZGF0ZU9uZTogY3JlYXRlU3RhdGVPcGVyYXRvcih1cGRhdGVPbmVNdXRhYmx5KSxcclxuICAgICAgICB1cGRhdGVNYW55OiBjcmVhdGVTdGF0ZU9wZXJhdG9yKHVwZGF0ZU1hbnlNdXRhYmx5KSxcclxuICAgICAgICB1cHNlcnRPbmU6IGNyZWF0ZVN0YXRlT3BlcmF0b3IodXBzZXJ0T25lTXV0YWJseSksXHJcbiAgICAgICAgdXBzZXJ0TWFueTogY3JlYXRlU3RhdGVPcGVyYXRvcih1cHNlcnRNYW55TXV0YWJseSksXHJcbiAgICAgICAgcmVtb3ZlT25lOiBjcmVhdGVTdGF0ZU9wZXJhdG9yKHJlbW92ZU9uZU11dGFibHkpLFxyXG4gICAgICAgIHJlbW92ZU1hbnk6IGNyZWF0ZVN0YXRlT3BlcmF0b3IocmVtb3ZlTWFueU11dGFibHkpXHJcbiAgICB9O1xyXG59XHJcbi8vIHNyYy9lbnRpdGllcy9zb3J0ZWRfc3RhdGVfYWRhcHRlci50c1xyXG5mdW5jdGlvbiBjcmVhdGVTb3J0ZWRTdGF0ZUFkYXB0ZXIoc2VsZWN0SWQsIHNvcnQpIHtcclxuICAgIHZhciBfYyA9IGNyZWF0ZVVuc29ydGVkU3RhdGVBZGFwdGVyKHNlbGVjdElkKSwgcmVtb3ZlT25lID0gX2MucmVtb3ZlT25lLCByZW1vdmVNYW55ID0gX2MucmVtb3ZlTWFueSwgcmVtb3ZlQWxsID0gX2MucmVtb3ZlQWxsO1xyXG4gICAgZnVuY3Rpb24gYWRkT25lTXV0YWJseShlbnRpdHksIHN0YXRlKSB7XHJcbiAgICAgICAgcmV0dXJuIGFkZE1hbnlNdXRhYmx5KFtlbnRpdHldLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBhZGRNYW55TXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpIHtcclxuICAgICAgICBuZXdFbnRpdGllcyA9IGVuc3VyZUVudGl0aWVzQXJyYXkobmV3RW50aXRpZXMpO1xyXG4gICAgICAgIHZhciBtb2RlbHMgPSBuZXdFbnRpdGllcy5maWx0ZXIoZnVuY3Rpb24gKG1vZGVsKSB7IHJldHVybiAhKHNlbGVjdElkVmFsdWUobW9kZWwsIHNlbGVjdElkKSBpbiBzdGF0ZS5lbnRpdGllcyk7IH0pO1xyXG4gICAgICAgIGlmIChtb2RlbHMubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgIG1lcmdlKG1vZGVscywgc3RhdGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHNldE9uZU11dGFibHkoZW50aXR5LCBzdGF0ZSkge1xyXG4gICAgICAgIHJldHVybiBzZXRNYW55TXV0YWJseShbZW50aXR5XSwgc3RhdGUpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gc2V0TWFueU11dGFibHkobmV3RW50aXRpZXMsIHN0YXRlKSB7XHJcbiAgICAgICAgbmV3RW50aXRpZXMgPSBlbnN1cmVFbnRpdGllc0FycmF5KG5ld0VudGl0aWVzKTtcclxuICAgICAgICBpZiAobmV3RW50aXRpZXMubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgIG1lcmdlKG5ld0VudGl0aWVzLCBzdGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gc2V0QWxsTXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpIHtcclxuICAgICAgICBuZXdFbnRpdGllcyA9IGVuc3VyZUVudGl0aWVzQXJyYXkobmV3RW50aXRpZXMpO1xyXG4gICAgICAgIHN0YXRlLmVudGl0aWVzID0ge307XHJcbiAgICAgICAgc3RhdGUuaWRzID0gW107XHJcbiAgICAgICAgYWRkTWFueU11dGFibHkobmV3RW50aXRpZXMsIHN0YXRlKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHVwZGF0ZU9uZU11dGFibHkodXBkYXRlLCBzdGF0ZSkge1xyXG4gICAgICAgIHJldHVybiB1cGRhdGVNYW55TXV0YWJseShbdXBkYXRlXSwgc3RhdGUpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gdXBkYXRlTWFueU11dGFibHkodXBkYXRlcywgc3RhdGUpIHtcclxuICAgICAgICB2YXIgYXBwbGllZFVwZGF0ZXMgPSBmYWxzZTtcclxuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIHVwZGF0ZXNfMSA9IHVwZGF0ZXM7IF9pIDwgdXBkYXRlc18xLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICB2YXIgdXBkYXRlID0gdXBkYXRlc18xW19pXTtcclxuICAgICAgICAgICAgdmFyIGVudGl0eSA9IHN0YXRlLmVudGl0aWVzW3VwZGF0ZS5pZF07XHJcbiAgICAgICAgICAgIGlmICghZW50aXR5KSB7XHJcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBhcHBsaWVkVXBkYXRlcyA9IHRydWU7XHJcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oZW50aXR5LCB1cGRhdGUuY2hhbmdlcyk7XHJcbiAgICAgICAgICAgIHZhciBuZXdJZCA9IHNlbGVjdElkKGVudGl0eSk7XHJcbiAgICAgICAgICAgIGlmICh1cGRhdGUuaWQgIT09IG5ld0lkKSB7XHJcbiAgICAgICAgICAgICAgICBkZWxldGUgc3RhdGUuZW50aXRpZXNbdXBkYXRlLmlkXTtcclxuICAgICAgICAgICAgICAgIHN0YXRlLmVudGl0aWVzW25ld0lkXSA9IGVudGl0eTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoYXBwbGllZFVwZGF0ZXMpIHtcclxuICAgICAgICAgICAgcmVzb3J0RW50aXRpZXMoc3RhdGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHVwc2VydE9uZU11dGFibHkoZW50aXR5LCBzdGF0ZSkge1xyXG4gICAgICAgIHJldHVybiB1cHNlcnRNYW55TXV0YWJseShbZW50aXR5XSwgc3RhdGUpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gdXBzZXJ0TWFueU11dGFibHkobmV3RW50aXRpZXMsIHN0YXRlKSB7XHJcbiAgICAgICAgdmFyIF9jID0gc3BsaXRBZGRlZFVwZGF0ZWRFbnRpdGllcyhuZXdFbnRpdGllcywgc2VsZWN0SWQsIHN0YXRlKSwgYWRkZWQgPSBfY1swXSwgdXBkYXRlZCA9IF9jWzFdO1xyXG4gICAgICAgIHVwZGF0ZU1hbnlNdXRhYmx5KHVwZGF0ZWQsIHN0YXRlKTtcclxuICAgICAgICBhZGRNYW55TXV0YWJseShhZGRlZCwgc3RhdGUpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gYXJlQXJyYXlzRXF1YWwoYSwgYikge1xyXG4gICAgICAgIGlmIChhLmxlbmd0aCAhPT0gYi5sZW5ndGgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGEubGVuZ3RoICYmIGkgPCBiLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmIChhW2ldID09PSBiW2ldKSB7XHJcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gbWVyZ2UobW9kZWxzLCBzdGF0ZSkge1xyXG4gICAgICAgIG1vZGVscy5mb3JFYWNoKGZ1bmN0aW9uIChtb2RlbCkge1xyXG4gICAgICAgICAgICBzdGF0ZS5lbnRpdGllc1tzZWxlY3RJZChtb2RlbCldID0gbW9kZWw7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmVzb3J0RW50aXRpZXMoc3RhdGUpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gcmVzb3J0RW50aXRpZXMoc3RhdGUpIHtcclxuICAgICAgICB2YXIgYWxsRW50aXRpZXMgPSBPYmplY3QudmFsdWVzKHN0YXRlLmVudGl0aWVzKTtcclxuICAgICAgICBhbGxFbnRpdGllcy5zb3J0KHNvcnQpO1xyXG4gICAgICAgIHZhciBuZXdTb3J0ZWRJZHMgPSBhbGxFbnRpdGllcy5tYXAoc2VsZWN0SWQpO1xyXG4gICAgICAgIHZhciBpZHMgPSBzdGF0ZS5pZHM7XHJcbiAgICAgICAgaWYgKCFhcmVBcnJheXNFcXVhbChpZHMsIG5ld1NvcnRlZElkcykpIHtcclxuICAgICAgICAgICAgc3RhdGUuaWRzID0gbmV3U29ydGVkSWRzO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgcmVtb3ZlT25lOiByZW1vdmVPbmUsXHJcbiAgICAgICAgcmVtb3ZlTWFueTogcmVtb3ZlTWFueSxcclxuICAgICAgICByZW1vdmVBbGw6IHJlbW92ZUFsbCxcclxuICAgICAgICBhZGRPbmU6IGNyZWF0ZVN0YXRlT3BlcmF0b3IoYWRkT25lTXV0YWJseSksXHJcbiAgICAgICAgdXBkYXRlT25lOiBjcmVhdGVTdGF0ZU9wZXJhdG9yKHVwZGF0ZU9uZU11dGFibHkpLFxyXG4gICAgICAgIHVwc2VydE9uZTogY3JlYXRlU3RhdGVPcGVyYXRvcih1cHNlcnRPbmVNdXRhYmx5KSxcclxuICAgICAgICBzZXRPbmU6IGNyZWF0ZVN0YXRlT3BlcmF0b3Ioc2V0T25lTXV0YWJseSksXHJcbiAgICAgICAgc2V0TWFueTogY3JlYXRlU3RhdGVPcGVyYXRvcihzZXRNYW55TXV0YWJseSksXHJcbiAgICAgICAgc2V0QWxsOiBjcmVhdGVTdGF0ZU9wZXJhdG9yKHNldEFsbE11dGFibHkpLFxyXG4gICAgICAgIGFkZE1hbnk6IGNyZWF0ZVN0YXRlT3BlcmF0b3IoYWRkTWFueU11dGFibHkpLFxyXG4gICAgICAgIHVwZGF0ZU1hbnk6IGNyZWF0ZVN0YXRlT3BlcmF0b3IodXBkYXRlTWFueU11dGFibHkpLFxyXG4gICAgICAgIHVwc2VydE1hbnk6IGNyZWF0ZVN0YXRlT3BlcmF0b3IodXBzZXJ0TWFueU11dGFibHkpXHJcbiAgICB9O1xyXG59XHJcbi8vIHNyYy9lbnRpdGllcy9jcmVhdGVfYWRhcHRlci50c1xyXG5mdW5jdGlvbiBjcmVhdGVFbnRpdHlBZGFwdGVyKG9wdGlvbnMpIHtcclxuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XHJcbiAgICB2YXIgX2MgPSBfX3NwcmVhZFZhbHVlcyh7XHJcbiAgICAgICAgc29ydENvbXBhcmVyOiBmYWxzZSxcclxuICAgICAgICBzZWxlY3RJZDogZnVuY3Rpb24gKGluc3RhbmNlKSB7IHJldHVybiBpbnN0YW5jZS5pZDsgfVxyXG4gICAgfSwgb3B0aW9ucyksIHNlbGVjdElkID0gX2Muc2VsZWN0SWQsIHNvcnRDb21wYXJlciA9IF9jLnNvcnRDb21wYXJlcjtcclxuICAgIHZhciBzdGF0ZUZhY3RvcnkgPSBjcmVhdGVJbml0aWFsU3RhdGVGYWN0b3J5KCk7XHJcbiAgICB2YXIgc2VsZWN0b3JzRmFjdG9yeSA9IGNyZWF0ZVNlbGVjdG9yc0ZhY3RvcnkoKTtcclxuICAgIHZhciBzdGF0ZUFkYXB0ZXIgPSBzb3J0Q29tcGFyZXIgPyBjcmVhdGVTb3J0ZWRTdGF0ZUFkYXB0ZXIoc2VsZWN0SWQsIHNvcnRDb21wYXJlcikgOiBjcmVhdGVVbnNvcnRlZFN0YXRlQWRhcHRlcihzZWxlY3RJZCk7XHJcbiAgICByZXR1cm4gX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe1xyXG4gICAgICAgIHNlbGVjdElkOiBzZWxlY3RJZCxcclxuICAgICAgICBzb3J0Q29tcGFyZXI6IHNvcnRDb21wYXJlclxyXG4gICAgfSwgc3RhdGVGYWN0b3J5KSwgc2VsZWN0b3JzRmFjdG9yeSksIHN0YXRlQWRhcHRlcik7XHJcbn1cclxuLy8gc3JjL25hbm9pZC50c1xyXG52YXIgdXJsQWxwaGFiZXQgPSBcIk1vZHVsZVN5bWJoYXNPd25Qci0wMTIzNDU2Nzg5QUJDREVGR0hOUlZmZ2N0aVV2el9LcVlUSmtMeHBaWElqUVdcIjtcclxudmFyIG5hbm9pZCA9IGZ1bmN0aW9uIChzaXplKSB7XHJcbiAgICBpZiAoc2l6ZSA9PT0gdm9pZCAwKSB7IHNpemUgPSAyMTsgfVxyXG4gICAgdmFyIGlkID0gXCJcIjtcclxuICAgIHZhciBpID0gc2l6ZTtcclxuICAgIHdoaWxlIChpLS0pIHtcclxuICAgICAgICBpZCArPSB1cmxBbHBoYWJldFtNYXRoLnJhbmRvbSgpICogNjQgfCAwXTtcclxuICAgIH1cclxuICAgIHJldHVybiBpZDtcclxufTtcclxuLy8gc3JjL2NyZWF0ZUFzeW5jVGh1bmsudHNcclxudmFyIGNvbW1vblByb3BlcnRpZXMgPSBbXHJcbiAgICBcIm5hbWVcIixcclxuICAgIFwibWVzc2FnZVwiLFxyXG4gICAgXCJzdGFja1wiLFxyXG4gICAgXCJjb2RlXCJcclxuXTtcclxudmFyIFJlamVjdFdpdGhWYWx1ZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIFJlamVjdFdpdGhWYWx1ZShwYXlsb2FkLCBtZXRhKSB7XHJcbiAgICAgICAgdGhpcy5wYXlsb2FkID0gcGF5bG9hZDtcclxuICAgICAgICB0aGlzLm1ldGEgPSBtZXRhO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFJlamVjdFdpdGhWYWx1ZTtcclxufSgpKTtcclxudmFyIEZ1bGZpbGxXaXRoTWV0YSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIEZ1bGZpbGxXaXRoTWV0YShwYXlsb2FkLCBtZXRhKSB7XHJcbiAgICAgICAgdGhpcy5wYXlsb2FkID0gcGF5bG9hZDtcclxuICAgICAgICB0aGlzLm1ldGEgPSBtZXRhO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIEZ1bGZpbGxXaXRoTWV0YTtcclxufSgpKTtcclxudmFyIG1pbmlTZXJpYWxpemVFcnJvciA9IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJiB2YWx1ZSAhPT0gbnVsbCkge1xyXG4gICAgICAgIHZhciBzaW1wbGVFcnJvciA9IHt9O1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgY29tbW9uUHJvcGVydGllc18xID0gY29tbW9uUHJvcGVydGllczsgX2kgPCBjb21tb25Qcm9wZXJ0aWVzXzEubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBwcm9wZXJ0eSA9IGNvbW1vblByb3BlcnRpZXNfMVtfaV07XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWVbcHJvcGVydHldID09PSBcInN0cmluZ1wiKSB7XHJcbiAgICAgICAgICAgICAgICBzaW1wbGVFcnJvcltwcm9wZXJ0eV0gPSB2YWx1ZVtwcm9wZXJ0eV07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHNpbXBsZUVycm9yO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHsgbWVzc2FnZTogU3RyaW5nKHZhbHVlKSB9O1xyXG59O1xyXG5mdW5jdGlvbiBjcmVhdGVBc3luY1RodW5rKHR5cGVQcmVmaXgsIHBheWxvYWRDcmVhdG9yLCBvcHRpb25zKSB7XHJcbiAgICB2YXIgZnVsZmlsbGVkID0gY3JlYXRlQWN0aW9uKHR5cGVQcmVmaXggKyBcIi9mdWxmaWxsZWRcIiwgZnVuY3Rpb24gKHBheWxvYWQsIHJlcXVlc3RJZCwgYXJnLCBtZXRhKSB7IHJldHVybiAoe1xyXG4gICAgICAgIHBheWxvYWQ6IHBheWxvYWQsXHJcbiAgICAgICAgbWV0YTogX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgbWV0YSB8fCB7fSksIHtcclxuICAgICAgICAgICAgYXJnOiBhcmcsXHJcbiAgICAgICAgICAgIHJlcXVlc3RJZDogcmVxdWVzdElkLFxyXG4gICAgICAgICAgICByZXF1ZXN0U3RhdHVzOiBcImZ1bGZpbGxlZFwiXHJcbiAgICAgICAgfSlcclxuICAgIH0pOyB9KTtcclxuICAgIHZhciBwZW5kaW5nID0gY3JlYXRlQWN0aW9uKHR5cGVQcmVmaXggKyBcIi9wZW5kaW5nXCIsIGZ1bmN0aW9uIChyZXF1ZXN0SWQsIGFyZywgbWV0YSkgeyByZXR1cm4gKHtcclxuICAgICAgICBwYXlsb2FkOiB2b2lkIDAsXHJcbiAgICAgICAgbWV0YTogX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgbWV0YSB8fCB7fSksIHtcclxuICAgICAgICAgICAgYXJnOiBhcmcsXHJcbiAgICAgICAgICAgIHJlcXVlc3RJZDogcmVxdWVzdElkLFxyXG4gICAgICAgICAgICByZXF1ZXN0U3RhdHVzOiBcInBlbmRpbmdcIlxyXG4gICAgICAgIH0pXHJcbiAgICB9KTsgfSk7XHJcbiAgICB2YXIgcmVqZWN0ZWQgPSBjcmVhdGVBY3Rpb24odHlwZVByZWZpeCArIFwiL3JlamVjdGVkXCIsIGZ1bmN0aW9uIChlcnJvciwgcmVxdWVzdElkLCBhcmcsIHBheWxvYWQsIG1ldGEpIHsgcmV0dXJuICh7XHJcbiAgICAgICAgcGF5bG9hZDogcGF5bG9hZCxcclxuICAgICAgICBlcnJvcjogKG9wdGlvbnMgJiYgb3B0aW9ucy5zZXJpYWxpemVFcnJvciB8fCBtaW5pU2VyaWFsaXplRXJyb3IpKGVycm9yIHx8IFwiUmVqZWN0ZWRcIiksXHJcbiAgICAgICAgbWV0YTogX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgbWV0YSB8fCB7fSksIHtcclxuICAgICAgICAgICAgYXJnOiBhcmcsXHJcbiAgICAgICAgICAgIHJlcXVlc3RJZDogcmVxdWVzdElkLFxyXG4gICAgICAgICAgICByZWplY3RlZFdpdGhWYWx1ZTogISFwYXlsb2FkLFxyXG4gICAgICAgICAgICByZXF1ZXN0U3RhdHVzOiBcInJlamVjdGVkXCIsXHJcbiAgICAgICAgICAgIGFib3J0ZWQ6IChlcnJvciA9PSBudWxsID8gdm9pZCAwIDogZXJyb3IubmFtZSkgPT09IFwiQWJvcnRFcnJvclwiLFxyXG4gICAgICAgICAgICBjb25kaXRpb246IChlcnJvciA9PSBudWxsID8gdm9pZCAwIDogZXJyb3IubmFtZSkgPT09IFwiQ29uZGl0aW9uRXJyb3JcIlxyXG4gICAgICAgIH0pXHJcbiAgICB9KTsgfSk7XHJcbiAgICB2YXIgZGlzcGxheWVkV2FybmluZyA9IGZhbHNlO1xyXG4gICAgdmFyIEFDID0gdHlwZW9mIEFib3J0Q29udHJvbGxlciAhPT0gXCJ1bmRlZmluZWRcIiA/IEFib3J0Q29udHJvbGxlciA6IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBmdW5jdGlvbiBjbGFzc18xKCkge1xyXG4gICAgICAgICAgICB0aGlzLnNpZ25hbCA9IHtcclxuICAgICAgICAgICAgICAgIGFib3J0ZWQ6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgYWRkRXZlbnRMaXN0ZW5lcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGRpc3BhdGNoRXZlbnQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgb25hYm9ydDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICByZWFzb246IHZvaWQgMCxcclxuICAgICAgICAgICAgICAgIHRocm93SWZBYm9ydGVkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNsYXNzXzEucHJvdG90eXBlLmFib3J0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWRpc3BsYXllZFdhcm5pbmcpIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5ZWRXYXJuaW5nID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmluZm8oXCJUaGlzIHBsYXRmb3JtIGRvZXMgbm90IGltcGxlbWVudCBBYm9ydENvbnRyb2xsZXIuIFxcbklmIHlvdSB3YW50IHRvIHVzZSB0aGUgQWJvcnRDb250cm9sbGVyIHRvIHJlYWN0IHRvIGBhYm9ydGAgZXZlbnRzLCBwbGVhc2UgY29uc2lkZXIgaW1wb3J0aW5nIGEgcG9seWZpbGwgbGlrZSAnYWJvcnRjb250cm9sbGVyLXBvbHlmaWxsL2Rpc3QvYWJvcnRjb250cm9sbGVyLXBvbHlmaWxsLW9ubHknLlwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIGNsYXNzXzE7XHJcbiAgICB9KCkpO1xyXG4gICAgZnVuY3Rpb24gYWN0aW9uQ3JlYXRvcihhcmcpIHtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGRpc3BhdGNoLCBnZXRTdGF0ZSwgZXh0cmEpIHtcclxuICAgICAgICAgICAgdmFyIHJlcXVlc3RJZCA9IChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmlkR2VuZXJhdG9yKSA/IG9wdGlvbnMuaWRHZW5lcmF0b3IoYXJnKSA6IG5hbm9pZCgpO1xyXG4gICAgICAgICAgICB2YXIgYWJvcnRDb250cm9sbGVyID0gbmV3IEFDKCk7XHJcbiAgICAgICAgICAgIHZhciBhYm9ydFJlYXNvbjtcclxuICAgICAgICAgICAgdmFyIGFib3J0ZWRQcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKF8sIHJlamVjdCkgeyByZXR1cm4gYWJvcnRDb250cm9sbGVyLnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVqZWN0KHsgbmFtZTogXCJBYm9ydEVycm9yXCIsIG1lc3NhZ2U6IGFib3J0UmVhc29uIHx8IFwiQWJvcnRlZFwiIH0pOyB9KTsgfSk7XHJcbiAgICAgICAgICAgIHZhciBzdGFydGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGFib3J0KHJlYXNvbikge1xyXG4gICAgICAgICAgICAgICAgaWYgKHN0YXJ0ZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBhYm9ydFJlYXNvbiA9IHJlYXNvbjtcclxuICAgICAgICAgICAgICAgICAgICBhYm9ydENvbnRyb2xsZXIuYWJvcnQoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgcHJvbWlzZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgX2EsIF9iLCBmaW5hbEFjdGlvbiwgY29uZGl0aW9uUmVzdWx0LCBlcnJfMSwgc2tpcERpc3BhdGNoO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2MpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfYy5sYWJlbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jLnRyeXMucHVzaChbMCwgNCwgLCA1XSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZGl0aW9uUmVzdWx0ID0gKF9hID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5jb25kaXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYS5jYWxsKG9wdGlvbnMsIGFyZywgeyBnZXRTdGF0ZTogZ2V0U3RhdGUsIGV4dHJhOiBleHRyYSB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlzVGhlbmFibGUoY29uZGl0aW9uUmVzdWx0KSkgcmV0dXJuIFszIC8qYnJlYWsqLywgMl07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgY29uZGl0aW9uUmVzdWx0XTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25kaXRpb25SZXN1bHQgPSBfYy5zZW50KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MubGFiZWwgPSAyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb25kaXRpb25SZXN1bHQgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQ29uZGl0aW9uRXJyb3JcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiQWJvcnRlZCBkdWUgdG8gY29uZGl0aW9uIGNhbGxiYWNrIHJldHVybmluZyBmYWxzZS5cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaChwZW5kaW5nKHJlcXVlc3RJZCwgYXJnLCAoX2IgPSBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmdldFBlbmRpbmdNZXRhKSA9PSBudWxsID8gdm9pZCAwIDogX2IuY2FsbChvcHRpb25zLCB7IHJlcXVlc3RJZDogcmVxdWVzdElkLCBhcmc6IGFyZyB9LCB7IGdldFN0YXRlOiBnZXRTdGF0ZSwgZXh0cmE6IGV4dHJhIH0pKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgUHJvbWlzZS5yYWNlKFtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFib3J0ZWRQcm9taXNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUHJvbWlzZS5yZXNvbHZlKHBheWxvYWRDcmVhdG9yKGFyZywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoOiBkaXNwYXRjaCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXRTdGF0ZTogZ2V0U3RhdGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXh0cmE6IGV4dHJhLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3RJZDogcmVxdWVzdElkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpZ25hbDogYWJvcnRDb250cm9sbGVyLnNpZ25hbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3RXaXRoVmFsdWU6IGZ1bmN0aW9uICh2YWx1ZSwgbWV0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJlamVjdFdpdGhWYWx1ZSh2YWx1ZSwgbWV0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdWxmaWxsV2l0aFZhbHVlOiBmdW5jdGlvbiAodmFsdWUsIG1ldGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBGdWxmaWxsV2l0aE1ldGEodmFsdWUsIG1ldGEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgUmVqZWN0V2l0aFZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IHJlc3VsdDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIEZ1bGZpbGxXaXRoTWV0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVsZmlsbGVkKHJlc3VsdC5wYXlsb2FkLCByZXF1ZXN0SWQsIGFyZywgcmVzdWx0Lm1ldGEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVsZmlsbGVkKHJlc3VsdCwgcmVxdWVzdElkLCBhcmcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbmFsQWN0aW9uID0gX2Muc2VudCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMyAvKmJyZWFrKi8sIDVdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA0OlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycl8xID0gX2Muc2VudCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbmFsQWN0aW9uID0gZXJyXzEgaW5zdGFuY2VvZiBSZWplY3RXaXRoVmFsdWUgPyByZWplY3RlZChudWxsLCByZXF1ZXN0SWQsIGFyZywgZXJyXzEucGF5bG9hZCwgZXJyXzEubWV0YSkgOiByZWplY3RlZChlcnJfMSwgcmVxdWVzdElkLCBhcmcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMyAvKmJyZWFrKi8sIDVdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA1OlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNraXBEaXNwYXRjaCA9IG9wdGlvbnMgJiYgIW9wdGlvbnMuZGlzcGF0Y2hDb25kaXRpb25SZWplY3Rpb24gJiYgcmVqZWN0ZWQubWF0Y2goZmluYWxBY3Rpb24pICYmIGZpbmFsQWN0aW9uLm1ldGEuY29uZGl0aW9uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc2tpcERpc3BhdGNoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKGZpbmFsQWN0aW9uKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIGZpbmFsQWN0aW9uXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0oKTtcclxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24ocHJvbWlzZSwge1xyXG4gICAgICAgICAgICAgICAgYWJvcnQ6IGFib3J0LFxyXG4gICAgICAgICAgICAgICAgcmVxdWVzdElkOiByZXF1ZXN0SWQsXHJcbiAgICAgICAgICAgICAgICBhcmc6IGFyZyxcclxuICAgICAgICAgICAgICAgIHVud3JhcDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9taXNlLnRoZW4odW53cmFwUmVzdWx0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKGFjdGlvbkNyZWF0b3IsIHtcclxuICAgICAgICBwZW5kaW5nOiBwZW5kaW5nLFxyXG4gICAgICAgIHJlamVjdGVkOiByZWplY3RlZCxcclxuICAgICAgICBmdWxmaWxsZWQ6IGZ1bGZpbGxlZCxcclxuICAgICAgICB0eXBlUHJlZml4OiB0eXBlUHJlZml4XHJcbiAgICB9KTtcclxufVxyXG5mdW5jdGlvbiB1bndyYXBSZXN1bHQoYWN0aW9uKSB7XHJcbiAgICBpZiAoYWN0aW9uLm1ldGEgJiYgYWN0aW9uLm1ldGEucmVqZWN0ZWRXaXRoVmFsdWUpIHtcclxuICAgICAgICB0aHJvdyBhY3Rpb24ucGF5bG9hZDtcclxuICAgIH1cclxuICAgIGlmIChhY3Rpb24uZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBhY3Rpb24uZXJyb3I7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gYWN0aW9uLnBheWxvYWQ7XHJcbn1cclxuZnVuY3Rpb24gaXNUaGVuYWJsZSh2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHZhbHVlICE9PSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgdmFsdWUudGhlbiA9PT0gXCJmdW5jdGlvblwiO1xyXG59XHJcbi8vIHNyYy90c0hlbHBlcnMudHNcclxudmFyIGhhc01hdGNoRnVuY3Rpb24gPSBmdW5jdGlvbiAodikge1xyXG4gICAgcmV0dXJuIHYgJiYgdHlwZW9mIHYubWF0Y2ggPT09IFwiZnVuY3Rpb25cIjtcclxufTtcclxuLy8gc3JjL21hdGNoZXJzLnRzXHJcbnZhciBtYXRjaGVzID0gZnVuY3Rpb24gKG1hdGNoZXIsIGFjdGlvbikge1xyXG4gICAgaWYgKGhhc01hdGNoRnVuY3Rpb24obWF0Y2hlcikpIHtcclxuICAgICAgICByZXR1cm4gbWF0Y2hlci5tYXRjaChhY3Rpb24pO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIG1hdGNoZXIoYWN0aW9uKTtcclxuICAgIH1cclxufTtcclxuZnVuY3Rpb24gaXNBbnlPZigpIHtcclxuICAgIHZhciBtYXRjaGVycyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBtYXRjaGVyc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcclxuICAgICAgICByZXR1cm4gbWF0Y2hlcnMuc29tZShmdW5jdGlvbiAobWF0Y2hlcikgeyByZXR1cm4gbWF0Y2hlcyhtYXRjaGVyLCBhY3Rpb24pOyB9KTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gaXNBbGxPZigpIHtcclxuICAgIHZhciBtYXRjaGVycyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBtYXRjaGVyc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcclxuICAgICAgICByZXR1cm4gbWF0Y2hlcnMuZXZlcnkoZnVuY3Rpb24gKG1hdGNoZXIpIHsgcmV0dXJuIG1hdGNoZXMobWF0Y2hlciwgYWN0aW9uKTsgfSk7XHJcbiAgICB9O1xyXG59XHJcbmZ1bmN0aW9uIGhhc0V4cGVjdGVkUmVxdWVzdE1ldGFkYXRhKGFjdGlvbiwgdmFsaWRTdGF0dXMpIHtcclxuICAgIGlmICghYWN0aW9uIHx8ICFhY3Rpb24ubWV0YSlcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB2YXIgaGFzVmFsaWRSZXF1ZXN0SWQgPSB0eXBlb2YgYWN0aW9uLm1ldGEucmVxdWVzdElkID09PSBcInN0cmluZ1wiO1xyXG4gICAgdmFyIGhhc1ZhbGlkUmVxdWVzdFN0YXR1cyA9IHZhbGlkU3RhdHVzLmluZGV4T2YoYWN0aW9uLm1ldGEucmVxdWVzdFN0YXR1cykgPiAtMTtcclxuICAgIHJldHVybiBoYXNWYWxpZFJlcXVlc3RJZCAmJiBoYXNWYWxpZFJlcXVlc3RTdGF0dXM7XHJcbn1cclxuZnVuY3Rpb24gaXNBc3luY1RodW5rQXJyYXkoYSkge1xyXG4gICAgcmV0dXJuIHR5cGVvZiBhWzBdID09PSBcImZ1bmN0aW9uXCIgJiYgXCJwZW5kaW5nXCIgaW4gYVswXSAmJiBcImZ1bGZpbGxlZFwiIGluIGFbMF0gJiYgXCJyZWplY3RlZFwiIGluIGFbMF07XHJcbn1cclxuZnVuY3Rpb24gaXNQZW5kaW5nKCkge1xyXG4gICAgdmFyIGFzeW5jVGh1bmtzID0gW107XHJcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgIGFzeW5jVGh1bmtzW19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICB9XHJcbiAgICBpZiAoYXN5bmNUaHVua3MubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGhhc0V4cGVjdGVkUmVxdWVzdE1ldGFkYXRhKGFjdGlvbiwgW1wicGVuZGluZ1wiXSk7IH07XHJcbiAgICB9XHJcbiAgICBpZiAoIWlzQXN5bmNUaHVua0FycmF5KGFzeW5jVGh1bmtzKSkge1xyXG4gICAgICAgIHJldHVybiBpc1BlbmRpbmcoKShhc3luY1RodW5rc1swXSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikge1xyXG4gICAgICAgIHZhciBtYXRjaGVycyA9IGFzeW5jVGh1bmtzLm1hcChmdW5jdGlvbiAoYXN5bmNUaHVuaykgeyByZXR1cm4gYXN5bmNUaHVuay5wZW5kaW5nOyB9KTtcclxuICAgICAgICB2YXIgY29tYmluZWRNYXRjaGVyID0gaXNBbnlPZi5hcHBseSh2b2lkIDAsIG1hdGNoZXJzKTtcclxuICAgICAgICByZXR1cm4gY29tYmluZWRNYXRjaGVyKGFjdGlvbik7XHJcbiAgICB9O1xyXG59XHJcbmZ1bmN0aW9uIGlzUmVqZWN0ZWQoKSB7XHJcbiAgICB2YXIgYXN5bmNUaHVua3MgPSBbXTtcclxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgYXN5bmNUaHVua3NbX2ldID0gYXJndW1lbnRzW19pXTtcclxuICAgIH1cclxuICAgIGlmIChhc3luY1RodW5rcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gaGFzRXhwZWN0ZWRSZXF1ZXN0TWV0YWRhdGEoYWN0aW9uLCBbXCJyZWplY3RlZFwiXSk7IH07XHJcbiAgICB9XHJcbiAgICBpZiAoIWlzQXN5bmNUaHVua0FycmF5KGFzeW5jVGh1bmtzKSkge1xyXG4gICAgICAgIHJldHVybiBpc1JlamVjdGVkKCkoYXN5bmNUaHVua3NbMF0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcclxuICAgICAgICB2YXIgbWF0Y2hlcnMgPSBhc3luY1RodW5rcy5tYXAoZnVuY3Rpb24gKGFzeW5jVGh1bmspIHsgcmV0dXJuIGFzeW5jVGh1bmsucmVqZWN0ZWQ7IH0pO1xyXG4gICAgICAgIHZhciBjb21iaW5lZE1hdGNoZXIgPSBpc0FueU9mLmFwcGx5KHZvaWQgMCwgbWF0Y2hlcnMpO1xyXG4gICAgICAgIHJldHVybiBjb21iaW5lZE1hdGNoZXIoYWN0aW9uKTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gaXNSZWplY3RlZFdpdGhWYWx1ZSgpIHtcclxuICAgIHZhciBhc3luY1RodW5rcyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBhc3luY1RodW5rc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgfVxyXG4gICAgdmFyIGhhc0ZsYWcgPSBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICAgICAgcmV0dXJuIGFjdGlvbiAmJiBhY3Rpb24ubWV0YSAmJiBhY3Rpb24ubWV0YS5yZWplY3RlZFdpdGhWYWx1ZTtcclxuICAgIH07XHJcbiAgICBpZiAoYXN5bmNUaHVua3MubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcclxuICAgICAgICAgICAgdmFyIGNvbWJpbmVkTWF0Y2hlciA9IGlzQWxsT2YoaXNSZWplY3RlZC5hcHBseSh2b2lkIDAsIGFzeW5jVGh1bmtzKSwgaGFzRmxhZyk7XHJcbiAgICAgICAgICAgIHJldHVybiBjb21iaW5lZE1hdGNoZXIoYWN0aW9uKTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgaWYgKCFpc0FzeW5jVGh1bmtBcnJheShhc3luY1RodW5rcykpIHtcclxuICAgICAgICByZXR1cm4gaXNSZWplY3RlZFdpdGhWYWx1ZSgpKGFzeW5jVGh1bmtzWzBdKTtcclxuICAgIH1cclxuICAgIHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICAgICAgdmFyIGNvbWJpbmVkTWF0Y2hlciA9IGlzQWxsT2YoaXNSZWplY3RlZC5hcHBseSh2b2lkIDAsIGFzeW5jVGh1bmtzKSwgaGFzRmxhZyk7XHJcbiAgICAgICAgcmV0dXJuIGNvbWJpbmVkTWF0Y2hlcihhY3Rpb24pO1xyXG4gICAgfTtcclxufVxyXG5mdW5jdGlvbiBpc0Z1bGZpbGxlZCgpIHtcclxuICAgIHZhciBhc3luY1RodW5rcyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBhc3luY1RodW5rc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgfVxyXG4gICAgaWYgKGFzeW5jVGh1bmtzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7IHJldHVybiBoYXNFeHBlY3RlZFJlcXVlc3RNZXRhZGF0YShhY3Rpb24sIFtcImZ1bGZpbGxlZFwiXSk7IH07XHJcbiAgICB9XHJcbiAgICBpZiAoIWlzQXN5bmNUaHVua0FycmF5KGFzeW5jVGh1bmtzKSkge1xyXG4gICAgICAgIHJldHVybiBpc0Z1bGZpbGxlZCgpKGFzeW5jVGh1bmtzWzBdKTtcclxuICAgIH1cclxuICAgIHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICAgICAgdmFyIG1hdGNoZXJzID0gYXN5bmNUaHVua3MubWFwKGZ1bmN0aW9uIChhc3luY1RodW5rKSB7IHJldHVybiBhc3luY1RodW5rLmZ1bGZpbGxlZDsgfSk7XHJcbiAgICAgICAgdmFyIGNvbWJpbmVkTWF0Y2hlciA9IGlzQW55T2YuYXBwbHkodm9pZCAwLCBtYXRjaGVycyk7XHJcbiAgICAgICAgcmV0dXJuIGNvbWJpbmVkTWF0Y2hlcihhY3Rpb24pO1xyXG4gICAgfTtcclxufVxyXG5mdW5jdGlvbiBpc0FzeW5jVGh1bmtBY3Rpb24oKSB7XHJcbiAgICB2YXIgYXN5bmNUaHVua3MgPSBbXTtcclxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgYXN5bmNUaHVua3NbX2ldID0gYXJndW1lbnRzW19pXTtcclxuICAgIH1cclxuICAgIGlmIChhc3luY1RodW5rcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gaGFzRXhwZWN0ZWRSZXF1ZXN0TWV0YWRhdGEoYWN0aW9uLCBbXCJwZW5kaW5nXCIsIFwiZnVsZmlsbGVkXCIsIFwicmVqZWN0ZWRcIl0pOyB9O1xyXG4gICAgfVxyXG4gICAgaWYgKCFpc0FzeW5jVGh1bmtBcnJheShhc3luY1RodW5rcykpIHtcclxuICAgICAgICByZXR1cm4gaXNBc3luY1RodW5rQWN0aW9uKCkoYXN5bmNUaHVua3NbMF0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcclxuICAgICAgICB2YXIgbWF0Y2hlcnMgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIGFzeW5jVGh1bmtzXzEgPSBhc3luY1RodW5rczsgX2kgPCBhc3luY1RodW5rc18xLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICB2YXIgYXN5bmNUaHVuayA9IGFzeW5jVGh1bmtzXzFbX2ldO1xyXG4gICAgICAgICAgICBtYXRjaGVycy5wdXNoKGFzeW5jVGh1bmsucGVuZGluZywgYXN5bmNUaHVuay5yZWplY3RlZCwgYXN5bmNUaHVuay5mdWxmaWxsZWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgY29tYmluZWRNYXRjaGVyID0gaXNBbnlPZi5hcHBseSh2b2lkIDAsIG1hdGNoZXJzKTtcclxuICAgICAgICByZXR1cm4gY29tYmluZWRNYXRjaGVyKGFjdGlvbik7XHJcbiAgICB9O1xyXG59XHJcbi8vIHNyYy9saXN0ZW5lck1pZGRsZXdhcmUvdXRpbHMudHNcclxudmFyIGFzc2VydEZ1bmN0aW9uID0gZnVuY3Rpb24gKGZ1bmMsIGV4cGVjdGVkKSB7XHJcbiAgICBpZiAodHlwZW9mIGZ1bmMgIT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoZXhwZWN0ZWQgKyBcIiBpcyBub3QgYSBmdW5jdGlvblwiKTtcclxuICAgIH1cclxufTtcclxudmFyIG5vb3AgPSBmdW5jdGlvbiAoKSB7XHJcbn07XHJcbnZhciBjYXRjaFJlamVjdGlvbiA9IGZ1bmN0aW9uIChwcm9taXNlLCBvbkVycm9yKSB7XHJcbiAgICBpZiAob25FcnJvciA9PT0gdm9pZCAwKSB7IG9uRXJyb3IgPSBub29wOyB9XHJcbiAgICBwcm9taXNlLmNhdGNoKG9uRXJyb3IpO1xyXG4gICAgcmV0dXJuIHByb21pc2U7XHJcbn07XHJcbnZhciBhZGRBYm9ydFNpZ25hbExpc3RlbmVyID0gZnVuY3Rpb24gKGFib3J0U2lnbmFsLCBjYWxsYmFjaykge1xyXG4gICAgYWJvcnRTaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIGNhbGxiYWNrLCB7IG9uY2U6IHRydWUgfSk7XHJcbn07XHJcbnZhciBhYm9ydENvbnRyb2xsZXJXaXRoUmVhc29uID0gZnVuY3Rpb24gKGFib3J0Q29udHJvbGxlciwgcmVhc29uKSB7XHJcbiAgICB2YXIgc2lnbmFsID0gYWJvcnRDb250cm9sbGVyLnNpZ25hbDtcclxuICAgIGlmIChzaWduYWwuYWJvcnRlZCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmICghKFwicmVhc29uXCIgaW4gc2lnbmFsKSkge1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzaWduYWwsIFwicmVhc29uXCIsIHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgdmFsdWU6IHJlYXNvbixcclxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgO1xyXG4gICAgYWJvcnRDb250cm9sbGVyLmFib3J0KHJlYXNvbik7XHJcbn07XHJcbi8vIHNyYy9saXN0ZW5lck1pZGRsZXdhcmUvZXhjZXB0aW9ucy50c1xyXG52YXIgdGFzayA9IFwidGFza1wiO1xyXG52YXIgbGlzdGVuZXIgPSBcImxpc3RlbmVyXCI7XHJcbnZhciBjb21wbGV0ZWQgPSBcImNvbXBsZXRlZFwiO1xyXG52YXIgY2FuY2VsbGVkID0gXCJjYW5jZWxsZWRcIjtcclxudmFyIHRhc2tDYW5jZWxsZWQgPSBcInRhc2stXCIgKyBjYW5jZWxsZWQ7XHJcbnZhciB0YXNrQ29tcGxldGVkID0gXCJ0YXNrLVwiICsgY29tcGxldGVkO1xyXG52YXIgbGlzdGVuZXJDYW5jZWxsZWQgPSBsaXN0ZW5lciArIFwiLVwiICsgY2FuY2VsbGVkO1xyXG52YXIgbGlzdGVuZXJDb21wbGV0ZWQgPSBsaXN0ZW5lciArIFwiLVwiICsgY29tcGxldGVkO1xyXG52YXIgVGFza0Fib3J0RXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBUYXNrQWJvcnRFcnJvcihjb2RlKSB7XHJcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBcIlRhc2tBYm9ydEVycm9yXCI7XHJcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gdGFzayArIFwiIFwiICsgY2FuY2VsbGVkICsgXCIgKHJlYXNvbjogXCIgKyBjb2RlICsgXCIpXCI7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gVGFza0Fib3J0RXJyb3I7XHJcbn0oKSk7XHJcbi8vIHNyYy9saXN0ZW5lck1pZGRsZXdhcmUvdGFzay50c1xyXG52YXIgdmFsaWRhdGVBY3RpdmUgPSBmdW5jdGlvbiAoc2lnbmFsKSB7XHJcbiAgICBpZiAoc2lnbmFsLmFib3J0ZWQpIHtcclxuICAgICAgICB0aHJvdyBuZXcgVGFza0Fib3J0RXJyb3Ioc2lnbmFsLnJlYXNvbik7XHJcbiAgICB9XHJcbn07XHJcbnZhciBwcm9taXNpZnlBYm9ydFNpZ25hbCA9IGZ1bmN0aW9uIChzaWduYWwpIHtcclxuICAgIHJldHVybiBjYXRjaFJlamVjdGlvbihuZXcgUHJvbWlzZShmdW5jdGlvbiAoXywgcmVqZWN0KSB7XHJcbiAgICAgICAgdmFyIG5vdGlmeVJlamVjdGlvbiA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlamVjdChuZXcgVGFza0Fib3J0RXJyb3Ioc2lnbmFsLnJlYXNvbikpOyB9O1xyXG4gICAgICAgIGlmIChzaWduYWwuYWJvcnRlZCkge1xyXG4gICAgICAgICAgICBub3RpZnlSZWplY3Rpb24oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGFkZEFib3J0U2lnbmFsTGlzdGVuZXIoc2lnbmFsLCBub3RpZnlSZWplY3Rpb24pO1xyXG4gICAgICAgIH1cclxuICAgIH0pKTtcclxufTtcclxudmFyIHJ1blRhc2sgPSBmdW5jdGlvbiAodGFzazIsIGNsZWFuVXApIHsgcmV0dXJuIF9fYXN5bmModm9pZCAwLCBudWxsLCBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgdmFsdWUsIGVycm9yXzE7XHJcbiAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9jKSB7XHJcbiAgICAgICAgc3dpdGNoIChfYy5sYWJlbCkge1xyXG4gICAgICAgICAgICBjYXNlIDA6XHJcbiAgICAgICAgICAgICAgICBfYy50cnlzLnB1c2goWzAsIDMsIDQsIDVdKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIFByb21pc2UucmVzb2x2ZSgpXTtcclxuICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgX2Muc2VudCgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgdGFzazIoKV07XHJcbiAgICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgICAgIHZhbHVlID0gX2Muc2VudCgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBcIm9rXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH1dO1xyXG4gICAgICAgICAgICBjYXNlIDM6XHJcbiAgICAgICAgICAgICAgICBlcnJvcl8xID0gX2Muc2VudCgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBlcnJvcl8xIGluc3RhbmNlb2YgVGFza0Fib3J0RXJyb3IgPyBcImNhbmNlbGxlZFwiIDogXCJyZWplY3RlZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3JfMVxyXG4gICAgICAgICAgICAgICAgICAgIH1dO1xyXG4gICAgICAgICAgICBjYXNlIDQ6XHJcbiAgICAgICAgICAgICAgICBjbGVhblVwID09IG51bGwgPyB2b2lkIDAgOiBjbGVhblVwKCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gWzcgLyplbmRmaW5hbGx5Ki9dO1xyXG4gICAgICAgICAgICBjYXNlIDU6IHJldHVybiBbMiAvKnJldHVybiovXTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufSk7IH07XHJcbnZhciBjcmVhdGVQYXVzZSA9IGZ1bmN0aW9uIChzaWduYWwpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAocHJvbWlzZSkge1xyXG4gICAgICAgIHJldHVybiBjYXRjaFJlamVjdGlvbihQcm9taXNlLnJhY2UoW3Byb21pc2lmeUFib3J0U2lnbmFsKHNpZ25hbCksIHByb21pc2VdKS50aGVuKGZ1bmN0aW9uIChvdXRwdXQpIHtcclxuICAgICAgICAgICAgdmFsaWRhdGVBY3RpdmUoc2lnbmFsKTtcclxuICAgICAgICAgICAgcmV0dXJuIG91dHB1dDtcclxuICAgICAgICB9KSk7XHJcbiAgICB9O1xyXG59O1xyXG52YXIgY3JlYXRlRGVsYXkgPSBmdW5jdGlvbiAoc2lnbmFsKSB7XHJcbiAgICB2YXIgcGF1c2UgPSBjcmVhdGVQYXVzZShzaWduYWwpO1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uICh0aW1lb3V0TXMpIHtcclxuICAgICAgICByZXR1cm4gcGF1c2UobmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmV0dXJuIHNldFRpbWVvdXQocmVzb2x2ZSwgdGltZW91dE1zKTsgfSkpO1xyXG4gICAgfTtcclxufTtcclxuLy8gc3JjL2xpc3RlbmVyTWlkZGxld2FyZS9pbmRleC50c1xyXG52YXIgYXNzaWduID0gT2JqZWN0LmFzc2lnbjtcclxudmFyIElOVEVSTkFMX05JTF9UT0tFTiA9IHt9O1xyXG52YXIgYWxtID0gXCJsaXN0ZW5lck1pZGRsZXdhcmVcIjtcclxudmFyIGNyZWF0ZUZvcmsgPSBmdW5jdGlvbiAocGFyZW50QWJvcnRTaWduYWwpIHtcclxuICAgIHZhciBsaW5rQ29udHJvbGxlcnMgPSBmdW5jdGlvbiAoY29udHJvbGxlcikgeyByZXR1cm4gYWRkQWJvcnRTaWduYWxMaXN0ZW5lcihwYXJlbnRBYm9ydFNpZ25hbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gYWJvcnRDb250cm9sbGVyV2l0aFJlYXNvbihjb250cm9sbGVyLCBwYXJlbnRBYm9ydFNpZ25hbC5yZWFzb24pOyB9KTsgfTtcclxuICAgIHJldHVybiBmdW5jdGlvbiAodGFza0V4ZWN1dG9yKSB7XHJcbiAgICAgICAgYXNzZXJ0RnVuY3Rpb24odGFza0V4ZWN1dG9yLCBcInRhc2tFeGVjdXRvclwiKTtcclxuICAgICAgICB2YXIgY2hpbGRBYm9ydENvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XHJcbiAgICAgICAgbGlua0NvbnRyb2xsZXJzKGNoaWxkQWJvcnRDb250cm9sbGVyKTtcclxuICAgICAgICB2YXIgcmVzdWx0ID0gcnVuVGFzayhmdW5jdGlvbiAoKSB7IHJldHVybiBfX2FzeW5jKHZvaWQgMCwgbnVsbCwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgcmVzdWx0MjtcclxuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYykge1xyXG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYy5sYWJlbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVBY3RpdmUocGFyZW50QWJvcnRTaWduYWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0ZUFjdGl2ZShjaGlsZEFib3J0Q29udHJvbGxlci5zaWduYWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCB0YXNrRXhlY3V0b3Ioe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdXNlOiBjcmVhdGVQYXVzZShjaGlsZEFib3J0Q29udHJvbGxlci5zaWduYWwpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGF5OiBjcmVhdGVEZWxheShjaGlsZEFib3J0Q29udHJvbGxlci5zaWduYWwpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpZ25hbDogY2hpbGRBYm9ydENvbnRyb2xsZXIuc2lnbmFsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KV07XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQyID0gX2Muc2VudCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0ZUFjdGl2ZShjaGlsZEFib3J0Q29udHJvbGxlci5zaWduYWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgcmVzdWx0Ml07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pOyB9LCBmdW5jdGlvbiAoKSB7IHJldHVybiBhYm9ydENvbnRyb2xsZXJXaXRoUmVhc29uKGNoaWxkQWJvcnRDb250cm9sbGVyLCB0YXNrQ29tcGxldGVkKTsgfSk7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdWx0OiBjcmVhdGVQYXVzZShwYXJlbnRBYm9ydFNpZ25hbCkocmVzdWx0KSxcclxuICAgICAgICAgICAgY2FuY2VsOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBhYm9ydENvbnRyb2xsZXJXaXRoUmVhc29uKGNoaWxkQWJvcnRDb250cm9sbGVyLCB0YXNrQ2FuY2VsbGVkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9O1xyXG59O1xyXG52YXIgY3JlYXRlVGFrZVBhdHRlcm4gPSBmdW5jdGlvbiAoc3RhcnRMaXN0ZW5pbmcsIHNpZ25hbCkge1xyXG4gICAgdmFyIHRha2UgPSBmdW5jdGlvbiAocHJlZGljYXRlLCB0aW1lb3V0KSB7IHJldHVybiBfX2FzeW5jKHZvaWQgMCwgbnVsbCwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB1bnN1YnNjcmliZSwgdHVwbGVQcm9taXNlLCBwcm9taXNlcywgb3V0cHV0O1xyXG4gICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2MpIHtcclxuICAgICAgICAgICAgc3dpdGNoIChfYy5sYWJlbCkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlQWN0aXZlKHNpZ25hbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdW5zdWJzY3JpYmUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICB0dXBsZVByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB1bnN1YnNjcmliZSA9IHN0YXJ0TGlzdGVuaW5nKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZWRpY2F0ZTogcHJlZGljYXRlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWZmZWN0OiBmdW5jdGlvbiAoYWN0aW9uLCBsaXN0ZW5lckFwaSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3RlbmVyQXBpLnVuc3Vic2NyaWJlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdGVuZXJBcGkuZ2V0U3RhdGUoKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdGVuZXJBcGkuZ2V0T3JpZ2luYWxTdGF0ZSgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHByb21pc2VzID0gW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9taXNpZnlBYm9ydFNpZ25hbChzaWduYWwpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0dXBsZVByb21pc2VcclxuICAgICAgICAgICAgICAgICAgICBdO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aW1lb3V0ICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvbWlzZXMucHVzaChuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXR1cm4gc2V0VGltZW91dChyZXNvbHZlLCB0aW1lb3V0LCBudWxsKTsgfSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBfYy5sYWJlbCA9IDE7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgICAgICAgICAgX2MudHJ5cy5wdXNoKFsxLCAsIDMsIDRdKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCBQcm9taXNlLnJhY2UocHJvbWlzZXMpXTtcclxuICAgICAgICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgICAgICAgICBvdXRwdXQgPSBfYy5zZW50KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVBY3RpdmUoc2lnbmFsKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgb3V0cHV0XTtcclxuICAgICAgICAgICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgICAgICAgICB1bnN1YnNjcmliZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbNyAvKmVuZGZpbmFsbHkqL107XHJcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IHJldHVybiBbMiAvKnJldHVybiovXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7IH07XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKHByZWRpY2F0ZSwgdGltZW91dCkgeyByZXR1cm4gY2F0Y2hSZWplY3Rpb24odGFrZShwcmVkaWNhdGUsIHRpbWVvdXQpKTsgfTtcclxufTtcclxudmFyIGdldExpc3RlbmVyRW50cnlQcm9wc0Zyb20gPSBmdW5jdGlvbiAob3B0aW9ucykge1xyXG4gICAgdmFyIHR5cGUgPSBvcHRpb25zLnR5cGUsIGFjdGlvbkNyZWF0b3IgPSBvcHRpb25zLmFjdGlvbkNyZWF0b3IsIG1hdGNoZXIgPSBvcHRpb25zLm1hdGNoZXIsIHByZWRpY2F0ZSA9IG9wdGlvbnMucHJlZGljYXRlLCBlZmZlY3QgPSBvcHRpb25zLmVmZmVjdDtcclxuICAgIGlmICh0eXBlKSB7XHJcbiAgICAgICAgcHJlZGljYXRlID0gY3JlYXRlQWN0aW9uKHR5cGUpLm1hdGNoO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoYWN0aW9uQ3JlYXRvcikge1xyXG4gICAgICAgIHR5cGUgPSBhY3Rpb25DcmVhdG9yLnR5cGU7XHJcbiAgICAgICAgcHJlZGljYXRlID0gYWN0aW9uQ3JlYXRvci5tYXRjaDtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKG1hdGNoZXIpIHtcclxuICAgICAgICBwcmVkaWNhdGUgPSBtYXRjaGVyO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAocHJlZGljYXRlKSB7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDcmVhdGluZyBvciByZW1vdmluZyBhIGxpc3RlbmVyIHJlcXVpcmVzIG9uZSBvZiB0aGUga25vd24gZmllbGRzIGZvciBtYXRjaGluZyBhbiBhY3Rpb25cIik7XHJcbiAgICB9XHJcbiAgICBhc3NlcnRGdW5jdGlvbihlZmZlY3QsIFwib3B0aW9ucy5saXN0ZW5lclwiKTtcclxuICAgIHJldHVybiB7IHByZWRpY2F0ZTogcHJlZGljYXRlLCB0eXBlOiB0eXBlLCBlZmZlY3Q6IGVmZmVjdCB9O1xyXG59O1xyXG52YXIgY3JlYXRlTGlzdGVuZXJFbnRyeSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICB2YXIgX2MgPSBnZXRMaXN0ZW5lckVudHJ5UHJvcHNGcm9tKG9wdGlvbnMpLCB0eXBlID0gX2MudHlwZSwgcHJlZGljYXRlID0gX2MucHJlZGljYXRlLCBlZmZlY3QgPSBfYy5lZmZlY3Q7XHJcbiAgICB2YXIgaWQgPSBuYW5vaWQoKTtcclxuICAgIHZhciBlbnRyeSA9IHtcclxuICAgICAgICBpZDogaWQsXHJcbiAgICAgICAgZWZmZWN0OiBlZmZlY3QsXHJcbiAgICAgICAgdHlwZTogdHlwZSxcclxuICAgICAgICBwcmVkaWNhdGU6IHByZWRpY2F0ZSxcclxuICAgICAgICBwZW5kaW5nOiBuZXcgU2V0KCksXHJcbiAgICAgICAgdW5zdWJzY3JpYmU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdWJzY3JpYmUgbm90IGluaXRpYWxpemVkXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICByZXR1cm4gZW50cnk7XHJcbn07XHJcbnZhciBjcmVhdGVDbGVhckxpc3RlbmVyTWlkZGxld2FyZSA9IGZ1bmN0aW9uIChsaXN0ZW5lck1hcCkge1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBsaXN0ZW5lck1hcC5mb3JFYWNoKGNhbmNlbEFjdGl2ZUxpc3RlbmVycyk7XHJcbiAgICAgICAgbGlzdGVuZXJNYXAuY2xlYXIoKTtcclxuICAgIH07XHJcbn07XHJcbnZhciBzYWZlbHlOb3RpZnlFcnJvciA9IGZ1bmN0aW9uIChlcnJvckhhbmRsZXIsIGVycm9yVG9Ob3RpZnksIGVycm9ySW5mbykge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBlcnJvckhhbmRsZXIoZXJyb3JUb05vdGlmeSwgZXJyb3JJbmZvKTtcclxuICAgIH1cclxuICAgIGNhdGNoIChlcnJvckhhbmRsZXJFcnJvcikge1xyXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aHJvdyBlcnJvckhhbmRsZXJFcnJvcjtcclxuICAgICAgICB9LCAwKTtcclxuICAgIH1cclxufTtcclxudmFyIGFkZExpc3RlbmVyID0gY3JlYXRlQWN0aW9uKGFsbSArIFwiL2FkZFwiKTtcclxudmFyIGNsZWFyQWxsTGlzdGVuZXJzID0gY3JlYXRlQWN0aW9uKGFsbSArIFwiL3JlbW92ZUFsbFwiKTtcclxudmFyIHJlbW92ZUxpc3RlbmVyID0gY3JlYXRlQWN0aW9uKGFsbSArIFwiL3JlbW92ZVwiKTtcclxudmFyIGRlZmF1bHRFcnJvckhhbmRsZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgYXJncyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICB9XHJcbiAgICBjb25zb2xlLmVycm9yLmFwcGx5KGNvbnNvbGUsIF9fc3ByZWFkQXJyYXkoW2FsbSArIFwiL2Vycm9yXCJdLCBhcmdzKSk7XHJcbn07XHJcbnZhciBjYW5jZWxBY3RpdmVMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoZW50cnkpIHtcclxuICAgIGVudHJ5LnBlbmRpbmcuZm9yRWFjaChmdW5jdGlvbiAoY29udHJvbGxlcikge1xyXG4gICAgICAgIGFib3J0Q29udHJvbGxlcldpdGhSZWFzb24oY29udHJvbGxlciwgbGlzdGVuZXJDYW5jZWxsZWQpO1xyXG4gICAgfSk7XHJcbn07XHJcbmZ1bmN0aW9uIGNyZWF0ZUxpc3RlbmVyTWlkZGxld2FyZShtaWRkbGV3YXJlT3B0aW9ucykge1xyXG4gICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgIGlmIChtaWRkbGV3YXJlT3B0aW9ucyA9PT0gdm9pZCAwKSB7IG1pZGRsZXdhcmVPcHRpb25zID0ge307IH1cclxuICAgIHZhciBsaXN0ZW5lck1hcCA9IG5ldyBNYXAoKTtcclxuICAgIHZhciBleHRyYSA9IG1pZGRsZXdhcmVPcHRpb25zLmV4dHJhLCBfYyA9IG1pZGRsZXdhcmVPcHRpb25zLm9uRXJyb3IsIG9uRXJyb3IgPSBfYyA9PT0gdm9pZCAwID8gZGVmYXVsdEVycm9ySGFuZGxlciA6IF9jO1xyXG4gICAgYXNzZXJ0RnVuY3Rpb24ob25FcnJvciwgXCJvbkVycm9yXCIpO1xyXG4gICAgdmFyIGluc2VydEVudHJ5ID0gZnVuY3Rpb24gKGVudHJ5KSB7XHJcbiAgICAgICAgZW50cnkudW5zdWJzY3JpYmUgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBsaXN0ZW5lck1hcC5kZWxldGUoZW50cnkuaWQpOyB9O1xyXG4gICAgICAgIGxpc3RlbmVyTWFwLnNldChlbnRyeS5pZCwgZW50cnkpO1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoY2FuY2VsT3B0aW9ucykge1xyXG4gICAgICAgICAgICBlbnRyeS51bnN1YnNjcmliZSgpO1xyXG4gICAgICAgICAgICBpZiAoY2FuY2VsT3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogY2FuY2VsT3B0aW9ucy5jYW5jZWxBY3RpdmUpIHtcclxuICAgICAgICAgICAgICAgIGNhbmNlbEFjdGl2ZUxpc3RlbmVycyhlbnRyeSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfTtcclxuICAgIHZhciBmaW5kTGlzdGVuZXJFbnRyeSA9IGZ1bmN0aW9uIChjb21wYXJhdG9yKSB7XHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfYyA9IEFycmF5LmZyb20obGlzdGVuZXJNYXAudmFsdWVzKCkpOyBfaSA8IF9jLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICB2YXIgZW50cnkgPSBfY1tfaV07XHJcbiAgICAgICAgICAgIGlmIChjb21wYXJhdG9yKGVudHJ5KSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGVudHJ5O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB2b2lkIDA7XHJcbiAgICB9O1xyXG4gICAgdmFyIHN0YXJ0TGlzdGVuaW5nID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcclxuICAgICAgICB2YXIgZW50cnkgPSBmaW5kTGlzdGVuZXJFbnRyeShmdW5jdGlvbiAoZXhpc3RpbmdFbnRyeSkgeyByZXR1cm4gZXhpc3RpbmdFbnRyeS5lZmZlY3QgPT09IG9wdGlvbnMuZWZmZWN0OyB9KTtcclxuICAgICAgICBpZiAoIWVudHJ5KSB7XHJcbiAgICAgICAgICAgIGVudHJ5ID0gY3JlYXRlTGlzdGVuZXJFbnRyeShvcHRpb25zKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGluc2VydEVudHJ5KGVudHJ5KTtcclxuICAgIH07XHJcbiAgICB2YXIgc3RvcExpc3RlbmluZyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICAgICAgdmFyIF9jID0gZ2V0TGlzdGVuZXJFbnRyeVByb3BzRnJvbShvcHRpb25zKSwgdHlwZSA9IF9jLnR5cGUsIGVmZmVjdCA9IF9jLmVmZmVjdCwgcHJlZGljYXRlID0gX2MucHJlZGljYXRlO1xyXG4gICAgICAgIHZhciBlbnRyeSA9IGZpbmRMaXN0ZW5lckVudHJ5KGZ1bmN0aW9uIChlbnRyeTIpIHtcclxuICAgICAgICAgICAgdmFyIG1hdGNoUHJlZGljYXRlT3JUeXBlID0gdHlwZW9mIHR5cGUgPT09IFwic3RyaW5nXCIgPyBlbnRyeTIudHlwZSA9PT0gdHlwZSA6IGVudHJ5Mi5wcmVkaWNhdGUgPT09IHByZWRpY2F0ZTtcclxuICAgICAgICAgICAgcmV0dXJuIG1hdGNoUHJlZGljYXRlT3JUeXBlICYmIGVudHJ5Mi5lZmZlY3QgPT09IGVmZmVjdDtcclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAoZW50cnkpIHtcclxuICAgICAgICAgICAgZW50cnkudW5zdWJzY3JpYmUoKTtcclxuICAgICAgICAgICAgaWYgKG9wdGlvbnMuY2FuY2VsQWN0aXZlKSB7XHJcbiAgICAgICAgICAgICAgICBjYW5jZWxBY3RpdmVMaXN0ZW5lcnMoZW50cnkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiAhIWVudHJ5O1xyXG4gICAgfTtcclxuICAgIHZhciBub3RpZnlMaXN0ZW5lciA9IGZ1bmN0aW9uIChlbnRyeSwgYWN0aW9uLCBhcGksIGdldE9yaWdpbmFsU3RhdGUpIHsgcmV0dXJuIF9fYXN5bmMoX3RoaXMsIG51bGwsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgaW50ZXJuYWxUYXNrQ29udHJvbGxlciwgdGFrZSwgbGlzdGVuZXJFcnJvcl8xO1xyXG4gICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2MpIHtcclxuICAgICAgICAgICAgc3dpdGNoIChfYy5sYWJlbCkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICAgICAgICAgIGludGVybmFsVGFza0NvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFrZSA9IGNyZWF0ZVRha2VQYXR0ZXJuKHN0YXJ0TGlzdGVuaW5nLCBpbnRlcm5hbFRhc2tDb250cm9sbGVyLnNpZ25hbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgX2MubGFiZWwgPSAxO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgICAgIF9jLnRyeXMucHVzaChbMSwgMywgNCwgNV0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGVudHJ5LnBlbmRpbmcuYWRkKGludGVybmFsVGFza0NvbnRyb2xsZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIFByb21pc2UucmVzb2x2ZShlbnRyeS5lZmZlY3QoYWN0aW9uLCBhc3NpZ24oe30sIGFwaSwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0T3JpZ2luYWxTdGF0ZTogZ2V0T3JpZ2luYWxTdGF0ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmRpdGlvbjogZnVuY3Rpb24gKHByZWRpY2F0ZSwgdGltZW91dCkgeyByZXR1cm4gdGFrZShwcmVkaWNhdGUsIHRpbWVvdXQpLnRoZW4oQm9vbGVhbik7IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWtlOiB0YWtlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsYXk6IGNyZWF0ZURlbGF5KGludGVybmFsVGFza0NvbnRyb2xsZXIuc2lnbmFsKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdXNlOiBjcmVhdGVQYXVzZShpbnRlcm5hbFRhc2tDb250cm9sbGVyLnNpZ25hbCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHRyYTogZXh0cmEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaWduYWw6IGludGVybmFsVGFza0NvbnRyb2xsZXIuc2lnbmFsLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yazogY3JlYXRlRm9yayhpbnRlcm5hbFRhc2tDb250cm9sbGVyLnNpZ25hbCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bnN1YnNjcmliZTogZW50cnkudW5zdWJzY3JpYmUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0ZW5lck1hcC5zZXQoZW50cnkuaWQsIGVudHJ5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYW5jZWxBY3RpdmVMaXN0ZW5lcnM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbnRyeS5wZW5kaW5nLmZvckVhY2goZnVuY3Rpb24gKGNvbnRyb2xsZXIsIF8sIHNldCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29udHJvbGxlciAhPT0gaW50ZXJuYWxUYXNrQ29udHJvbGxlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWJvcnRDb250cm9sbGVyV2l0aFJlYXNvbihjb250cm9sbGVyLCBsaXN0ZW5lckNhbmNlbGxlZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXQuZGVsZXRlKGNvbnRyb2xsZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKSldO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICAgICAgICAgIF9jLnNlbnQoKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCA1XTtcclxuICAgICAgICAgICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgICAgICAgICBsaXN0ZW5lckVycm9yXzEgPSBfYy5zZW50KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEobGlzdGVuZXJFcnJvcl8xIGluc3RhbmNlb2YgVGFza0Fib3J0RXJyb3IpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNhZmVseU5vdGlmeUVycm9yKG9uRXJyb3IsIGxpc3RlbmVyRXJyb3JfMSwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFpc2VkQnk6IFwiZWZmZWN0XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbMyAvKmJyZWFrKi8sIDVdO1xyXG4gICAgICAgICAgICAgICAgY2FzZSA0OlxyXG4gICAgICAgICAgICAgICAgICAgIGFib3J0Q29udHJvbGxlcldpdGhSZWFzb24oaW50ZXJuYWxUYXNrQ29udHJvbGxlciwgbGlzdGVuZXJDb21wbGV0ZWQpO1xyXG4gICAgICAgICAgICAgICAgICAgIGVudHJ5LnBlbmRpbmcuZGVsZXRlKGludGVybmFsVGFza0NvbnRyb2xsZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbNyAvKmVuZGZpbmFsbHkqL107XHJcbiAgICAgICAgICAgICAgICBjYXNlIDU6IHJldHVybiBbMiAvKnJldHVybiovXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7IH07XHJcbiAgICB2YXIgY2xlYXJMaXN0ZW5lck1pZGRsZXdhcmUgPSBjcmVhdGVDbGVhckxpc3RlbmVyTWlkZGxld2FyZShsaXN0ZW5lck1hcCk7XHJcbiAgICB2YXIgbWlkZGxld2FyZSA9IGZ1bmN0aW9uIChhcGkpIHsgcmV0dXJuIGZ1bmN0aW9uIChuZXh0KSB7IHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICAgICAgaWYgKGFkZExpc3RlbmVyLm1hdGNoKGFjdGlvbikpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHN0YXJ0TGlzdGVuaW5nKGFjdGlvbi5wYXlsb2FkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGNsZWFyQWxsTGlzdGVuZXJzLm1hdGNoKGFjdGlvbikpIHtcclxuICAgICAgICAgICAgY2xlYXJMaXN0ZW5lck1pZGRsZXdhcmUoKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocmVtb3ZlTGlzdGVuZXIubWF0Y2goYWN0aW9uKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gc3RvcExpc3RlbmluZyhhY3Rpb24ucGF5bG9hZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBvcmlnaW5hbFN0YXRlID0gYXBpLmdldFN0YXRlKCk7XHJcbiAgICAgICAgdmFyIGdldE9yaWdpbmFsU3RhdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChvcmlnaW5hbFN0YXRlID09PSBJTlRFUk5BTF9OSUxfVE9LRU4pIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihhbG0gKyBcIjogZ2V0T3JpZ2luYWxTdGF0ZSBjYW4gb25seSBiZSBjYWxsZWQgc3luY2hyb25vdXNseVwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gb3JpZ2luYWxTdGF0ZTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciByZXN1bHQ7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgcmVzdWx0ID0gbmV4dChhY3Rpb24pO1xyXG4gICAgICAgICAgICBpZiAobGlzdGVuZXJNYXAuc2l6ZSA+IDApIHtcclxuICAgICAgICAgICAgICAgIHZhciBjdXJyZW50U3RhdGUgPSBhcGkuZ2V0U3RhdGUoKTtcclxuICAgICAgICAgICAgICAgIHZhciBsaXN0ZW5lckVudHJpZXMgPSBBcnJheS5mcm9tKGxpc3RlbmVyTWFwLnZhbHVlcygpKTtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIF9pID0gMCwgbGlzdGVuZXJFbnRyaWVzXzEgPSBsaXN0ZW5lckVudHJpZXM7IF9pIDwgbGlzdGVuZXJFbnRyaWVzXzEubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGVudHJ5ID0gbGlzdGVuZXJFbnRyaWVzXzFbX2ldO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBydW5MaXN0ZW5lciA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJ1bkxpc3RlbmVyID0gZW50cnkucHJlZGljYXRlKGFjdGlvbiwgY3VycmVudFN0YXRlLCBvcmlnaW5hbFN0YXRlKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKHByZWRpY2F0ZUVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJ1bkxpc3RlbmVyID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNhZmVseU5vdGlmeUVycm9yKG9uRXJyb3IsIHByZWRpY2F0ZUVycm9yLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYWlzZWRCeTogXCJwcmVkaWNhdGVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFydW5MaXN0ZW5lcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgbm90aWZ5TGlzdGVuZXIoZW50cnksIGFjdGlvbiwgYXBpLCBnZXRPcmlnaW5hbFN0YXRlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBmaW5hbGx5IHtcclxuICAgICAgICAgICAgb3JpZ2luYWxTdGF0ZSA9IElOVEVSTkFMX05JTF9UT0tFTjtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH07IH07IH07XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIG1pZGRsZXdhcmU6IG1pZGRsZXdhcmUsXHJcbiAgICAgICAgc3RhcnRMaXN0ZW5pbmc6IHN0YXJ0TGlzdGVuaW5nLFxyXG4gICAgICAgIHN0b3BMaXN0ZW5pbmc6IHN0b3BMaXN0ZW5pbmcsXHJcbiAgICAgICAgY2xlYXJMaXN0ZW5lcnM6IGNsZWFyTGlzdGVuZXJNaWRkbGV3YXJlXHJcbiAgICB9O1xyXG59XHJcbi8vIHNyYy9pbmRleC50c1xyXG5lbmFibGVFUzUoKTtcclxuZXhwb3J0IHsgTWlkZGxld2FyZUFycmF5LCBUYXNrQWJvcnRFcnJvciwgYWRkTGlzdGVuZXIsIGNsZWFyQWxsTGlzdGVuZXJzLCBjb25maWd1cmVTdG9yZSwgY3JlYXRlQWN0aW9uLCBjcmVhdGVBc3luY1RodW5rLCBjcmVhdGVEcmFmdFNhZmVTZWxlY3RvciwgY3JlYXRlRW50aXR5QWRhcHRlciwgY3JlYXRlSW1tdXRhYmxlU3RhdGVJbnZhcmlhbnRNaWRkbGV3YXJlLCBjcmVhdGVMaXN0ZW5lck1pZGRsZXdhcmUsIGRlZmF1bHQyIGFzIGNyZWF0ZU5leHRTdGF0ZSwgY3JlYXRlUmVkdWNlciwgY3JlYXRlU2VsZWN0b3IyIGFzIGNyZWF0ZVNlbGVjdG9yLCBjcmVhdGVTZXJpYWxpemFibGVTdGF0ZUludmFyaWFudE1pZGRsZXdhcmUsIGNyZWF0ZVNsaWNlLCBjdXJyZW50MiBhcyBjdXJyZW50LCBmaW5kTm9uU2VyaWFsaXphYmxlVmFsdWUsIGZyZWV6ZSwgZ2V0RGVmYXVsdE1pZGRsZXdhcmUsIGdldFR5cGUsIGlzQWxsT2YsIGlzQW55T2YsIGlzQXN5bmNUaHVua0FjdGlvbiwgaXNEcmFmdDQgYXMgaXNEcmFmdCwgaXNGdWxmaWxsZWQsIGlzSW1tdXRhYmxlRGVmYXVsdCwgaXNQZW5kaW5nLCBpc1BsYWluLCBpc1BsYWluT2JqZWN0LCBpc1JlamVjdGVkLCBpc1JlamVjdGVkV2l0aFZhbHVlLCBtaW5pU2VyaWFsaXplRXJyb3IsIG5hbm9pZCwgb3JpZ2luYWwsIHJlbW92ZUxpc3RlbmVyLCB1bndyYXBSZXN1bHQgfTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVkdXgtdG9vbGtpdC5lc20uanMubWFwIiwiaW1wb3J0IHsgQmFzZVNlYXJjaEl0ZW0sIFJlc3BvbnNlIH0gZnJvbSBcIi4uL3R5cGVzL3NlYXJjaC1yZXN1bHRcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBtYXBTZWFyY2hSZXNwb25zZVRvQXJyYXkgPSAocmVzcG9uc2U6IFJlc3BvbnNlKTogQmFzZVNlYXJjaEl0ZW1bXSA9PlxyXG4gIHJlc3BvbnNlLmRhdGEuY2hpbGRyZW4ubWFwKCh7IGRhdGEgfSkgPT4gZGF0YSk7XHJcbiIsImV4cG9ydCBjb25zdCByZXBsYWNlU3RyU3BhY2VzID0gKHN0cjogc3RyaW5nLCBzeW1ib2wgPSBcIl9cIik6IHN0cmluZyA9PlxyXG4gIHN0ci5zcGxpdChcIiBcIikuam9pbihzeW1ib2wpO1xyXG4iLCJpbXBvcnQgeyBSZXNwb25zZSwgUmVzcG9uc2VIYXNNb3JlRGF0YU1hcmtlciB9IGZyb20gXCIuLy4uLy4uL3R5cGVzL3NlYXJjaC1yZXN1bHRcIjtcclxuaW1wb3J0IHsgY3JlYXRlU2xpY2UsIFBheWxvYWRBY3Rpb24sIGNyZWF0ZUFzeW5jVGh1bmsgfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiO1xyXG5pbXBvcnQgeyBCYXNlU2VhcmNoSXRlbSB9IGZyb20gXCIuLi8uLi90eXBlcy9zZWFyY2gtcmVzdWx0XCI7XHJcbmltcG9ydCB7IG1hcFNlYXJjaFJlc3BvbnNlVG9BcnJheSB9IGZyb20gXCIuLi8uLi91dGlscy9tYXBTZWFyY2hSZXN1bHRUb0FycmF5XCI7XHJcbmltcG9ydCB7IHJlcGxhY2VTdHJTcGFjZXMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvcmVwbGFjZVN0clNwYWNlc1wiO1xyXG5pbXBvcnQgeyBSb290U3RhdGUgfSBmcm9tIFwiLi4vc3RvcmVcIjtcclxuXHJcbmludGVyZmFjZSBTZWFyY2hTbGljZVN0YXRlIHtcclxuICBzZWFyY2hSZXN1bHRzOiBCYXNlU2VhcmNoSXRlbVtdO1xyXG4gIGdldE1vcmVSZXN1bHRzS2V5OiBzdHJpbmcgfCBudWxsO1xyXG4gIGxvYWRpbmc6IGJvb2xlYW47XHJcbiAgbG9hZGluZ01vcmU6IGJvb2xlYW47XHJcbn1cclxuXHJcbmNvbnN0IGluaXRpYWxTdGF0ZTogU2VhcmNoU2xpY2VTdGF0ZSA9IHtcclxuICBzZWFyY2hSZXN1bHRzOiBbXSxcclxuICBnZXRNb3JlUmVzdWx0c0tleTogbnVsbCxcclxuICBsb2FkaW5nOiBmYWxzZSxcclxuICBsb2FkaW5nTW9yZTogZmFsc2UsXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZmV0Y2hTZWFyY2hSZXN1bHRzID0gY3JlYXRlQXN5bmNUaHVuayhcclxuICBcInNlYXJjaC9mZXRjaFNlYXJjaFJlc3VsdHNcIixcclxuICBhc3luYyAoc2VhcmNoOiBzdHJpbmcpOiBQcm9taXNlPFJlc3BvbnNlIHwgbmV2ZXI+ID0+IHtcclxuICAgIGNvbnN0IHNlYXJjaFVybCA9IGBodHRwczovL3d3dy5yZWRkaXQuY29tL3IvJHtyZXBsYWNlU3RyU3BhY2VzKFxyXG4gICAgICBzZWFyY2gsXHJcbiAgICApfS5qc29uP2xpbWl0PTEwYDtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHJlYWRhYmxlU3RyZWFtID0gYXdhaXQgZmV0Y2goc2VhcmNoVXJsKTtcclxuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlYWRhYmxlU3RyZWFtLmpzb24oKTtcclxuXHJcbiAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTb21ldGhpbmcgd2VudHMgd3JvbmcuLi5cIiwgeyBjYXVzZTogZSB9KTtcclxuICAgIH1cclxuICB9LFxyXG4pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGZldGNoTW9yZVNlYXJjaFJlc3VsdHMgPSBjcmVhdGVBc3luY1RodW5rKFxyXG4gIFwic2VhcmNoL2ZldGNoTW9yZVNlYXJjaFJlc3VsdHNcIixcclxuICBhc3luYyAoe1xyXG4gICAgc2VhcmNoLFxyXG4gICAgYWZ0ZXIsXHJcbiAgfToge1xyXG4gICAgc2VhcmNoOiBzdHJpbmc7XHJcbiAgICBhZnRlcjogUmVzcG9uc2VIYXNNb3JlRGF0YU1hcmtlcjtcclxuICB9KTogUHJvbWlzZTxSZXNwb25zZSB8IG5ldmVyPiA9PiB7XHJcbiAgICBjb25zdCBzZWFyY2hVcmwgPSBgaHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yLyR7cmVwbGFjZVN0clNwYWNlcyhcclxuICAgICAgc2VhcmNoLFxyXG4gICAgKX0uanNvbj9saW1pdD0xMCZhZnRlcj0ke2FmdGVyfWA7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCByZWFkYWJsZVN0cmVhbSA9IGF3YWl0IGZldGNoKHNlYXJjaFVybCk7XHJcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZWFkYWJsZVN0cmVhbS5qc29uKCk7XHJcblxyXG4gICAgICByZXR1cm4gZGF0YTtcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU29tZXRoaW5nIHdlbnRzIHdyb25nLi4uXCIsIHsgY2F1c2U6IGUgfSk7XHJcbiAgICB9XHJcbiAgfSxcclxuKTtcclxuXHJcbmNvbnN0IHNldFNlYXJjaFJlc3VsdHNBY3Rpb24gPSAoXHJcbiAgc3RhdGU6IFNlYXJjaFNsaWNlU3RhdGUsXHJcbiAgYWN0aW9uOiBQYXlsb2FkQWN0aW9uPEJhc2VTZWFyY2hJdGVtW10+LFxyXG4pOiB2b2lkID0+IHtcclxuICBzdGF0ZS5zZWFyY2hSZXN1bHRzID0gWy4uLmFjdGlvbi5wYXlsb2FkXTtcclxufTtcclxuXHJcbmNvbnN0IGFkZFNlYXJjaFJlc3VsdHNBY3Rpb24gPSAoXHJcbiAgc3RhdGU6IFNlYXJjaFNsaWNlU3RhdGUsXHJcbiAgYWN0aW9uOiBQYXlsb2FkQWN0aW9uPEJhc2VTZWFyY2hJdGVtW10+LFxyXG4pOiB2b2lkID0+IHtcclxuICBzdGF0ZS5zZWFyY2hSZXN1bHRzID0gWy4uLnN0YXRlLnNlYXJjaFJlc3VsdHMsIC4uLmFjdGlvbi5wYXlsb2FkXTtcclxufTtcclxuXHJcbmNvbnN0IHNldEdldE1vcmVSZXN1bHRzS2V5ID0gKFxyXG4gIHN0YXRlOiBTZWFyY2hTbGljZVN0YXRlLFxyXG4gIGFjdGlvbjogUGF5bG9hZEFjdGlvbjxzdHJpbmcgfCBudWxsPixcclxuKTogdm9pZCA9PiB7XHJcbiAgc3RhdGUuZ2V0TW9yZVJlc3VsdHNLZXkgPSBhY3Rpb24ucGF5bG9hZDtcclxufTtcclxuXHJcbmNvbnN0IGVuYWJsZUxvYWRpbmdBY3Rpb24gPSAoc3RhdGU6IFNlYXJjaFNsaWNlU3RhdGUpID0+IHtcclxuICBzdGF0ZS5sb2FkaW5nID0gdHJ1ZTtcclxufTtcclxuXHJcbmNvbnN0IGRpc2FibGVMb2FkaW5nQWN0aW9uID0gKHN0YXRlOiBTZWFyY2hTbGljZVN0YXRlKSA9PiB7XHJcbiAgc3RhdGUubG9hZGluZyA9IGZhbHNlO1xyXG59O1xyXG5cclxuY29uc3QgZW5hYmxlTG9hZGluZ01vcmVBY3Rpb24gPSAoc3RhdGU6IFNlYXJjaFNsaWNlU3RhdGUpID0+IHtcclxuICBzdGF0ZS5sb2FkaW5nTW9yZSA9IHRydWU7XHJcbn07XHJcblxyXG5jb25zdCBkaXNhYmxlTG9hZGluZ01vcmVBY3Rpb24gPSAoc3RhdGU6IFNlYXJjaFNsaWNlU3RhdGUpID0+IHtcclxuICBzdGF0ZS5sb2FkaW5nTW9yZSA9IGZhbHNlO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlYXJjaFNsaWNlID0gY3JlYXRlU2xpY2Uoe1xyXG4gIG5hbWU6IFwic2VhcmNoXCIsXHJcbiAgaW5pdGlhbFN0YXRlLFxyXG4gIHJlZHVjZXJzOiB7XHJcbiAgICBzZXRTZWFyY2hSZXN1bHRzOiBzZXRTZWFyY2hSZXN1bHRzQWN0aW9uLFxyXG4gICAgYWRkU2VhcmNoUmVzdWx0czogYWRkU2VhcmNoUmVzdWx0c0FjdGlvbixcclxuICAgIGVuYWJsZUxvYWRpbmc6IGVuYWJsZUxvYWRpbmdBY3Rpb24sXHJcbiAgICBkaXNhYmxlTG9hZGluZzogZGlzYWJsZUxvYWRpbmdBY3Rpb24sXHJcbiAgICBlbmFibGVMb2FkaW5nTW9yZTogZW5hYmxlTG9hZGluZ01vcmVBY3Rpb24sXHJcbiAgICBkaXNhYmxlTG9hZGluZ01vcmU6IGRpc2FibGVMb2FkaW5nTW9yZUFjdGlvbixcclxuICB9LFxyXG4gIGV4dHJhUmVkdWNlcnM6IChidWlsZGVyOiBhbnkpID0+IHtcclxuICAgIGJ1aWxkZXIuYWRkQ2FzZShmZXRjaFNlYXJjaFJlc3VsdHMucGVuZGluZywgKHN0YXRlOiBTZWFyY2hTbGljZVN0YXRlKSA9PiB7XHJcbiAgICAgIGVuYWJsZUxvYWRpbmdBY3Rpb24oc3RhdGUpO1xyXG4gICAgfSk7XHJcbiAgICBidWlsZGVyLmFkZENhc2UoXHJcbiAgICAgIGZldGNoU2VhcmNoUmVzdWx0cy5mdWxmaWxsZWQsXHJcbiAgICAgIChzdGF0ZTogU2VhcmNoU2xpY2VTdGF0ZSwgeyBwYXlsb2FkIH06IHsgcGF5bG9hZDogUmVzcG9uc2UgfSkgPT4ge1xyXG4gICAgICAgIGlmIChwYXlsb2FkLmVycm9yKSB7XHJcbiAgICAgICAgICBzZXRTZWFyY2hSZXN1bHRzQWN0aW9uKHN0YXRlLCB7IHBheWxvYWQ6IFtdLCB0eXBlOiBcIlwiIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBjb25zdCBtYXBwZWRSZXNwb25zZSA9IG1hcFNlYXJjaFJlc3BvbnNlVG9BcnJheShwYXlsb2FkKTtcclxuXHJcbiAgICAgICAgICBzZXRTZWFyY2hSZXN1bHRzQWN0aW9uKHN0YXRlLCB7IHBheWxvYWQ6IG1hcHBlZFJlc3BvbnNlLCB0eXBlOiBcIlwiIH0pO1xyXG4gICAgICAgICAgc2V0R2V0TW9yZVJlc3VsdHNLZXkoc3RhdGUsIHsgcGF5bG9hZDogcGF5bG9hZC5kYXRhLmFmdGVyLCB0eXBlOiBcIlwiIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZGlzYWJsZUxvYWRpbmdBY3Rpb24oc3RhdGUpO1xyXG4gICAgICB9LFxyXG4gICAgKTtcclxuICAgIGJ1aWxkZXIuYWRkQ2FzZShmZXRjaFNlYXJjaFJlc3VsdHMucmVqZWN0ZWQsIChzdGF0ZTogU2VhcmNoU2xpY2VTdGF0ZSkgPT4ge1xyXG4gICAgICBzZXRTZWFyY2hSZXN1bHRzQWN0aW9uKHN0YXRlLCB7IHBheWxvYWQ6IFtdLCB0eXBlOiBcIlwiIH0pO1xyXG4gICAgICBkaXNhYmxlTG9hZGluZ0FjdGlvbihzdGF0ZSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBidWlsZGVyLmFkZENhc2UoZmV0Y2hNb3JlU2VhcmNoUmVzdWx0cy5wZW5kaW5nLCAoc3RhdGU6IFNlYXJjaFNsaWNlU3RhdGUpID0+IHtcclxuICAgICAgZW5hYmxlTG9hZGluZ01vcmVBY3Rpb24oc3RhdGUpO1xyXG4gICAgfSk7XHJcbiAgICBidWlsZGVyLmFkZENhc2UoXHJcbiAgICAgIGZldGNoTW9yZVNlYXJjaFJlc3VsdHMuZnVsZmlsbGVkLFxyXG4gICAgICAoc3RhdGU6IFNlYXJjaFNsaWNlU3RhdGUsIHsgcGF5bG9hZCB9OiB7IHBheWxvYWQ6IFJlc3BvbnNlIH0pID0+IHtcclxuICAgICAgICBpZiAocGF5bG9hZC5lcnJvcikge1xyXG4gICAgICAgICAgYWRkU2VhcmNoUmVzdWx0c0FjdGlvbihzdGF0ZSwgeyBwYXlsb2FkOiBbXSwgdHlwZTogXCJcIiB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY29uc3QgbWFwcGVkUmVzcG9uc2UgPSBtYXBTZWFyY2hSZXNwb25zZVRvQXJyYXkocGF5bG9hZCk7XHJcblxyXG4gICAgICAgICAgYWRkU2VhcmNoUmVzdWx0c0FjdGlvbihzdGF0ZSwgeyBwYXlsb2FkOiBtYXBwZWRSZXNwb25zZSwgdHlwZTogXCJcIiB9KTtcclxuICAgICAgICAgIHNldEdldE1vcmVSZXN1bHRzS2V5KHN0YXRlLCB7IHBheWxvYWQ6IHBheWxvYWQuZGF0YS5hZnRlciwgdHlwZTogXCJcIiB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGRpc2FibGVMb2FkaW5nTW9yZUFjdGlvbihzdGF0ZSk7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihzdGF0ZSk7XHJcbiAgICAgIH0sXHJcbiAgICApO1xyXG4gICAgYnVpbGRlci5hZGRDYXNlKGZldGNoTW9yZVNlYXJjaFJlc3VsdHMucmVqZWN0ZWQsIChzdGF0ZTogU2VhcmNoU2xpY2VTdGF0ZSkgPT4ge1xyXG4gICAgICBhZGRTZWFyY2hSZXN1bHRzQWN0aW9uKHN0YXRlLCB7IHBheWxvYWQ6IFtdLCB0eXBlOiBcIlwiIH0pO1xyXG4gICAgICBkaXNhYmxlTG9hZGluZ01vcmVBY3Rpb24oc3RhdGUpO1xyXG4gICAgfSk7XHJcbiAgfSxcclxufSk7XHJcblxyXG5leHBvcnQgY29uc3Qge1xyXG4gIHNldFNlYXJjaFJlc3VsdHMsXHJcbiAgZW5hYmxlTG9hZGluZyxcclxuICBkaXNhYmxlTG9hZGluZyxcclxuICBlbmFibGVMb2FkaW5nTW9yZSxcclxuICBkaXNhYmxlTG9hZGluZ01vcmUsXHJcbn0gPSBzZWFyY2hTbGljZS5hY3Rpb25zO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlbGVjdFNlYXJjaFJlc3VsdHMgPSAoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUuc2VhcmNoLnNlYXJjaFJlc3VsdHM7XHJcbmV4cG9ydCBjb25zdCBzZWxlY3RTZWFyY2hMb2FkaW5nID0gKHN0YXRlOiBSb290U3RhdGUpID0+IHN0YXRlLnNlYXJjaC5sb2FkaW5nO1xyXG5leHBvcnQgY29uc3Qgc2VsZWN0U2VhcmNoTG9hZGluZ01vcmUgPSAoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUuc2VhcmNoLmxvYWRpbmdNb3JlO1xyXG5leHBvcnQgY29uc3Qgc2VsZWN0R2V0TW9yZVJlc3VsdHNLZXkgPSAoc3RhdGU6IFJvb3RTdGF0ZSkgPT5cclxuICBzdGF0ZS5zZWFyY2guZ2V0TW9yZVJlc3VsdHNLZXk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBzZWFyY2hTbGljZS5yZWR1Y2VyO1xyXG4iLCJpbXBvcnQgUmVhY3QsIHsgRkMsIENoYW5nZUV2ZW50SGFuZGxlciwgUmVhY3RFbGVtZW50IH0gZnJvbSBcInJlYWN0XCI7XHJcblxyXG5pbnRlcmZhY2UgQmFzZUlucHV0IHtcclxuICB0eXBlPzogc3RyaW5nO1xyXG4gIGlkPzogc3RyaW5nO1xyXG4gIGNsYXNzTmFtZT86IHN0cmluZztcclxuICBwbGFjZWhvbGRlcj86IHN0cmluZztcclxuICB2YWx1ZTogc3RyaW5nO1xyXG4gIHByZWZpeEljb24/OiBSZWFjdEVsZW1lbnQ7XHJcbiAgaGFuZGxlQ2hhbmdlOiBDaGFuZ2VFdmVudEhhbmRsZXI8SFRNTElucHV0RWxlbWVudD47XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBCYXNlSW5wdXQ6IEZDPEJhc2VJbnB1dD4gPSAoe1xyXG4gIHR5cGUgPSBcInRleHRcIixcclxuICBpZCxcclxuICBjbGFzc05hbWUsXHJcbiAgcGxhY2Vob2xkZXIsXHJcbiAgdmFsdWUsXHJcbiAgaGFuZGxlQ2hhbmdlLFxyXG4gIHByZWZpeEljb24sXHJcbn0pID0+IChcclxuICA8bGFiZWxcclxuICAgIGh0bWxGb3I9e2lkfVxyXG4gICAgY2xhc3NOYW1lPXtcImZsZXggZmxleC1yb3cganVzdGlmeS1jZW50ZXIgaXRlbXMtY2VudGVyIHJlbGF0aXZlIFwiICsgY2xhc3NOYW1lfVxyXG4gID5cclxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaW5wdXQtcHJlZml4LWljb25cIj57cHJlZml4SWNvbn08L2Rpdj5cclxuICAgIDxpbnB1dFxyXG4gICAgICBjbGFzc05hbWU9XCJcclxuICAgICAgb3V0bGluZS1ub25lIFxyXG4gICAgICBiZy1ncmF5LTUwIFxyXG4gICAgICBib3JkZXIgXHJcbiAgICAgIGJvcmRlci1ncmF5LTMwMCBcclxuICAgICAgdGV4dC1ncmF5LTkwMCBcclxuICAgICAgdGV4dC1zbSBcclxuICAgICAgcm91bmRlZC1sZyBcclxuICAgICAgZm9jdXM6cmluZy1ibHVlLTUwMCBcclxuICAgICAgZm9jdXM6Ym9yZGVyLWJsdWUtNTAwIFxyXG4gICAgICBibG9jayBcclxuICAgICAgdy1mdWxsIFxyXG4gICAgICBwLTIuNSBcclxuICAgICAgZGFyazpiZy1ncmF5LTcwMCBcclxuICAgICAgZGFyazpib3JkZXItZ3JheS02MDAgXHJcbiAgICAgIGRhcms6cGxhY2Vob2xkZXItZ3JheS00MDAgXHJcbiAgICAgIGRhcms6dGV4dC13aGl0ZSBcclxuICAgICAgZGFyazpmb2N1czpyaW5nLWJsdWUtNTAwIFxyXG4gICAgICBkYXJrOmZvY3VzOmJvcmRlci1ibHVlLTUwMFxyXG4gICAgICBcIlxyXG4gICAgICBpZD17aWR9XHJcbiAgICAgIHR5cGU9e3R5cGV9XHJcbiAgICAgIHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cclxuICAgICAgdmFsdWU9e3ZhbHVlfVxyXG4gICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxyXG4gICAgICBhdXRvQ29tcGxldGU9XCJvZmZcIlxyXG4gICAgLz5cclxuICA8L2xhYmVsPlxyXG4pO1xyXG4iLCJpbXBvcnQgUmVhY3QsIHsgRkMsIFJlYWN0RWxlbWVudCB9IGZyb20gXCJyZWFjdFwiO1xyXG5cclxuaW50ZXJmYWNlIEFwcExheW91dCB7XHJcbiAgaGVhZGVyQ2hpbGRyZW46IFJlYWN0RWxlbWVudDtcclxuICBjaGlsZHJlbjogUmVhY3RFbGVtZW50O1xyXG4gIHNob3dTZWN0aW9uOiBib29sZWFuO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgQXBwTGF5b3V0OiBGQzxBcHBMYXlvdXQ+ID0gKHsgaGVhZGVyQ2hpbGRyZW4sIGNoaWxkcmVuLCBzaG93U2VjdGlvbiB9KSA9PiB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxtYWluIGNsYXNzTmFtZT1cImgtc2NyZWVuIGJnLWJsYWNrXCI+XHJcbiAgICAgIDxoZWFkZXJcclxuICAgICAgICBjbGFzc05hbWU9e2BhcHAtaGVhZGVyIGZsZXggZmxleC1yb3cganVzdGlmeS1jZW50ZXIgYWxpZ24tY2VudGVyIHRyYW5zaXRpb24tYWxsIGVhc2UtaW4tb3V0IGR1cmF0aW9uLTMwMCAke1xyXG4gICAgICAgICAgc2hvd1NlY3Rpb24gPyBcImgtMS81XCIgOiBcImgtZnVsbFwiXHJcbiAgICAgICAgfWB9XHJcbiAgICAgID5cclxuICAgICAgICB7aGVhZGVyQ2hpbGRyZW59XHJcbiAgICAgIDwvaGVhZGVyPlxyXG4gICAgICA8c2VjdGlvblxyXG4gICAgICAgIGNsYXNzTmFtZT17YG92ZXJmbG93LXktc2Nyb2xsIHRyYW5zaXRpb24tYWxsIGVhc2UtaW4tb3V0IGR1cmF0aW9uLTMwMCAke1xyXG4gICAgICAgICAgc2hvd1NlY3Rpb24gPyBcImgtNC81XCIgOiBcImgtMFwiXHJcbiAgICAgICAgfWB9XHJcbiAgICAgID5cclxuICAgICAgICB7Y2hpbGRyZW59XHJcbiAgICAgIDwvc2VjdGlvbj5cclxuICAgIDwvbWFpbj5cclxuICApO1xyXG59O1xyXG4iLCIvLyBEZWZhdWx0IHRvIGEgZHVtbXkgXCJiYXRjaFwiIGltcGxlbWVudGF0aW9uIHRoYXQganVzdCBydW5zIHRoZSBjYWxsYmFja1xuZnVuY3Rpb24gZGVmYXVsdE5vb3BCYXRjaChjYWxsYmFjaykge1xuICBjYWxsYmFjaygpO1xufVxuXG5sZXQgYmF0Y2ggPSBkZWZhdWx0Tm9vcEJhdGNoOyAvLyBBbGxvdyBpbmplY3RpbmcgYW5vdGhlciBiYXRjaGluZyBmdW5jdGlvbiBsYXRlclxuXG5leHBvcnQgY29uc3Qgc2V0QmF0Y2ggPSBuZXdCYXRjaCA9PiBiYXRjaCA9IG5ld0JhdGNoOyAvLyBTdXBwbHkgYSBnZXR0ZXIganVzdCB0byBza2lwIGRlYWxpbmcgd2l0aCBFU00gYmluZGluZ3NcblxuZXhwb3J0IGNvbnN0IGdldEJhdGNoID0gKCkgPT4gYmF0Y2g7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmV4cG9ydCBjb25zdCBSZWFjdFJlZHV4Q29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBSZWFjdFJlZHV4Q29udGV4dC5kaXNwbGF5TmFtZSA9ICdSZWFjdFJlZHV4Jztcbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVhY3RSZWR1eENvbnRleHQ7IiwiaW1wb3J0IHsgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZXh0JztcblxuLyoqXHJcbiAqIEEgaG9vayB0byBhY2Nlc3MgdGhlIHZhbHVlIG9mIHRoZSBgUmVhY3RSZWR1eENvbnRleHRgLiBUaGlzIGlzIGEgbG93LWxldmVsXHJcbiAqIGhvb2sgdGhhdCB5b3Ugc2hvdWxkIHVzdWFsbHkgbm90IG5lZWQgdG8gY2FsbCBkaXJlY3RseS5cclxuICpcclxuICogQHJldHVybnMge2FueX0gdGhlIHZhbHVlIG9mIHRoZSBgUmVhY3RSZWR1eENvbnRleHRgXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIGltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuICogaW1wb3J0IHsgdXNlUmVkdXhDb250ZXh0IH0gZnJvbSAncmVhY3QtcmVkdXgnXHJcbiAqXHJcbiAqIGV4cG9ydCBjb25zdCBDb3VudGVyQ29tcG9uZW50ID0gKCkgPT4ge1xyXG4gKiAgIGNvbnN0IHsgc3RvcmUgfSA9IHVzZVJlZHV4Q29udGV4dCgpXHJcbiAqICAgcmV0dXJuIDxkaXY+e3N0b3JlLmdldFN0YXRlKCl9PC9kaXY+XHJcbiAqIH1cclxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlUmVkdXhDb250ZXh0KCkge1xuICBjb25zdCBjb250ZXh0VmFsdWUgPSB1c2VDb250ZXh0KFJlYWN0UmVkdXhDb250ZXh0KTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhY29udGV4dFZhbHVlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjb3VsZCBub3QgZmluZCByZWFjdC1yZWR1eCBjb250ZXh0IHZhbHVlOyBwbGVhc2UgZW5zdXJlIHRoZSBjb21wb25lbnQgaXMgd3JhcHBlZCBpbiBhIDxQcm92aWRlcj4nKTtcbiAgfVxuXG4gIHJldHVybiBjb250ZXh0VmFsdWU7XG59IiwiaW1wb3J0IHsgdXNlQ29udGV4dCwgdXNlRGVidWdWYWx1ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVJlZHV4Q29udGV4dCBhcyB1c2VEZWZhdWx0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi91c2VSZWR1eENvbnRleHQnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuLi9jb21wb25lbnRzL0NvbnRleHQnO1xuaW1wb3J0IHsgbm90SW5pdGlhbGl6ZWQgfSBmcm9tICcuLi91dGlscy91c2VTeW5jRXh0ZXJuYWxTdG9yZSc7XG5sZXQgdXNlU3luY0V4dGVybmFsU3RvcmVXaXRoU2VsZWN0b3IgPSBub3RJbml0aWFsaXplZDtcbmV4cG9ydCBjb25zdCBpbml0aWFsaXplVXNlU2VsZWN0b3IgPSBmbiA9PiB7XG4gIHVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yID0gZm47XG59O1xuXG5jb25zdCByZWZFcXVhbGl0eSA9IChhLCBiKSA9PiBhID09PSBiO1xuLyoqXHJcbiAqIEhvb2sgZmFjdG9yeSwgd2hpY2ggY3JlYXRlcyBhIGB1c2VTZWxlY3RvcmAgaG9vayBib3VuZCB0byBhIGdpdmVuIGNvbnRleHQuXHJcbiAqXHJcbiAqIEBwYXJhbSB7UmVhY3QuQ29udGV4dH0gW2NvbnRleHQ9UmVhY3RSZWR1eENvbnRleHRdIENvbnRleHQgcGFzc2VkIHRvIHlvdXIgYDxQcm92aWRlcj5gLlxyXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgYHVzZVNlbGVjdG9yYCBob29rIGJvdW5kIHRvIHRoZSBzcGVjaWZpZWQgY29udGV4dC5cclxuICovXG5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNlbGVjdG9ySG9vayhjb250ZXh0ID0gUmVhY3RSZWR1eENvbnRleHQpIHtcbiAgY29uc3QgdXNlUmVkdXhDb250ZXh0ID0gY29udGV4dCA9PT0gUmVhY3RSZWR1eENvbnRleHQgPyB1c2VEZWZhdWx0UmVkdXhDb250ZXh0IDogKCkgPT4gdXNlQ29udGV4dChjb250ZXh0KTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVzZVNlbGVjdG9yKHNlbGVjdG9yLCBlcXVhbGl0eUZuID0gcmVmRXF1YWxpdHkpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKCFzZWxlY3Rvcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFlvdSBtdXN0IHBhc3MgYSBzZWxlY3RvciB0byB1c2VTZWxlY3RvcmApO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIHNlbGVjdG9yICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgWW91IG11c3QgcGFzcyBhIGZ1bmN0aW9uIGFzIGEgc2VsZWN0b3IgdG8gdXNlU2VsZWN0b3JgKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBlcXVhbGl0eUZuICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgWW91IG11c3QgcGFzcyBhIGZ1bmN0aW9uIGFzIGFuIGVxdWFsaXR5IGZ1bmN0aW9uIHRvIHVzZVNlbGVjdG9yYCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY29uc3Qge1xuICAgICAgc3RvcmUsXG4gICAgICBzdWJzY3JpcHRpb24sXG4gICAgICBnZXRTZXJ2ZXJTdGF0ZVxuICAgIH0gPSB1c2VSZWR1eENvbnRleHQoKTtcbiAgICBjb25zdCBzZWxlY3RlZFN0YXRlID0gdXNlU3luY0V4dGVybmFsU3RvcmVXaXRoU2VsZWN0b3Ioc3Vic2NyaXB0aW9uLmFkZE5lc3RlZFN1Yiwgc3RvcmUuZ2V0U3RhdGUsIGdldFNlcnZlclN0YXRlIHx8IHN0b3JlLmdldFN0YXRlLCBzZWxlY3RvciwgZXF1YWxpdHlGbik7XG4gICAgdXNlRGVidWdWYWx1ZShzZWxlY3RlZFN0YXRlKTtcbiAgICByZXR1cm4gc2VsZWN0ZWRTdGF0ZTtcbiAgfTtcbn1cbi8qKlxyXG4gKiBBIGhvb2sgdG8gYWNjZXNzIHRoZSByZWR1eCBzdG9yZSdzIHN0YXRlLiBUaGlzIGhvb2sgdGFrZXMgYSBzZWxlY3RvciBmdW5jdGlvblxyXG4gKiBhcyBhbiBhcmd1bWVudC4gVGhlIHNlbGVjdG9yIGlzIGNhbGxlZCB3aXRoIHRoZSBzdG9yZSBzdGF0ZS5cclxuICpcclxuICogVGhpcyBob29rIHRha2VzIGFuIG9wdGlvbmFsIGVxdWFsaXR5IGNvbXBhcmlzb24gZnVuY3Rpb24gYXMgdGhlIHNlY29uZCBwYXJhbWV0ZXJcclxuICogdGhhdCBhbGxvd3MgeW91IHRvIGN1c3RvbWl6ZSB0aGUgd2F5IHRoZSBzZWxlY3RlZCBzdGF0ZSBpcyBjb21wYXJlZCB0byBkZXRlcm1pbmVcclxuICogd2hldGhlciB0aGUgY29tcG9uZW50IG5lZWRzIHRvIGJlIHJlLXJlbmRlcmVkLlxyXG4gKlxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBzZWxlY3RvciB0aGUgc2VsZWN0b3IgZnVuY3Rpb25cclxuICogQHBhcmFtIHtGdW5jdGlvbj19IGVxdWFsaXR5Rm4gdGhlIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSB1c2VkIHRvIGRldGVybWluZSBlcXVhbGl0eVxyXG4gKlxyXG4gKiBAcmV0dXJucyB7YW55fSB0aGUgc2VsZWN0ZWQgc3RhdGVcclxuICpcclxuICogQGV4YW1wbGVcclxuICpcclxuICogaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG4gKiBpbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG4gKlxyXG4gKiBleHBvcnQgY29uc3QgQ291bnRlckNvbXBvbmVudCA9ICgpID0+IHtcclxuICogICBjb25zdCBjb3VudGVyID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUuY291bnRlcilcclxuICogICByZXR1cm4gPGRpdj57Y291bnRlcn08L2Rpdj5cclxuICogfVxyXG4gKi9cblxuZXhwb3J0IGNvbnN0IHVzZVNlbGVjdG9yID0gLyojX19QVVJFX18qL2NyZWF0ZVNlbGVjdG9ySG9vaygpOyIsImV4cG9ydCBjb25zdCBub3RJbml0aWFsaXplZCA9ICgpID0+IHtcbiAgdGhyb3cgbmV3IEVycm9yKCd1U0VTIG5vdCBpbml0aWFsaXplZCEnKTtcbn07IiwiaW1wb3J0IHsgZ2V0QmF0Y2ggfSBmcm9tICcuL2JhdGNoJzsgLy8gZW5jYXBzdWxhdGVzIHRoZSBzdWJzY3JpcHRpb24gbG9naWMgZm9yIGNvbm5lY3RpbmcgYSBjb21wb25lbnQgdG8gdGhlIHJlZHV4IHN0b3JlLCBhc1xuLy8gd2VsbCBhcyBuZXN0aW5nIHN1YnNjcmlwdGlvbnMgb2YgZGVzY2VuZGFudCBjb21wb25lbnRzLCBzbyB0aGF0IHdlIGNhbiBlbnN1cmUgdGhlXG4vLyBhbmNlc3RvciBjb21wb25lbnRzIHJlLXJlbmRlciBiZWZvcmUgZGVzY2VuZGFudHNcblxuZnVuY3Rpb24gY3JlYXRlTGlzdGVuZXJDb2xsZWN0aW9uKCkge1xuICBjb25zdCBiYXRjaCA9IGdldEJhdGNoKCk7XG4gIGxldCBmaXJzdCA9IG51bGw7XG4gIGxldCBsYXN0ID0gbnVsbDtcbiAgcmV0dXJuIHtcbiAgICBjbGVhcigpIHtcbiAgICAgIGZpcnN0ID0gbnVsbDtcbiAgICAgIGxhc3QgPSBudWxsO1xuICAgIH0sXG5cbiAgICBub3RpZnkoKSB7XG4gICAgICBiYXRjaCgoKSA9PiB7XG4gICAgICAgIGxldCBsaXN0ZW5lciA9IGZpcnN0O1xuXG4gICAgICAgIHdoaWxlIChsaXN0ZW5lcikge1xuICAgICAgICAgIGxpc3RlbmVyLmNhbGxiYWNrKCk7XG4gICAgICAgICAgbGlzdGVuZXIgPSBsaXN0ZW5lci5uZXh0O1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgZ2V0KCkge1xuICAgICAgbGV0IGxpc3RlbmVycyA9IFtdO1xuICAgICAgbGV0IGxpc3RlbmVyID0gZmlyc3Q7XG5cbiAgICAgIHdoaWxlIChsaXN0ZW5lcikge1xuICAgICAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgICAgIGxpc3RlbmVyID0gbGlzdGVuZXIubmV4dDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGxpc3RlbmVycztcbiAgICB9LFxuXG4gICAgc3Vic2NyaWJlKGNhbGxiYWNrKSB7XG4gICAgICBsZXQgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcbiAgICAgIGxldCBsaXN0ZW5lciA9IGxhc3QgPSB7XG4gICAgICAgIGNhbGxiYWNrLFxuICAgICAgICBuZXh0OiBudWxsLFxuICAgICAgICBwcmV2OiBsYXN0XG4gICAgICB9O1xuXG4gICAgICBpZiAobGlzdGVuZXIucHJldikge1xuICAgICAgICBsaXN0ZW5lci5wcmV2Lm5leHQgPSBsaXN0ZW5lcjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZpcnN0ID0gbGlzdGVuZXI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmdW5jdGlvbiB1bnN1YnNjcmliZSgpIHtcbiAgICAgICAgaWYgKCFpc1N1YnNjcmliZWQgfHwgZmlyc3QgPT09IG51bGwpIHJldHVybjtcbiAgICAgICAgaXNTdWJzY3JpYmVkID0gZmFsc2U7XG5cbiAgICAgICAgaWYgKGxpc3RlbmVyLm5leHQpIHtcbiAgICAgICAgICBsaXN0ZW5lci5uZXh0LnByZXYgPSBsaXN0ZW5lci5wcmV2O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxhc3QgPSBsaXN0ZW5lci5wcmV2O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGxpc3RlbmVyLnByZXYpIHtcbiAgICAgICAgICBsaXN0ZW5lci5wcmV2Lm5leHQgPSBsaXN0ZW5lci5uZXh0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGZpcnN0ID0gbGlzdGVuZXIubmV4dDtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG5cbiAgfTtcbn1cblxuY29uc3QgbnVsbExpc3RlbmVycyA9IHtcbiAgbm90aWZ5KCkge30sXG5cbiAgZ2V0OiAoKSA9PiBbXVxufTtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJzY3JpcHRpb24oc3RvcmUsIHBhcmVudFN1Yikge1xuICBsZXQgdW5zdWJzY3JpYmU7XG4gIGxldCBsaXN0ZW5lcnMgPSBudWxsTGlzdGVuZXJzO1xuXG4gIGZ1bmN0aW9uIGFkZE5lc3RlZFN1YihsaXN0ZW5lcikge1xuICAgIHRyeVN1YnNjcmliZSgpO1xuICAgIHJldHVybiBsaXN0ZW5lcnMuc3Vic2NyaWJlKGxpc3RlbmVyKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5vdGlmeU5lc3RlZFN1YnMoKSB7XG4gICAgbGlzdGVuZXJzLm5vdGlmeSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlQ2hhbmdlV3JhcHBlcigpIHtcbiAgICBpZiAoc3Vic2NyaXB0aW9uLm9uU3RhdGVDaGFuZ2UpIHtcbiAgICAgIHN1YnNjcmlwdGlvbi5vblN0YXRlQ2hhbmdlKCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaXNTdWJzY3JpYmVkKCkge1xuICAgIHJldHVybiBCb29sZWFuKHVuc3Vic2NyaWJlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRyeVN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXVuc3Vic2NyaWJlKSB7XG4gICAgICB1bnN1YnNjcmliZSA9IHBhcmVudFN1YiA/IHBhcmVudFN1Yi5hZGROZXN0ZWRTdWIoaGFuZGxlQ2hhbmdlV3JhcHBlcikgOiBzdG9yZS5zdWJzY3JpYmUoaGFuZGxlQ2hhbmdlV3JhcHBlcik7XG4gICAgICBsaXN0ZW5lcnMgPSBjcmVhdGVMaXN0ZW5lckNvbGxlY3Rpb24oKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiB0cnlVbnN1YnNjcmliZSgpIHtcbiAgICBpZiAodW5zdWJzY3JpYmUpIHtcbiAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICB1bnN1YnNjcmliZSA9IHVuZGVmaW5lZDtcbiAgICAgIGxpc3RlbmVycy5jbGVhcigpO1xuICAgICAgbGlzdGVuZXJzID0gbnVsbExpc3RlbmVycztcbiAgICB9XG4gIH1cblxuICBjb25zdCBzdWJzY3JpcHRpb24gPSB7XG4gICAgYWRkTmVzdGVkU3ViLFxuICAgIG5vdGlmeU5lc3RlZFN1YnMsXG4gICAgaGFuZGxlQ2hhbmdlV3JhcHBlcixcbiAgICBpc1N1YnNjcmliZWQsXG4gICAgdHJ5U3Vic2NyaWJlLFxuICAgIHRyeVVuc3Vic2NyaWJlLFxuICAgIGdldExpc3RlbmVyczogKCkgPT4gbGlzdGVuZXJzXG4gIH07XG4gIHJldHVybiBzdWJzY3JpcHRpb247XG59IiwiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VMYXlvdXRFZmZlY3QgfSBmcm9tICdyZWFjdCc7IC8vIFJlYWN0IGN1cnJlbnRseSB0aHJvd3MgYSB3YXJuaW5nIHdoZW4gdXNpbmcgdXNlTGF5b3V0RWZmZWN0IG9uIHRoZSBzZXJ2ZXIuXG4vLyBUbyBnZXQgYXJvdW5kIGl0LCB3ZSBjYW4gY29uZGl0aW9uYWxseSB1c2VFZmZlY3Qgb24gdGhlIHNlcnZlciAobm8tb3ApIGFuZFxuLy8gdXNlTGF5b3V0RWZmZWN0IGluIHRoZSBicm93c2VyLiBXZSBuZWVkIHVzZUxheW91dEVmZmVjdCB0byBlbnN1cmUgdGhlIHN0b3JlXG4vLyBzdWJzY3JpcHRpb24gY2FsbGJhY2sgYWx3YXlzIGhhcyB0aGUgc2VsZWN0b3IgZnJvbSB0aGUgbGF0ZXN0IHJlbmRlciBjb21taXRcbi8vIGF2YWlsYWJsZSwgb3RoZXJ3aXNlIGEgc3RvcmUgdXBkYXRlIG1heSBoYXBwZW4gYmV0d2VlbiByZW5kZXIgYW5kIHRoZSBlZmZlY3QsXG4vLyB3aGljaCBtYXkgY2F1c2UgbWlzc2VkIHVwZGF0ZXM7IHdlIGFsc28gbXVzdCBlbnN1cmUgdGhlIHN0b3JlIHN1YnNjcmlwdGlvblxuLy8gaXMgY3JlYXRlZCBzeW5jaHJvbm91c2x5LCBvdGhlcndpc2UgYSBzdG9yZSB1cGRhdGUgbWF5IG9jY3VyIGJlZm9yZSB0aGVcbi8vIHN1YnNjcmlwdGlvbiBpcyBjcmVhdGVkIGFuZCBhbiBpbmNvbnNpc3RlbnQgc3RhdGUgbWF5IGJlIG9ic2VydmVkXG4vLyBNYXRjaGVzIGxvZ2ljIGluIFJlYWN0J3MgYHNoYXJlZC9FeGVjdXRpb25FbnZpcm9ubWVudGAgZmlsZVxuXG5leHBvcnQgY29uc3QgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50ICE9PSAndW5kZWZpbmVkJyk7XG5leHBvcnQgY29uc3QgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCA9IGNhblVzZURPTSA/IHVzZUxheW91dEVmZmVjdCA6IHVzZUVmZmVjdDsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wicmVhY3RSZWR1eEZvcndhcmRlZFJlZlwiXTtcblxuLyogZXNsaW50LWRpc2FibGUgdmFsaWQtanNkb2MsIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IGhvaXN0U3RhdGljcyBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlQ29udGV4dCwgdXNlTWVtbywgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgaXNWYWxpZEVsZW1lbnRUeXBlLCBpc0NvbnRleHRDb25zdW1lciB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBkZWZhdWx0U2VsZWN0b3JGYWN0b3J5IGZyb20gJy4uL2Nvbm5lY3Qvc2VsZWN0b3JGYWN0b3J5JztcbmltcG9ydCB7IG1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcnkgfSBmcm9tICcuLi9jb25uZWN0L21hcERpc3BhdGNoVG9Qcm9wcyc7XG5pbXBvcnQgeyBtYXBTdGF0ZVRvUHJvcHNGYWN0b3J5IH0gZnJvbSAnLi4vY29ubmVjdC9tYXBTdGF0ZVRvUHJvcHMnO1xuaW1wb3J0IHsgbWVyZ2VQcm9wc0ZhY3RvcnkgfSBmcm9tICcuLi9jb25uZWN0L21lcmdlUHJvcHMnO1xuaW1wb3J0IHsgY3JlYXRlU3Vic2NyaXB0aW9uIH0gZnJvbSAnLi4vdXRpbHMvU3Vic2NyaXB0aW9uJztcbmltcG9ydCB7IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tICcuLi91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0JztcbmltcG9ydCBzaGFsbG93RXF1YWwgZnJvbSAnLi4vdXRpbHMvc2hhbGxvd0VxdWFsJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJy4uL3V0aWxzL3dhcm5pbmcnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuL0NvbnRleHQnO1xuaW1wb3J0IHsgbm90SW5pdGlhbGl6ZWQgfSBmcm9tICcuLi91dGlscy91c2VTeW5jRXh0ZXJuYWxTdG9yZSc7XG5sZXQgdXNlU3luY0V4dGVybmFsU3RvcmUgPSBub3RJbml0aWFsaXplZDtcbmV4cG9ydCBjb25zdCBpbml0aWFsaXplQ29ubmVjdCA9IGZuID0+IHtcbiAgdXNlU3luY0V4dGVybmFsU3RvcmUgPSBmbjtcbn07IC8vIERlZmluZSBzb21lIGNvbnN0YW50IGFycmF5cyBqdXN0IHRvIGF2b2lkIHJlLWNyZWF0aW5nIHRoZXNlXG5cbmNvbnN0IEVNUFRZX0FSUkFZID0gW251bGwsIDBdO1xuY29uc3QgTk9fU1VCU0NSSVBUSU9OX0FSUkFZID0gW251bGwsIG51bGxdOyAvLyBBdHRlbXB0cyB0byBzdHJpbmdpZnkgd2hhdGV2ZXIgbm90LXJlYWxseS1hLWNvbXBvbmVudCB2YWx1ZSB3ZSB3ZXJlIGdpdmVuXG4vLyBmb3IgbG9nZ2luZyBpbiBhbiBlcnJvciBtZXNzYWdlXG5cbmNvbnN0IHN0cmluZ2lmeUNvbXBvbmVudCA9IENvbXAgPT4ge1xuICB0cnkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShDb21wKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuIFN0cmluZyhDb21wKTtcbiAgfVxufTtcblxuLy8gVGhpcyBpcyBcImp1c3RcIiBhIGB1c2VMYXlvdXRFZmZlY3RgLCBidXQgd2l0aCB0d28gbW9kaWZpY2F0aW9uczpcbi8vIC0gd2UgbmVlZCB0byBmYWxsIGJhY2sgdG8gYHVzZUVmZmVjdGAgaW4gU1NSIHRvIGF2b2lkIGFubm95aW5nIHdhcm5pbmdzXG4vLyAtIHdlIGV4dHJhY3QgdGhpcyB0byBhIHNlcGFyYXRlIGZ1bmN0aW9uIHRvIGF2b2lkIGNsb3Npbmcgb3ZlciB2YWx1ZXNcbi8vICAgYW5kIGNhdXNpbmcgbWVtb3J5IGxlYWtzXG5mdW5jdGlvbiB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0V2l0aEFyZ3MoZWZmZWN0RnVuYywgZWZmZWN0QXJncywgZGVwZW5kZW5jaWVzKSB7XG4gIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoKCkgPT4gZWZmZWN0RnVuYyguLi5lZmZlY3RBcmdzKSwgZGVwZW5kZW5jaWVzKTtcbn0gLy8gRWZmZWN0IGNhbGxiYWNrLCBleHRyYWN0ZWQ6IGFzc2lnbiB0aGUgbGF0ZXN0IHByb3BzIHZhbHVlcyB0byByZWZzIGZvciBsYXRlciB1c2FnZVxuXG5cbmZ1bmN0aW9uIGNhcHR1cmVXcmFwcGVyUHJvcHMobGFzdFdyYXBwZXJQcm9wcywgbGFzdENoaWxkUHJvcHMsIHJlbmRlcklzU2NoZWR1bGVkLCB3cmFwcGVyUHJvcHMsIC8vIGFjdHVhbENoaWxkUHJvcHM6IHVua25vd24sXG5jaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLCBub3RpZnlOZXN0ZWRTdWJzKSB7XG4gIC8vIFdlIHdhbnQgdG8gY2FwdHVyZSB0aGUgd3JhcHBlciBwcm9wcyBhbmQgY2hpbGQgcHJvcHMgd2UgdXNlZCBmb3IgbGF0ZXIgY29tcGFyaXNvbnNcbiAgbGFzdFdyYXBwZXJQcm9wcy5jdXJyZW50ID0gd3JhcHBlclByb3BzO1xuICByZW5kZXJJc1NjaGVkdWxlZC5jdXJyZW50ID0gZmFsc2U7IC8vIElmIHRoZSByZW5kZXIgd2FzIGZyb20gYSBzdG9yZSB1cGRhdGUsIGNsZWFyIG91dCB0aGF0IHJlZmVyZW5jZSBhbmQgY2FzY2FkZSB0aGUgc3Vic2NyaWJlciB1cGRhdGVcblxuICBpZiAoY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZS5jdXJyZW50KSB7XG4gICAgY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZS5jdXJyZW50ID0gbnVsbDtcbiAgICBub3RpZnlOZXN0ZWRTdWJzKCk7XG4gIH1cbn0gLy8gRWZmZWN0IGNhbGxiYWNrLCBleHRyYWN0ZWQ6IHN1YnNjcmliZSB0byB0aGUgUmVkdXggc3RvcmUgb3IgbmVhcmVzdCBjb25uZWN0ZWQgYW5jZXN0b3IsXG4vLyBjaGVjayBmb3IgdXBkYXRlcyBhZnRlciBkaXNwYXRjaGVkIGFjdGlvbnMsIGFuZCB0cmlnZ2VyIHJlLXJlbmRlcnMuXG5cblxuZnVuY3Rpb24gc3Vic2NyaWJlVXBkYXRlcyhzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMsIHN0b3JlLCBzdWJzY3JpcHRpb24sIGNoaWxkUHJvcHNTZWxlY3RvciwgbGFzdFdyYXBwZXJQcm9wcywgbGFzdENoaWxkUHJvcHMsIHJlbmRlcklzU2NoZWR1bGVkLCBpc01vdW50ZWQsIGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUsIG5vdGlmeU5lc3RlZFN1YnMsIC8vIGZvcmNlQ29tcG9uZW50VXBkYXRlRGlzcGF0Y2g6IFJlYWN0LkRpc3BhdGNoPGFueT4sXG5hZGRpdGlvbmFsU3Vic2NyaWJlTGlzdGVuZXIpIHtcbiAgLy8gSWYgd2UncmUgbm90IHN1YnNjcmliZWQgdG8gdGhlIHN0b3JlLCBub3RoaW5nIHRvIGRvIGhlcmVcbiAgaWYgKCFzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMpIHJldHVybiAoKSA9PiB7fTsgLy8gQ2FwdHVyZSB2YWx1ZXMgZm9yIGNoZWNraW5nIGlmIGFuZCB3aGVuIHRoaXMgY29tcG9uZW50IHVubW91bnRzXG5cbiAgbGV0IGRpZFVuc3Vic2NyaWJlID0gZmFsc2U7XG4gIGxldCBsYXN0VGhyb3duRXJyb3IgPSBudWxsOyAvLyBXZSdsbCBydW4gdGhpcyBjYWxsYmFjayBldmVyeSB0aW1lIGEgc3RvcmUgc3Vic2NyaXB0aW9uIHVwZGF0ZSBwcm9wYWdhdGVzIHRvIHRoaXMgY29tcG9uZW50XG5cbiAgY29uc3QgY2hlY2tGb3JVcGRhdGVzID0gKCkgPT4ge1xuICAgIGlmIChkaWRVbnN1YnNjcmliZSB8fCAhaXNNb3VudGVkLmN1cnJlbnQpIHtcbiAgICAgIC8vIERvbid0IHJ1biBzdGFsZSBsaXN0ZW5lcnMuXG4gICAgICAvLyBSZWR1eCBkb2Vzbid0IGd1YXJhbnRlZSB1bnN1YnNjcmlwdGlvbnMgaGFwcGVuIHVudGlsIG5leHQgZGlzcGF0Y2guXG4gICAgICByZXR1cm47XG4gICAgfSAvLyBUT0RPIFdlJ3JlIGN1cnJlbnRseSBjYWxsaW5nIGdldFN0YXRlIG91cnNlbHZlcyBoZXJlLCByYXRoZXIgdGhhbiBsZXR0aW5nIGB1U0VTYCBkbyBpdFxuXG5cbiAgICBjb25zdCBsYXRlc3RTdG9yZVN0YXRlID0gc3RvcmUuZ2V0U3RhdGUoKTtcbiAgICBsZXQgbmV3Q2hpbGRQcm9wcywgZXJyb3I7XG5cbiAgICB0cnkge1xuICAgICAgLy8gQWN0dWFsbHkgcnVuIHRoZSBzZWxlY3RvciB3aXRoIHRoZSBtb3N0IHJlY2VudCBzdG9yZSBzdGF0ZSBhbmQgd3JhcHBlciBwcm9wc1xuICAgICAgLy8gdG8gZGV0ZXJtaW5lIHdoYXQgdGhlIGNoaWxkIHByb3BzIHNob3VsZCBiZVxuICAgICAgbmV3Q2hpbGRQcm9wcyA9IGNoaWxkUHJvcHNTZWxlY3RvcihsYXRlc3RTdG9yZVN0YXRlLCBsYXN0V3JhcHBlclByb3BzLmN1cnJlbnQpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGVycm9yID0gZTtcbiAgICAgIGxhc3RUaHJvd25FcnJvciA9IGU7XG4gICAgfVxuXG4gICAgaWYgKCFlcnJvcikge1xuICAgICAgbGFzdFRocm93bkVycm9yID0gbnVsbDtcbiAgICB9IC8vIElmIHRoZSBjaGlsZCBwcm9wcyBoYXZlbid0IGNoYW5nZWQsIG5vdGhpbmcgdG8gZG8gaGVyZSAtIGNhc2NhZGUgdGhlIHN1YnNjcmlwdGlvbiB1cGRhdGVcblxuXG4gICAgaWYgKG5ld0NoaWxkUHJvcHMgPT09IGxhc3RDaGlsZFByb3BzLmN1cnJlbnQpIHtcbiAgICAgIGlmICghcmVuZGVySXNTY2hlZHVsZWQuY3VycmVudCkge1xuICAgICAgICBub3RpZnlOZXN0ZWRTdWJzKCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFNhdmUgcmVmZXJlbmNlcyB0byB0aGUgbmV3IGNoaWxkIHByb3BzLiAgTm90ZSB0aGF0IHdlIHRyYWNrIHRoZSBcImNoaWxkIHByb3BzIGZyb20gc3RvcmUgdXBkYXRlXCJcbiAgICAgIC8vIGFzIGEgcmVmIGluc3RlYWQgb2YgYSB1c2VTdGF0ZS91c2VSZWR1Y2VyIGJlY2F1c2Ugd2UgbmVlZCBhIHdheSB0byBkZXRlcm1pbmUgaWYgdGhhdCB2YWx1ZSBoYXNcbiAgICAgIC8vIGJlZW4gcHJvY2Vzc2VkLiAgSWYgdGhpcyB3ZW50IGludG8gdXNlU3RhdGUvdXNlUmVkdWNlciwgd2UgY291bGRuJ3QgY2xlYXIgb3V0IHRoZSB2YWx1ZSB3aXRob3V0XG4gICAgICAvLyBmb3JjaW5nIGFub3RoZXIgcmUtcmVuZGVyLCB3aGljaCB3ZSBkb24ndCB3YW50LlxuICAgICAgbGFzdENoaWxkUHJvcHMuY3VycmVudCA9IG5ld0NoaWxkUHJvcHM7XG4gICAgICBjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLmN1cnJlbnQgPSBuZXdDaGlsZFByb3BzO1xuICAgICAgcmVuZGVySXNTY2hlZHVsZWQuY3VycmVudCA9IHRydWU7IC8vIFRPRE8gVGhpcyBpcyBoYWNreSBhbmQgbm90IGhvdyBgdVNFU2AgaXMgbWVhbnQgdG8gYmUgdXNlZFxuICAgICAgLy8gVHJpZ2dlciB0aGUgUmVhY3QgYHVzZVN5bmNFeHRlcm5hbFN0b3JlYCBzdWJzY3JpYmVyXG5cbiAgICAgIGFkZGl0aW9uYWxTdWJzY3JpYmVMaXN0ZW5lcigpO1xuICAgIH1cbiAgfTsgLy8gQWN0dWFsbHkgc3Vic2NyaWJlIHRvIHRoZSBuZWFyZXN0IGNvbm5lY3RlZCBhbmNlc3RvciAob3Igc3RvcmUpXG5cblxuICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSA9IGNoZWNrRm9yVXBkYXRlcztcbiAgc3Vic2NyaXB0aW9uLnRyeVN1YnNjcmliZSgpOyAvLyBQdWxsIGRhdGEgZnJvbSB0aGUgc3RvcmUgYWZ0ZXIgZmlyc3QgcmVuZGVyIGluIGNhc2UgdGhlIHN0b3JlIGhhc1xuICAvLyBjaGFuZ2VkIHNpbmNlIHdlIGJlZ2FuLlxuXG4gIGNoZWNrRm9yVXBkYXRlcygpO1xuXG4gIGNvbnN0IHVuc3Vic2NyaWJlV3JhcHBlciA9ICgpID0+IHtcbiAgICBkaWRVbnN1YnNjcmliZSA9IHRydWU7XG4gICAgc3Vic2NyaXB0aW9uLnRyeVVuc3Vic2NyaWJlKCk7XG4gICAgc3Vic2NyaXB0aW9uLm9uU3RhdGVDaGFuZ2UgPSBudWxsO1xuXG4gICAgaWYgKGxhc3RUaHJvd25FcnJvcikge1xuICAgICAgLy8gSXQncyBwb3NzaWJsZSB0aGF0IHdlIGNhdWdodCBhbiBlcnJvciBkdWUgdG8gYSBiYWQgbWFwU3RhdGUgZnVuY3Rpb24sIGJ1dCB0aGVcbiAgICAgIC8vIHBhcmVudCByZS1yZW5kZXJlZCB3aXRob3V0IHRoaXMgY29tcG9uZW50IGFuZCB3ZSdyZSBhYm91dCB0byB1bm1vdW50LlxuICAgICAgLy8gVGhpcyBzaG91bGRuJ3QgaGFwcGVuIGFzIGxvbmcgYXMgd2UgZG8gdG9wLWRvd24gc3Vic2NyaXB0aW9ucyBjb3JyZWN0bHksIGJ1dFxuICAgICAgLy8gaWYgd2UgZXZlciBkbyB0aG9zZSB3cm9uZywgdGhpcyB0aHJvdyB3aWxsIHN1cmZhY2UgdGhlIGVycm9yIGluIG91ciB0ZXN0cy5cbiAgICAgIC8vIEluIHRoYXQgY2FzZSwgdGhyb3cgdGhlIGVycm9yIGZyb20gaGVyZSBzbyBpdCBkb2Vzbid0IGdldCBsb3N0LlxuICAgICAgdGhyb3cgbGFzdFRocm93bkVycm9yO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdW5zdWJzY3JpYmVXcmFwcGVyO1xufSAvLyBSZWR1Y2VyIGluaXRpYWwgc3RhdGUgY3JlYXRpb24gZm9yIG91ciB1cGRhdGUgcmVkdWNlclxuXG5cbmNvbnN0IGluaXRTdGF0ZVVwZGF0ZXMgPSAoKSA9PiBFTVBUWV9BUlJBWTtcblxuZnVuY3Rpb24gc3RyaWN0RXF1YWwoYSwgYikge1xuICByZXR1cm4gYSA9PT0gYjtcbn1cbi8qKlxyXG4gKiBJbmZlcnMgdGhlIHR5cGUgb2YgcHJvcHMgdGhhdCBhIGNvbm5lY3RvciB3aWxsIGluamVjdCBpbnRvIGEgY29tcG9uZW50LlxyXG4gKi9cblxuXG5sZXQgaGFzV2FybmVkQWJvdXREZXByZWNhdGVkUHVyZU9wdGlvbiA9IGZhbHNlO1xuLyoqXHJcbiAqIENvbm5lY3RzIGEgUmVhY3QgY29tcG9uZW50IHRvIGEgUmVkdXggc3RvcmUuXHJcbiAqXHJcbiAqIC0gV2l0aG91dCBhcmd1bWVudHMsIGp1c3Qgd3JhcHMgdGhlIGNvbXBvbmVudCwgd2l0aG91dCBjaGFuZ2luZyB0aGUgYmVoYXZpb3IgLyBwcm9wc1xyXG4gKlxyXG4gKiAtIElmIDIgcGFyYW1zIGFyZSBwYXNzZWQgKDNyZCBwYXJhbSwgbWVyZ2VQcm9wcywgaXMgc2tpcHBlZCksIGRlZmF1bHQgYmVoYXZpb3JcclxuICogaXMgdG8gb3ZlcnJpZGUgb3duUHJvcHMgKGFzIHN0YXRlZCBpbiB0aGUgZG9jcyksIHNvIHdoYXQgcmVtYWlucyBpcyBldmVyeXRoaW5nIHRoYXQnc1xyXG4gKiBub3QgYSBzdGF0ZSBvciBkaXNwYXRjaCBwcm9wXHJcbiAqXHJcbiAqIC0gV2hlbiAzcmQgcGFyYW0gaXMgcGFzc2VkLCB3ZSBkb24ndCBrbm93IGlmIG93blByb3BzIHByb3BhZ2F0ZSBhbmQgd2hldGhlciB0aGV5XHJcbiAqIHNob3VsZCBiZSB2YWxpZCBjb21wb25lbnQgcHJvcHMsIGJlY2F1c2UgaXQgZGVwZW5kcyBvbiBtZXJnZVByb3BzIGltcGxlbWVudGF0aW9uLlxyXG4gKiBBcyBzdWNoLCBpdCBpcyB0aGUgdXNlcidzIHJlc3BvbnNpYmlsaXR5IHRvIGV4dGVuZCBvd25Qcm9wcyBpbnRlcmZhY2UgZnJvbSBzdGF0ZSBvclxyXG4gKiBkaXNwYXRjaCBwcm9wcyBvciBib3RoIHdoZW4gYXBwbGljYWJsZVxyXG4gKlxyXG4gKiBAcGFyYW0gbWFwU3RhdGVUb1Byb3BzIEEgZnVuY3Rpb24gdGhhdCBleHRyYWN0cyB2YWx1ZXMgZnJvbSBzdGF0ZVxyXG4gKiBAcGFyYW0gbWFwRGlzcGF0Y2hUb1Byb3BzIFNldHVwIGZvciBkaXNwYXRjaGluZyBhY3Rpb25zXHJcbiAqIEBwYXJhbSBtZXJnZVByb3BzIE9wdGlvbmFsIGNhbGxiYWNrIHRvIG1lcmdlIHN0YXRlIGFuZCBkaXNwYXRjaCBwcm9wcyB0b2dldGhlclxyXG4gKiBAcGFyYW0gb3B0aW9ucyBPcHRpb25zIGZvciBjb25maWd1cmluZyB0aGUgY29ubmVjdGlvblxyXG4gKlxyXG4gKi9cblxuZnVuY3Rpb24gY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWVyZ2VQcm9wcywge1xuICAvLyBUaGUgYHB1cmVgIG9wdGlvbiBoYXMgYmVlbiByZW1vdmVkLCBzbyBUUyBkb2Vzbid0IGxpa2UgdXMgZGVzdHJ1Y3R1cmluZyB0aGlzIHRvIGNoZWNrIGl0cyBleGlzdGVuY2UuXG4gIC8vIEB0cy1pZ25vcmVcbiAgcHVyZSxcbiAgYXJlU3RhdGVzRXF1YWwgPSBzdHJpY3RFcXVhbCxcbiAgYXJlT3duUHJvcHNFcXVhbCA9IHNoYWxsb3dFcXVhbCxcbiAgYXJlU3RhdGVQcm9wc0VxdWFsID0gc2hhbGxvd0VxdWFsLFxuICBhcmVNZXJnZWRQcm9wc0VxdWFsID0gc2hhbGxvd0VxdWFsLFxuICAvLyB1c2UgUmVhY3QncyBmb3J3YXJkUmVmIHRvIGV4cG9zZSBhIHJlZiBvZiB0aGUgd3JhcHBlZCBjb21wb25lbnRcbiAgZm9yd2FyZFJlZiA9IGZhbHNlLFxuICAvLyB0aGUgY29udGV4dCBjb25zdW1lciB0byB1c2VcbiAgY29udGV4dCA9IFJlYWN0UmVkdXhDb250ZXh0XG59ID0ge30pIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAocHVyZSAhPT0gdW5kZWZpbmVkICYmICFoYXNXYXJuZWRBYm91dERlcHJlY2F0ZWRQdXJlT3B0aW9uKSB7XG4gICAgICBoYXNXYXJuZWRBYm91dERlcHJlY2F0ZWRQdXJlT3B0aW9uID0gdHJ1ZTtcbiAgICAgIHdhcm5pbmcoJ1RoZSBgcHVyZWAgb3B0aW9uIGhhcyBiZWVuIHJlbW92ZWQuIGBjb25uZWN0YCBpcyBub3cgYWx3YXlzIGEgXCJwdXJlL21lbW9pemVkXCIgY29tcG9uZW50Jyk7XG4gICAgfVxuICB9XG5cbiAgY29uc3QgQ29udGV4dCA9IGNvbnRleHQ7XG4gIGNvbnN0IGluaXRNYXBTdGF0ZVRvUHJvcHMgPSBtYXBTdGF0ZVRvUHJvcHNGYWN0b3J5KG1hcFN0YXRlVG9Qcm9wcyk7XG4gIGNvbnN0IGluaXRNYXBEaXNwYXRjaFRvUHJvcHMgPSBtYXBEaXNwYXRjaFRvUHJvcHNGYWN0b3J5KG1hcERpc3BhdGNoVG9Qcm9wcyk7XG4gIGNvbnN0IGluaXRNZXJnZVByb3BzID0gbWVyZ2VQcm9wc0ZhY3RvcnkobWVyZ2VQcm9wcyk7XG4gIGNvbnN0IHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcyA9IEJvb2xlYW4obWFwU3RhdGVUb1Byb3BzKTtcblxuICBjb25zdCB3cmFwV2l0aENvbm5lY3QgPSBXcmFwcGVkQ29tcG9uZW50ID0+IHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhaXNWYWxpZEVsZW1lbnRUeXBlKFdyYXBwZWRDb21wb25lbnQpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFlvdSBtdXN0IHBhc3MgYSBjb21wb25lbnQgdG8gdGhlIGZ1bmN0aW9uIHJldHVybmVkIGJ5IGNvbm5lY3QuIEluc3RlYWQgcmVjZWl2ZWQgJHtzdHJpbmdpZnlDb21wb25lbnQoV3JhcHBlZENvbXBvbmVudCl9YCk7XG4gICAgfVxuXG4gICAgY29uc3Qgd3JhcHBlZENvbXBvbmVudE5hbWUgPSBXcmFwcGVkQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IFdyYXBwZWRDb21wb25lbnQubmFtZSB8fCAnQ29tcG9uZW50JztcbiAgICBjb25zdCBkaXNwbGF5TmFtZSA9IGBDb25uZWN0KCR7d3JhcHBlZENvbXBvbmVudE5hbWV9KWA7XG4gICAgY29uc3Qgc2VsZWN0b3JGYWN0b3J5T3B0aW9ucyA9IHtcbiAgICAgIHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcyxcbiAgICAgIGRpc3BsYXlOYW1lLFxuICAgICAgd3JhcHBlZENvbXBvbmVudE5hbWUsXG4gICAgICBXcmFwcGVkQ29tcG9uZW50LFxuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgaW5pdE1hcFN0YXRlVG9Qcm9wcyxcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIGluaXRNYXBEaXNwYXRjaFRvUHJvcHMsXG4gICAgICBpbml0TWVyZ2VQcm9wcyxcbiAgICAgIGFyZVN0YXRlc0VxdWFsLFxuICAgICAgYXJlU3RhdGVQcm9wc0VxdWFsLFxuICAgICAgYXJlT3duUHJvcHNFcXVhbCxcbiAgICAgIGFyZU1lcmdlZFByb3BzRXF1YWxcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gQ29ubmVjdEZ1bmN0aW9uKHByb3BzKSB7XG4gICAgICBjb25zdCBbcHJvcHNDb250ZXh0LCByZWFjdFJlZHV4Rm9yd2FyZGVkUmVmLCB3cmFwcGVyUHJvcHNdID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIC8vIERpc3Rpbmd1aXNoIGJldHdlZW4gYWN0dWFsIFwiZGF0YVwiIHByb3BzIHRoYXQgd2VyZSBwYXNzZWQgdG8gdGhlIHdyYXBwZXIgY29tcG9uZW50LFxuICAgICAgICAvLyBhbmQgdmFsdWVzIG5lZWRlZCB0byBjb250cm9sIGJlaGF2aW9yIChmb3J3YXJkZWQgcmVmcywgYWx0ZXJuYXRlIGNvbnRleHQgaW5zdGFuY2VzKS5cbiAgICAgICAgLy8gVG8gbWFpbnRhaW4gdGhlIHdyYXBwZXJQcm9wcyBvYmplY3QgcmVmZXJlbmNlLCBtZW1vaXplIHRoaXMgZGVzdHJ1Y3R1cmluZy5cbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgIHJlYWN0UmVkdXhGb3J3YXJkZWRSZWZcbiAgICAgICAgfSA9IHByb3BzLFxuICAgICAgICAgICAgICB3cmFwcGVyUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgX2V4Y2x1ZGVkKTtcblxuICAgICAgICByZXR1cm4gW3Byb3BzLmNvbnRleHQsIHJlYWN0UmVkdXhGb3J3YXJkZWRSZWYsIHdyYXBwZXJQcm9wc107XG4gICAgICB9LCBbcHJvcHNdKTtcbiAgICAgIGNvbnN0IENvbnRleHRUb1VzZSA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICAvLyBVc2VycyBtYXkgb3B0aW9uYWxseSBwYXNzIGluIGEgY3VzdG9tIGNvbnRleHQgaW5zdGFuY2UgdG8gdXNlIGluc3RlYWQgb2Ygb3VyIFJlYWN0UmVkdXhDb250ZXh0LlxuICAgICAgICAvLyBNZW1vaXplIHRoZSBjaGVjayB0aGF0IGRldGVybWluZXMgd2hpY2ggY29udGV4dCBpbnN0YW5jZSB3ZSBzaG91bGQgdXNlLlxuICAgICAgICByZXR1cm4gcHJvcHNDb250ZXh0ICYmIHByb3BzQ29udGV4dC5Db25zdW1lciAmJiAvLyBAdHMtaWdub3JlXG4gICAgICAgIGlzQ29udGV4dENvbnN1bWVyKCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChwcm9wc0NvbnRleHQuQ29uc3VtZXIsIG51bGwpKSA/IHByb3BzQ29udGV4dCA6IENvbnRleHQ7XG4gICAgICB9LCBbcHJvcHNDb250ZXh0LCBDb250ZXh0XSk7IC8vIFJldHJpZXZlIHRoZSBzdG9yZSBhbmQgYW5jZXN0b3Igc3Vic2NyaXB0aW9uIHZpYSBjb250ZXh0LCBpZiBhdmFpbGFibGVcblxuICAgICAgY29uc3QgY29udGV4dFZhbHVlID0gdXNlQ29udGV4dChDb250ZXh0VG9Vc2UpOyAvLyBUaGUgc3RvcmUgX211c3RfIGV4aXN0IGFzIGVpdGhlciBhIHByb3Agb3IgaW4gY29udGV4dC5cbiAgICAgIC8vIFdlJ2xsIGNoZWNrIHRvIHNlZSBpZiBpdCBfbG9va3NfIGxpa2UgYSBSZWR1eCBzdG9yZSBmaXJzdC5cbiAgICAgIC8vIFRoaXMgYWxsb3dzIHVzIHRvIHBhc3MgdGhyb3VnaCBhIGBzdG9yZWAgcHJvcCB0aGF0IGlzIGp1c3QgYSBwbGFpbiB2YWx1ZS5cblxuICAgICAgY29uc3QgZGlkU3RvcmVDb21lRnJvbVByb3BzID0gQm9vbGVhbihwcm9wcy5zdG9yZSkgJiYgQm9vbGVhbihwcm9wcy5zdG9yZS5nZXRTdGF0ZSkgJiYgQm9vbGVhbihwcm9wcy5zdG9yZS5kaXNwYXRjaCk7XG4gICAgICBjb25zdCBkaWRTdG9yZUNvbWVGcm9tQ29udGV4dCA9IEJvb2xlYW4oY29udGV4dFZhbHVlKSAmJiBCb29sZWFuKGNvbnRleHRWYWx1ZS5zdG9yZSk7XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICFkaWRTdG9yZUNvbWVGcm9tUHJvcHMgJiYgIWRpZFN0b3JlQ29tZUZyb21Db250ZXh0KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQ291bGQgbm90IGZpbmQgXCJzdG9yZVwiIGluIHRoZSBjb250ZXh0IG9mIGAgKyBgXCIke2Rpc3BsYXlOYW1lfVwiLiBFaXRoZXIgd3JhcCB0aGUgcm9vdCBjb21wb25lbnQgaW4gYSA8UHJvdmlkZXI+LCBgICsgYG9yIHBhc3MgYSBjdXN0b20gUmVhY3QgY29udGV4dCBwcm92aWRlciB0byA8UHJvdmlkZXI+IGFuZCB0aGUgY29ycmVzcG9uZGluZyBgICsgYFJlYWN0IGNvbnRleHQgY29uc3VtZXIgdG8gJHtkaXNwbGF5TmFtZX0gaW4gY29ubmVjdCBvcHRpb25zLmApO1xuICAgICAgfSAvLyBCYXNlZCBvbiB0aGUgcHJldmlvdXMgY2hlY2ssIG9uZSBvZiB0aGVzZSBtdXN0IGJlIHRydWVcblxuXG4gICAgICBjb25zdCBzdG9yZSA9IGRpZFN0b3JlQ29tZUZyb21Qcm9wcyA/IHByb3BzLnN0b3JlIDogY29udGV4dFZhbHVlLnN0b3JlO1xuICAgICAgY29uc3QgZ2V0U2VydmVyU3RhdGUgPSBkaWRTdG9yZUNvbWVGcm9tQ29udGV4dCA/IGNvbnRleHRWYWx1ZS5nZXRTZXJ2ZXJTdGF0ZSA6IHN0b3JlLmdldFN0YXRlO1xuICAgICAgY29uc3QgY2hpbGRQcm9wc1NlbGVjdG9yID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIC8vIFRoZSBjaGlsZCBwcm9wcyBzZWxlY3RvciBuZWVkcyB0aGUgc3RvcmUgcmVmZXJlbmNlIGFzIGFuIGlucHV0LlxuICAgICAgICAvLyBSZS1jcmVhdGUgdGhpcyBzZWxlY3RvciB3aGVuZXZlciB0aGUgc3RvcmUgY2hhbmdlcy5cbiAgICAgICAgcmV0dXJuIGRlZmF1bHRTZWxlY3RvckZhY3Rvcnkoc3RvcmUuZGlzcGF0Y2gsIHNlbGVjdG9yRmFjdG9yeU9wdGlvbnMpO1xuICAgICAgfSwgW3N0b3JlXSk7XG4gICAgICBjb25zdCBbc3Vic2NyaXB0aW9uLCBub3RpZnlOZXN0ZWRTdWJzXSA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBpZiAoIXNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcykgcmV0dXJuIE5PX1NVQlNDUklQVElPTl9BUlJBWTsgLy8gVGhpcyBTdWJzY3JpcHRpb24ncyBzb3VyY2Ugc2hvdWxkIG1hdGNoIHdoZXJlIHN0b3JlIGNhbWUgZnJvbTogcHJvcHMgdnMuIGNvbnRleHQuIEEgY29tcG9uZW50XG4gICAgICAgIC8vIGNvbm5lY3RlZCB0byB0aGUgc3RvcmUgdmlhIHByb3BzIHNob3VsZG4ndCB1c2Ugc3Vic2NyaXB0aW9uIGZyb20gY29udGV4dCwgb3IgdmljZSB2ZXJzYS5cblxuICAgICAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBjcmVhdGVTdWJzY3JpcHRpb24oc3RvcmUsIGRpZFN0b3JlQ29tZUZyb21Qcm9wcyA/IHVuZGVmaW5lZCA6IGNvbnRleHRWYWx1ZS5zdWJzY3JpcHRpb24pOyAvLyBgbm90aWZ5TmVzdGVkU3Vic2AgaXMgZHVwbGljYXRlZCB0byBoYW5kbGUgdGhlIGNhc2Ugd2hlcmUgdGhlIGNvbXBvbmVudCBpcyB1bm1vdW50ZWQgaW5cbiAgICAgICAgLy8gdGhlIG1pZGRsZSBvZiB0aGUgbm90aWZpY2F0aW9uIGxvb3AsIHdoZXJlIGBzdWJzY3JpcHRpb25gIHdpbGwgdGhlbiBiZSBudWxsLiBUaGlzIGNhblxuICAgICAgICAvLyBwcm9iYWJseSBiZSBhdm9pZGVkIGlmIFN1YnNjcmlwdGlvbidzIGxpc3RlbmVycyBsb2dpYyBpcyBjaGFuZ2VkIHRvIG5vdCBjYWxsIGxpc3RlbmVyc1xuICAgICAgICAvLyB0aGF0IGhhdmUgYmVlbiB1bnN1YnNjcmliZWQgaW4gdGhlICBtaWRkbGUgb2YgdGhlIG5vdGlmaWNhdGlvbiBsb29wLlxuXG4gICAgICAgIGNvbnN0IG5vdGlmeU5lc3RlZFN1YnMgPSBzdWJzY3JpcHRpb24ubm90aWZ5TmVzdGVkU3Vicy5iaW5kKHN1YnNjcmlwdGlvbik7XG4gICAgICAgIHJldHVybiBbc3Vic2NyaXB0aW9uLCBub3RpZnlOZXN0ZWRTdWJzXTtcbiAgICAgIH0sIFtzdG9yZSwgZGlkU3RvcmVDb21lRnJvbVByb3BzLCBjb250ZXh0VmFsdWVdKTsgLy8gRGV0ZXJtaW5lIHdoYXQge3N0b3JlLCBzdWJzY3JpcHRpb259IHZhbHVlIHNob3VsZCBiZSBwdXQgaW50byBuZXN0ZWQgY29udGV4dCwgaWYgbmVjZXNzYXJ5LFxuICAgICAgLy8gYW5kIG1lbW9pemUgdGhhdCB2YWx1ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSBjb250ZXh0IHVwZGF0ZXMuXG5cbiAgICAgIGNvbnN0IG92ZXJyaWRkZW5Db250ZXh0VmFsdWUgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgaWYgKGRpZFN0b3JlQ29tZUZyb21Qcm9wcykge1xuICAgICAgICAgIC8vIFRoaXMgY29tcG9uZW50IGlzIGRpcmVjdGx5IHN1YnNjcmliZWQgdG8gYSBzdG9yZSBmcm9tIHByb3BzLlxuICAgICAgICAgIC8vIFdlIGRvbid0IHdhbnQgZGVzY2VuZGFudHMgcmVhZGluZyBmcm9tIHRoaXMgc3RvcmUgLSBwYXNzIGRvd24gd2hhdGV2ZXJcbiAgICAgICAgICAvLyB0aGUgZXhpc3RpbmcgY29udGV4dCB2YWx1ZSBpcyBmcm9tIHRoZSBuZWFyZXN0IGNvbm5lY3RlZCBhbmNlc3Rvci5cbiAgICAgICAgICByZXR1cm4gY29udGV4dFZhbHVlO1xuICAgICAgICB9IC8vIE90aGVyd2lzZSwgcHV0IHRoaXMgY29tcG9uZW50J3Mgc3Vic2NyaXB0aW9uIGluc3RhbmNlIGludG8gY29udGV4dCwgc28gdGhhdFxuICAgICAgICAvLyBjb25uZWN0ZWQgZGVzY2VuZGFudHMgd29uJ3QgdXBkYXRlIHVudGlsIGFmdGVyIHRoaXMgY29tcG9uZW50IGlzIGRvbmVcblxuXG4gICAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgY29udGV4dFZhbHVlLCB7XG4gICAgICAgICAgc3Vic2NyaXB0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfSwgW2RpZFN0b3JlQ29tZUZyb21Qcm9wcywgY29udGV4dFZhbHVlLCBzdWJzY3JpcHRpb25dKTsgLy8gU2V0IHVwIHJlZnMgdG8gY29vcmRpbmF0ZSB2YWx1ZXMgYmV0d2VlbiB0aGUgc3Vic2NyaXB0aW9uIGVmZmVjdCBhbmQgdGhlIHJlbmRlciBsb2dpY1xuXG4gICAgICBjb25zdCBsYXN0Q2hpbGRQcm9wcyA9IHVzZVJlZigpO1xuICAgICAgY29uc3QgbGFzdFdyYXBwZXJQcm9wcyA9IHVzZVJlZih3cmFwcGVyUHJvcHMpO1xuICAgICAgY29uc3QgY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZSA9IHVzZVJlZigpO1xuICAgICAgY29uc3QgcmVuZGVySXNTY2hlZHVsZWQgPSB1c2VSZWYoZmFsc2UpO1xuICAgICAgY29uc3QgaXNQcm9jZXNzaW5nRGlzcGF0Y2ggPSB1c2VSZWYoZmFsc2UpO1xuICAgICAgY29uc3QgaXNNb3VudGVkID0gdXNlUmVmKGZhbHNlKTtcbiAgICAgIGNvbnN0IGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IgPSB1c2VSZWYoKTtcbiAgICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpc01vdW50ZWQuY3VycmVudCA9IHRydWU7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgaXNNb3VudGVkLmN1cnJlbnQgPSBmYWxzZTtcbiAgICAgICAgfTtcbiAgICAgIH0sIFtdKTtcbiAgICAgIGNvbnN0IGFjdHVhbENoaWxkUHJvcHNTZWxlY3RvciA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBjb25zdCBzZWxlY3RvciA9ICgpID0+IHtcbiAgICAgICAgICAvLyBUcmlja3kgbG9naWMgaGVyZTpcbiAgICAgICAgICAvLyAtIFRoaXMgcmVuZGVyIG1heSBoYXZlIGJlZW4gdHJpZ2dlcmVkIGJ5IGEgUmVkdXggc3RvcmUgdXBkYXRlIHRoYXQgcHJvZHVjZWQgbmV3IGNoaWxkIHByb3BzXG4gICAgICAgICAgLy8gLSBIb3dldmVyLCB3ZSBtYXkgaGF2ZSBnb3R0ZW4gbmV3IHdyYXBwZXIgcHJvcHMgYWZ0ZXIgdGhhdFxuICAgICAgICAgIC8vIElmIHdlIGhhdmUgbmV3IGNoaWxkIHByb3BzLCBhbmQgdGhlIHNhbWUgd3JhcHBlciBwcm9wcywgd2Uga25vdyB3ZSBzaG91bGQgdXNlIHRoZSBuZXcgY2hpbGQgcHJvcHMgYXMtaXMuXG4gICAgICAgICAgLy8gQnV0LCBpZiB3ZSBoYXZlIG5ldyB3cmFwcGVyIHByb3BzLCB0aG9zZSBtaWdodCBjaGFuZ2UgdGhlIGNoaWxkIHByb3BzLCBzbyB3ZSBoYXZlIHRvIHJlY2FsY3VsYXRlIHRoaW5ncy5cbiAgICAgICAgICAvLyBTbywgd2UnbGwgdXNlIHRoZSBjaGlsZCBwcm9wcyBmcm9tIHN0b3JlIHVwZGF0ZSBvbmx5IGlmIHRoZSB3cmFwcGVyIHByb3BzIGFyZSB0aGUgc2FtZSBhcyBsYXN0IHRpbWUuXG4gICAgICAgICAgaWYgKGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUuY3VycmVudCAmJiB3cmFwcGVyUHJvcHMgPT09IGxhc3RXcmFwcGVyUHJvcHMuY3VycmVudCkge1xuICAgICAgICAgICAgcmV0dXJuIGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUuY3VycmVudDtcbiAgICAgICAgICB9IC8vIFRPRE8gV2UncmUgcmVhZGluZyB0aGUgc3RvcmUgZGlyZWN0bHkgaW4gcmVuZGVyKCkgaGVyZS4gQmFkIGlkZWE/XG4gICAgICAgICAgLy8gVGhpcyB3aWxsIGxpa2VseSBjYXVzZSBCYWQgVGhpbmdzIChUTSkgdG8gaGFwcGVuIGluIENvbmN1cnJlbnQgTW9kZS5cbiAgICAgICAgICAvLyBOb3RlIHRoYXQgd2UgZG8gdGhpcyBiZWNhdXNlIG9uIHJlbmRlcnMgX25vdF8gY2F1c2VkIGJ5IHN0b3JlIHVwZGF0ZXMsIHdlIG5lZWQgdGhlIGxhdGVzdCBzdG9yZSBzdGF0ZVxuICAgICAgICAgIC8vIHRvIGRldGVybWluZSB3aGF0IHRoZSBjaGlsZCBwcm9wcyBzaG91bGQgYmUuXG5cblxuICAgICAgICAgIHJldHVybiBjaGlsZFByb3BzU2VsZWN0b3Ioc3RvcmUuZ2V0U3RhdGUoKSwgd3JhcHBlclByb3BzKTtcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gc2VsZWN0b3I7XG4gICAgICB9LCBbc3RvcmUsIHdyYXBwZXJQcm9wc10pOyAvLyBXZSBuZWVkIHRoaXMgdG8gZXhlY3V0ZSBzeW5jaHJvbm91c2x5IGV2ZXJ5IHRpbWUgd2UgcmUtcmVuZGVyLiBIb3dldmVyLCBSZWFjdCB3YXJuc1xuICAgICAgLy8gYWJvdXQgdXNlTGF5b3V0RWZmZWN0IGluIFNTUiwgc28gd2UgdHJ5IHRvIGRldGVjdCBlbnZpcm9ubWVudCBhbmQgZmFsbCBiYWNrIHRvXG4gICAgICAvLyBqdXN0IHVzZUVmZmVjdCBpbnN0ZWFkIHRvIGF2b2lkIHRoZSB3YXJuaW5nLCBzaW5jZSBuZWl0aGVyIHdpbGwgcnVuIGFueXdheS5cblxuICAgICAgY29uc3Qgc3Vic2NyaWJlRm9yUmVhY3QgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgY29uc3Qgc3Vic2NyaWJlID0gcmVhY3RMaXN0ZW5lciA9PiB7XG4gICAgICAgICAgaWYgKCFzdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHJldHVybiAoKSA9PiB7fTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gc3Vic2NyaWJlVXBkYXRlcyhzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMsIHN0b3JlLCBzdWJzY3JpcHRpb24sIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICBjaGlsZFByb3BzU2VsZWN0b3IsIGxhc3RXcmFwcGVyUHJvcHMsIGxhc3RDaGlsZFByb3BzLCByZW5kZXJJc1NjaGVkdWxlZCwgaXNNb3VudGVkLCBjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLCBub3RpZnlOZXN0ZWRTdWJzLCByZWFjdExpc3RlbmVyKTtcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gc3Vic2NyaWJlO1xuICAgICAgfSwgW3N1YnNjcmlwdGlvbl0pO1xuICAgICAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdFdpdGhBcmdzKGNhcHR1cmVXcmFwcGVyUHJvcHMsIFtsYXN0V3JhcHBlclByb3BzLCBsYXN0Q2hpbGRQcm9wcywgcmVuZGVySXNTY2hlZHVsZWQsIHdyYXBwZXJQcm9wcywgY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZSwgbm90aWZ5TmVzdGVkU3Vic10pO1xuICAgICAgbGV0IGFjdHVhbENoaWxkUHJvcHM7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGFjdHVhbENoaWxkUHJvcHMgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZSggLy8gVE9ETyBXZSdyZSBwYXNzaW5nIHRocm91Z2ggYSBiaWcgd3JhcHBlciB0aGF0IGRvZXMgYSBidW5jaCBvZiBleHRyYSBzaWRlIGVmZmVjdHMgYmVzaWRlcyBzdWJzY3JpYmluZ1xuICAgICAgICBzdWJzY3JpYmVGb3JSZWFjdCwgLy8gVE9ETyBUaGlzIGlzIGluY3JlZGlibHkgaGFja3kuIFdlJ3ZlIGFscmVhZHkgcHJvY2Vzc2VkIHRoZSBzdG9yZSB1cGRhdGUgYW5kIGNhbGN1bGF0ZWQgbmV3IGNoaWxkIHByb3BzLFxuICAgICAgICAvLyBUT0RPIGFuZCB3ZSdyZSBqdXN0IHBhc3NpbmcgdGhhdCB0aHJvdWdoIHNvIGl0IHRyaWdnZXJzIGEgcmUtcmVuZGVyIGZvciB1cyByYXRoZXIgdGhhbiByZWx5aW5nIG9uIGB1U0VTYC5cbiAgICAgICAgYWN0dWFsQ2hpbGRQcm9wc1NlbGVjdG9yLCBnZXRTZXJ2ZXJTdGF0ZSA/ICgpID0+IGNoaWxkUHJvcHNTZWxlY3RvcihnZXRTZXJ2ZXJTdGF0ZSgpLCB3cmFwcGVyUHJvcHMpIDogYWN0dWFsQ2hpbGRQcm9wc1NlbGVjdG9yKTtcbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBpZiAobGF0ZXN0U3Vic2NyaXB0aW9uQ2FsbGJhY2tFcnJvci5jdXJyZW50KSB7XG4gICAgICAgICAgO1xuICAgICAgICAgIGVyci5tZXNzYWdlICs9IGBcXG5UaGUgZXJyb3IgbWF5IGJlIGNvcnJlbGF0ZWQgd2l0aCB0aGlzIHByZXZpb3VzIGVycm9yOlxcbiR7bGF0ZXN0U3Vic2NyaXB0aW9uQ2FsbGJhY2tFcnJvci5jdXJyZW50LnN0YWNrfVxcblxcbmA7XG4gICAgICAgIH1cblxuICAgICAgICB0aHJvdyBlcnI7XG4gICAgICB9XG5cbiAgICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgICAgICBsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yLmN1cnJlbnQgPSB1bmRlZmluZWQ7XG4gICAgICAgIGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUuY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgICAgICAgbGFzdENoaWxkUHJvcHMuY3VycmVudCA9IGFjdHVhbENoaWxkUHJvcHM7XG4gICAgICB9KTsgLy8gTm93IHRoYXQgYWxsIHRoYXQncyBkb25lLCB3ZSBjYW4gZmluYWxseSB0cnkgdG8gYWN0dWFsbHkgcmVuZGVyIHRoZSBjaGlsZCBjb21wb25lbnQuXG4gICAgICAvLyBXZSBtZW1vaXplIHRoZSBlbGVtZW50cyBmb3IgdGhlIHJlbmRlcmVkIGNoaWxkIGNvbXBvbmVudCBhcyBhbiBvcHRpbWl6YXRpb24uXG5cbiAgICAgIGNvbnN0IHJlbmRlcmVkV3JhcHBlZENvbXBvbmVudCA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIC8qI19fUFVSRV9fKi9cbiAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChXcmFwcGVkQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgYWN0dWFsQ2hpbGRQcm9wcywge1xuICAgICAgICAgICAgcmVmOiByZWFjdFJlZHV4Rm9yd2FyZGVkUmVmXG4gICAgICAgICAgfSkpXG4gICAgICAgICk7XG4gICAgICB9LCBbcmVhY3RSZWR1eEZvcndhcmRlZFJlZiwgV3JhcHBlZENvbXBvbmVudCwgYWN0dWFsQ2hpbGRQcm9wc10pOyAvLyBJZiBSZWFjdCBzZWVzIHRoZSBleGFjdCBzYW1lIGVsZW1lbnQgcmVmZXJlbmNlIGFzIGxhc3QgdGltZSwgaXQgYmFpbHMgb3V0IG9mIHJlLXJlbmRlcmluZ1xuICAgICAgLy8gdGhhdCBjaGlsZCwgc2FtZSBhcyBpZiBpdCB3YXMgd3JhcHBlZCBpbiBSZWFjdC5tZW1vKCkgb3IgcmV0dXJuZWQgZmFsc2UgZnJvbSBzaG91bGRDb21wb25lbnRVcGRhdGUuXG5cbiAgICAgIGNvbnN0IHJlbmRlcmVkQ2hpbGQgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgaWYgKHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcykge1xuICAgICAgICAgIC8vIElmIHRoaXMgY29tcG9uZW50IGlzIHN1YnNjcmliZWQgdG8gc3RvcmUgdXBkYXRlcywgd2UgbmVlZCB0byBwYXNzIGl0cyBvd25cbiAgICAgICAgICAvLyBzdWJzY3JpcHRpb24gaW5zdGFuY2UgZG93biB0byBvdXIgZGVzY2VuZGFudHMuIFRoYXQgbWVhbnMgcmVuZGVyaW5nIHRoZSBzYW1lXG4gICAgICAgICAgLy8gQ29udGV4dCBpbnN0YW5jZSwgYW5kIHB1dHRpbmcgYSBkaWZmZXJlbnQgdmFsdWUgaW50byB0aGUgY29udGV4dC5cbiAgICAgICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGV4dFRvVXNlLlByb3ZpZGVyLCB7XG4gICAgICAgICAgICB2YWx1ZTogb3ZlcnJpZGRlbkNvbnRleHRWYWx1ZVxuICAgICAgICAgIH0sIHJlbmRlcmVkV3JhcHBlZENvbXBvbmVudCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVuZGVyZWRXcmFwcGVkQ29tcG9uZW50O1xuICAgICAgfSwgW0NvbnRleHRUb1VzZSwgcmVuZGVyZWRXcmFwcGVkQ29tcG9uZW50LCBvdmVycmlkZGVuQ29udGV4dFZhbHVlXSk7XG4gICAgICByZXR1cm4gcmVuZGVyZWRDaGlsZDtcbiAgICB9XG5cbiAgICBjb25zdCBfQ29ubmVjdCA9IFJlYWN0Lm1lbW8oQ29ubmVjdEZ1bmN0aW9uKTtcblxuICAgIC8vIEFkZCBhIGhhY2t5IGNhc3QgdG8gZ2V0IHRoZSByaWdodCBvdXRwdXQgdHlwZVxuICAgIGNvbnN0IENvbm5lY3QgPSBfQ29ubmVjdDtcbiAgICBDb25uZWN0LldyYXBwZWRDb21wb25lbnQgPSBXcmFwcGVkQ29tcG9uZW50O1xuICAgIENvbm5lY3QuZGlzcGxheU5hbWUgPSBDb25uZWN0RnVuY3Rpb24uZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcblxuICAgIGlmIChmb3J3YXJkUmVmKSB7XG4gICAgICBjb25zdCBfZm9yd2FyZGVkID0gUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBmb3J3YXJkQ29ubmVjdFJlZihwcm9wcywgcmVmKSB7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbm5lY3QsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgICAgIHJlYWN0UmVkdXhGb3J3YXJkZWRSZWY6IHJlZlxuICAgICAgICB9KSk7XG4gICAgICB9KTtcblxuICAgICAgY29uc3QgZm9yd2FyZGVkID0gX2ZvcndhcmRlZDtcbiAgICAgIGZvcndhcmRlZC5kaXNwbGF5TmFtZSA9IGRpc3BsYXlOYW1lO1xuICAgICAgZm9yd2FyZGVkLldyYXBwZWRDb21wb25lbnQgPSBXcmFwcGVkQ29tcG9uZW50O1xuICAgICAgcmV0dXJuIGhvaXN0U3RhdGljcyhmb3J3YXJkZWQsIFdyYXBwZWRDb21wb25lbnQpO1xuICAgIH1cblxuICAgIHJldHVybiBob2lzdFN0YXRpY3MoQ29ubmVjdCwgV3JhcHBlZENvbXBvbmVudCk7XG4gIH07XG5cbiAgcmV0dXJuIHdyYXBXaXRoQ29ubmVjdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdDsiLCJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi9Db250ZXh0JztcbmltcG9ydCB7IGNyZWF0ZVN1YnNjcmlwdGlvbiB9IGZyb20gJy4uL3V0aWxzL1N1YnNjcmlwdGlvbic7XG5pbXBvcnQgeyB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0IH0gZnJvbSAnLi4vdXRpbHMvdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCc7XG5cbmZ1bmN0aW9uIFByb3ZpZGVyKHtcbiAgc3RvcmUsXG4gIGNvbnRleHQsXG4gIGNoaWxkcmVuLFxuICBzZXJ2ZXJTdGF0ZVxufSkge1xuICBjb25zdCBjb250ZXh0VmFsdWUgPSB1c2VNZW1vKCgpID0+IHtcbiAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBjcmVhdGVTdWJzY3JpcHRpb24oc3RvcmUpO1xuICAgIHJldHVybiB7XG4gICAgICBzdG9yZSxcbiAgICAgIHN1YnNjcmlwdGlvbixcbiAgICAgIGdldFNlcnZlclN0YXRlOiBzZXJ2ZXJTdGF0ZSA/ICgpID0+IHNlcnZlclN0YXRlIDogdW5kZWZpbmVkXG4gICAgfTtcbiAgfSwgW3N0b3JlLCBzZXJ2ZXJTdGF0ZV0pO1xuICBjb25zdCBwcmV2aW91c1N0YXRlID0gdXNlTWVtbygoKSA9PiBzdG9yZS5nZXRTdGF0ZSgpLCBbc3RvcmVdKTtcbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgc3Vic2NyaXB0aW9uXG4gICAgfSA9IGNvbnRleHRWYWx1ZTtcbiAgICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSA9IHN1YnNjcmlwdGlvbi5ub3RpZnlOZXN0ZWRTdWJzO1xuICAgIHN1YnNjcmlwdGlvbi50cnlTdWJzY3JpYmUoKTtcblxuICAgIGlmIChwcmV2aW91c1N0YXRlICE9PSBzdG9yZS5nZXRTdGF0ZSgpKSB7XG4gICAgICBzdWJzY3JpcHRpb24ubm90aWZ5TmVzdGVkU3VicygpO1xuICAgIH1cblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBzdWJzY3JpcHRpb24udHJ5VW5zdWJzY3JpYmUoKTtcbiAgICAgIHN1YnNjcmlwdGlvbi5vblN0YXRlQ2hhbmdlID0gdW5kZWZpbmVkO1xuICAgIH07XG4gIH0sIFtjb250ZXh0VmFsdWUsIHByZXZpb3VzU3RhdGVdKTtcbiAgY29uc3QgQ29udGV4dCA9IGNvbnRleHQgfHwgUmVhY3RSZWR1eENvbnRleHQ7IC8vIEB0cy1pZ25vcmUgJ0FueUFjdGlvbicgaXMgYXNzaWduYWJsZSB0byB0aGUgY29uc3RyYWludCBvZiB0eXBlICdBJywgYnV0ICdBJyBjb3VsZCBiZSBpbnN0YW50aWF0ZWQgd2l0aCBhIGRpZmZlcmVudCBzdWJ0eXBlXG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogY29udGV4dFZhbHVlXG4gIH0sIGNoaWxkcmVuKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUHJvdmlkZXI7IiwiaW1wb3J0IHsgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZXh0JztcbmltcG9ydCB7IHVzZVJlZHV4Q29udGV4dCBhcyB1c2VEZWZhdWx0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi91c2VSZWR1eENvbnRleHQnO1xuLyoqXHJcbiAqIEhvb2sgZmFjdG9yeSwgd2hpY2ggY3JlYXRlcyBhIGB1c2VTdG9yZWAgaG9vayBib3VuZCB0byBhIGdpdmVuIGNvbnRleHQuXHJcbiAqXHJcbiAqIEBwYXJhbSB7UmVhY3QuQ29udGV4dH0gW2NvbnRleHQ9UmVhY3RSZWR1eENvbnRleHRdIENvbnRleHQgcGFzc2VkIHRvIHlvdXIgYDxQcm92aWRlcj5gLlxyXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgYHVzZVN0b3JlYCBob29rIGJvdW5kIHRvIHRoZSBzcGVjaWZpZWQgY29udGV4dC5cclxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdG9yZUhvb2soY29udGV4dCA9IFJlYWN0UmVkdXhDb250ZXh0KSB7XG4gIGNvbnN0IHVzZVJlZHV4Q29udGV4dCA9IC8vIEB0cy1pZ25vcmVcbiAgY29udGV4dCA9PT0gUmVhY3RSZWR1eENvbnRleHQgPyB1c2VEZWZhdWx0UmVkdXhDb250ZXh0IDogKCkgPT4gdXNlQ29udGV4dChjb250ZXh0KTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVzZVN0b3JlKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIHN0b3JlXG4gICAgfSA9IHVzZVJlZHV4Q29udGV4dCgpOyAvLyBAdHMtaWdub3JlXG5cbiAgICByZXR1cm4gc3RvcmU7XG4gIH07XG59XG4vKipcclxuICogQSBob29rIHRvIGFjY2VzcyB0aGUgcmVkdXggc3RvcmUuXHJcbiAqXHJcbiAqIEByZXR1cm5zIHthbnl9IHRoZSByZWR1eCBzdG9yZVxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiBpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbiAqIGltcG9ydCB7IHVzZVN0b3JlIH0gZnJvbSAncmVhY3QtcmVkdXgnXHJcbiAqXHJcbiAqIGV4cG9ydCBjb25zdCBFeGFtcGxlQ29tcG9uZW50ID0gKCkgPT4ge1xyXG4gKiAgIGNvbnN0IHN0b3JlID0gdXNlU3RvcmUoKVxyXG4gKiAgIHJldHVybiA8ZGl2PntzdG9yZS5nZXRTdGF0ZSgpfTwvZGl2PlxyXG4gKiB9XHJcbiAqL1xuXG5leHBvcnQgY29uc3QgdXNlU3RvcmUgPSAvKiNfX1BVUkVfXyovY3JlYXRlU3RvcmVIb29rKCk7IiwiaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuLi9jb21wb25lbnRzL0NvbnRleHQnO1xuaW1wb3J0IHsgdXNlU3RvcmUgYXMgdXNlRGVmYXVsdFN0b3JlLCBjcmVhdGVTdG9yZUhvb2sgfSBmcm9tICcuL3VzZVN0b3JlJztcbi8qKlxyXG4gKiBIb29rIGZhY3RvcnksIHdoaWNoIGNyZWF0ZXMgYSBgdXNlRGlzcGF0Y2hgIGhvb2sgYm91bmQgdG8gYSBnaXZlbiBjb250ZXh0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1JlYWN0LkNvbnRleHR9IFtjb250ZXh0PVJlYWN0UmVkdXhDb250ZXh0XSBDb250ZXh0IHBhc3NlZCB0byB5b3VyIGA8UHJvdmlkZXI+YC5cclxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGB1c2VEaXNwYXRjaGAgaG9vayBib3VuZCB0byB0aGUgc3BlY2lmaWVkIGNvbnRleHQuXHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRGlzcGF0Y2hIb29rKGNvbnRleHQgPSBSZWFjdFJlZHV4Q29udGV4dCkge1xuICBjb25zdCB1c2VTdG9yZSA9IC8vIEB0cy1pZ25vcmVcbiAgY29udGV4dCA9PT0gUmVhY3RSZWR1eENvbnRleHQgPyB1c2VEZWZhdWx0U3RvcmUgOiBjcmVhdGVTdG9yZUhvb2soY29udGV4dCk7XG4gIHJldHVybiBmdW5jdGlvbiB1c2VEaXNwYXRjaCgpIHtcbiAgICBjb25zdCBzdG9yZSA9IHVzZVN0b3JlKCk7IC8vIEB0cy1pZ25vcmVcblxuICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaDtcbiAgfTtcbn1cbi8qKlxyXG4gKiBBIGhvb2sgdG8gYWNjZXNzIHRoZSByZWR1eCBgZGlzcGF0Y2hgIGZ1bmN0aW9uLlxyXG4gKlxyXG4gKiBAcmV0dXJucyB7YW55fGZ1bmN0aW9ufSByZWR1eCBzdG9yZSdzIGBkaXNwYXRjaGAgZnVuY3Rpb25cclxuICpcclxuICogQGV4YW1wbGVcclxuICpcclxuICogaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnXHJcbiAqIGltcG9ydCB7IHVzZURpc3BhdGNoIH0gZnJvbSAncmVhY3QtcmVkdXgnXHJcbiAqXHJcbiAqIGV4cG9ydCBjb25zdCBDb3VudGVyQ29tcG9uZW50ID0gKHsgdmFsdWUgfSkgPT4ge1xyXG4gKiAgIGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKVxyXG4gKiAgIGNvbnN0IGluY3JlYXNlQ291bnRlciA9IHVzZUNhbGxiYWNrKCgpID0+IGRpc3BhdGNoKHsgdHlwZTogJ2luY3JlYXNlLWNvdW50ZXInIH0pLCBbXSlcclxuICogICByZXR1cm4gKFxyXG4gKiAgICAgPGRpdj5cclxuICogICAgICAgPHNwYW4+e3ZhbHVlfTwvc3Bhbj5cclxuICogICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtpbmNyZWFzZUNvdW50ZXJ9PkluY3JlYXNlIGNvdW50ZXI8L2J1dHRvbj5cclxuICogICAgIDwvZGl2PlxyXG4gKiAgIClcclxuICogfVxyXG4gKi9cblxuZXhwb3J0IGNvbnN0IHVzZURpc3BhdGNoID0gLyojX19QVVJFX18qL2NyZWF0ZURpc3BhdGNoSG9vaygpOyIsIi8vIFRoZSBwcmltYXJ5IGVudHJ5IHBvaW50IGFzc3VtZXMgd2UncmUgd29ya2luZyB3aXRoIHN0YW5kYXJkIFJlYWN0RE9NL1JOLCBidXRcbi8vIG9sZGVyIHZlcnNpb25zIHRoYXQgZG8gbm90IGluY2x1ZGUgYHVzZVN5bmNFeHRlcm5hbFN0b3JlYCAoUmVhY3QgMTYuOSAtIDE3LngpLlxuLy8gQmVjYXVzZSBvZiB0aGF0LCB0aGUgdXNlU3luY0V4dGVybmFsU3RvcmUgY29tcGF0IHNoaW0gaXMgbmVlZGVkLlxuaW1wb3J0IHsgdXNlU3luY0V4dGVybmFsU3RvcmUgfSBmcm9tICd1c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltJztcbmltcG9ydCB7IHVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yIH0gZnJvbSAndXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS93aXRoLXNlbGVjdG9yJztcbmltcG9ydCB7IHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIGFzIGJhdGNoIH0gZnJvbSAnLi91dGlscy9yZWFjdEJhdGNoZWRVcGRhdGVzJztcbmltcG9ydCB7IHNldEJhdGNoIH0gZnJvbSAnLi91dGlscy9iYXRjaCc7XG5pbXBvcnQgeyBpbml0aWFsaXplVXNlU2VsZWN0b3IgfSBmcm9tICcuL2hvb2tzL3VzZVNlbGVjdG9yJztcbmltcG9ydCB7IGluaXRpYWxpemVDb25uZWN0IH0gZnJvbSAnLi9jb21wb25lbnRzL2Nvbm5lY3QnO1xuaW5pdGlhbGl6ZVVzZVNlbGVjdG9yKHVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yKTtcbmluaXRpYWxpemVDb25uZWN0KHVzZVN5bmNFeHRlcm5hbFN0b3JlKTsgLy8gRW5hYmxlIGJhdGNoZWQgdXBkYXRlcyBpbiBvdXIgc3Vic2NyaXB0aW9ucyBmb3IgdXNlXG4vLyB3aXRoIHN0YW5kYXJkIFJlYWN0IHJlbmRlcmVycyAoUmVhY3RET00sIFJlYWN0IE5hdGl2ZSlcblxuc2V0QmF0Y2goYmF0Y2gpO1xuZXhwb3J0IHsgYmF0Y2ggfTtcbmV4cG9ydCAqIGZyb20gJy4vZXhwb3J0cyc7IiwiaW1wb3J0IHsgVHlwZWRVc2VTZWxlY3Rvckhvb2ssIHVzZURpc3BhdGNoLCB1c2VTZWxlY3RvciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xyXG5pbXBvcnQgdHlwZSB7IFJvb3RTdGF0ZSwgQXBwRGlzcGF0Y2ggfSBmcm9tIFwiLi9zdG9yZVwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IHVzZUFwcERpc3BhdGNoOiAoKSA9PiBBcHBEaXNwYXRjaCA9IHVzZURpc3BhdGNoO1xyXG5leHBvcnQgY29uc3QgdXNlQXBwU2VsZWN0b3I6IFR5cGVkVXNlU2VsZWN0b3JIb29rPFJvb3RTdGF0ZT4gPSB1c2VTZWxlY3RvcjtcclxuIiwiaW1wb3J0IFJlYWN0LCB7IFJlYWN0RWxlbWVudCwgRkMgfSBmcm9tIFwicmVhY3RcIjtcclxuXHJcbmludGVyZmFjZSBDb250YWluZXIge1xyXG4gIGNoaWxkcmVuOiBSZWFjdEVsZW1lbnQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBDb250YWluZXI6IEZDPENvbnRhaW5lcj4gPSAoeyBjaGlsZHJlbiB9KSA9PiAoXHJcbiAgPGRpdiBjbGFzc05hbWU9XCJwLTUgZmxleCBmbGV4LWNvbCBpdGVtcy1jZW50ZXJcIj57Y2hpbGRyZW59PC9kaXY+XHJcbik7XHJcbiIsImltcG9ydCBSZWFjdCwgeyBGQyB9IGZyb20gXCJyZWFjdFwiO1xyXG5cclxuaW50ZXJmYWNlIExvYWRlciB7XHJcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xyXG4gIHNpemU/OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBMb2FkZXI6IEZDPExvYWRlcj4gPSAoeyBjbGFzc05hbWUsIHNpemUgPSAzMCB9KSA9PiAoXHJcbiAgPHN2Z1xyXG4gICAgdmVyc2lvbj1cIjEuMVwiXHJcbiAgICBpZD1cIkNhcGFfMVwiXHJcbiAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcclxuICAgIHg9XCIwcHhcIlxyXG4gICAgeT1cIjBweFwiXHJcbiAgICB3aWR0aD17YCR7c2l6ZX1weGB9XHJcbiAgICBoZWlnaHQ9e2Ake3NpemV9cHhgfVxyXG4gICAgY2xhc3NOYW1lPXtjbGFzc05hbWV9XHJcbiAgICB2aWV3Qm94PVwiMCAwIDI2LjM0OSAyNi4zNVwiXHJcbiAgPlxyXG4gICAgPGc+XHJcbiAgICAgIDxnPlxyXG4gICAgICAgIDxjaXJjbGUgY3g9XCIxMy43OTJcIiBjeT1cIjMuMDgyXCIgcj1cIjMuMDgyXCIgLz5cclxuICAgICAgICA8Y2lyY2xlIGN4PVwiMTMuNzkyXCIgY3k9XCIyNC41MDFcIiByPVwiMS44NDlcIiAvPlxyXG4gICAgICAgIDxjaXJjbGUgY3g9XCI2LjIxOVwiIGN5PVwiNi4yMThcIiByPVwiMi43NzRcIiAvPlxyXG4gICAgICAgIDxjaXJjbGUgY3g9XCIyMS4zNjVcIiBjeT1cIjIxLjM2M1wiIHI9XCIxLjU0MVwiIC8+XHJcbiAgICAgICAgPGNpcmNsZSBjeD1cIjMuMDgyXCIgY3k9XCIxMy43OTJcIiByPVwiMi40NjVcIiAvPlxyXG4gICAgICAgIDxjaXJjbGUgY3g9XCIyNC41MDFcIiBjeT1cIjEzLjc5MVwiIHI9XCIxLjIzMlwiIC8+XHJcbiAgICAgICAgPHBhdGhcclxuICAgICAgICAgIGQ9XCJNNC42OTQsMTkuODRjLTAuODQzLDAuODQzLTAuODQzLDIuMjA3LDAsMy4wNWMwLjg0MiwwLjg0MywyLjIwOCwwLjg0MywzLjA1LDBjMC44NDMtMC44NDMsMC44NDMtMi4yMDcsMC0zLjA1XHJcblx0XHRcdEM2LjkwMiwxOC45OTYsNS41MzcsMTguOTg4LDQuNjk0LDE5Ljg0elwiXHJcbiAgICAgICAgLz5cclxuICAgICAgICA8Y2lyY2xlIGN4PVwiMjEuMzY0XCIgY3k9XCI2LjIxOFwiIHI9XCIwLjkyNFwiIC8+XHJcbiAgICAgIDwvZz5cclxuICAgIDwvZz5cclxuICAgIDxnPjwvZz5cclxuICAgIDxnPjwvZz5cclxuICAgIDxnPjwvZz5cclxuICAgIDxnPjwvZz5cclxuICAgIDxnPjwvZz5cclxuICAgIDxnPjwvZz5cclxuICAgIDxnPjwvZz5cclxuICAgIDxnPjwvZz5cclxuICAgIDxnPjwvZz5cclxuICAgIDxnPjwvZz5cclxuICAgIDxnPjwvZz5cclxuICAgIDxnPjwvZz5cclxuICAgIDxnPjwvZz5cclxuICAgIDxnPjwvZz5cclxuICAgIDxnPjwvZz5cclxuICA8L3N2Zz5cclxuKTtcclxuIiwiaW1wb3J0IFJlYWN0LCB7IEZDLCBNb3VzZUV2ZW50IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IExvYWRlciB9IGZyb20gXCIuLi9sb2FkZXIvbG9hZGVyXCI7XHJcblxyXG5pbnRlcmZhY2UgQmFzZUJ1dHRvblByb3BzIHtcclxuICBvbkNsaWNrOiAoZXZlbnQ6IE1vdXNlRXZlbnQ8SFRNTEVsZW1lbnQ+KSA9PiB2b2lkO1xyXG4gIGxhYmVsOiBzdHJpbmc7XHJcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xyXG4gIGxvYWRpbmc/OiBib29sZWFuO1xyXG4gIHdpZGU/OiBib29sZWFuO1xyXG4gIGNsYXNzTmFtZT86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IEJhc2VCdXR0b246IEZDPEJhc2VCdXR0b25Qcm9wcz4gPSAoe1xyXG4gIGxhYmVsLFxyXG4gIGRpc2FibGVkLFxyXG4gIGxvYWRpbmcsXHJcbiAgd2lkZSxcclxuICBvbkNsaWNrLFxyXG4gIGNsYXNzTmFtZSxcclxufSkgPT4gKFxyXG4gIDxidXR0b25cclxuICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cclxuICAgIGNsYXNzTmFtZT17YFxyXG4gICAgZmxleCBcclxuICAgIHJlbGF0aXZlIFxyXG4gICAgcHktMi41IFxyXG4gICAgcHgtMyBcclxuICAgIG91dGxpbmUtbm9uZSBcclxuICAgIHJvdW5kZWQtbGcgXHJcbiAgICB0ZXh0LXNsYXRlLTUwIFxyXG4gICAgYm9yZGVyIFxyXG4gICAgYm9yZGVyLXNvbGlkIFxyXG4gICAgYm9yZGVyLXNsYXRlLTUwIFxyXG4gICAgZGlzYWJsZWQ6b3BhY2l0eS03NVxyXG4gICAgJHtjbGFzc05hbWUgPz8gXCJcIn1cclxuICAgICR7d2lkZSA/IFwibWluLXctZnVsbFwiIDogXCJcIn1cclxuICAgIGB9XHJcbiAgICBvbkNsaWNrPXtvbkNsaWNrfVxyXG4gID5cclxuICAgIHtsb2FkaW5nID8gPExvYWRlciBjbGFzc05hbWU9XCJsb2FkZXIgYW5pbWF0ZS1zcGluXCIgLz4gOiBsYWJlbH1cclxuICA8L2J1dHRvbj5cclxuKTtcclxuIiwiaW1wb3J0IFJlYWN0LCB7IEZDIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IEJhc2VTZWFyY2hJdGVtIH0gZnJvbSBcIi4uLy4uLy4uL3R5cGVzL3NlYXJjaC1yZXN1bHRcIjtcclxuXHJcbmNvbnN0IHBsYWNlaG9sZGVyVXJsID0gXCJodHRwczovL2ltZy5pY29uczguY29tL2Rvb2RsZS8zNDQvcmVkZGl0LS12NC5wbmdcIjtcclxuXHJcbmNvbnN0IGhhbmRsZUxvYWRFcnJvciA9ICh7IGN1cnJlbnRUYXJnZXQgfSkgPT4ge1xyXG4gIGN1cnJlbnRUYXJnZXQub25lcnJvciA9IG51bGw7XHJcbiAgY3VycmVudFRhcmdldC5zcmMgPSBwbGFjZWhvbGRlclVybDtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBDYXJkOiBGQzxCYXNlU2VhcmNoSXRlbT4gPSAoeyB0aXRsZSwgdXJsLCB0aHVtYm5haWwgfSkgPT4gKFxyXG4gIDxhXHJcbiAgICBocmVmPXt1cmx9XHJcbiAgICB0YXJnZXQ9XCJfYmxhbmtcIlxyXG4gICAgcmVsPVwibm9yZWZlcnJlclwiXHJcbiAgICBjbGFzc05hbWU9XCJcclxuICAgIGZsZXggXHJcbiAgICBmbGV4LXJvdyBcclxuICAgIGp1c3RpZnktc3RhcnQgXHJcbiAgICBpdGVtcy1jZW50ZXJcclxuICAgIGdhcC0yXHJcbiAgICByb3VuZGVkLXhsIFxyXG4gICAgcC00IFxyXG4gICAgbGVhZGluZy1ub3JtYWwgXHJcbiAgICBiZy1ncmFkaWVudC10by1yIFxyXG4gICAgZnJvbS1jeWFuLTUwMCBcclxuICAgIHRvLWJsdWUtNTAwIFxyXG4gICAgaG92ZXI6dG8tYmx1ZS0xMDAgXHJcbiAgICB0cmFuc2l0aW9uLWFsbCBcclxuICAgIGR1cmF0aW9uLTIwMCB3LWZ1bGxcclxuICAgIFwiXHJcbiAgPlxyXG4gICAge3RodW1ibmFpbCAmJiAoXHJcbiAgICAgIDxpbWcgc3JjPXt0aHVtYm5haWx9IGNsYXNzTmFtZT1cInctMTYgaC0xNiBvYmplY3QtY292ZXJcIiBvbkVycm9yPXtoYW5kbGVMb2FkRXJyb3J9IC8+XHJcbiAgICApfVxyXG4gICAgPHAgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTkwMCB0ZXh0LWJhc2VcIj57dGl0bGV9PC9wPlxyXG4gIDwvYT5cclxuKTtcclxuIiwiaW1wb3J0IFJlYWN0LCB7IEZDLCBNb3VzZUV2ZW50IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IEJhc2VTZWFyY2hJdGVtIH0gZnJvbSBcIi4uLy4uL3R5cGVzL3NlYXJjaC1yZXN1bHRcIjtcclxuaW1wb3J0IHsgQmFzZUJ1dHRvbiB9IGZyb20gXCIuLi9jb21tb24vYmFzZS1idXR0b24vYmFzZS1idXR0b25cIjtcclxuLy8gaW1wb3J0IHsgTG9hZGVyIH0gZnJvbSBcIi4uL2NvbW1vbi9sb2FkZXIvbG9hZGVyXCI7XHJcbmltcG9ydCB7IENhcmQgfSBmcm9tIFwiLi9jb21wb25lbnRzL2NhcmRcIjtcclxuLy8gaW1wb3J0IHsgVXNlSW5maW5pdGVTY3JvbGwsIHVzZUluZmluaXRlU2Nyb2xsIH0gZnJvbSBcIi4vaG9va3MvdXNlSW5maW5pdGVTY3JvbGxcIjtcclxuXHJcbmludGVyZmFjZSBMaXN0IC8qZXh0ZW5kcyBVc2VJbmZpbml0ZVNjcm9sbCovIHtcclxuICBpdGVtczogQmFzZVNlYXJjaEl0ZW1bXTtcclxuICBsb2FkaW5nPzogYm9vbGVhbjtcclxuICBzaG93QnV0dG9uPzogYm9vbGVhbjtcclxuICBoYW5kbGVMb2FkTW9yZTogKGV2ZW50OiBNb3VzZUV2ZW50PEhUTUxFbGVtZW50PikgPT4gdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IExpc3Q6IEZDPExpc3Q+ID0gKHsgaXRlbXMsIGxvYWRpbmcsIGhhbmRsZUxvYWRNb3JlLCBzaG93QnV0dG9uIH0pID0+IHtcclxuICAvLyBjb25zdCB7IGxvYWRNb3JlUmVmIH0gPSB1c2VJbmZpbml0ZVNjcm9sbCh7IGhhbmRsZUxvYWRNb3JlIH0pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGZsZXgtY29sIGl0ZW1zLWNlbnRlciBnYXAteS0yIG1heC13LXhsIHctZnVsbFwiPlxyXG4gICAgICB7aXRlbXMubWFwKCh7IGlkLCB0aXRsZSwgdXJsLCB0aHVtYm5haWwgfSkgPT4gKFxyXG4gICAgICAgIDxDYXJkIGtleT17aWR9IHRpdGxlPXt0aXRsZX0gaWQ9e1wiaWRcIn0gdXJsPXt1cmx9IHRodW1ibmFpbD17dGh1bWJuYWlsfSAvPlxyXG4gICAgICApKX1cclxuICAgICAgey8qIDxkaXYgcmVmPXtsb2FkTW9yZVJlZn0gY2xhc3NOYW1lPVwic2VsZi1jZW50ZXJcIj5cclxuICAgICAgICB7bG9hZGluZyAmJiA8TG9hZGVyIGNsYXNzTmFtZT1cImxvYWRlciBhbmltYXRlLXNwaW5cIiAvPn1cclxuICAgICAgPC9kaXY+ICovfVxyXG4gICAgICB7c2hvd0J1dHRvbiAmJiAoXHJcbiAgICAgICAgPEJhc2VCdXR0b25cclxuICAgICAgICAgIGxvYWRpbmc9e2xvYWRpbmd9XHJcbiAgICAgICAgICBkaXNhYmxlZD17bG9hZGluZ31cclxuICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUxvYWRNb3JlfVxyXG4gICAgICAgICAgbGFiZWw9XCJMb2FkIE1vcmVcIlxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwibWluLXctWzUwJV0gZmxleCBhbGlnbi1jZW50ZXIganVzdGlmeS1jZW50ZXJcIlxyXG4gICAgICAgIC8+XHJcbiAgICAgICl9XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSwgRm9ybUV2ZW50LCB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBkZWJvdW5jZSB9IGZyb20gXCJkZWJvdW5jZVwiO1xyXG5pbXBvcnQge1xyXG4gIHNlbGVjdFNlYXJjaFJlc3VsdHMsXHJcbiAgc2VsZWN0U2VhcmNoTG9hZGluZyxcclxuICBzZWxlY3RTZWFyY2hMb2FkaW5nTW9yZSxcclxuICBmZXRjaFNlYXJjaFJlc3VsdHMsXHJcbiAgZmV0Y2hNb3JlU2VhcmNoUmVzdWx0cyxcclxuICBzZWxlY3RHZXRNb3JlUmVzdWx0c0tleSxcclxuICBzZXRTZWFyY2hSZXN1bHRzLFxyXG59IGZyb20gXCIuL3N0b3JlL3JlZHVjZXJzL3NlYXJjaFwiO1xyXG5cclxuaW1wb3J0IHsgQmFzZUlucHV0IH0gZnJvbSBcIi4vY29tcG9uZW50cy9jb21tb24vZm9ybS9pbnB1dC9pbnB1dFwiO1xyXG5pbXBvcnQgeyBBcHBMYXlvdXQgfSBmcm9tIFwiLi9sYXlvdXQvYXBwLWxheW91dC9hcHAtbGF5b3V0XCI7XHJcbmltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XHJcbmltcG9ydCB7IHVzZUFwcERpc3BhdGNoLCB1c2VBcHBTZWxlY3RvciB9IGZyb20gXCIuL3N0b3JlL2hvb2tzXCI7XHJcbmltcG9ydCB7IENvbnRhaW5lciB9IGZyb20gXCIuL2xheW91dC9jb250YWluZXIvY29udGFpbmVyXCI7XHJcbmltcG9ydCB7IExpc3QgfSBmcm9tIFwiLi9jb21wb25lbnRzL2xpc3QvbGlzdFwiO1xyXG5pbXBvcnQgeyBMb2FkZXIgfSBmcm9tIFwiLi9jb21wb25lbnRzL2NvbW1vbi9sb2FkZXIvbG9hZGVyXCI7XHJcblxyXG5leHBvcnQgY29uc3QgQXBwID0gKCkgPT4ge1xyXG4gIGNvbnN0IGRpc3BhdGNoID0gdXNlQXBwRGlzcGF0Y2goKTtcclxuICBjb25zdCBzZWFyY2hSZXN1bHRzID0gdXNlQXBwU2VsZWN0b3IoKHN0YXRlKSA9PiBzZWxlY3RTZWFyY2hSZXN1bHRzKHN0YXRlKSk7XHJcbiAgY29uc3Qgc2VhcmNoTG9hZGluZyA9IHVzZUFwcFNlbGVjdG9yKChzdGF0ZSkgPT4gc2VsZWN0U2VhcmNoTG9hZGluZyhzdGF0ZSkpO1xyXG4gIGNvbnN0IHNlYXJjaExvYWRpbmdNb3JlID0gdXNlQXBwU2VsZWN0b3IoKHN0YXRlKSA9PiBzZWxlY3RTZWFyY2hMb2FkaW5nTW9yZShzdGF0ZSkpO1xyXG4gIGNvbnN0IGdldE1vcmVSZXN1bHRzS2V5ID0gdXNlQXBwU2VsZWN0b3IoKHN0YXRlKSA9PiBzZWxlY3RHZXRNb3JlUmVzdWx0c0tleShzdGF0ZSkpO1xyXG5cclxuICBjb25zdCBbc2VhcmNoLCBzZXRTZWFyY2hdID0gdXNlU3RhdGUoXCJcIik7XHJcblxyXG4gIGNvbnN0IGhhbmRsZUNoYW5nZSA9IChlOiBGb3JtRXZlbnQ8SFRNTElucHV0RWxlbWVudD4pID0+IHtcclxuICAgIHNldFNlYXJjaChlLmN1cnJlbnRUYXJnZXQudmFsdWUpO1xyXG4gIH07XHJcblxyXG4gIC8vIGNvbnN0IGhhbmRsZUxvYWRNb3JlID0gYXN5bmMgKGlzSW50ZXJzZWN0aW5nOiBib29sZWFuKSA9PiB7XHJcbiAgLy8gICAvLyBjb25zb2xlLmxvZyh7IGdldE1vcmVSZXN1bHRzS2V5LCBzZWFyY2hMb2FkaW5nTW9yZSB9KTtcclxuICAvLyAgIGlmIChpc0ludGVyc2VjdGluZyAmJiBnZXRNb3JlUmVzdWx0c0tleSAmJiAhc2VhcmNoTG9hZGluZ01vcmUpIHtcclxuICAvLyAgICAgY29uc29sZS5sb2coXCJSVU5OSU5HXCIsIHNlYXJjaCwgZ2V0TW9yZVJlc3VsdHNLZXkpO1xyXG4gIC8vICAgICBhd2FpdCBkaXNwYXRjaChmZXRjaE1vcmVTZWFyY2hSZXN1bHRzKHsgc2VhcmNoLCBhZnRlcjogZ2V0TW9yZVJlc3VsdHNLZXkgfSkpO1xyXG4gIC8vICAgfVxyXG4gIC8vIH07XHJcblxyXG4gIGNvbnN0IGhhbmRsZUxvYWRNb3JlID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xyXG4gICAgYXdhaXQgZGlzcGF0Y2goZmV0Y2hNb3JlU2VhcmNoUmVzdWx0cyh7IHNlYXJjaCwgYWZ0ZXI6IGdldE1vcmVSZXN1bHRzS2V5IH0pKTtcclxuICB9LCBbZGlzcGF0Y2gsIGdldE1vcmVSZXN1bHRzS2V5LCBzZWFyY2hdKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGNvbnN0IGhhbmRsZXIgPSBkZWJvdW5jZShcclxuICAgICAgKHNlYXJjaFN0cmluZzogc3RyaW5nKSA9PiBkaXNwYXRjaChmZXRjaFNlYXJjaFJlc3VsdHMoc2VhcmNoU3RyaW5nKSksXHJcbiAgICAgIDIwMCxcclxuICAgICk7XHJcblxyXG4gICAgc2VhcmNoLmxlbmd0aCA+IDIgPyBoYW5kbGVyKHNlYXJjaCkgOiBkaXNwYXRjaChzZXRTZWFyY2hSZXN1bHRzKFtdKSk7XHJcblxyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgaGFuZGxlci5jbGVhcigpO1xyXG4gICAgfTtcclxuICB9LCBbc2VhcmNoLCBkaXNwYXRjaF0pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPEFwcExheW91dFxyXG4gICAgICBzaG93U2VjdGlvbj17c2VhcmNoUmVzdWx0cy5sZW5ndGggPiAwfVxyXG4gICAgICBoZWFkZXJDaGlsZHJlbj17XHJcbiAgICAgICAgPEJhc2VJbnB1dFxyXG4gICAgICAgICAgaWQ9XCJzZWFyY2hcIlxyXG4gICAgICAgICAgcGxhY2Vob2xkZXI9XCJQdXQgdGhyZWFkIG5hbWUuLi5cIlxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwibWluLXctWzI1JV1cIlxyXG4gICAgICAgICAgdmFsdWU9e3NlYXJjaH1cclxuICAgICAgICAgIGhhbmRsZUNoYW5nZT17aGFuZGxlQ2hhbmdlfVxyXG4gICAgICAgICAgcHJlZml4SWNvbj17XHJcbiAgICAgICAgICAgIHNlYXJjaExvYWRpbmcgPyA8TG9hZGVyIGNsYXNzTmFtZT1cImxvYWRlciBhbmltYXRlLXNwaW5cIiAvPiA6IHVuZGVmaW5lZFxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIC8+XHJcbiAgICAgIH1cclxuICAgID5cclxuICAgICAgPENvbnRhaW5lcj5cclxuICAgICAgICB7c2VhcmNoUmVzdWx0cy5sZW5ndGggPiAwID8gKFxyXG4gICAgICAgICAgPExpc3RcclxuICAgICAgICAgICAgaXRlbXM9e3NlYXJjaFJlc3VsdHN9XHJcbiAgICAgICAgICAgIGhhbmRsZUxvYWRNb3JlPXtoYW5kbGVMb2FkTW9yZX1cclxuICAgICAgICAgICAgbG9hZGluZz17c2VhcmNoTG9hZGluZ01vcmV9XHJcbiAgICAgICAgICAgIHNob3dCdXR0b249eyEhZ2V0TW9yZVJlc3VsdHNLZXl9XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICkgOiAoXHJcbiAgICAgICAgICA8ZGl2IC8+XHJcbiAgICAgICAgKX1cclxuICAgICAgPC9Db250YWluZXI+XHJcbiAgICA8L0FwcExheW91dD5cclxuICApO1xyXG59O1xyXG4iLCJpbXBvcnQgYXJyYXlXaXRoSG9sZXMgZnJvbSBcIi4vYXJyYXlXaXRoSG9sZXMuanNcIjtcbmltcG9ydCBpdGVyYWJsZVRvQXJyYXlMaW1pdCBmcm9tIFwiLi9pdGVyYWJsZVRvQXJyYXlMaW1pdC5qc1wiO1xuaW1wb3J0IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IGZyb20gXCIuL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzXCI7XG5pbXBvcnQgbm9uSXRlcmFibGVSZXN0IGZyb20gXCIuL25vbkl0ZXJhYmxlUmVzdC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7XG4gIHJldHVybiBhcnJheVdpdGhIb2xlcyhhcnIpIHx8IGl0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBub25JdGVyYWJsZVJlc3QoKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkge1xuICB2YXIgX2kgPSBhcnIgPT0gbnVsbCA/IG51bGwgOiB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIGFycltTeW1ib2wuaXRlcmF0b3JdIHx8IGFycltcIkBAaXRlcmF0b3JcIl07XG5cbiAgaWYgKF9pID09IG51bGwpIHJldHVybjtcbiAgdmFyIF9hcnIgPSBbXTtcbiAgdmFyIF9uID0gdHJ1ZTtcbiAgdmFyIF9kID0gZmFsc2U7XG5cbiAgdmFyIF9zLCBfZTtcblxuICB0cnkge1xuICAgIGZvciAoX2kgPSBfaS5jYWxsKGFycik7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHtcbiAgICAgIF9hcnIucHVzaChfcy52YWx1ZSk7XG5cbiAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhaztcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIF9kID0gdHJ1ZTtcbiAgICBfZSA9IGVycjtcbiAgfSBmaW5hbGx5IHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpZiAoX2QpIHRocm93IF9lO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBfYXJyO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7XG4gIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59IiwiaW1wb3J0IHsgY3JlYXRlU2xpY2UgfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiO1xyXG5pbXBvcnQgeyBSb290U3RhdGUgfSBmcm9tIFwiLi4vc3RvcmVcIjtcclxuXHJcbmludGVyZmFjZSBMYXlvdXRTbGljZVN0YXRlIHtcclxuICBzaG93UmVzdWx0c1NlY3Rpb246IGJvb2xlYW47XHJcbn1cclxuXHJcbmNvbnN0IGluaXRpYWxTdGF0ZTogTGF5b3V0U2xpY2VTdGF0ZSA9IHtcclxuICBzaG93UmVzdWx0c1NlY3Rpb246IGZhbHNlLFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGxheW91dFNsaWNlID0gY3JlYXRlU2xpY2Uoe1xyXG4gIG5hbWU6IFwibGF5b3V0XCIsXHJcbiAgaW5pdGlhbFN0YXRlLFxyXG4gIHJlZHVjZXJzOiB7XHJcbiAgICBlbmFibGVTaG93UmVzdWx0czogKHN0YXRlOiBMYXlvdXRTbGljZVN0YXRlKSA9PiB7XHJcbiAgICAgIHN0YXRlLnNob3dSZXN1bHRzU2VjdGlvbiA9IHRydWU7XHJcbiAgICB9LFxyXG4gICAgZGlzYWJsZVNob3dSZXN1bHRzOiAoc3RhdGU6IExheW91dFNsaWNlU3RhdGUpID0+IHtcclxuICAgICAgc3RhdGUuc2hvd1Jlc3VsdHNTZWN0aW9uID0gZmFsc2U7XHJcbiAgICB9LFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IHsgZW5hYmxlU2hvd1Jlc3VsdHMsIGRpc2FibGVTaG93UmVzdWx0cyB9ID0gbGF5b3V0U2xpY2UuYWN0aW9ucztcclxuXHJcbmV4cG9ydCBjb25zdCBzZWxlY3RTaG93UmVzdWx0c1NlY3Rpb24gPSAoc3RhdGU6IFJvb3RTdGF0ZSkgPT5cclxuICBzdGF0ZS5sYXlvdXQuc2hvd1Jlc3VsdHNTZWN0aW9uO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbGF5b3V0U2xpY2UucmVkdWNlcjtcclxuIiwiaW1wb3J0IHsgY29uZmlndXJlU3RvcmUgfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiO1xyXG5cclxuaW1wb3J0IHNlYXJjaFNsaWNlIGZyb20gXCIuL3JlZHVjZXJzL3NlYXJjaFwiO1xyXG5pbXBvcnQgbGF5b3V0U2xpY2UgZnJvbSBcIi4vcmVkdWNlcnMvbGF5b3V0XCI7XHJcblxyXG5leHBvcnQgY29uc3Qgc3RvcmUgPSBjb25maWd1cmVTdG9yZSh7XHJcbiAgcmVkdWNlcjoge1xyXG4gICAgc2VhcmNoOiBzZWFyY2hTbGljZSxcclxuICAgIGxheW91dDogbGF5b3V0U2xpY2UsXHJcbiAgfSxcclxufSk7XHJcblxyXG5leHBvcnQgdHlwZSBSb290U3RhdGUgPSBSZXR1cm5UeXBlPHR5cGVvZiBzdG9yZS5nZXRTdGF0ZT47XHJcbmV4cG9ydCB0eXBlIEFwcERpc3BhdGNoID0gdHlwZW9mIHN0b3JlLmRpc3BhdGNoO1xyXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBSZWFjdERPTSBmcm9tIFwicmVhY3QtZG9tL2NsaWVudFwiO1xyXG5pbXBvcnQgeyBBcHAgfSBmcm9tIFwiLi9hcHBcIjtcclxuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuaW1wb3J0IHsgc3RvcmUgfSBmcm9tIFwiLi9zdG9yZS9zdG9yZVwiO1xyXG5cclxuUmVhY3RET00uY3JlYXRlUm9vdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJvb3RcIikgYXMgRWxlbWVudCkucmVuZGVyKFxyXG4gIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxyXG4gICAgPEFwcCAvPlxyXG4gIDwvUHJvdmlkZXI+LFxyXG4pO1xyXG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18gPSBuZXcgVVJMKFwiL2Fzc2V0cy9iYWNrZ3JvdW5kL2FzdHJvbmF1dC5qcGdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIvKlxcbiEgdGFpbHdpbmRjc3MgdjMuMS44IHwgTUlUIExpY2Vuc2UgfCBodHRwczovL3RhaWx3aW5kY3NzLmNvbVxcbiovLypcXG4xLiBQcmV2ZW50IHBhZGRpbmcgYW5kIGJvcmRlciBmcm9tIGFmZmVjdGluZyBlbGVtZW50IHdpZHRoLiAoaHR0cHM6Ly9naXRodWIuY29tL21vemRldnMvY3NzcmVtZWR5L2lzc3Vlcy80KVxcbjIuIEFsbG93IGFkZGluZyBhIGJvcmRlciB0byBhbiBlbGVtZW50IGJ5IGp1c3QgYWRkaW5nIGEgYm9yZGVyLXdpZHRoLiAoaHR0cHM6Ly9naXRodWIuY29tL3RhaWx3aW5kY3NzL3RhaWx3aW5kY3NzL3B1bGwvMTE2KVxcbiovXFxuXFxuKixcXG46OmJlZm9yZSxcXG46OmFmdGVyIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cXG4gIGJvcmRlci13aWR0aDogMDsgLyogMiAqL1xcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDsgLyogMiAqL1xcbiAgYm9yZGVyLWNvbG9yOiAjZTVlN2ViOyAvKiAyICovXFxufVxcblxcbjo6YmVmb3JlLFxcbjo6YWZ0ZXIge1xcbiAgLS10dy1jb250ZW50OiAnJztcXG59XFxuXFxuLypcXG4xLiBVc2UgYSBjb25zaXN0ZW50IHNlbnNpYmxlIGxpbmUtaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cXG4yLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cXG4zLiBVc2UgYSBtb3JlIHJlYWRhYmxlIHRhYiBzaXplLlxcbjQuIFVzZSB0aGUgdXNlcidzIGNvbmZpZ3VyZWQgYHNhbnNgIGZvbnQtZmFtaWx5IGJ5IGRlZmF1bHQuXFxuKi9cXG5cXG5odG1sIHtcXG4gIGxpbmUtaGVpZ2h0OiAxLjU7IC8qIDEgKi9cXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xcbiAgLW1vei10YWItc2l6ZTogNDsgLyogMyAqL1xcbiAgLW8tdGFiLXNpemU6IDQ7XFxuICAgICB0YWItc2l6ZTogNDsgLyogMyAqL1xcbiAgZm9udC1mYW1pbHk6IHVpLXNhbnMtc2VyaWYsIHN5c3RlbS11aSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcXFwiU2Vnb2UgVUlcXFwiLCBSb2JvdG8sIFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsIEFyaWFsLCBcXFwiTm90byBTYW5zXFxcIiwgc2Fucy1zZXJpZiwgXFxcIkFwcGxlIENvbG9yIEVtb2ppXFxcIiwgXFxcIlNlZ29lIFVJIEVtb2ppXFxcIiwgXFxcIlNlZ29lIFVJIFN5bWJvbFxcXCIsIFxcXCJOb3RvIENvbG9yIEVtb2ppXFxcIjsgLyogNCAqL1xcbn1cXG5cXG4vKlxcbjEuIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cXG4yLiBJbmhlcml0IGxpbmUtaGVpZ2h0IGZyb20gYGh0bWxgIHNvIHVzZXJzIGNhbiBzZXQgdGhlbSBhcyBhIGNsYXNzIGRpcmVjdGx5IG9uIHRoZSBgaHRtbGAgZWxlbWVudC5cXG4qL1xcblxcbmJvZHkge1xcbiAgbWFyZ2luOiAwOyAvKiAxICovXFxuICBsaW5lLWhlaWdodDogaW5oZXJpdDsgLyogMiAqL1xcbn1cXG5cXG4vKlxcbjEuIEFkZCB0aGUgY29ycmVjdCBoZWlnaHQgaW4gRmlyZWZveC5cXG4yLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBvZiBib3JkZXIgY29sb3IgaW4gRmlyZWZveC4gKGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTE5MDY1NSlcXG4zLiBFbnN1cmUgaG9yaXpvbnRhbCBydWxlcyBhcmUgdmlzaWJsZSBieSBkZWZhdWx0LlxcbiovXFxuXFxuaHIge1xcbiAgaGVpZ2h0OiAwOyAvKiAxICovXFxuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xcbiAgYm9yZGVyLXRvcC13aWR0aDogMXB4OyAvKiAzICovXFxufVxcblxcbi8qXFxuQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXFxuKi9cXG5cXG5hYmJyOndoZXJlKFt0aXRsZV0pIHtcXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XFxufVxcblxcbi8qXFxuUmVtb3ZlIHRoZSBkZWZhdWx0IGZvbnQgc2l6ZSBhbmQgd2VpZ2h0IGZvciBoZWFkaW5ncy5cXG4qL1xcblxcbmgxLFxcbmgyLFxcbmgzLFxcbmg0LFxcbmg1LFxcbmg2IHtcXG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcXG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xcbn1cXG5cXG4vKlxcblJlc2V0IGxpbmtzIHRvIG9wdGltaXplIGZvciBvcHQtaW4gc3R5bGluZyBpbnN0ZWFkIG9mIG9wdC1vdXQuXFxuKi9cXG5cXG5hIHtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBpbmhlcml0O1xcbn1cXG5cXG4vKlxcbkFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBFZGdlIGFuZCBTYWZhcmkuXFxuKi9cXG5cXG5iLFxcbnN0cm9uZyB7XFxuICBmb250LXdlaWdodDogYm9sZGVyO1xcbn1cXG5cXG4vKlxcbjEuIFVzZSB0aGUgdXNlcidzIGNvbmZpZ3VyZWQgYG1vbm9gIGZvbnQgZmFtaWx5IGJ5IGRlZmF1bHQuXFxuMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxcbiovXFxuXFxuY29kZSxcXG5rYmQsXFxuc2FtcCxcXG5wcmUge1xcbiAgZm9udC1mYW1pbHk6IHVpLW1vbm9zcGFjZSwgU0ZNb25vLVJlZ3VsYXIsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcXFwiTGliZXJhdGlvbiBNb25vXFxcIiwgXFxcIkNvdXJpZXIgTmV3XFxcIiwgbW9ub3NwYWNlOyAvKiAxICovXFxuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xcbn1cXG5cXG4vKlxcbkFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxcbiovXFxuXFxuc21hbGwge1xcbiAgZm9udC1zaXplOiA4MCU7XFxufVxcblxcbi8qXFxuUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cXG4qL1xcblxcbnN1YixcXG5zdXAge1xcbiAgZm9udC1zaXplOiA3NSU7XFxuICBsaW5lLWhlaWdodDogMDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG59XFxuXFxuc3ViIHtcXG4gIGJvdHRvbTogLTAuMjVlbTtcXG59XFxuXFxuc3VwIHtcXG4gIHRvcDogLTAuNWVtO1xcbn1cXG5cXG4vKlxcbjEuIFJlbW92ZSB0ZXh0IGluZGVudGF0aW9uIGZyb20gdGFibGUgY29udGVudHMgaW4gQ2hyb21lIGFuZCBTYWZhcmkuIChodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD05OTkwODgsIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0yMDEyOTcpXFxuMi4gQ29ycmVjdCB0YWJsZSBib3JkZXIgY29sb3IgaW5oZXJpdGFuY2UgaW4gYWxsIENocm9tZSBhbmQgU2FmYXJpLiAoaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9OTM1NzI5LCBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTk1MDE2KVxcbjMuIFJlbW92ZSBnYXBzIGJldHdlZW4gdGFibGUgYm9yZGVycyBieSBkZWZhdWx0LlxcbiovXFxuXFxudGFibGUge1xcbiAgdGV4dC1pbmRlbnQ6IDA7IC8qIDEgKi9cXG4gIGJvcmRlci1jb2xvcjogaW5oZXJpdDsgLyogMiAqL1xcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgLyogMyAqL1xcbn1cXG5cXG4vKlxcbjEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxcbjIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cXG4zLiBSZW1vdmUgZGVmYXVsdCBwYWRkaW5nIGluIGFsbCBicm93c2Vycy5cXG4qL1xcblxcbmJ1dHRvbixcXG5pbnB1dCxcXG5vcHRncm91cCxcXG5zZWxlY3QsXFxudGV4dGFyZWEge1xcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7IC8qIDEgKi9cXG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0OyAvKiAxICovXFxuICBjb2xvcjogaW5oZXJpdDsgLyogMSAqL1xcbiAgbWFyZ2luOiAwOyAvKiAyICovXFxuICBwYWRkaW5nOiAwOyAvKiAzICovXFxufVxcblxcbi8qXFxuUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlIGFuZCBGaXJlZm94LlxcbiovXFxuXFxuYnV0dG9uLFxcbnNlbGVjdCB7XFxuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcXG59XFxuXFxuLypcXG4xLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxcbjIuIFJlbW92ZSBkZWZhdWx0IGJ1dHRvbiBzdHlsZXMuXFxuKi9cXG5cXG5idXR0b24sXFxuW3R5cGU9J2J1dHRvbiddLFxcblt0eXBlPSdyZXNldCddLFxcblt0eXBlPSdzdWJtaXQnXSB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDIgKi9cXG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7IC8qIDIgKi9cXG59XFxuXFxuLypcXG5Vc2UgdGhlIG1vZGVybiBGaXJlZm94IGZvY3VzIHN0eWxlIGZvciBhbGwgZm9jdXNhYmxlIGVsZW1lbnRzLlxcbiovXFxuXFxuOi1tb3otZm9jdXNyaW5nIHtcXG4gIG91dGxpbmU6IGF1dG87XFxufVxcblxcbi8qXFxuUmVtb3ZlIHRoZSBhZGRpdGlvbmFsIGA6aW52YWxpZGAgc3R5bGVzIGluIEZpcmVmb3guIChodHRwczovL2dpdGh1Yi5jb20vbW96aWxsYS9nZWNrby1kZXYvYmxvYi8yZjllYWNkOWQzZDk5NWM5MzdiNDI1MWE1NTU3ZDk1ZDQ5NGM5YmUxL2xheW91dC9zdHlsZS9yZXMvZm9ybXMuY3NzI0w3MjgtTDczNylcXG4qL1xcblxcbjotbW96LXVpLWludmFsaWQge1xcbiAgYm94LXNoYWRvdzogbm9uZTtcXG59XFxuXFxuLypcXG5BZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSBhbmQgRmlyZWZveC5cXG4qL1xcblxcbnByb2dyZXNzIHtcXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG59XFxuXFxuLypcXG5Db3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBTYWZhcmkuXFxuKi9cXG5cXG46Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXFxuOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcXG4gIGhlaWdodDogYXV0bztcXG59XFxuXFxuLypcXG4xLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cXG4yLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cXG4qL1xcblxcblt0eXBlPSdzZWFyY2gnXSB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cXG59XFxuXFxuLypcXG5SZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXFxuKi9cXG5cXG46Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xcbn1cXG5cXG4vKlxcbjEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXFxuMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxcbiovXFxuXFxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xcbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xcbn1cXG5cXG4vKlxcbkFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIENocm9tZSBhbmQgU2FmYXJpLlxcbiovXFxuXFxuc3VtbWFyeSB7XFxuICBkaXNwbGF5OiBsaXN0LWl0ZW07XFxufVxcblxcbi8qXFxuUmVtb3ZlcyB0aGUgZGVmYXVsdCBzcGFjaW5nIGFuZCBib3JkZXIgZm9yIGFwcHJvcHJpYXRlIGVsZW1lbnRzLlxcbiovXFxuXFxuYmxvY2txdW90ZSxcXG5kbCxcXG5kZCxcXG5oMSxcXG5oMixcXG5oMyxcXG5oNCxcXG5oNSxcXG5oNixcXG5ocixcXG5maWd1cmUsXFxucCxcXG5wcmUge1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG5maWVsZHNldCB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG5cXG5sZWdlbmQge1xcbiAgcGFkZGluZzogMDtcXG59XFxuXFxub2wsXFxudWwsXFxubWVudSB7XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG59XFxuXFxuLypcXG5QcmV2ZW50IHJlc2l6aW5nIHRleHRhcmVhcyBob3Jpem9udGFsbHkgYnkgZGVmYXVsdC5cXG4qL1xcblxcbnRleHRhcmVhIHtcXG4gIHJlc2l6ZTogdmVydGljYWw7XFxufVxcblxcbi8qXFxuMS4gUmVzZXQgdGhlIGRlZmF1bHQgcGxhY2Vob2xkZXIgb3BhY2l0eSBpbiBGaXJlZm94LiAoaHR0cHM6Ly9naXRodWIuY29tL3RhaWx3aW5kbGFicy90YWlsd2luZGNzcy9pc3N1ZXMvMzMwMClcXG4yLiBTZXQgdGhlIGRlZmF1bHQgcGxhY2Vob2xkZXIgY29sb3IgdG8gdGhlIHVzZXIncyBjb25maWd1cmVkIGdyYXkgNDAwIGNvbG9yLlxcbiovXFxuXFxuaW5wdXQ6Oi1tb3otcGxhY2Vob2xkZXIsIHRleHRhcmVhOjotbW96LXBsYWNlaG9sZGVyIHtcXG4gIG9wYWNpdHk6IDE7IC8qIDEgKi9cXG4gIGNvbG9yOiAjOWNhM2FmOyAvKiAyICovXFxufVxcblxcbmlucHV0OjpwbGFjZWhvbGRlcixcXG50ZXh0YXJlYTo6cGxhY2Vob2xkZXIge1xcbiAgb3BhY2l0eTogMTsgLyogMSAqL1xcbiAgY29sb3I6ICM5Y2EzYWY7IC8qIDIgKi9cXG59XFxuXFxuLypcXG5TZXQgdGhlIGRlZmF1bHQgY3Vyc29yIGZvciBidXR0b25zLlxcbiovXFxuXFxuYnV0dG9uLFxcbltyb2xlPVxcXCJidXR0b25cXFwiXSB7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi8qXFxuTWFrZSBzdXJlIGRpc2FibGVkIGJ1dHRvbnMgZG9uJ3QgZ2V0IHRoZSBwb2ludGVyIGN1cnNvci5cXG4qL1xcbjpkaXNhYmxlZCB7XFxuICBjdXJzb3I6IGRlZmF1bHQ7XFxufVxcblxcbi8qXFxuMS4gTWFrZSByZXBsYWNlZCBlbGVtZW50cyBgZGlzcGxheTogYmxvY2tgIGJ5IGRlZmF1bHQuIChodHRwczovL2dpdGh1Yi5jb20vbW96ZGV2cy9jc3NyZW1lZHkvaXNzdWVzLzE0KVxcbjIuIEFkZCBgdmVydGljYWwtYWxpZ246IG1pZGRsZWAgdG8gYWxpZ24gcmVwbGFjZWQgZWxlbWVudHMgbW9yZSBzZW5zaWJseSBieSBkZWZhdWx0LiAoaHR0cHM6Ly9naXRodWIuY29tL2plbnNpbW1vbnMvY3NzcmVtZWR5L2lzc3Vlcy8xNCNpc3N1ZWNvbW1lbnQtNjM0OTM0MjEwKVxcbiAgIFRoaXMgY2FuIHRyaWdnZXIgYSBwb29ybHkgY29uc2lkZXJlZCBsaW50IGVycm9yIGluIHNvbWUgdG9vbHMgYnV0IGlzIGluY2x1ZGVkIGJ5IGRlc2lnbi5cXG4qL1xcblxcbmltZyxcXG5zdmcsXFxudmlkZW8sXFxuY2FudmFzLFxcbmF1ZGlvLFxcbmlmcmFtZSxcXG5lbWJlZCxcXG5vYmplY3Qge1xcbiAgZGlzcGxheTogYmxvY2s7IC8qIDEgKi9cXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IC8qIDIgKi9cXG59XFxuXFxuLypcXG5Db25zdHJhaW4gaW1hZ2VzIGFuZCB2aWRlb3MgdG8gdGhlIHBhcmVudCB3aWR0aCBhbmQgcHJlc2VydmUgdGhlaXIgaW50cmluc2ljIGFzcGVjdCByYXRpby4gKGh0dHBzOi8vZ2l0aHViLmNvbS9tb3pkZXZzL2Nzc3JlbWVkeS9pc3N1ZXMvMTQpXFxuKi9cXG5cXG5pbWcsXFxudmlkZW8ge1xcbiAgbWF4LXdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiBhdXRvO1xcbn1cXG5cXG4qLCA6OmJlZm9yZSwgOjphZnRlciB7XFxuICAtLXR3LWJvcmRlci1zcGFjaW5nLXg6IDA7XFxuICAtLXR3LWJvcmRlci1zcGFjaW5nLXk6IDA7XFxuICAtLXR3LXRyYW5zbGF0ZS14OiAwO1xcbiAgLS10dy10cmFuc2xhdGUteTogMDtcXG4gIC0tdHctcm90YXRlOiAwO1xcbiAgLS10dy1za2V3LXg6IDA7XFxuICAtLXR3LXNrZXcteTogMDtcXG4gIC0tdHctc2NhbGUteDogMTtcXG4gIC0tdHctc2NhbGUteTogMTtcXG4gIC0tdHctcGFuLXg6ICA7XFxuICAtLXR3LXBhbi15OiAgO1xcbiAgLS10dy1waW5jaC16b29tOiAgO1xcbiAgLS10dy1zY3JvbGwtc25hcC1zdHJpY3RuZXNzOiBwcm94aW1pdHk7XFxuICAtLXR3LW9yZGluYWw6ICA7XFxuICAtLXR3LXNsYXNoZWQtemVybzogIDtcXG4gIC0tdHctbnVtZXJpYy1maWd1cmU6ICA7XFxuICAtLXR3LW51bWVyaWMtc3BhY2luZzogIDtcXG4gIC0tdHctbnVtZXJpYy1mcmFjdGlvbjogIDtcXG4gIC0tdHctcmluZy1pbnNldDogIDtcXG4gIC0tdHctcmluZy1vZmZzZXQtd2lkdGg6IDBweDtcXG4gIC0tdHctcmluZy1vZmZzZXQtY29sb3I6ICNmZmY7XFxuICAtLXR3LXJpbmctY29sb3I6IHJnYig1OSAxMzAgMjQ2IC8gMC41KTtcXG4gIC0tdHctcmluZy1vZmZzZXQtc2hhZG93OiAwIDAgIzAwMDA7XFxuICAtLXR3LXJpbmctc2hhZG93OiAwIDAgIzAwMDA7XFxuICAtLXR3LXNoYWRvdzogMCAwICMwMDAwO1xcbiAgLS10dy1zaGFkb3ctY29sb3JlZDogMCAwICMwMDAwO1xcbiAgLS10dy1ibHVyOiAgO1xcbiAgLS10dy1icmlnaHRuZXNzOiAgO1xcbiAgLS10dy1jb250cmFzdDogIDtcXG4gIC0tdHctZ3JheXNjYWxlOiAgO1xcbiAgLS10dy1odWUtcm90YXRlOiAgO1xcbiAgLS10dy1pbnZlcnQ6ICA7XFxuICAtLXR3LXNhdHVyYXRlOiAgO1xcbiAgLS10dy1zZXBpYTogIDtcXG4gIC0tdHctZHJvcC1zaGFkb3c6ICA7XFxuICAtLXR3LWJhY2tkcm9wLWJsdXI6ICA7XFxuICAtLXR3LWJhY2tkcm9wLWJyaWdodG5lc3M6ICA7XFxuICAtLXR3LWJhY2tkcm9wLWNvbnRyYXN0OiAgO1xcbiAgLS10dy1iYWNrZHJvcC1ncmF5c2NhbGU6ICA7XFxuICAtLXR3LWJhY2tkcm9wLWh1ZS1yb3RhdGU6ICA7XFxuICAtLXR3LWJhY2tkcm9wLWludmVydDogIDtcXG4gIC0tdHctYmFja2Ryb3Atb3BhY2l0eTogIDtcXG4gIC0tdHctYmFja2Ryb3Atc2F0dXJhdGU6ICA7XFxuICAtLXR3LWJhY2tkcm9wLXNlcGlhOiAgO1xcbn1cXG5cXG46Oi13ZWJraXQtYmFja2Ryb3Age1xcbiAgLS10dy1ib3JkZXItc3BhY2luZy14OiAwO1xcbiAgLS10dy1ib3JkZXItc3BhY2luZy15OiAwO1xcbiAgLS10dy10cmFuc2xhdGUteDogMDtcXG4gIC0tdHctdHJhbnNsYXRlLXk6IDA7XFxuICAtLXR3LXJvdGF0ZTogMDtcXG4gIC0tdHctc2tldy14OiAwO1xcbiAgLS10dy1za2V3LXk6IDA7XFxuICAtLXR3LXNjYWxlLXg6IDE7XFxuICAtLXR3LXNjYWxlLXk6IDE7XFxuICAtLXR3LXBhbi14OiAgO1xcbiAgLS10dy1wYW4teTogIDtcXG4gIC0tdHctcGluY2gtem9vbTogIDtcXG4gIC0tdHctc2Nyb2xsLXNuYXAtc3RyaWN0bmVzczogcHJveGltaXR5O1xcbiAgLS10dy1vcmRpbmFsOiAgO1xcbiAgLS10dy1zbGFzaGVkLXplcm86ICA7XFxuICAtLXR3LW51bWVyaWMtZmlndXJlOiAgO1xcbiAgLS10dy1udW1lcmljLXNwYWNpbmc6ICA7XFxuICAtLXR3LW51bWVyaWMtZnJhY3Rpb246ICA7XFxuICAtLXR3LXJpbmctaW5zZXQ6ICA7XFxuICAtLXR3LXJpbmctb2Zmc2V0LXdpZHRoOiAwcHg7XFxuICAtLXR3LXJpbmctb2Zmc2V0LWNvbG9yOiAjZmZmO1xcbiAgLS10dy1yaW5nLWNvbG9yOiByZ2IoNTkgMTMwIDI0NiAvIDAuNSk7XFxuICAtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdzogMCAwICMwMDAwO1xcbiAgLS10dy1yaW5nLXNoYWRvdzogMCAwICMwMDAwO1xcbiAgLS10dy1zaGFkb3c6IDAgMCAjMDAwMDtcXG4gIC0tdHctc2hhZG93LWNvbG9yZWQ6IDAgMCAjMDAwMDtcXG4gIC0tdHctYmx1cjogIDtcXG4gIC0tdHctYnJpZ2h0bmVzczogIDtcXG4gIC0tdHctY29udHJhc3Q6ICA7XFxuICAtLXR3LWdyYXlzY2FsZTogIDtcXG4gIC0tdHctaHVlLXJvdGF0ZTogIDtcXG4gIC0tdHctaW52ZXJ0OiAgO1xcbiAgLS10dy1zYXR1cmF0ZTogIDtcXG4gIC0tdHctc2VwaWE6ICA7XFxuICAtLXR3LWRyb3Atc2hhZG93OiAgO1xcbiAgLS10dy1iYWNrZHJvcC1ibHVyOiAgO1xcbiAgLS10dy1iYWNrZHJvcC1icmlnaHRuZXNzOiAgO1xcbiAgLS10dy1iYWNrZHJvcC1jb250cmFzdDogIDtcXG4gIC0tdHctYmFja2Ryb3AtZ3JheXNjYWxlOiAgO1xcbiAgLS10dy1iYWNrZHJvcC1odWUtcm90YXRlOiAgO1xcbiAgLS10dy1iYWNrZHJvcC1pbnZlcnQ6ICA7XFxuICAtLXR3LWJhY2tkcm9wLW9wYWNpdHk6ICA7XFxuICAtLXR3LWJhY2tkcm9wLXNhdHVyYXRlOiAgO1xcbiAgLS10dy1iYWNrZHJvcC1zZXBpYTogIDtcXG59XFxuXFxuOjpiYWNrZHJvcCB7XFxuICAtLXR3LWJvcmRlci1zcGFjaW5nLXg6IDA7XFxuICAtLXR3LWJvcmRlci1zcGFjaW5nLXk6IDA7XFxuICAtLXR3LXRyYW5zbGF0ZS14OiAwO1xcbiAgLS10dy10cmFuc2xhdGUteTogMDtcXG4gIC0tdHctcm90YXRlOiAwO1xcbiAgLS10dy1za2V3LXg6IDA7XFxuICAtLXR3LXNrZXcteTogMDtcXG4gIC0tdHctc2NhbGUteDogMTtcXG4gIC0tdHctc2NhbGUteTogMTtcXG4gIC0tdHctcGFuLXg6ICA7XFxuICAtLXR3LXBhbi15OiAgO1xcbiAgLS10dy1waW5jaC16b29tOiAgO1xcbiAgLS10dy1zY3JvbGwtc25hcC1zdHJpY3RuZXNzOiBwcm94aW1pdHk7XFxuICAtLXR3LW9yZGluYWw6ICA7XFxuICAtLXR3LXNsYXNoZWQtemVybzogIDtcXG4gIC0tdHctbnVtZXJpYy1maWd1cmU6ICA7XFxuICAtLXR3LW51bWVyaWMtc3BhY2luZzogIDtcXG4gIC0tdHctbnVtZXJpYy1mcmFjdGlvbjogIDtcXG4gIC0tdHctcmluZy1pbnNldDogIDtcXG4gIC0tdHctcmluZy1vZmZzZXQtd2lkdGg6IDBweDtcXG4gIC0tdHctcmluZy1vZmZzZXQtY29sb3I6ICNmZmY7XFxuICAtLXR3LXJpbmctY29sb3I6IHJnYig1OSAxMzAgMjQ2IC8gMC41KTtcXG4gIC0tdHctcmluZy1vZmZzZXQtc2hhZG93OiAwIDAgIzAwMDA7XFxuICAtLXR3LXJpbmctc2hhZG93OiAwIDAgIzAwMDA7XFxuICAtLXR3LXNoYWRvdzogMCAwICMwMDAwO1xcbiAgLS10dy1zaGFkb3ctY29sb3JlZDogMCAwICMwMDAwO1xcbiAgLS10dy1ibHVyOiAgO1xcbiAgLS10dy1icmlnaHRuZXNzOiAgO1xcbiAgLS10dy1jb250cmFzdDogIDtcXG4gIC0tdHctZ3JheXNjYWxlOiAgO1xcbiAgLS10dy1odWUtcm90YXRlOiAgO1xcbiAgLS10dy1pbnZlcnQ6ICA7XFxuICAtLXR3LXNhdHVyYXRlOiAgO1xcbiAgLS10dy1zZXBpYTogIDtcXG4gIC0tdHctZHJvcC1zaGFkb3c6ICA7XFxuICAtLXR3LWJhY2tkcm9wLWJsdXI6ICA7XFxuICAtLXR3LWJhY2tkcm9wLWJyaWdodG5lc3M6ICA7XFxuICAtLXR3LWJhY2tkcm9wLWNvbnRyYXN0OiAgO1xcbiAgLS10dy1iYWNrZHJvcC1ncmF5c2NhbGU6ICA7XFxuICAtLXR3LWJhY2tkcm9wLWh1ZS1yb3RhdGU6ICA7XFxuICAtLXR3LWJhY2tkcm9wLWludmVydDogIDtcXG4gIC0tdHctYmFja2Ryb3Atb3BhY2l0eTogIDtcXG4gIC0tdHctYmFja2Ryb3Atc2F0dXJhdGU6ICA7XFxuICAtLXR3LWJhY2tkcm9wLXNlcGlhOiAgO1xcbn1cXHJcXG4uYXBwLWhlYWRlciB7XFxyXFxuICAgIGJhY2tncm91bmQ6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gKyBcIikgY2VudGVyIGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdDtcXHJcXG4gIH1cXHJcXG4ubG9hZGVyIHtcXHJcXG4gICAgZmlsbDogd2hpdGU7XFxyXFxuICB9XFxyXFxuLmlucHV0LXByZWZpeC1pY29uIHtcXHJcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICB0b3A6IDUwJTtcXHJcXG4gICAgbGVmdDogLTQwcHg7XFxyXFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcXHJcXG4gIH1cXHJcXG4qIHtcXHJcXG4gICAgZm9udC1mYW1pbHk6IFxcXCJSb2JvdG9cXFwiLCBzYW5zLXNlcmlmO1xcclxcbiAgICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XFxyXFxuICAgIHNjcm9sbGJhci13aWR0aDogbm9uZTtcXHJcXG4gIH1cXHJcXG4qOjotd2Via2l0LXNjcm9sbGJhciB7XFxyXFxuICAgIGRpc3BsYXk6IG5vbmU7XFxyXFxuICB9XFxyXFxuLnJlbGF0aXZlIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxyXFxuLmJsb2NrIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXHJcXG4uZmxleCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbn1cXHJcXG4uaC1zY3JlZW4ge1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG59XFxyXFxuLmgtMVxcXFwvNSB7XFxuICBoZWlnaHQ6IDIwJTtcXG59XFxyXFxuLmgtZnVsbCB7XFxuICBoZWlnaHQ6IDEwMCU7XFxufVxcclxcbi5oLTRcXFxcLzUge1xcbiAgaGVpZ2h0OiA4MCU7XFxufVxcclxcbi5oLTAge1xcbiAgaGVpZ2h0OiAwcHg7XFxufVxcclxcbi5oLTE2IHtcXG4gIGhlaWdodDogNHJlbTtcXG59XFxyXFxuLnctZnVsbCB7XFxuICB3aWR0aDogMTAwJTtcXG59XFxyXFxuLnctMTYge1xcbiAgd2lkdGg6IDRyZW07XFxufVxcclxcbi5taW4tdy1cXFxcWzI1XFxcXCVcXFxcXSB7XFxuICBtaW4td2lkdGg6IDI1JTtcXG59XFxyXFxuLm1pbi13LVxcXFxbNTBcXFxcJVxcXFxdIHtcXG4gIG1pbi13aWR0aDogNTAlO1xcbn1cXHJcXG4ubWluLXctZnVsbCB7XFxuICBtaW4td2lkdGg6IDEwMCU7XFxufVxcclxcbi5tYXgtdy14bCB7XFxuICBtYXgtd2lkdGg6IDM2cmVtO1xcbn1cXHJcXG5ALXdlYmtpdC1rZXlmcmFtZXMgc3BpbiB7XFxuXFxuICB0byB7XFxuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XFxuICB9XFxufVxcclxcbkBrZXlmcmFtZXMgc3BpbiB7XFxuXFxuICB0byB7XFxuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XFxuICB9XFxufVxcclxcbi5hbmltYXRlLXNwaW4ge1xcbiAgLXdlYmtpdC1hbmltYXRpb246IHNwaW4gMXMgbGluZWFyIGluZmluaXRlO1xcbiAgICAgICAgICBhbmltYXRpb246IHNwaW4gMXMgbGluZWFyIGluZmluaXRlO1xcbn1cXHJcXG4uZmxleC1yb3cge1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG59XFxyXFxuLmZsZXgtY29sIHtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcclxcbi5pdGVtcy1jZW50ZXIge1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxyXFxuLmp1c3RpZnktc3RhcnQge1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbn1cXHJcXG4uanVzdGlmeS1jZW50ZXIge1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcclxcbi5nYXAtMiB7XFxuICBnYXA6IDAuNXJlbTtcXG59XFxyXFxuLmdhcC15LTIge1xcbiAgcm93LWdhcDogMC41cmVtO1xcbn1cXHJcXG4uc2VsZi1jZW50ZXIge1xcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xcbn1cXHJcXG4ub3ZlcmZsb3cteS1zY3JvbGwge1xcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xcbn1cXHJcXG4ucm91bmRlZC1sZyB7XFxuICBib3JkZXItcmFkaXVzOiAwLjVyZW07XFxufVxcclxcbi5yb3VuZGVkLXhsIHtcXG4gIGJvcmRlci1yYWRpdXM6IDAuNzVyZW07XFxufVxcclxcbi5ib3JkZXIge1xcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XFxufVxcclxcbi5ib3JkZXItc29saWQge1xcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcXG59XFxyXFxuLmJvcmRlci1zbGF0ZS01MCB7XFxuICAtLXR3LWJvcmRlci1vcGFjaXR5OiAxO1xcbiAgYm9yZGVyLWNvbG9yOiByZ2IoMjQ4IDI1MCAyNTIgLyB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpO1xcbn1cXHJcXG4uYm9yZGVyLWdyYXktMzAwIHtcXG4gIC0tdHctYm9yZGVyLW9wYWNpdHk6IDE7XFxuICBib3JkZXItY29sb3I6IHJnYigyMDkgMjEzIDIxOSAvIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7XFxufVxcclxcbi5iZy1ibGFjayB7XFxuICAtLXR3LWJnLW9wYWNpdHk6IDE7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCAwIDAgLyB2YXIoLS10dy1iZy1vcGFjaXR5KSk7XFxufVxcclxcbi5iZy1ncmF5LTUwIHtcXG4gIC0tdHctYmctb3BhY2l0eTogMTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDkgMjUwIDI1MSAvIHZhcigtLXR3LWJnLW9wYWNpdHkpKTtcXG59XFxyXFxuLmJnLWdyYWRpZW50LXRvLXIge1xcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCB2YXIoLS10dy1ncmFkaWVudC1zdG9wcykpO1xcbn1cXHJcXG4uZnJvbS1jeWFuLTUwMCB7XFxuICAtLXR3LWdyYWRpZW50LWZyb206ICMwNmI2ZDQ7XFxuICAtLXR3LWdyYWRpZW50LXRvOiByZ2IoNiAxODIgMjEyIC8gMCk7XFxuICAtLXR3LWdyYWRpZW50LXN0b3BzOiB2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8pO1xcbn1cXHJcXG4udG8tYmx1ZS01MDAge1xcbiAgLS10dy1ncmFkaWVudC10bzogIzNiODJmNjtcXG59XFxyXFxuLm9iamVjdC1jb3ZlciB7XFxuICAtby1vYmplY3QtZml0OiBjb3ZlcjtcXG4gICAgIG9iamVjdC1maXQ6IGNvdmVyO1xcbn1cXHJcXG4ucC01IHtcXG4gIHBhZGRpbmc6IDEuMjVyZW07XFxufVxcclxcbi5wLTQge1xcbiAgcGFkZGluZzogMXJlbTtcXG59XFxyXFxuLnAtMlxcXFwuNSB7XFxuICBwYWRkaW5nOiAwLjYyNXJlbTtcXG59XFxyXFxuLnAtMiB7XFxuICBwYWRkaW5nOiAwLjVyZW07XFxufVxcclxcbi5weS0yXFxcXC41IHtcXG4gIHBhZGRpbmctdG9wOiAwLjYyNXJlbTtcXG4gIHBhZGRpbmctYm90dG9tOiAwLjYyNXJlbTtcXG59XFxyXFxuLnB5LTIge1xcbiAgcGFkZGluZy10b3A6IDAuNXJlbTtcXG4gIHBhZGRpbmctYm90dG9tOiAwLjVyZW07XFxufVxcclxcbi5weC0zIHtcXG4gIHBhZGRpbmctbGVmdDogMC43NXJlbTtcXG4gIHBhZGRpbmctcmlnaHQ6IDAuNzVyZW07XFxufVxcclxcbi50ZXh0LWJhc2Uge1xcbiAgZm9udC1zaXplOiAxcmVtO1xcbiAgbGluZS1oZWlnaHQ6IDEuNXJlbTtcXG59XFxyXFxuLnRleHQtc20ge1xcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcXG4gIGxpbmUtaGVpZ2h0OiAxLjI1cmVtO1xcbn1cXHJcXG4ubGVhZGluZy1ub3JtYWwge1xcbiAgbGluZS1oZWlnaHQ6IDEuNTtcXG59XFxyXFxuLnRleHQtc2xhdGUtNTAge1xcbiAgLS10dy10ZXh0LW9wYWNpdHk6IDE7XFxuICBjb2xvcjogcmdiKDI0OCAyNTAgMjUyIC8gdmFyKC0tdHctdGV4dC1vcGFjaXR5KSk7XFxufVxcclxcbi50ZXh0LWdyYXktOTAwIHtcXG4gIC0tdHctdGV4dC1vcGFjaXR5OiAxO1xcbiAgY29sb3I6IHJnYigxNyAyNCAzOSAvIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpO1xcbn1cXHJcXG4ub3V0bGluZS1ub25lIHtcXG4gIG91dGxpbmU6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcXG4gIG91dGxpbmUtb2Zmc2V0OiAycHg7XFxufVxcclxcbi50cmFuc2l0aW9uLWFsbCB7XFxuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XFxuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKTtcXG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDE1MG1zO1xcbn1cXHJcXG4uZHVyYXRpb24tMzAwIHtcXG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDMwMG1zO1xcbn1cXHJcXG4uZHVyYXRpb24tMjAwIHtcXG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDIwMG1zO1xcbn1cXHJcXG4uZWFzZS1pbi1vdXQge1xcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSk7XFxufVxcclxcbi5ob3ZlclxcXFw6dG8tYmx1ZS0xMDA6aG92ZXIge1xcbiAgLS10dy1ncmFkaWVudC10bzogI2RiZWFmZTtcXG59XFxyXFxuLmZvY3VzXFxcXDpib3JkZXItYmx1ZS01MDA6Zm9jdXMge1xcbiAgLS10dy1ib3JkZXItb3BhY2l0eTogMTtcXG4gIGJvcmRlci1jb2xvcjogcmdiKDU5IDEzMCAyNDYgLyB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpO1xcbn1cXHJcXG4uZm9jdXNcXFxcOnJpbmctYmx1ZS01MDA6Zm9jdXMge1xcbiAgLS10dy1yaW5nLW9wYWNpdHk6IDE7XFxuICAtLXR3LXJpbmctY29sb3I6IHJnYig1OSAxMzAgMjQ2IC8gdmFyKC0tdHctcmluZy1vcGFjaXR5KSk7XFxufVxcclxcbi5kaXNhYmxlZFxcXFw6b3BhY2l0eS03NTpkaXNhYmxlZCB7XFxuICBvcGFjaXR5OiAwLjc1O1xcbn1cXHJcXG5AbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKSB7XFxuXFxuICAuZGFya1xcXFw6Ym9yZGVyLWdyYXktNjAwIHtcXG4gICAgLS10dy1ib3JkZXItb3BhY2l0eTogMTtcXG4gICAgYm9yZGVyLWNvbG9yOiByZ2IoNzUgODUgOTkgLyB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpO1xcbiAgfVxcblxcbiAgLmRhcmtcXFxcOmJnLWdyYXktNzAwIHtcXG4gICAgLS10dy1iZy1vcGFjaXR5OiAxO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNTUgNjUgODEgLyB2YXIoLS10dy1iZy1vcGFjaXR5KSk7XFxuICB9XFxuXFxuICAuZGFya1xcXFw6dGV4dC13aGl0ZSB7XFxuICAgIC0tdHctdGV4dC1vcGFjaXR5OiAxO1xcbiAgICBjb2xvcjogcmdiKDI1NSAyNTUgMjU1IC8gdmFyKC0tdHctdGV4dC1vcGFjaXR5KSk7XFxuICB9XFxuXFxuICAuZGFya1xcXFw6cGxhY2Vob2xkZXItZ3JheS00MDA6Oi1tb3otcGxhY2Vob2xkZXIge1xcbiAgICAtLXR3LXBsYWNlaG9sZGVyLW9wYWNpdHk6IDE7XFxuICAgIGNvbG9yOiByZ2IoMTU2IDE2MyAxNzUgLyB2YXIoLS10dy1wbGFjZWhvbGRlci1vcGFjaXR5KSk7XFxuICB9XFxuXFxuICAuZGFya1xcXFw6cGxhY2Vob2xkZXItZ3JheS00MDA6OnBsYWNlaG9sZGVyIHtcXG4gICAgLS10dy1wbGFjZWhvbGRlci1vcGFjaXR5OiAxO1xcbiAgICBjb2xvcjogcmdiKDE1NiAxNjMgMTc1IC8gdmFyKC0tdHctcGxhY2Vob2xkZXItb3BhY2l0eSkpO1xcbiAgfVxcblxcbiAgLmRhcmtcXFxcOmZvY3VzXFxcXDpib3JkZXItYmx1ZS01MDA6Zm9jdXMge1xcbiAgICAtLXR3LWJvcmRlci1vcGFjaXR5OiAxO1xcbiAgICBib3JkZXItY29sb3I6IHJnYig1OSAxMzAgMjQ2IC8gdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTtcXG4gIH1cXG5cXG4gIC5kYXJrXFxcXDpmb2N1c1xcXFw6cmluZy1ibHVlLTUwMDpmb2N1cyB7XFxuICAgIC0tdHctcmluZy1vcGFjaXR5OiAxO1xcbiAgICAtLXR3LXJpbmctY29sb3I6IHJnYig1OSAxMzAgMjQ2IC8gdmFyKC0tdHctcmluZy1vcGFjaXR5KSk7XFxuICB9XFxufVxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIixcIjxubyBzb3VyY2U+XCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBOztDQUEwQixDQUExQjs7O0NBQTBCOztBQUExQjs7O0VBQUEsc0JBQTBCLEVBQTFCLE1BQTBCO0VBQTFCLGVBQTBCLEVBQTFCLE1BQTBCO0VBQTFCLG1CQUEwQixFQUExQixNQUEwQjtFQUExQixxQkFBMEIsRUFBMUIsTUFBMEI7QUFBQTs7QUFBMUI7O0VBQUEsZ0JBQTBCO0FBQUE7O0FBQTFCOzs7OztDQUEwQjs7QUFBMUI7RUFBQSxnQkFBMEIsRUFBMUIsTUFBMEI7RUFBMUIsOEJBQTBCLEVBQTFCLE1BQTBCO0VBQTFCLGdCQUEwQixFQUExQixNQUEwQjtFQUEx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dGVudFwiOltcIkBpbXBvcnQgXFxcInRhaWx3aW5kY3NzL2Jhc2VcXFwiO1xcclxcbkBpbXBvcnQgXFxcInRhaWx3aW5kY3NzL2NvbXBvbmVudHNcXFwiO1xcclxcbkBpbXBvcnQgXFxcInRhaWx3aW5kY3NzL3V0aWxpdGllc1xcXCI7XFxyXFxuXFxyXFxuQGxheWVyIGNvbXBvbmVudHMge1xcclxcbiAgLmFwcC1tYWluIHtcXHJcXG4gICAgbWluLWhlaWdodDogMTAwdmg7XFxyXFxuICAgIG1heC1oZWlnaHQ6IDEwMHZoO1xcclxcbiAgICBtaW4td2lkdGg6IDEwMHZ3O1xcclxcbiAgICBtYXgtd2lkdGg6IDEwMHZ3O1xcclxcbiAgfVxcclxcblxcclxcbiAgLmFwcC1oZWFkZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXFxcIi9hc3NldHMvYmFja2dyb3VuZC9hc3Ryb25hdXQuanBnXFxcIikgY2VudGVyIGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdDtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gIC5sb2FkZXIge1xcclxcbiAgICBmaWxsOiB3aGl0ZTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gIC5pbnB1dC1wcmVmaXgtaWNvbiB7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgdG9wOiA1MCU7XFxyXFxuICAgIGxlZnQ6IC00MHB4O1xcclxcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XFxyXFxuICB9XFxyXFxuXFxyXFxuICAqIHtcXHJcXG4gICAgZm9udC1mYW1pbHk6IFxcXCJSb2JvdG9cXFwiLCBzYW5zLXNlcmlmO1xcclxcbiAgICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XFxyXFxuICAgIHNjcm9sbGJhci13aWR0aDogbm9uZTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gICo6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXHJcXG4gICAgZGlzcGxheTogbm9uZTtcXHJcXG4gIH1cXHJcXG59XFxyXFxuXCIsbnVsbF0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgdXJsID0gU3RyaW5nKHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmwpOyAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cblxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH0gLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuXG5cbiAgaWYgKC9bXCInKCkgXFx0XFxuXXwoJTIwKS8udGVzdCh1cmwpIHx8IG9wdGlvbnMubmVlZFF1b3Rlcykge1xuICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgXCJcXFxcblwiKSwgXCJcXFwiXCIpO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCIvKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiwgdGhhdCwgYXMgbG9uZyBhcyBpdCBjb250aW51ZXMgdG8gYmUgaW52b2tlZCwgd2lsbCBub3RcbiAqIGJlIHRyaWdnZXJlZC4gVGhlIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIGFmdGVyIGl0IHN0b3BzIGJlaW5nIGNhbGxlZCBmb3JcbiAqIE4gbWlsbGlzZWNvbmRzLiBJZiBgaW1tZWRpYXRlYCBpcyBwYXNzZWQsIHRyaWdnZXIgdGhlIGZ1bmN0aW9uIG9uIHRoZVxuICogbGVhZGluZyBlZGdlLCBpbnN0ZWFkIG9mIHRoZSB0cmFpbGluZy4gVGhlIGZ1bmN0aW9uIGFsc28gaGFzIGEgcHJvcGVydHkgJ2NsZWFyJyBcbiAqIHRoYXQgaXMgYSBmdW5jdGlvbiB3aGljaCB3aWxsIGNsZWFyIHRoZSB0aW1lciB0byBwcmV2ZW50IHByZXZpb3VzbHkgc2NoZWR1bGVkIGV4ZWN1dGlvbnMuIFxuICpcbiAqIEBzb3VyY2UgdW5kZXJzY29yZS5qc1xuICogQHNlZSBodHRwOi8vdW5zY3JpcHRhYmxlLmNvbS8yMDA5LzAzLzIwL2RlYm91bmNpbmctamF2YXNjcmlwdC1tZXRob2RzL1xuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuY3Rpb24gdG8gd3JhcFxuICogQHBhcmFtIHtOdW1iZXJ9IHRpbWVvdXQgaW4gbXMgKGAxMDBgKVxuICogQHBhcmFtIHtCb29sZWFufSB3aGV0aGVyIHRvIGV4ZWN1dGUgYXQgdGhlIGJlZ2lubmluZyAoYGZhbHNlYClcbiAqIEBhcGkgcHVibGljXG4gKi9cbmZ1bmN0aW9uIGRlYm91bmNlKGZ1bmMsIHdhaXQsIGltbWVkaWF0ZSl7XG4gIHZhciB0aW1lb3V0LCBhcmdzLCBjb250ZXh0LCB0aW1lc3RhbXAsIHJlc3VsdDtcbiAgaWYgKG51bGwgPT0gd2FpdCkgd2FpdCA9IDEwMDtcblxuICBmdW5jdGlvbiBsYXRlcigpIHtcbiAgICB2YXIgbGFzdCA9IERhdGUubm93KCkgLSB0aW1lc3RhbXA7XG5cbiAgICBpZiAobGFzdCA8IHdhaXQgJiYgbGFzdCA+PSAwKSB7XG4gICAgICB0aW1lb3V0ID0gc2V0VGltZW91dChsYXRlciwgd2FpdCAtIGxhc3QpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aW1lb3V0ID0gbnVsbDtcbiAgICAgIGlmICghaW1tZWRpYXRlKSB7XG4gICAgICAgIHJlc3VsdCA9IGZ1bmMuYXBwbHkoY29udGV4dCwgYXJncyk7XG4gICAgICAgIGNvbnRleHQgPSBhcmdzID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgdmFyIGRlYm91bmNlZCA9IGZ1bmN0aW9uKCl7XG4gICAgY29udGV4dCA9IHRoaXM7XG4gICAgYXJncyA9IGFyZ3VtZW50cztcbiAgICB0aW1lc3RhbXAgPSBEYXRlLm5vdygpO1xuICAgIHZhciBjYWxsTm93ID0gaW1tZWRpYXRlICYmICF0aW1lb3V0O1xuICAgIGlmICghdGltZW91dCkgdGltZW91dCA9IHNldFRpbWVvdXQobGF0ZXIsIHdhaXQpO1xuICAgIGlmIChjYWxsTm93KSB7XG4gICAgICByZXN1bHQgPSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgY29udGV4dCA9IGFyZ3MgPSBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgZGVib3VuY2VkLmNsZWFyID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRpbWVvdXQpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgIHRpbWVvdXQgPSBudWxsO1xuICAgIH1cbiAgfTtcbiAgXG4gIGRlYm91bmNlZC5mbHVzaCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aW1lb3V0KSB7XG4gICAgICByZXN1bHQgPSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgY29udGV4dCA9IGFyZ3MgPSBudWxsO1xuICAgICAgXG4gICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICB0aW1lb3V0ID0gbnVsbDtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGRlYm91bmNlZDtcbn07XG5cbi8vIEFkZHMgY29tcGF0aWJpbGl0eSBmb3IgRVMgbW9kdWxlc1xuZGVib3VuY2UuZGVib3VuY2UgPSBkZWJvdW5jZTtcblxubW9kdWxlLmV4cG9ydHMgPSBkZWJvdW5jZTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gIGNvbnRleHRUeXBlOiB0cnVlLFxuICBjb250ZXh0VHlwZXM6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gIG1peGluczogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gIG5hbWU6IHRydWUsXG4gIGxlbmd0aDogdHJ1ZSxcbiAgcHJvdG90eXBlOiB0cnVlLFxuICBjYWxsZXI6IHRydWUsXG4gIGNhbGxlZTogdHJ1ZSxcbiAgYXJndW1lbnRzOiB0cnVlLFxuICBhcml0eTogdHJ1ZVxufTtcbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICByZW5kZXI6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZVxufTtcbnZhciBNRU1PX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIGNvbXBhcmU6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcblRZUEVfU1RBVElDU1tyZWFjdElzLkZvcndhcmRSZWZdID0gRk9SV0FSRF9SRUZfU1RBVElDUztcblRZUEVfU1RBVElDU1tyZWFjdElzLk1lbW9dID0gTUVNT19TVEFUSUNTO1xuXG5mdW5jdGlvbiBnZXRTdGF0aWNzKGNvbXBvbmVudCkge1xuICAvLyBSZWFjdCB2MTYuMTEgYW5kIGJlbG93XG4gIGlmIChyZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgfSAvLyBSZWFjdCB2MTYuMTIgYW5kIGFib3ZlXG5cblxuICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcbn1cblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcbiAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgfVxuXG4gICAgdmFyIHRhcmdldFN0YXRpY3MgPSBnZXRTdGF0aWNzKHRhcmdldENvbXBvbmVudCk7XG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiYgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksY2E9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiBwKGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifXZhciBkYT1uZXcgU2V0LGVhPXt9O2Z1bmN0aW9uIGZhKGEsYil7aGEoYSxiKTtoYShhK1wiQ2FwdHVyZVwiLGIpfVxuZnVuY3Rpb24gaGEoYSxiKXtlYVthXT1iO2ZvcihhPTA7YTxiLmxlbmd0aDthKyspZGEuYWRkKGJbYV0pfVxudmFyIGlhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSxqYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGthPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxsYT1cbnt9LG1hPXt9O2Z1bmN0aW9uIG9hKGEpe2lmKGphLmNhbGwobWEsYSkpcmV0dXJuITA7aWYoamEuY2FsbChsYSxhKSlyZXR1cm4hMTtpZihrYS50ZXN0KGEpKXJldHVybiBtYVthXT0hMDtsYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBwYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHFhKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fHBhKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gdihhLGIsYyxkLGUsZixnKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zjt0aGlzLnJlbW92ZUVtcHR5U3RyaW5nPWd9dmFyIHo9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwwLCExLGEsbnVsbCwhMSwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07eltiXT1uZXcgdihiLDEsITEsYVsxXSxudWxsLCExLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwyLCExLGEsbnVsbCwhMSwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBkaXNhYmxlUmVtb3RlUGxheWJhY2sgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMywhMCxhLG51bGwsITEsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsNCwhMSxhLG51bGwsITEsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSw2LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO3ZhciByYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHNhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJhLFxuc2EpO3pbYl09bmV3IHYoYiwxLCExLGEsbnVsbCwhMSwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYSxzYSk7eltiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYSxzYSk7eltiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuei54bGlua0hyZWY9bmV3IHYoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwLCExKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwLCEwKX0pO1xuZnVuY3Rpb24gdGEoYSxiLGMsZCl7dmFyIGU9ei5oYXNPd25Qcm9wZXJ0eShiKT96W2JdOm51bGw7aWYobnVsbCE9PWU/MCE9PWUudHlwZTpkfHwhKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0pcWEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP29hKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKX1cbnZhciB1YT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCx2YT1TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKSx3YT1TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpLHlhPVN5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKSx6YT1TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIiksQWE9U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpLEJhPVN5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKSxDYT1TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSxEYT1TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIiksRWE9U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpLEZhPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpLEdhPVN5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpLEhhPVN5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTtTeW1ib2wuZm9yKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtcbnZhciBJYT1TeW1ib2wuZm9yKFwicmVhY3Qub2Zmc2NyZWVuXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5jYWNoZVwiKTtTeW1ib2wuZm9yKFwicmVhY3QudHJhY2luZ19tYXJrZXJcIik7dmFyIEphPVN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBLYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9SmEmJmFbSmFdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIEE9T2JqZWN0LmFzc2lnbixMYTtmdW5jdGlvbiBNYShhKXtpZih2b2lkIDA9PT1MYSl0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goYyl7dmFyIGI9Yy5zdGFjay50cmltKCkubWF0Y2goL1xcbiggKihhdCApPykvKTtMYT1iJiZiWzFdfHxcIlwifXJldHVyblwiXFxuXCIrTGErYX12YXIgTmE9ITE7XG5mdW5jdGlvbiBPYShhLGIpe2lmKCFhfHxOYSlyZXR1cm5cIlwiO05hPSEwO3ZhciBjPUVycm9yLnByZXBhcmVTdGFja1RyYWNlO0Vycm9yLnByZXBhcmVTdGFja1RyYWNlPXZvaWQgMDt0cnl7aWYoYilpZihiPWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiLnByb3RvdHlwZSxcInByb3BzXCIse3NldDpmdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fX0pLFwib2JqZWN0XCI9PT10eXBlb2YgUmVmbGVjdCYmUmVmbGVjdC5jb25zdHJ1Y3Qpe3RyeXtSZWZsZWN0LmNvbnN0cnVjdChiLFtdKX1jYXRjaChsKXt2YXIgZD1sfVJlZmxlY3QuY29uc3RydWN0KGEsW10sYil9ZWxzZXt0cnl7Yi5jYWxsKCl9Y2F0Y2gobCl7ZD1sfWEuY2FsbChiLnByb3RvdHlwZSl9ZWxzZXt0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2gobCl7ZD1sfWEoKX19Y2F0Y2gobCl7aWYobCYmZCYmXCJzdHJpbmdcIj09PXR5cGVvZiBsLnN0YWNrKXtmb3IodmFyIGU9bC5zdGFjay5zcGxpdChcIlxcblwiKSxcbmY9ZC5zdGFjay5zcGxpdChcIlxcblwiKSxnPWUubGVuZ3RoLTEsaD1mLmxlbmd0aC0xOzE8PWcmJjA8PWgmJmVbZ10hPT1mW2hdOyloLS07Zm9yKDsxPD1nJiYwPD1oO2ctLSxoLS0paWYoZVtnXSE9PWZbaF0pe2lmKDEhPT1nfHwxIT09aCl7ZG8gaWYoZy0tLGgtLSwwPmh8fGVbZ10hPT1mW2hdKXt2YXIgaz1cIlxcblwiK2VbZ10ucmVwbGFjZShcIiBhdCBuZXcgXCIsXCIgYXQgXCIpO2EuZGlzcGxheU5hbWUmJmsuaW5jbHVkZXMoXCI8YW5vbnltb3VzPlwiKSYmKGs9ay5yZXBsYWNlKFwiPGFub255bW91cz5cIixhLmRpc3BsYXlOYW1lKSk7cmV0dXJuIGt9d2hpbGUoMTw9ZyYmMDw9aCl9YnJlYWt9fX1maW5hbGx5e05hPSExLEVycm9yLnByZXBhcmVTdGFja1RyYWNlPWN9cmV0dXJuKGE9YT9hLmRpc3BsYXlOYW1lfHxhLm5hbWU6XCJcIik/TWEoYSk6XCJcIn1cbmZ1bmN0aW9uIFBhKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnJldHVybiBNYShhLnR5cGUpO2Nhc2UgMTY6cmV0dXJuIE1hKFwiTGF6eVwiKTtjYXNlIDEzOnJldHVybiBNYShcIlN1c3BlbnNlXCIpO2Nhc2UgMTk6cmV0dXJuIE1hKFwiU3VzcGVuc2VMaXN0XCIpO2Nhc2UgMDpjYXNlIDI6Y2FzZSAxNTpyZXR1cm4gYT1PYShhLnR5cGUsITEpLGE7Y2FzZSAxMTpyZXR1cm4gYT1PYShhLnR5cGUucmVuZGVyLCExKSxhO2Nhc2UgMTpyZXR1cm4gYT1PYShhLnR5cGUsITApLGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1cbmZ1bmN0aW9uIFFhKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgeWE6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2Ugd2E6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIEFhOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIHphOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgRWE6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgRmE6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgQ2E6cmV0dXJuKGEuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgQmE6cmV0dXJuKGEuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgRGE6dmFyIGI9YS5yZW5kZXI7YT1hLmRpc3BsYXlOYW1lO2F8fChhPWIuZGlzcGxheU5hbWV8fFxuYi5uYW1lfHxcIlwiLGE9XCJcIiE9PWE/XCJGb3J3YXJkUmVmKFwiK2ErXCIpXCI6XCJGb3J3YXJkUmVmXCIpO3JldHVybiBhO2Nhc2UgR2E6cmV0dXJuIGI9YS5kaXNwbGF5TmFtZXx8bnVsbCxudWxsIT09Yj9iOlFhKGEudHlwZSl8fFwiTWVtb1wiO2Nhc2UgSGE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIFFhKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBSYShhKXt2YXIgYj1hLnR5cGU7c3dpdGNoKGEudGFnKXtjYXNlIDI0OnJldHVyblwiQ2FjaGVcIjtjYXNlIDk6cmV0dXJuKGIuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgMTA6cmV0dXJuKGIuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgMTg6cmV0dXJuXCJEZWh5ZHJhdGVkRnJhZ21lbnRcIjtjYXNlIDExOnJldHVybiBhPWIucmVuZGVyLGE9YS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxcIlwiLGIuZGlzcGxheU5hbWV8fChcIlwiIT09YT9cIkZvcndhcmRSZWYoXCIrYStcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSA3OnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIDU6cmV0dXJuIGI7Y2FzZSA0OnJldHVyblwiUG9ydGFsXCI7Y2FzZSAzOnJldHVyblwiUm9vdFwiO2Nhc2UgNjpyZXR1cm5cIlRleHRcIjtjYXNlIDE2OnJldHVybiBRYShiKTtjYXNlIDg6cmV0dXJuIGI9PT16YT9cIlN0cmljdE1vZGVcIjpcIk1vZGVcIjtjYXNlIDIyOnJldHVyblwiT2Zmc2NyZWVuXCI7XG5jYXNlIDEyOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIDIxOnJldHVyblwiU2NvcGVcIjtjYXNlIDEzOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIDE5OnJldHVyblwiU3VzcGVuc2VMaXN0XCI7Y2FzZSAyNTpyZXR1cm5cIlRyYWNpbmdNYXJrZXJcIjtjYXNlIDE6Y2FzZSAwOmNhc2UgMTc6Y2FzZSAyOmNhc2UgMTQ6Y2FzZSAxNTppZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYilyZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBTYShhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7Y2FzZSBcIm9iamVjdFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBUYShhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gVWEoYSl7dmFyIGI9VGEoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZhKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYShhKSl9ZnVuY3Rpb24gV2EoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRhKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gWGEoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fVxuZnVuY3Rpb24gWWEoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIEEoe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfWZ1bmN0aW9uIFphKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPVNhKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gYWIoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZ0YShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gYmIoYSxiKXthYihhLGIpO3ZhciBjPVNhKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP2NiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJmNiKGEsYi50eXBlLFNhKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gZGIoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIGNiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8WGEoYS5vd25lckRvY3VtZW50KSE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfXZhciBlYj1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gZmIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK1NhKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBnYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IocCg5MSkpO3JldHVybiBBKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGhiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHAoOTIpKTtpZihlYihjKSl7aWYoMTxjLmxlbmd0aCl0aHJvdyBFcnJvcihwKDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6U2EoYyl9fVxuZnVuY3Rpb24gaWIoYSxiKXt2YXIgYz1TYShiLnZhbHVlKSxkPVNhKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gamIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX1mdW5jdGlvbiBrYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fVxuZnVuY3Rpb24gbGIoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2tiKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIG1iLG5iPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIhPT1hLm5hbWVzcGFjZVVSSXx8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle21iPW1ifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO21iLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPW1iLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIG9iKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgcGI9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGFzcGVjdFJhdGlvOiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCxcbnpvb206ITAsZmlsbE9wYWNpdHk6ITAsZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0scWI9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKHBiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3FiLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7cGJbYl09cGJbYV19KX0pO2Z1bmN0aW9uIHJiKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxwYi5oYXNPd25Qcm9wZXJ0eShhKSYmcGJbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gc2IoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9cmIoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgdGI9QSh7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHViKGEsYil7aWYoYil7aWYodGJbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcihwKDEzNyxhKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcihwKDYwKSk7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MfHwhKFwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcihwKDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcihwKDYyKSk7fX1cbmZ1bmN0aW9uIHZiKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX12YXIgd2I9bnVsbDtmdW5jdGlvbiB4YihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9dmFyIHliPW51bGwsemI9bnVsbCxBYj1udWxsO1xuZnVuY3Rpb24gQmIoYSl7aWYoYT1DYihhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHliKXRocm93IEVycm9yKHAoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9RGIoYikseWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gRWIoYSl7emI/QWI/QWIucHVzaChhKTpBYj1bYV06emI9YX1mdW5jdGlvbiBGYigpe2lmKHpiKXt2YXIgYT16YixiPUFiO0FiPXpiPW51bGw7QmIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUJiKGJbYV0pfX1mdW5jdGlvbiBHYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEhiKCl7fXZhciBJYj0hMTtmdW5jdGlvbiBKYihhLGIsYyl7aWYoSWIpcmV0dXJuIGEoYixjKTtJYj0hMDt0cnl7cmV0dXJuIEdiKGEsYixjKX1maW5hbGx5e2lmKEliPSExLG51bGwhPT16Ynx8bnVsbCE9PUFiKUhiKCksRmIoKX19XG5mdW5jdGlvbiBLYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKG51bGw9PT1jKXJldHVybiBudWxsO3ZhciBkPURiKGMpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBjKXRocm93IEVycm9yKHAoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgTGI9ITE7aWYoaWEpdHJ5e3ZhciBNYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoTWIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe0xiPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLE1iLE1iKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixNYixNYil9Y2F0Y2goYSl7TGI9ITF9ZnVuY3Rpb24gTmIoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19dmFyIE9iPSExLFBiPW51bGwsUWI9ITEsUmI9bnVsbCxTYj17b25FcnJvcjpmdW5jdGlvbihhKXtPYj0hMDtQYj1hfX07ZnVuY3Rpb24gVGIoYSxiLGMsZCxlLGYsZyxoLGspe09iPSExO1BiPW51bGw7TmIuYXBwbHkoU2IsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIFViKGEsYixjLGQsZSxmLGcsaCxrKXtUYi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoT2Ipe2lmKE9iKXt2YXIgbD1QYjtPYj0hMTtQYj1udWxsfWVsc2UgdGhyb3cgRXJyb3IocCgxOTgpKTtRYnx8KFFiPSEwLFJiPWwpfX1mdW5jdGlvbiBWYihhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZmxhZ3MmNDA5OCkmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uIFdiKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gWGIoYSl7aWYoVmIoYSkhPT1hKXRocm93IEVycm9yKHAoMTg4KSk7fVxuZnVuY3Rpb24gWWIoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9VmIoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IocCgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gWGIoZSksYTtpZihmPT09ZClyZXR1cm4gWGIoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcihwKDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHAoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IocCgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHAoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBaYihhKXthPVliKGEpO3JldHVybiBudWxsIT09YT8kYihhKTpudWxsfWZ1bmN0aW9uICRiKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhO2ZvcihhPWEuY2hpbGQ7bnVsbCE9PWE7KXt2YXIgYj0kYihhKTtpZihudWxsIT09YilyZXR1cm4gYjthPWEuc2libGluZ31yZXR1cm4gbnVsbH1cbnZhciBhYz1jYS51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLGJjPWNhLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLGNjPWNhLnVuc3RhYmxlX3Nob3VsZFlpZWxkLGRjPWNhLnVuc3RhYmxlX3JlcXVlc3RQYWludCxCPWNhLnVuc3RhYmxlX25vdyxlYz1jYS51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxmYz1jYS51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxnYz1jYS51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxoYz1jYS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxpYz1jYS51bnN0YWJsZV9Mb3dQcmlvcml0eSxqYz1jYS51bnN0YWJsZV9JZGxlUHJpb3JpdHksa2M9bnVsbCxsYz1udWxsO2Z1bmN0aW9uIG1jKGEpe2lmKGxjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbGMub25Db21taXRGaWJlclJvb3QpdHJ5e2xjLm9uQ29tbWl0RmliZXJSb290KGtjLGEsdm9pZCAwLDEyOD09PShhLmN1cnJlbnQuZmxhZ3MmMTI4KSl9Y2F0Y2goYil7fX1cbnZhciBvYz1NYXRoLmNsejMyP01hdGguY2x6MzI6bmMscGM9TWF0aC5sb2cscWM9TWF0aC5MTjI7ZnVuY3Rpb24gbmMoYSl7YT4+Pj0wO3JldHVybiAwPT09YT8zMjozMS0ocGMoYSkvcWN8MCl8MH12YXIgcmM9NjQsc2M9NDE5NDMwNDtcbmZ1bmN0aW9uIHRjKGEpe3N3aXRjaChhJi1hKXtjYXNlIDE6cmV0dXJuIDE7Y2FzZSAyOnJldHVybiAyO2Nhc2UgNDpyZXR1cm4gNDtjYXNlIDg6cmV0dXJuIDg7Y2FzZSAxNjpyZXR1cm4gMTY7Y2FzZSAzMjpyZXR1cm4gMzI7Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpyZXR1cm4gYSY0MTk0MjQwO2Nhc2UgNDE5NDMwNDpjYXNlIDgzODg2MDg6Y2FzZSAxNjc3NzIxNjpjYXNlIDMzNTU0NDMyOmNhc2UgNjcxMDg4NjQ6cmV0dXJuIGEmMTMwMDIzNDI0O2Nhc2UgMTM0MjE3NzI4OnJldHVybiAxMzQyMTc3Mjg7Y2FzZSAyNjg0MzU0NTY6cmV0dXJuIDI2ODQzNTQ1NjtjYXNlIDUzNjg3MDkxMjpyZXR1cm4gNTM2ODcwOTEyO2Nhc2UgMTA3Mzc0MTgyNDpyZXR1cm4gMTA3Mzc0MTgyNDtcbmRlZmF1bHQ6cmV0dXJuIGF9fWZ1bmN0aW9uIHVjKGEsYil7dmFyIGM9YS5wZW5kaW5nTGFuZXM7aWYoMD09PWMpcmV0dXJuIDA7dmFyIGQ9MCxlPWEuc3VzcGVuZGVkTGFuZXMsZj1hLnBpbmdlZExhbmVzLGc9YyYyNjg0MzU0NTU7aWYoMCE9PWcpe3ZhciBoPWcmfmU7MCE9PWg/ZD10YyhoKTooZiY9ZywwIT09ZiYmKGQ9dGMoZikpKX1lbHNlIGc9YyZ+ZSwwIT09Zz9kPXRjKGcpOjAhPT1mJiYoZD10YyhmKSk7aWYoMD09PWQpcmV0dXJuIDA7aWYoMCE9PWImJmIhPT1kJiYwPT09KGImZSkmJihlPWQmLWQsZj1iJi1iLGU+PWZ8fDE2PT09ZSYmMCE9PShmJjQxOTQyNDApKSlyZXR1cm4gYjswIT09KGQmNCkmJihkfD1jJjE2KTtiPWEuZW50YW5nbGVkTGFuZXM7aWYoMCE9PWIpZm9yKGE9YS5lbnRhbmdsZW1lbnRzLGImPWQ7MDxiOyljPTMxLW9jKGIpLGU9MTw8YyxkfD1hW2NdLGImPX5lO3JldHVybiBkfVxuZnVuY3Rpb24gdmMoYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDQ6cmV0dXJuIGIrMjUwO2Nhc2UgODpjYXNlIDE2OmNhc2UgMzI6Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpyZXR1cm4gYis1RTM7Y2FzZSA0MTk0MzA0OmNhc2UgODM4ODYwODpjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6Y2FzZSA2NzEwODg2NDpyZXR1cm4tMTtjYXNlIDEzNDIxNzcyODpjYXNlIDI2ODQzNTQ1NjpjYXNlIDUzNjg3MDkxMjpjYXNlIDEwNzM3NDE4MjQ6cmV0dXJuLTE7ZGVmYXVsdDpyZXR1cm4tMX19XG5mdW5jdGlvbiB3YyhhLGIpe2Zvcih2YXIgYz1hLnN1c3BlbmRlZExhbmVzLGQ9YS5waW5nZWRMYW5lcyxlPWEuZXhwaXJhdGlvblRpbWVzLGY9YS5wZW5kaW5nTGFuZXM7MDxmOyl7dmFyIGc9MzEtb2MoZiksaD0xPDxnLGs9ZVtnXTtpZigtMT09PWspe2lmKDA9PT0oaCZjKXx8MCE9PShoJmQpKWVbZ109dmMoaCxiKX1lbHNlIGs8PWImJihhLmV4cGlyZWRMYW5lc3w9aCk7ZiY9fmh9fWZ1bmN0aW9uIHhjKGEpe2E9YS5wZW5kaW5nTGFuZXMmLTEwNzM3NDE4MjU7cmV0dXJuIDAhPT1hP2E6YSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiB5Yygpe3ZhciBhPXJjO3JjPDw9MTswPT09KHJjJjQxOTQyNDApJiYocmM9NjQpO3JldHVybiBhfWZ1bmN0aW9uIHpjKGEpe2Zvcih2YXIgYj1bXSxjPTA7MzE+YztjKyspYi5wdXNoKGEpO3JldHVybiBifVxuZnVuY3Rpb24gQWMoYSxiLGMpe2EucGVuZGluZ0xhbmVzfD1iOzUzNjg3MDkxMiE9PWImJihhLnN1c3BlbmRlZExhbmVzPTAsYS5waW5nZWRMYW5lcz0wKTthPWEuZXZlbnRUaW1lcztiPTMxLW9jKGIpO2FbYl09Y31mdW5jdGlvbiBCYyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzJn5iO2EucGVuZGluZ0xhbmVzPWI7YS5zdXNwZW5kZWRMYW5lcz0wO2EucGluZ2VkTGFuZXM9MDthLmV4cGlyZWRMYW5lcyY9YjthLm11dGFibGVSZWFkTGFuZXMmPWI7YS5lbnRhbmdsZWRMYW5lcyY9YjtiPWEuZW50YW5nbGVtZW50czt2YXIgZD1hLmV2ZW50VGltZXM7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxjOyl7dmFyIGU9MzEtb2MoYyksZj0xPDxlO2JbZV09MDtkW2VdPS0xO2FbZV09LTE7YyY9fmZ9fVxuZnVuY3Rpb24gQ2MoYSxiKXt2YXIgYz1hLmVudGFuZ2xlZExhbmVzfD1iO2ZvcihhPWEuZW50YW5nbGVtZW50cztjOyl7dmFyIGQ9MzEtb2MoYyksZT0xPDxkO2UmYnxhW2RdJmImJihhW2RdfD1iKTtjJj1+ZX19dmFyIEM9MDtmdW5jdGlvbiBEYyhhKXthJj0tYTtyZXR1cm4gMTxhPzQ8YT8wIT09KGEmMjY4NDM1NDU1KT8xNjo1MzY4NzA5MTI6NDoxfXZhciBFYyxGYyxHYyxIYyxJYyxKYz0hMSxLYz1bXSxMYz1udWxsLE1jPW51bGwsTmM9bnVsbCxPYz1uZXcgTWFwLFBjPW5ldyBNYXAsUWM9W10sUmM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gU2MoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjpjYXNlIFwiZm9jdXNvdXRcIjpMYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6TWM9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6TmM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOk9jLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOlBjLmRlbGV0ZShiLnBvaW50ZXJJZCl9fVxuZnVuY3Rpb24gVGMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT17YmxvY2tlZE9uOmIsZG9tRXZlbnROYW1lOmMsZXZlbnRTeXN0ZW1GbGFnczpkLG5hdGl2ZUV2ZW50OmYsdGFyZ2V0Q29udGFpbmVyczpbZV19LG51bGwhPT1iJiYoYj1DYihiKSxudWxsIT09YiYmRmMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO2I9YS50YXJnZXRDb250YWluZXJzO251bGwhPT1lJiYtMT09PWIuaW5kZXhPZihlKSYmYi5wdXNoKGUpO3JldHVybiBhfVxuZnVuY3Rpb24gVWMoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzaW5cIjpyZXR1cm4gTGM9VGMoTGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIE1jPVRjKE1jLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBOYz1UYyhOYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO09jLnNldChmLFRjKE9jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxQYy5zZXQoZixUYyhQYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiBWYyhhKXt2YXIgYj1XYyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPVZiKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPVdiKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO0ljKGEucHJpb3JpdHksZnVuY3Rpb24oKXtHYyhjKX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9XG5mdW5jdGlvbiBYYyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9WWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbD09PWMpe2M9YS5uYXRpdmVFdmVudDt2YXIgZD1uZXcgYy5jb25zdHJ1Y3RvcihjLnR5cGUsYyk7d2I9ZDtjLnRhcmdldC5kaXNwYXRjaEV2ZW50KGQpO3diPW51bGx9ZWxzZSByZXR1cm4gYj1DYihjKSxudWxsIT09YiYmRmMoYiksYS5ibG9ja2VkT249YywhMTtiLnNoaWZ0KCl9cmV0dXJuITB9ZnVuY3Rpb24gWmMoYSxiLGMpe1hjKGEpJiZjLmRlbGV0ZShiKX1mdW5jdGlvbiAkYygpe0pjPSExO251bGwhPT1MYyYmWGMoTGMpJiYoTGM9bnVsbCk7bnVsbCE9PU1jJiZYYyhNYykmJihNYz1udWxsKTtudWxsIT09TmMmJlhjKE5jKSYmKE5jPW51bGwpO09jLmZvckVhY2goWmMpO1BjLmZvckVhY2goWmMpfVxuZnVuY3Rpb24gYWQoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLEpjfHwoSmM9ITAsY2EudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhjYS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSwkYykpKX1cbmZ1bmN0aW9uIGJkKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIGFkKGIsYSl9aWYoMDxLYy5sZW5ndGgpe2FkKEtjWzBdLGEpO2Zvcih2YXIgYz0xO2M8S2MubGVuZ3RoO2MrKyl7dmFyIGQ9S2NbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1MYyYmYWQoTGMsYSk7bnVsbCE9PU1jJiZhZChNYyxhKTtudWxsIT09TmMmJmFkKE5jLGEpO09jLmZvckVhY2goYik7UGMuZm9yRWFjaChiKTtmb3IoYz0wO2M8UWMubGVuZ3RoO2MrKylkPVFjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxRYy5sZW5ndGgmJihjPVFjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KVZjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmUWMuc2hpZnQoKX12YXIgY2Q9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsZGQ9ITA7XG5mdW5jdGlvbiBlZChhLGIsYyxkKXt2YXIgZT1DLGY9Y2QudHJhbnNpdGlvbjtjZC50cmFuc2l0aW9uPW51bGw7dHJ5e0M9MSxmZChhLGIsYyxkKX1maW5hbGx5e0M9ZSxjZC50cmFuc2l0aW9uPWZ9fWZ1bmN0aW9uIGdkKGEsYixjLGQpe3ZhciBlPUMsZj1jZC50cmFuc2l0aW9uO2NkLnRyYW5zaXRpb249bnVsbDt0cnl7Qz00LGZkKGEsYixjLGQpfWZpbmFsbHl7Qz1lLGNkLnRyYW5zaXRpb249Zn19XG5mdW5jdGlvbiBmZChhLGIsYyxkKXtpZihkZCl7dmFyIGU9WWMoYSxiLGMsZCk7aWYobnVsbD09PWUpaGQoYSxiLGQsaWQsYyksU2MoYSxkKTtlbHNlIGlmKFVjKGUsYSxiLGMsZCkpZC5zdG9wUHJvcGFnYXRpb24oKTtlbHNlIGlmKFNjKGEsZCksYiY0JiYtMTxSYy5pbmRleE9mKGEpKXtmb3IoO251bGwhPT1lOyl7dmFyIGY9Q2IoZSk7bnVsbCE9PWYmJkVjKGYpO2Y9WWMoYSxiLGMsZCk7bnVsbD09PWYmJmhkKGEsYixkLGlkLGMpO2lmKGY9PT1lKWJyZWFrO2U9Zn1udWxsIT09ZSYmZC5zdG9wUHJvcGFnYXRpb24oKX1lbHNlIGhkKGEsYixkLG51bGwsYyl9fXZhciBpZD1udWxsO1xuZnVuY3Rpb24gWWMoYSxiLGMsZCl7aWQ9bnVsbDthPXhiKGQpO2E9V2MoYSk7aWYobnVsbCE9PWEpaWYoYj1WYihhKSxudWxsPT09YilhPW51bGw7ZWxzZSBpZihjPWIudGFnLDEzPT09Yyl7YT1XYihiKTtpZihudWxsIT09YSlyZXR1cm4gYTthPW51bGx9ZWxzZSBpZigzPT09Yyl7aWYoYi5zdGF0ZU5vZGUuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZClyZXR1cm4gMz09PWIudGFnP2Iuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDthPW51bGx9ZWxzZSBiIT09YSYmKGE9bnVsbCk7aWQ9YTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGpkKGEpe3N3aXRjaChhKXtjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsaWNrXCI6Y2FzZSBcImNsb3NlXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjpjYXNlIFwiZm9jdXNpblwiOmNhc2UgXCJmb2N1c291dFwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwia2V5dXBcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwicGFzdGVcIjpjYXNlIFwicGF1c2VcIjpjYXNlIFwicGxheVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmNhc2UgXCJyYXRlY2hhbmdlXCI6Y2FzZSBcInJlc2V0XCI6Y2FzZSBcInJlc2l6ZVwiOmNhc2UgXCJzZWVrZWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjpjYXNlIFwidm9sdW1lY2hhbmdlXCI6Y2FzZSBcImNoYW5nZVwiOmNhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjpjYXNlIFwidGV4dElucHV0XCI6Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjpjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpjYXNlIFwiYmVmb3JlYmx1clwiOmNhc2UgXCJhZnRlcmJsdXJcIjpjYXNlIFwiYmVmb3JlaW5wdXRcIjpjYXNlIFwiYmx1clwiOmNhc2UgXCJmdWxsc2NyZWVuY2hhbmdlXCI6Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImhhc2hjaGFuZ2VcIjpjYXNlIFwicG9wc3RhdGVcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInNlbGVjdHN0YXJ0XCI6cmV0dXJuIDE7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwic2Nyb2xsXCI6Y2FzZSBcInRvZ2dsZVwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwid2hlZWxcIjpjYXNlIFwibW91c2VlbnRlclwiOmNhc2UgXCJtb3VzZWxlYXZlXCI6Y2FzZSBcInBvaW50ZXJlbnRlclwiOmNhc2UgXCJwb2ludGVybGVhdmVcIjpyZXR1cm4gNDtcbmNhc2UgXCJtZXNzYWdlXCI6c3dpdGNoKGVjKCkpe2Nhc2UgZmM6cmV0dXJuIDE7Y2FzZSBnYzpyZXR1cm4gNDtjYXNlIGhjOmNhc2UgaWM6cmV0dXJuIDE2O2Nhc2UgamM6cmV0dXJuIDUzNjg3MDkxMjtkZWZhdWx0OnJldHVybiAxNn1kZWZhdWx0OnJldHVybiAxNn19dmFyIGtkPW51bGwsbGQ9bnVsbCxtZD1udWxsO2Z1bmN0aW9uIG5kKCl7aWYobWQpcmV0dXJuIG1kO3ZhciBhLGI9bGQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gbWQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1cbmZ1bmN0aW9uIG9kKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfWZ1bmN0aW9uIHBkKCl7cmV0dXJuITB9ZnVuY3Rpb24gcWQoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHJkKGEpe2Z1bmN0aW9uIGIoYixkLGUsZixnKXt0aGlzLl9yZWFjdE5hbWU9Yjt0aGlzLl90YXJnZXRJbnN0PWU7dGhpcy50eXBlPWQ7dGhpcy5uYXRpdmVFdmVudD1mO3RoaXMudGFyZ2V0PWc7dGhpcy5jdXJyZW50VGFyZ2V0PW51bGw7Zm9yKHZhciBjIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShjKSYmKGI9YVtjXSx0aGlzW2NdPWI/YihmKTpmW2NdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Zi5kZWZhdWx0UHJldmVudGVkP2YuZGVmYXVsdFByZXZlbnRlZDohMT09PWYucmV0dXJuVmFsdWUpP3BkOnFkO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cWQ7cmV0dXJuIHRoaXN9QShiLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmXG4oYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9cGQpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cGQpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7fSxpc1BlcnNpc3RlbnQ6cGR9KTtyZXR1cm4gYn1cbnZhciBzZD17ZXZlbnRQaGFzZTowLGJ1YmJsZXM6MCxjYW5jZWxhYmxlOjAsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDowLGlzVHJ1c3RlZDowfSx0ZD1yZChzZCksdWQ9QSh7fSxzZCx7dmlldzowLGRldGFpbDowfSksdmQ9cmQodWQpLHdkLHhkLHlkLEFkPUEoe30sdWQse3NjcmVlblg6MCxzY3JlZW5ZOjAsY2xpZW50WDowLGNsaWVudFk6MCxwYWdlWDowLHBhZ2VZOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLGdldE1vZGlmaWVyU3RhdGU6emQsYnV0dG9uOjAsYnV0dG9uczowLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIHZvaWQgMD09PWEucmVsYXRlZFRhcmdldD9hLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQ6YS5yZWxhdGVkVGFyZ2V0fSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluXG5hKXJldHVybiBhLm1vdmVtZW50WDthIT09eWQmJih5ZCYmXCJtb3VzZW1vdmVcIj09PWEudHlwZT8od2Q9YS5zY3JlZW5YLXlkLnNjcmVlblgseGQ9YS5zY3JlZW5ZLXlkLnNjcmVlblkpOnhkPXdkPTAseWQ9YSk7cmV0dXJuIHdkfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJtb3ZlbWVudFlcImluIGE/YS5tb3ZlbWVudFk6eGR9fSksQmQ9cmQoQWQpLENkPUEoe30sQWQse2RhdGFUcmFuc2ZlcjowfSksRGQ9cmQoQ2QpLEVkPUEoe30sdWQse3JlbGF0ZWRUYXJnZXQ6MH0pLEZkPXJkKEVkKSxHZD1BKHt9LHNkLHthbmltYXRpb25OYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxIZD1yZChHZCksSWQ9QSh7fSxzZCx7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLEpkPXJkKElkKSxLZD1BKHt9LHNkLHtkYXRhOjB9KSxMZD1yZChLZCksTWQ9e0VzYzpcIkVzY2FwZVwiLFxuU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sTmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsXG4xMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LE9kPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9kW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gemQoKXtyZXR1cm4gUGR9XG52YXIgUWQ9QSh7fSx1ZCx7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1NZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/TmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxjb2RlOjAsbG9jYXRpb246MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAscmVwZWF0OjAsbG9jYWxlOjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2QoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLFJkPXJkKFFkKSxTZD1BKHt9LEFkLHtwb2ludGVySWQ6MCx3aWR0aDowLGhlaWdodDowLHByZXNzdXJlOjAsdGFuZ2VudGlhbFByZXNzdXJlOjAsdGlsdFg6MCx0aWx0WTowLHR3aXN0OjAscG9pbnRlclR5cGU6MCxpc1ByaW1hcnk6MH0pLFRkPXJkKFNkKSxVZD1BKHt9LHVkLHt0b3VjaGVzOjAsdGFyZ2V0VG91Y2hlczowLGNoYW5nZWRUb3VjaGVzOjAsYWx0S2V5OjAsbWV0YUtleTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGdldE1vZGlmaWVyU3RhdGU6emR9KSxWZD1yZChVZCksV2Q9QSh7fSxzZCx7cHJvcGVydHlOYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxYZD1yZChXZCksWWQ9QSh7fSxBZCx7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluIGE/LWEud2hlZWxEZWx0YVg6MH0sXG5kZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6MCxkZWx0YU1vZGU6MH0pLFpkPXJkKFlkKSwkZD1bOSwxMywyNywzMl0sYWU9aWEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGJlPW51bGw7aWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGJlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7dmFyIGNlPWlhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhYmUsZGU9aWEmJighYWV8fGJlJiY4PGJlJiYxMT49YmUpLGVlPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLGZlPSExO1xuZnVuY3Rpb24gZ2UoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT0kZC5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiZm9jdXNvdXRcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBoZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBpZT0hMTtmdW5jdGlvbiBqZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gaGUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO2ZlPSEwO3JldHVybiBlZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1lZSYmZmU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24ga2UoYSxiKXtpZihpZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhYWUmJmdlKGEsYik/KGE9bmQoKSxtZD1sZD1rZD1udWxsLGllPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBkZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgbGU9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gbWUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFsZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9ZnVuY3Rpb24gbmUoYSxiLGMsZCl7RWIoZCk7Yj1vZShiLFwib25DaGFuZ2VcIik7MDxiLmxlbmd0aCYmKGM9bmV3IHRkKFwib25DaGFuZ2VcIixcImNoYW5nZVwiLG51bGwsYyxkKSxhLnB1c2goe2V2ZW50OmMsbGlzdGVuZXJzOmJ9KSl9dmFyIHBlPW51bGwscWU9bnVsbDtmdW5jdGlvbiByZShhKXtzZShhLDApfWZ1bmN0aW9uIHRlKGEpe3ZhciBiPXVlKGEpO2lmKFdhKGIpKXJldHVybiBhfVxuZnVuY3Rpb24gdmUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgd2U9ITE7aWYoaWEpe3ZhciB4ZTtpZihpYSl7dmFyIHllPVwib25pbnB1dFwiaW4gZG9jdW1lbnQ7aWYoIXllKXt2YXIgemU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTt6ZS5zZXRBdHRyaWJ1dGUoXCJvbmlucHV0XCIsXCJyZXR1cm47XCIpO3llPVwiZnVuY3Rpb25cIj09PXR5cGVvZiB6ZS5vbmlucHV0fXhlPXllfWVsc2UgeGU9ITE7d2U9eGUmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSl9ZnVuY3Rpb24gQWUoKXtwZSYmKHBlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSxxZT1wZT1udWxsKX1mdW5jdGlvbiBCZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmdGUocWUpKXt2YXIgYj1bXTtuZShiLHFlLGEseGIoYSkpO0piKHJlLGIpfX1cbmZ1bmN0aW9uIENlKGEsYixjKXtcImZvY3VzaW5cIj09PWE/KEFlKCkscGU9YixxZT1jLHBlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSk6XCJmb2N1c291dFwiPT09YSYmQWUoKX1mdW5jdGlvbiBEZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiB0ZShxZSl9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBGZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBHZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIEhlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOkdlO1xuZnVuY3Rpb24gSWUoYSxiKXtpZihIZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPWNbZF07aWYoIWphLmNhbGwoYixlKXx8IUhlKGFbZV0sYltlXSkpcmV0dXJuITF9cmV0dXJuITB9ZnVuY3Rpb24gSmUoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gS2UoYSxiKXt2YXIgYz1KZShhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1KZShjKX19ZnVuY3Rpb24gTGUoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9MZShhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBNZSgpe2Zvcih2YXIgYT13aW5kb3csYj1YYSgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1YYShhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBOZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxuZnVuY3Rpb24gT2UoYSl7dmFyIGI9TWUoKSxjPWEuZm9jdXNlZEVsZW0sZD1hLnNlbGVjdGlvblJhbmdlO2lmKGIhPT1jJiZjJiZjLm93bmVyRG9jdW1lbnQmJkxlKGMub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsYykpe2lmKG51bGwhPT1kJiZOZShjKSlpZihiPWQuc3RhcnQsYT1kLmVuZCx2b2lkIDA9PT1hJiYoYT1iKSxcInNlbGVjdGlvblN0YXJ0XCJpbiBjKWMuc2VsZWN0aW9uU3RhcnQ9YixjLnNlbGVjdGlvbkVuZD1NYXRoLm1pbihhLGMudmFsdWUubGVuZ3RoKTtlbHNlIGlmKGE9KGI9Yy5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJmIuZGVmYXVsdFZpZXd8fHdpbmRvdyxhLmdldFNlbGVjdGlvbil7YT1hLmdldFNlbGVjdGlvbigpO3ZhciBlPWMudGV4dENvbnRlbnQubGVuZ3RoLGY9TWF0aC5taW4oZC5zdGFydCxlKTtkPXZvaWQgMD09PWQuZW5kP2Y6TWF0aC5taW4oZC5lbmQsZSk7IWEuZXh0ZW5kJiZmPmQmJihlPWQsZD1mLGY9ZSk7ZT1LZShjLGYpO3ZhciBnPUtlKGMsXG5kKTtlJiZnJiYoMSE9PWEucmFuZ2VDb3VudHx8YS5hbmNob3JOb2RlIT09ZS5ub2RlfHxhLmFuY2hvck9mZnNldCE9PWUub2Zmc2V0fHxhLmZvY3VzTm9kZSE9PWcubm9kZXx8YS5mb2N1c09mZnNldCE9PWcub2Zmc2V0KSYmKGI9Yi5jcmVhdGVSYW5nZSgpLGIuc2V0U3RhcnQoZS5ub2RlLGUub2Zmc2V0KSxhLnJlbW92ZUFsbFJhbmdlcygpLGY+ZD8oYS5hZGRSYW5nZShiKSxhLmV4dGVuZChnLm5vZGUsZy5vZmZzZXQpKTooYi5zZXRFbmQoZy5ub2RlLGcub2Zmc2V0KSxhLmFkZFJhbmdlKGIpKSl9Yj1bXTtmb3IoYT1jO2E9YS5wYXJlbnROb2RlOykxPT09YS5ub2RlVHlwZSYmYi5wdXNoKHtlbGVtZW50OmEsbGVmdDphLnNjcm9sbExlZnQsdG9wOmEuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZm9jdXMmJmMuZm9jdXMoKTtmb3IoYz0wO2M8Yi5sZW5ndGg7YysrKWE9YltjXSxhLmVsZW1lbnQuc2Nyb2xsTGVmdD1hLmxlZnQsYS5lbGVtZW50LnNjcm9sbFRvcD1hLnRvcH19XG52YXIgUGU9aWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxRZT1udWxsLFJlPW51bGwsU2U9bnVsbCxUZT0hMTtcbmZ1bmN0aW9uIFVlKGEsYixjKXt2YXIgZD1jLndpbmRvdz09PWM/Yy5kb2N1bWVudDo5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDtUZXx8bnVsbD09UWV8fFFlIT09WGEoZCl8fChkPVFlLFwic2VsZWN0aW9uU3RhcnRcImluIGQmJk5lKGQpP2Q9e3N0YXJ0OmQuc2VsZWN0aW9uU3RhcnQsZW5kOmQuc2VsZWN0aW9uRW5kfTooZD0oZC5vd25lckRvY3VtZW50JiZkLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksZD17YW5jaG9yTm9kZTpkLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmQuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpkLmZvY3VzTm9kZSxmb2N1c09mZnNldDpkLmZvY3VzT2Zmc2V0fSksU2UmJkllKFNlLGQpfHwoU2U9ZCxkPW9lKFJlLFwib25TZWxlY3RcIiksMDxkLmxlbmd0aCYmKGI9bmV3IHRkKFwib25TZWxlY3RcIixcInNlbGVjdFwiLG51bGwsYixjKSxhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmR9KSxiLnRhcmdldD1RZSkpKX1cbmZ1bmN0aW9uIFZlKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFdlPXthbmltYXRpb25lbmQ6VmUoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246VmUoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpWZShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpWZShcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFhlPXt9LFllPXt9O1xuaWEmJihZZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBXZS5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBXZS5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBXZS5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBXZS50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFplKGEpe2lmKFhlW2FdKXJldHVybiBYZVthXTtpZighV2VbYV0pcmV0dXJuIGE7dmFyIGI9V2VbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gWWUpcmV0dXJuIFhlW2FdPWJbY107cmV0dXJuIGF9dmFyICRlPVplKFwiYW5pbWF0aW9uZW5kXCIpLGFmPVplKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLGJmPVplKFwiYW5pbWF0aW9uc3RhcnRcIiksY2Y9WmUoXCJ0cmFuc2l0aW9uZW5kXCIpLGRmPW5ldyBNYXAsZWY9XCJhYm9ydCBhdXhDbGljayBjYW5jZWwgY2FuUGxheSBjYW5QbGF5VGhyb3VnaCBjbGljayBjbG9zZSBjb250ZXh0TWVudSBjb3B5IGN1dCBkcmFnIGRyYWdFbmQgZHJhZ0VudGVyIGRyYWdFeGl0IGRyYWdMZWF2ZSBkcmFnT3ZlciBkcmFnU3RhcnQgZHJvcCBkdXJhdGlvbkNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBnb3RQb2ludGVyQ2FwdHVyZSBpbnB1dCBpbnZhbGlkIGtleURvd24ga2V5UHJlc3Mga2V5VXAgbG9hZCBsb2FkZWREYXRhIGxvYWRlZE1ldGFkYXRhIGxvYWRTdGFydCBsb3N0UG9pbnRlckNhcHR1cmUgbW91c2VEb3duIG1vdXNlTW92ZSBtb3VzZU91dCBtb3VzZU92ZXIgbW91c2VVcCBwYXN0ZSBwYXVzZSBwbGF5IHBsYXlpbmcgcG9pbnRlckNhbmNlbCBwb2ludGVyRG93biBwb2ludGVyTW92ZSBwb2ludGVyT3V0IHBvaW50ZXJPdmVyIHBvaW50ZXJVcCBwcm9ncmVzcyByYXRlQ2hhbmdlIHJlc2V0IHJlc2l6ZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1Ym1pdCBzdXNwZW5kIHRpbWVVcGRhdGUgdG91Y2hDYW5jZWwgdG91Y2hFbmQgdG91Y2hTdGFydCB2b2x1bWVDaGFuZ2Ugc2Nyb2xsIHRvZ2dsZSB0b3VjaE1vdmUgd2FpdGluZyB3aGVlbFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIGZmKGEsYil7ZGYuc2V0KGEsYik7ZmEoYixbYV0pfWZvcih2YXIgZ2Y9MDtnZjxlZi5sZW5ndGg7Z2YrKyl7dmFyIGhmPWVmW2dmXSxqZj1oZi50b0xvd2VyQ2FzZSgpLGtmPWhmWzBdLnRvVXBwZXJDYXNlKCkraGYuc2xpY2UoMSk7ZmYoamYsXCJvblwiK2tmKX1mZigkZSxcIm9uQW5pbWF0aW9uRW5kXCIpO2ZmKGFmLFwib25BbmltYXRpb25JdGVyYXRpb25cIik7ZmYoYmYsXCJvbkFuaW1hdGlvblN0YXJ0XCIpO2ZmKFwiZGJsY2xpY2tcIixcIm9uRG91YmxlQ2xpY2tcIik7ZmYoXCJmb2N1c2luXCIsXCJvbkZvY3VzXCIpO2ZmKFwiZm9jdXNvdXRcIixcIm9uQmx1clwiKTtmZihjZixcIm9uVHJhbnNpdGlvbkVuZFwiKTtoYShcIm9uTW91c2VFbnRlclwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO2hhKFwib25Nb3VzZUxlYXZlXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7aGEoXCJvblBvaW50ZXJFbnRlclwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtcbmhhKFwib25Qb2ludGVyTGVhdmVcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZmEoXCJvbkNoYW5nZVwiLFwiY2hhbmdlIGNsaWNrIGZvY3VzaW4gZm9jdXNvdXQgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2ZhKFwib25TZWxlY3RcIixcImZvY3Vzb3V0IGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXNpbiBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZmEoXCJvbkJlZm9yZUlucHV0XCIsW1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdKTtmYShcIm9uQ29tcG9zaXRpb25FbmRcIixcImNvbXBvc2l0aW9uZW5kIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtmYShcIm9uQ29tcG9zaXRpb25TdGFydFwiLFwiY29tcG9zaXRpb25zdGFydCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7XG5mYShcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixcImNvbXBvc2l0aW9udXBkYXRlIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTt2YXIgbGY9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHJlc2l6ZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxtZj1uZXcgU2V0KFwiY2FuY2VsIGNsb3NlIGludmFsaWQgbG9hZCBzY3JvbGwgdG9nZ2xlXCIuc3BsaXQoXCIgXCIpLmNvbmNhdChsZikpO1xuZnVuY3Rpb24gbmYoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PWM7VWIoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1cbmZ1bmN0aW9uIHNlKGEsYil7Yj0wIT09KGImNCk7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspe3ZhciBkPWFbY10sZT1kLmV2ZW50O2Q9ZC5saXN0ZW5lcnM7YTp7dmFyIGY9dm9pZCAwO2lmKGIpZm9yKHZhciBnPWQubGVuZ3RoLTE7MDw9ZztnLS0pe3ZhciBoPWRbZ10saz1oLmluc3RhbmNlLGw9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7bmYoZSxoLGwpO2Y9a31lbHNlIGZvcihnPTA7ZzxkLmxlbmd0aDtnKyspe2g9ZFtnXTtrPWguaW5zdGFuY2U7bD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtuZihlLGgsbCk7Zj1rfX19aWYoUWIpdGhyb3cgYT1SYixRYj0hMSxSYj1udWxsLGE7fVxuZnVuY3Rpb24gRChhLGIpe3ZhciBjPWJbb2ZdO3ZvaWQgMD09PWMmJihjPWJbb2ZdPW5ldyBTZXQpO3ZhciBkPWErXCJfX2J1YmJsZVwiO2MuaGFzKGQpfHwocGYoYixhLDIsITEpLGMuYWRkKGQpKX1mdW5jdGlvbiBxZihhLGIsYyl7dmFyIGQ9MDtiJiYoZHw9NCk7cGYoYyxhLGQsYil9dmFyIHJmPVwiX3JlYWN0TGlzdGVuaW5nXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7ZnVuY3Rpb24gc2YoYSl7aWYoIWFbcmZdKXthW3JmXT0hMDtkYS5mb3JFYWNoKGZ1bmN0aW9uKGIpe1wic2VsZWN0aW9uY2hhbmdlXCIhPT1iJiYobWYuaGFzKGIpfHxxZihiLCExLGEpLHFmKGIsITAsYSkpfSk7dmFyIGI9OT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7bnVsbD09PWJ8fGJbcmZdfHwoYltyZl09ITAscWYoXCJzZWxlY3Rpb25jaGFuZ2VcIiwhMSxiKSl9fVxuZnVuY3Rpb24gcGYoYSxiLGMsZCl7c3dpdGNoKGpkKGIpKXtjYXNlIDE6dmFyIGU9ZWQ7YnJlYWs7Y2FzZSA0OmU9Z2Q7YnJlYWs7ZGVmYXVsdDplPWZkfWM9ZS5iaW5kKG51bGwsYixjLGEpO2U9dm9pZCAwOyFMYnx8XCJ0b3VjaHN0YXJ0XCIhPT1iJiZcInRvdWNobW92ZVwiIT09YiYmXCJ3aGVlbFwiIT09Ynx8KGU9ITApO2Q/dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtjYXB0dXJlOiEwLHBhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITApOnZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7cGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMSl9XG5mdW5jdGlvbiBoZChhLGIsYyxkLGUpe3ZhciBmPWQ7aWYoMD09PShiJjEpJiYwPT09KGImMikmJm51bGwhPT1kKWE6Zm9yKDs7KXtpZihudWxsPT09ZClyZXR1cm47dmFyIGc9ZC50YWc7aWYoMz09PWd8fDQ9PT1nKXt2YXIgaD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKGg9PT1lfHw4PT09aC5ub2RlVHlwZSYmaC5wYXJlbnROb2RlPT09ZSlicmVhaztpZig0PT09Zylmb3IoZz1kLnJldHVybjtudWxsIT09Zzspe3ZhciBrPWcudGFnO2lmKDM9PT1rfHw0PT09aylpZihrPWcuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8saz09PWV8fDg9PT1rLm5vZGVUeXBlJiZrLnBhcmVudE5vZGU9PT1lKXJldHVybjtnPWcucmV0dXJufWZvcig7bnVsbCE9PWg7KXtnPVdjKGgpO2lmKG51bGw9PT1nKXJldHVybjtrPWcudGFnO2lmKDU9PT1rfHw2PT09ayl7ZD1mPWc7Y29udGludWUgYX1oPWgucGFyZW50Tm9kZX19ZD1kLnJldHVybn1KYihmdW5jdGlvbigpe3ZhciBkPWYsZT14YihjKSxnPVtdO1xuYTp7dmFyIGg9ZGYuZ2V0KGEpO2lmKHZvaWQgMCE9PWgpe3ZhciBrPXRkLG49YTtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9kKGMpKWJyZWFrIGE7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjprPVJkO2JyZWFrO2Nhc2UgXCJmb2N1c2luXCI6bj1cImZvY3VzXCI7az1GZDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjpuPVwiYmx1clwiO2s9RmQ7YnJlYWs7Y2FzZSBcImJlZm9yZWJsdXJcIjpjYXNlIFwiYWZ0ZXJibHVyXCI6az1GZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pYnJlYWsgYTtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOms9QmQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6az1cbkRkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOms9VmQ7YnJlYWs7Y2FzZSAkZTpjYXNlIGFmOmNhc2UgYmY6az1IZDticmVhaztjYXNlIGNmOms9WGQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOms9dmQ7YnJlYWs7Y2FzZSBcIndoZWVsXCI6az1aZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjprPUpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOms9VGR9dmFyIHQ9MCE9PShiJjQpLEo9IXQmJlwic2Nyb2xsXCI9PT1hLHg9dD9udWxsIT09aD9oK1wiQ2FwdHVyZVwiOm51bGw6aDt0PVtdO2Zvcih2YXIgdz1kLHU7bnVsbCE9PVxudzspe3U9dzt2YXIgRj11LnN0YXRlTm9kZTs1PT09dS50YWcmJm51bGwhPT1GJiYodT1GLG51bGwhPT14JiYoRj1LYih3LHgpLG51bGwhPUYmJnQucHVzaCh0Zih3LEYsdSkpKSk7aWYoSilicmVhazt3PXcucmV0dXJufTA8dC5sZW5ndGgmJihoPW5ldyBrKGgsbixudWxsLGMsZSksZy5wdXNoKHtldmVudDpoLGxpc3RlbmVyczp0fSkpfX1pZigwPT09KGImNykpe2E6e2g9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWE7az1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoaCYmYyE9PXdiJiYobj1jLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpJiYoV2Mobil8fG5bdWZdKSlicmVhayBhO2lmKGt8fGgpe2g9ZS53aW5kb3c9PT1lP2U6KGg9ZS5vd25lckRvY3VtZW50KT9oLmRlZmF1bHRWaWV3fHxoLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoayl7aWYobj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50LGs9ZCxuPW4/V2Mobik6bnVsbCxudWxsIT09XG5uJiYoSj1WYihuKSxuIT09Snx8NSE9PW4udGFnJiY2IT09bi50YWcpKW49bnVsbH1lbHNlIGs9bnVsbCxuPWQ7aWYoayE9PW4pe3Q9QmQ7Rj1cIm9uTW91c2VMZWF2ZVwiO3g9XCJvbk1vdXNlRW50ZXJcIjt3PVwibW91c2VcIjtpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpdD1UZCxGPVwib25Qb2ludGVyTGVhdmVcIix4PVwib25Qb2ludGVyRW50ZXJcIix3PVwicG9pbnRlclwiO0o9bnVsbD09az9oOnVlKGspO3U9bnVsbD09bj9oOnVlKG4pO2g9bmV3IHQoRix3K1wibGVhdmVcIixrLGMsZSk7aC50YXJnZXQ9SjtoLnJlbGF0ZWRUYXJnZXQ9dTtGPW51bGw7V2MoZSk9PT1kJiYodD1uZXcgdCh4LHcrXCJlbnRlclwiLG4sYyxlKSx0LnRhcmdldD11LHQucmVsYXRlZFRhcmdldD1KLEY9dCk7Sj1GO2lmKGsmJm4pYjp7dD1rO3g9bjt3PTA7Zm9yKHU9dDt1O3U9dmYodSkpdysrO3U9MDtmb3IoRj14O0Y7Rj12ZihGKSl1Kys7Zm9yKDswPHctdTspdD12Zih0KSx3LS07Zm9yKDswPHUtdzspeD1cbnZmKHgpLHUtLTtmb3IoO3ctLTspe2lmKHQ9PT14fHxudWxsIT09eCYmdD09PXguYWx0ZXJuYXRlKWJyZWFrIGI7dD12Zih0KTt4PXZmKHgpfXQ9bnVsbH1lbHNlIHQ9bnVsbDtudWxsIT09ayYmd2YoZyxoLGssdCwhMSk7bnVsbCE9PW4mJm51bGwhPT1KJiZ3ZihnLEosbix0LCEwKX19fWE6e2g9ZD91ZShkKTp3aW5kb3c7az1oLm5vZGVOYW1lJiZoLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWt8fFwiaW5wdXRcIj09PWsmJlwiZmlsZVwiPT09aC50eXBlKXZhciBuYT12ZTtlbHNlIGlmKG1lKGgpKWlmKHdlKW5hPUZlO2Vsc2V7bmE9RGU7dmFyIHhhPUNlfWVsc2Uoaz1oLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09ay50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09aC50eXBlfHxcInJhZGlvXCI9PT1oLnR5cGUpJiYobmE9RWUpO2lmKG5hJiYobmE9bmEoYSxkKSkpe25lKGcsbmEsYyxlKTticmVhayBhfXhhJiZ4YShhLGgsZCk7XCJmb2N1c291dFwiPT09YSYmKHhhPWguX3dyYXBwZXJTdGF0ZSkmJlxueGEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWgudHlwZSYmY2IoaCxcIm51bWJlclwiLGgudmFsdWUpfXhhPWQ/dWUoZCk6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmlmKG1lKHhhKXx8XCJ0cnVlXCI9PT14YS5jb250ZW50RWRpdGFibGUpUWU9eGEsUmU9ZCxTZT1udWxsO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOlNlPVJlPVFlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOlRlPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpUZT0hMTtVZShnLGMsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFBlKWJyZWFrO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6VWUoZyxjLGUpfXZhciAkYTtpZihhZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgYmE9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIjticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmJhPVwib25Db21wb3NpdGlvbkVuZFwiO1xuYnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpiYT1cIm9uQ29tcG9zaXRpb25VcGRhdGVcIjticmVhayBifWJhPXZvaWQgMH1lbHNlIGllP2dlKGEsYykmJihiYT1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihiYT1cIm9uQ29tcG9zaXRpb25TdGFydFwiKTtiYSYmKGRlJiZcImtvXCIhPT1jLmxvY2FsZSYmKGllfHxcIm9uQ29tcG9zaXRpb25TdGFydFwiIT09YmE/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1iYSYmaWUmJigkYT1uZCgpKTooa2Q9ZSxsZD1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxpZT0hMCkpLHhhPW9lKGQsYmEpLDA8eGEubGVuZ3RoJiYoYmE9bmV3IExkKGJhLGEsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6YmEsbGlzdGVuZXJzOnhhfSksJGE/YmEuZGF0YT0kYTooJGE9aGUoYyksbnVsbCE9PSRhJiYoYmEuZGF0YT0kYSkpKSk7aWYoJGE9Y2U/amUoYSxjKTprZShhLGMpKWQ9b2UoZCxcIm9uQmVmb3JlSW5wdXRcIiksXG4wPGQubGVuZ3RoJiYoZT1uZXcgTGQoXCJvbkJlZm9yZUlucHV0XCIsXCJiZWZvcmVpbnB1dFwiLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmUsbGlzdGVuZXJzOmR9KSxlLmRhdGE9JGEpfXNlKGcsYil9KX1mdW5jdGlvbiB0ZihhLGIsYyl7cmV0dXJue2luc3RhbmNlOmEsbGlzdGVuZXI6YixjdXJyZW50VGFyZ2V0OmN9fWZ1bmN0aW9uIG9lKGEsYil7Zm9yKHZhciBjPWIrXCJDYXB0dXJlXCIsZD1bXTtudWxsIT09YTspe3ZhciBlPWEsZj1lLnN0YXRlTm9kZTs1PT09ZS50YWcmJm51bGwhPT1mJiYoZT1mLGY9S2IoYSxjKSxudWxsIT1mJiZkLnVuc2hpZnQodGYoYSxmLGUpKSxmPUtiKGEsYiksbnVsbCE9ZiYmZC5wdXNoKHRmKGEsZixlKSkpO2E9YS5yZXR1cm59cmV0dXJuIGR9ZnVuY3Rpb24gdmYoYSl7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIHdmKGEsYixjLGQsZSl7Zm9yKHZhciBmPWIuX3JlYWN0TmFtZSxnPVtdO251bGwhPT1jJiZjIT09ZDspe3ZhciBoPWMsaz1oLmFsdGVybmF0ZSxsPWguc3RhdGVOb2RlO2lmKG51bGwhPT1rJiZrPT09ZClicmVhazs1PT09aC50YWcmJm51bGwhPT1sJiYoaD1sLGU/KGs9S2IoYyxmKSxudWxsIT1rJiZnLnVuc2hpZnQodGYoYyxrLGgpKSk6ZXx8KGs9S2IoYyxmKSxudWxsIT1rJiZnLnB1c2godGYoYyxrLGgpKSkpO2M9Yy5yZXR1cm59MCE9PWcubGVuZ3RoJiZhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmd9KX12YXIgeGY9L1xcclxcbj8vZyx5Zj0vXFx1MDAwMHxcXHVGRkZEL2c7ZnVuY3Rpb24gemYoYSl7cmV0dXJuKFwic3RyaW5nXCI9PT10eXBlb2YgYT9hOlwiXCIrYSkucmVwbGFjZSh4ZixcIlxcblwiKS5yZXBsYWNlKHlmLFwiXCIpfWZ1bmN0aW9uIEFmKGEsYixjKXtiPXpmKGIpO2lmKHpmKGEpIT09YiYmYyl0aHJvdyBFcnJvcihwKDQyNSkpO31mdW5jdGlvbiBCZigpe31cbnZhciBDZj1udWxsLERmPW51bGw7ZnVuY3Rpb24gRWYoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9XG52YXIgRmY9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsR2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEhmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBQcm9taXNlP1Byb21pc2U6dm9pZCAwLEpmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBxdWV1ZU1pY3JvdGFzaz9xdWV1ZU1pY3JvdGFzazpcInVuZGVmaW5lZFwiIT09dHlwZW9mIEhmP2Z1bmN0aW9uKGEpe3JldHVybiBIZi5yZXNvbHZlKG51bGwpLnRoZW4oYSkuY2F0Y2goSWYpfTpGZjtmdW5jdGlvbiBJZihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYTt9KX1cbmZ1bmN0aW9uIEtmKGEsYil7dmFyIGM9YixkPTA7ZG97dmFyIGU9Yy5uZXh0U2libGluZzthLnJlbW92ZUNoaWxkKGMpO2lmKGUmJjg9PT1lLm5vZGVUeXBlKWlmKGM9ZS5kYXRhLFwiLyRcIj09PWMpe2lmKDA9PT1kKXthLnJlbW92ZUNoaWxkKGUpO2JkKGIpO3JldHVybn1kLS19ZWxzZVwiJFwiIT09YyYmXCIkP1wiIT09YyYmXCIkIVwiIT09Y3x8ZCsrO2M9ZX13aGlsZShjKTtiZChiKX1mdW5jdGlvbiBMZihhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVhaztpZig4PT09Yil7Yj1hLmRhdGE7aWYoXCIkXCI9PT1ifHxcIiQhXCI9PT1ifHxcIiQ/XCI9PT1iKWJyZWFrO2lmKFwiLyRcIj09PWIpcmV0dXJuIG51bGx9fXJldHVybiBhfVxuZnVuY3Rpb24gTWYoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIiRcIj09PWN8fFwiJCFcIj09PWN8fFwiJD9cIj09PWMpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlXCIvJFwiPT09YyYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIE5mPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLE9mPVwiX19yZWFjdEZpYmVyJFwiK05mLFBmPVwiX19yZWFjdFByb3BzJFwiK05mLHVmPVwiX19yZWFjdENvbnRhaW5lciRcIitOZixvZj1cIl9fcmVhY3RFdmVudHMkXCIrTmYsUWY9XCJfX3JlYWN0TGlzdGVuZXJzJFwiK05mLFJmPVwiX19yZWFjdEhhbmRsZXMkXCIrTmY7XG5mdW5jdGlvbiBXYyhhKXt2YXIgYj1hW09mXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1t1Zl18fGNbT2ZdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9TWYoYSk7bnVsbCE9PWE7KXtpZihjPWFbT2ZdKXJldHVybiBjO2E9TWYoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIENiKGEpe2E9YVtPZl18fGFbdWZdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiB1ZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IocCgzMykpO31mdW5jdGlvbiBEYihhKXtyZXR1cm4gYVtQZl18fG51bGx9dmFyIFNmPVtdLFRmPS0xO2Z1bmN0aW9uIFVmKGEpe3JldHVybntjdXJyZW50OmF9fVxuZnVuY3Rpb24gRShhKXswPlRmfHwoYS5jdXJyZW50PVNmW1RmXSxTZltUZl09bnVsbCxUZi0tKX1mdW5jdGlvbiBHKGEsYil7VGYrKztTZltUZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBWZj17fSxIPVVmKFZmKSxXZj1VZighMSksWGY9VmY7ZnVuY3Rpb24gWWYoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBWZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1cbmZ1bmN0aW9uIFpmKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gJGYoKXtFKFdmKTtFKEgpfWZ1bmN0aW9uIGFnKGEsYixjKXtpZihILmN1cnJlbnQhPT1WZil0aHJvdyBFcnJvcihwKDE2OCkpO0coSCxiKTtHKFdmLGMpfWZ1bmN0aW9uIGJnKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtiPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYikpdGhyb3cgRXJyb3IocCgxMDgsUmEoYSl8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gQSh7fSxjLGQpfVxuZnVuY3Rpb24gY2coYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fFZmO1hmPUguY3VycmVudDtHKEgsYSk7RyhXZixXZi5jdXJyZW50KTtyZXR1cm4hMH1mdW5jdGlvbiBkZyhhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IocCgxNjkpKTtjPyhhPWJnKGEsYixYZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEUoV2YpLEUoSCksRyhILGEpKTpFKFdmKTtHKFdmLGMpfXZhciBlZz1udWxsLGZnPSExLGdnPSExO2Z1bmN0aW9uIGhnKGEpe251bGw9PT1lZz9lZz1bYV06ZWcucHVzaChhKX1mdW5jdGlvbiBpZyhhKXtmZz0hMDtoZyhhKX1cbmZ1bmN0aW9uIGpnKCl7aWYoIWdnJiZudWxsIT09ZWcpe2dnPSEwO3ZhciBhPTAsYj1DO3RyeXt2YXIgYz1lZztmb3IoQz0xO2E8Yy5sZW5ndGg7YSsrKXt2YXIgZD1jW2FdO2RvIGQ9ZCghMCk7d2hpbGUobnVsbCE9PWQpfWVnPW51bGw7Zmc9ITF9Y2F0Y2goZSl7dGhyb3cgbnVsbCE9PWVnJiYoZWc9ZWcuc2xpY2UoYSsxKSksYWMoZmMsamcpLGU7fWZpbmFsbHl7Qz1iLGdnPSExfX1yZXR1cm4gbnVsbH12YXIga2c9W10sbGc9MCxtZz1udWxsLG5nPTAsb2c9W10scGc9MCxxZz1udWxsLHJnPTEsc2c9XCJcIjtmdW5jdGlvbiB0ZyhhLGIpe2tnW2xnKytdPW5nO2tnW2xnKytdPW1nO21nPWE7bmc9Yn1cbmZ1bmN0aW9uIHVnKGEsYixjKXtvZ1twZysrXT1yZztvZ1twZysrXT1zZztvZ1twZysrXT1xZztxZz1hO3ZhciBkPXJnO2E9c2c7dmFyIGU9MzItb2MoZCktMTtkJj1+KDE8PGUpO2MrPTE7dmFyIGY9MzItb2MoYikrZTtpZigzMDxmKXt2YXIgZz1lLWUlNTtmPShkJigxPDxnKS0xKS50b1N0cmluZygzMik7ZD4+PWc7ZS09ZztyZz0xPDwzMi1vYyhiKStlfGM8PGV8ZDtzZz1mK2F9ZWxzZSByZz0xPDxmfGM8PGV8ZCxzZz1hfWZ1bmN0aW9uIHZnKGEpe251bGwhPT1hLnJldHVybiYmKHRnKGEsMSksdWcoYSwxLDApKX1mdW5jdGlvbiB3ZyhhKXtmb3IoO2E9PT1tZzspbWc9a2dbLS1sZ10sa2dbbGddPW51bGwsbmc9a2dbLS1sZ10sa2dbbGddPW51bGw7Zm9yKDthPT09cWc7KXFnPW9nWy0tcGddLG9nW3BnXT1udWxsLHNnPW9nWy0tcGddLG9nW3BnXT1udWxsLHJnPW9nWy0tcGddLG9nW3BnXT1udWxsfXZhciB4Zz1udWxsLHlnPW51bGwsST0hMSx6Zz1udWxsO1xuZnVuY3Rpb24gQWcoYSxiKXt2YXIgYz1CZyg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtiPWEuZGVsZXRpb25zO251bGw9PT1iPyhhLmRlbGV0aW9ucz1bY10sYS5mbGFnc3w9MTYpOmIucHVzaChjKX1cbmZ1bmN0aW9uIENnKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLHhnPWEseWc9TGYoYi5maXJzdENoaWxkKSwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLHhnPWEseWc9bnVsbCwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4gYj04IT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGM9bnVsbCE9PXFnP3tpZDpyZyxvdmVyZmxvdzpzZ306bnVsbCxhLm1lbW9pemVkU3RhdGU9e2RlaHlkcmF0ZWQ6Yix0cmVlQ29udGV4dDpjLHJldHJ5TGFuZToxMDczNzQxODI0fSxjPUJnKDE4LG51bGwsbnVsbCwwKSxjLnN0YXRlTm9kZT1iLGMucmV0dXJuPWEsYS5jaGlsZD1jLHhnPWEseWc9XG5udWxsLCEwKTohMTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBEZyhhKXtyZXR1cm4gMCE9PShhLm1vZGUmMSkmJjA9PT0oYS5mbGFncyYxMjgpfWZ1bmN0aW9uIEVnKGEpe2lmKEkpe3ZhciBiPXlnO2lmKGIpe3ZhciBjPWI7aWYoIUNnKGEsYikpe2lmKERnKGEpKXRocm93IEVycm9yKHAoNDE4KSk7Yj1MZihjLm5leHRTaWJsaW5nKTt2YXIgZD14ZztiJiZDZyhhLGIpP0FnKGQsYyk6KGEuZmxhZ3M9YS5mbGFncyYtNDA5N3wyLEk9ITEseGc9YSl9fWVsc2V7aWYoRGcoYSkpdGhyb3cgRXJyb3IocCg0MTgpKTthLmZsYWdzPWEuZmxhZ3MmLTQwOTd8MjtJPSExO3hnPWF9fX1mdW5jdGlvbiBGZyhhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47eGc9YX1cbmZ1bmN0aW9uIEdnKGEpe2lmKGEhPT14ZylyZXR1cm4hMTtpZighSSlyZXR1cm4gRmcoYSksST0hMCwhMTt2YXIgYjsoYj0zIT09YS50YWcpJiYhKGI9NSE9PWEudGFnKSYmKGI9YS50eXBlLGI9XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFFZihhLnR5cGUsYS5tZW1vaXplZFByb3BzKSk7aWYoYiYmKGI9eWcpKXtpZihEZyhhKSl0aHJvdyBIZygpLEVycm9yKHAoNDE4KSk7Zm9yKDtiOylBZyhhLGIpLGI9TGYoYi5uZXh0U2libGluZyl9RmcoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcihwKDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiLyRcIj09PWMpe2lmKDA9PT1iKXt5Zz1MZihhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlXCIkXCIhPT1jJiZcIiQhXCIhPT1jJiZcIiQ/XCIhPT1jfHxiKyt9YT1hLm5leHRTaWJsaW5nfXlnPVxubnVsbH19ZWxzZSB5Zz14Zz9MZihhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1mdW5jdGlvbiBIZygpe2Zvcih2YXIgYT15ZzthOylhPUxmKGEubmV4dFNpYmxpbmcpfWZ1bmN0aW9uIElnKCl7eWc9eGc9bnVsbDtJPSExfWZ1bmN0aW9uIEpnKGEpe251bGw9PT16Zz96Zz1bYV06emcucHVzaChhKX12YXIgS2c9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc7ZnVuY3Rpb24gTGcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1BKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSk7cmV0dXJuIGJ9cmV0dXJuIGJ9dmFyIE1nPVVmKG51bGwpLE5nPW51bGwsT2c9bnVsbCxQZz1udWxsO2Z1bmN0aW9uIFFnKCl7UGc9T2c9Tmc9bnVsbH1mdW5jdGlvbiBSZyhhKXt2YXIgYj1NZy5jdXJyZW50O0UoTWcpO2EuX2N1cnJlbnRWYWx1ZT1ifVxuZnVuY3Rpb24gU2coYSxiLGMpe2Zvcig7bnVsbCE9PWE7KXt2YXIgZD1hLmFsdGVybmF0ZTsoYS5jaGlsZExhbmVzJmIpIT09Yj8oYS5jaGlsZExhbmVzfD1iLG51bGwhPT1kJiYoZC5jaGlsZExhbmVzfD1iKSk6bnVsbCE9PWQmJihkLmNoaWxkTGFuZXMmYikhPT1iJiYoZC5jaGlsZExhbmVzfD1iKTtpZihhPT09YylicmVhazthPWEucmV0dXJufX1mdW5jdGlvbiBUZyhhLGIpe05nPWE7UGc9T2c9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJigwIT09KGEubGFuZXMmYikmJihVZz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiBWZyhhKXt2YXIgYj1hLl9jdXJyZW50VmFsdWU7aWYoUGchPT1hKWlmKGE9e2NvbnRleHQ6YSxtZW1vaXplZFZhbHVlOmIsbmV4dDpudWxsfSxudWxsPT09T2cpe2lmKG51bGw9PT1OZyl0aHJvdyBFcnJvcihwKDMwOCkpO09nPWE7TmcuZGVwZW5kZW5jaWVzPXtsYW5lczowLGZpcnN0Q29udGV4dDphfX1lbHNlIE9nPU9nLm5leHQ9YTtyZXR1cm4gYn12YXIgV2c9bnVsbDtmdW5jdGlvbiBYZyhhKXtudWxsPT09V2c/V2c9W2FdOldnLnB1c2goYSl9ZnVuY3Rpb24gWWcoYSxiLGMsZCl7dmFyIGU9Yi5pbnRlcmxlYXZlZDtudWxsPT09ZT8oYy5uZXh0PWMsWGcoYikpOihjLm5leHQ9ZS5uZXh0LGUubmV4dD1jKTtiLmludGVybGVhdmVkPWM7cmV0dXJuIFpnKGEsZCl9XG5mdW5jdGlvbiBaZyhhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtjPWE7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWE7KWEuY2hpbGRMYW5lc3w9YixjPWEuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKSxjPWEsYT1hLnJldHVybjtyZXR1cm4gMz09PWMudGFnP2Muc3RhdGVOb2RlOm51bGx9dmFyICRnPSExO2Z1bmN0aW9uIGFoKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsZmlyc3RCYXNlVXBkYXRlOm51bGwsbGFzdEJhc2VVcGRhdGU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbCxpbnRlcmxlYXZlZDpudWxsLGxhbmVzOjB9LGVmZmVjdHM6bnVsbH19XG5mdW5jdGlvbiBiaChhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6YS5maXJzdEJhc2VVcGRhdGUsbGFzdEJhc2VVcGRhdGU6YS5sYXN0QmFzZVVwZGF0ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiBjaChhLGIpe3JldHVybntldmVudFRpbWU6YSxsYW5lOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfX1cbmZ1bmN0aW9uIGRoKGEsYixjKXt2YXIgZD1hLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2Q9ZC5zaGFyZWQ7aWYoMCE9PShLJjIpKXt2YXIgZT1kLnBlbmRpbmc7bnVsbD09PWU/Yi5uZXh0PWI6KGIubmV4dD1lLm5leHQsZS5uZXh0PWIpO2QucGVuZGluZz1iO3JldHVybiBaZyhhLGMpfWU9ZC5pbnRlcmxlYXZlZDtudWxsPT09ZT8oYi5uZXh0PWIsWGcoZCkpOihiLm5leHQ9ZS5uZXh0LGUubmV4dD1iKTtkLmludGVybGVhdmVkPWI7cmV0dXJuIFpnKGEsYyl9ZnVuY3Rpb24gZWgoYSxiLGMpe2I9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YiYmKGI9Yi5zaGFyZWQsMCE9PShjJjQxOTQyNDApKSl7dmFyIGQ9Yi5sYW5lcztkJj1hLnBlbmRpbmdMYW5lcztjfD1kO2IubGFuZXM9YztDYyhhLGMpfX1cbmZ1bmN0aW9uIGZoKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZSxkPWEuYWx0ZXJuYXRlO2lmKG51bGwhPT1kJiYoZD1kLnVwZGF0ZVF1ZXVlLGM9PT1kKSl7dmFyIGU9bnVsbCxmPW51bGw7Yz1jLmZpcnN0QmFzZVVwZGF0ZTtpZihudWxsIT09Yyl7ZG97dmFyIGc9e2V2ZW50VGltZTpjLmV2ZW50VGltZSxsYW5lOmMubGFuZSx0YWc6Yy50YWcscGF5bG9hZDpjLnBheWxvYWQsY2FsbGJhY2s6Yy5jYWxsYmFjayxuZXh0Om51bGx9O251bGw9PT1mP2U9Zj1nOmY9Zi5uZXh0PWc7Yz1jLm5leHR9d2hpbGUobnVsbCE9PWMpO251bGw9PT1mP2U9Zj1iOmY9Zi5uZXh0PWJ9ZWxzZSBlPWY9YjtjPXtiYXNlU3RhdGU6ZC5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmUsbGFzdEJhc2VVcGRhdGU6ZixzaGFyZWQ6ZC5zaGFyZWQsZWZmZWN0czpkLmVmZmVjdHN9O2EudXBkYXRlUXVldWU9YztyZXR1cm59YT1jLmxhc3RCYXNlVXBkYXRlO251bGw9PT1hP2MuZmlyc3RCYXNlVXBkYXRlPWI6YS5uZXh0PVxuYjtjLmxhc3RCYXNlVXBkYXRlPWJ9XG5mdW5jdGlvbiBnaChhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlOyRnPSExO3ZhciBmPWUuZmlyc3RCYXNlVXBkYXRlLGc9ZS5sYXN0QmFzZVVwZGF0ZSxoPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWgpe2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDt2YXIgaz1oLGw9ay5uZXh0O2submV4dD1udWxsO251bGw9PT1nP2Y9bDpnLm5leHQ9bDtnPWs7dmFyIG09YS5hbHRlcm5hdGU7bnVsbCE9PW0mJihtPW0udXBkYXRlUXVldWUsaD1tLmxhc3RCYXNlVXBkYXRlLGghPT1nJiYobnVsbD09PWg/bS5maXJzdEJhc2VVcGRhdGU9bDpoLm5leHQ9bCxtLmxhc3RCYXNlVXBkYXRlPWspKX1pZihudWxsIT09Zil7dmFyIHE9ZS5iYXNlU3RhdGU7Zz0wO209bD1rPW51bGw7aD1mO2Rve3ZhciByPWgubGFuZSx5PWguZXZlbnRUaW1lO2lmKChkJnIpPT09cil7bnVsbCE9PW0mJihtPW0ubmV4dD17ZXZlbnRUaW1lOnksbGFuZTowLHRhZzpoLnRhZyxwYXlsb2FkOmgucGF5bG9hZCxjYWxsYmFjazpoLmNhbGxiYWNrLFxubmV4dDpudWxsfSk7YTp7dmFyIG49YSx0PWg7cj1iO3k9Yztzd2l0Y2godC50YWcpe2Nhc2UgMTpuPXQucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygbil7cT1uLmNhbGwoeSxxLHIpO2JyZWFrIGF9cT1uO2JyZWFrIGE7Y2FzZSAzOm4uZmxhZ3M9bi5mbGFncyYtNjU1Mzd8MTI4O2Nhc2UgMDpuPXQucGF5bG9hZDtyPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBuP24uY2FsbCh5LHEscik6bjtpZihudWxsPT09cnx8dm9pZCAwPT09cilicmVhayBhO3E9QSh7fSxxLHIpO2JyZWFrIGE7Y2FzZSAyOiRnPSEwfX1udWxsIT09aC5jYWxsYmFjayYmMCE9PWgubGFuZSYmKGEuZmxhZ3N8PTY0LHI9ZS5lZmZlY3RzLG51bGw9PT1yP2UuZWZmZWN0cz1baF06ci5wdXNoKGgpKX1lbHNlIHk9e2V2ZW50VGltZTp5LGxhbmU6cix0YWc6aC50YWcscGF5bG9hZDpoLnBheWxvYWQsY2FsbGJhY2s6aC5jYWxsYmFjayxuZXh0Om51bGx9LG51bGw9PT1tPyhsPW09eSxrPXEpOm09bS5uZXh0PXksZ3w9cjtcbmg9aC5uZXh0O2lmKG51bGw9PT1oKWlmKGg9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09aClicmVhaztlbHNlIHI9aCxoPXIubmV4dCxyLm5leHQ9bnVsbCxlLmxhc3RCYXNlVXBkYXRlPXIsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpO251bGw9PT1tJiYoaz1xKTtlLmJhc2VTdGF0ZT1rO2UuZmlyc3RCYXNlVXBkYXRlPWw7ZS5sYXN0QmFzZVVwZGF0ZT1tO2I9ZS5zaGFyZWQuaW50ZXJsZWF2ZWQ7aWYobnVsbCE9PWIpe2U9YjtkbyBnfD1lLmxhbmUsZT1lLm5leHQ7d2hpbGUoZSE9PWIpfWVsc2UgbnVsbD09PWYmJihlLnNoYXJlZC5sYW5lcz0wKTtoaHw9ZzthLmxhbmVzPWc7YS5tZW1vaXplZFN0YXRlPXF9fVxuZnVuY3Rpb24gaWgoYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlKXRocm93IEVycm9yKHAoMTkxLGUpKTtlLmNhbGwoZCl9fX12YXIgamg9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7ZnVuY3Rpb24ga2goYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOkEoe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5sYW5lcyYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIG5oPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbHMpP1ZiKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUwoKSxlPWxoKGEpLGY9Y2goZCxlKTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7Yj1kaChhLGYsZSk7bnVsbCE9PWImJihtaChiLGEsZSxkKSxlaChiLGEsZSkpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUwoKSxlPWxoKGEpLGY9Y2goZCxlKTtmLnRhZz0xO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtiPWRoKGEsZixlKTtudWxsIT09YiYmKG1oKGIsYSxlLGQpLGVoKGIsYSxlKSl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGM9TCgpLGQ9XG5saChhKSxlPWNoKGMsZCk7ZS50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7Yj1kaChhLGUsZCk7bnVsbCE9PWImJihtaChiLGEsZCxjKSxlaChiLGEsZCkpfX07ZnVuY3Rpb24gb2goYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hSWUoYyxkKXx8IUllKGUsZik6ITB9XG5mdW5jdGlvbiBwaChhLGIsYyl7dmFyIGQ9ITEsZT1WZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj1WZyhmKTooZT1aZihiKT9YZjpILmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9ZZihhLGUpOlZmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9bmg7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFscz1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBxaChhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmbmguZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiByaChhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPWpoO2FoKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9VmcoZik6KGY9WmYoYik/WGY6SC5jdXJyZW50LGUuY29udGV4dD1ZZihhLGYpKTtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoa2goYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8KGI9ZS5zdGF0ZSxcblwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmbmguZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksZ2goYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5mbGFnc3w9NDE5NDMwOCl9XG5mdW5jdGlvbiBzaChhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHAoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IocCgxNDcsYSkpO3ZhciBlPWQsZj1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZilyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1lLnJlZnM7Yj09PWpoJiYoYj1lLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2ZdOmJbZl09YX07Yi5fc3RyaW5nUmVmPWY7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHAoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHAoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiB0aChhLGIpe2E9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpO3Rocm93IEVycm9yKHAoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWE/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YSkpO31mdW5jdGlvbiB1aChhKXt2YXIgYj1hLl9pbml0O3JldHVybiBiKGEuX3BheWxvYWQpfVxuZnVuY3Rpb24gdmgoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIuZGVsZXRpb25zO251bGw9PT1kPyhiLmRlbGV0aW9ucz1bY10sYi5mbGFnc3w9MTYpOmQucHVzaChjKX19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2E9d2goYSxiKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBiLmZsYWdzfD0xMDQ4NTc2LGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5mbGFnc3w9MixjKTpkO2IuZmxhZ3N8PTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZcbm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZmxhZ3N8PTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj14aChjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe3ZhciBmPWMudHlwZTtpZihmPT09eWEpcmV0dXJuIG0oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxjLmtleSk7aWYobnVsbCE9PWImJihiLmVsZW1lbnRUeXBlPT09Znx8XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi4kJHR5cGVvZj09PUhhJiZ1aChmKT09PWIudHlwZSkpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPXNoKGEsYixjKSxkLnJldHVybj1hLGQ7ZD15aChjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1zaChhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fFxuYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPXpoKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1BaChjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYiYmXCJcIiE9PWJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj14aChcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSB2YTpyZXR1cm4gYz15aChiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxcbmMucmVmPXNoKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSB3YTpyZXR1cm4gYj16aChiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7Y2FzZSBIYTp2YXIgZD1iLl9pbml0O3JldHVybiBxKGEsZChiLl9wYXlsb2FkKSxjKX1pZihlYihiKXx8S2EoYikpcmV0dXJuIGI9QWgoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7dGgoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiByKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjJiZcIlwiIT09Y3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSB2YTpyZXR1cm4gYy5rZXk9PT1lP2soYSxiLGMsZCk6bnVsbDtjYXNlIHdhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsO2Nhc2UgSGE6cmV0dXJuIGU9Yy5faW5pdCxyKGEsXG5iLGUoYy5fcGF5bG9hZCksZCl9aWYoZWIoYyl8fEthKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTt0aChhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIHkoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGQmJlwiXCIhPT1kfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIHZhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxrKGIsYSxkLGUpO2Nhc2Ugd2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSk7Y2FzZSBIYTp2YXIgZj1kLl9pbml0O3JldHVybiB5KGEsYixjLGYoZC5fcGF5bG9hZCksZSl9aWYoZWIoZCl8fEthKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTt0aChiLGQpfXJldHVybiBudWxsfVxuZnVuY3Rpb24gbihlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCxtPW51bGwsdT1nLHc9Zz0wLHg9bnVsbDtudWxsIT09dSYmdzxoLmxlbmd0aDt3Kyspe3UuaW5kZXg+dz8oeD11LHU9bnVsbCk6eD11LnNpYmxpbmc7dmFyIG49cihlLHUsaFt3XSxrKTtpZihudWxsPT09bil7bnVsbD09PXUmJih1PXgpO2JyZWFrfWEmJnUmJm51bGw9PT1uLmFsdGVybmF0ZSYmYihlLHUpO2c9ZihuLGcsdyk7bnVsbD09PW0/bD1uOm0uc2libGluZz1uO209bjt1PXh9aWYodz09PWgubGVuZ3RoKXJldHVybiBjKGUsdSksSSYmdGcoZSx3KSxsO2lmKG51bGw9PT11KXtmb3IoO3c8aC5sZW5ndGg7dysrKXU9cShlLGhbd10sayksbnVsbCE9PXUmJihnPWYodSxnLHcpLG51bGw9PT1tP2w9dTptLnNpYmxpbmc9dSxtPXUpO0kmJnRnKGUsdyk7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpO3c8aC5sZW5ndGg7dysrKXg9eSh1LGUsdyxoW3ddLGspLG51bGwhPT14JiYoYSYmbnVsbCE9PXguYWx0ZXJuYXRlJiZ1LmRlbGV0ZShudWxsPT09XG54LmtleT93Ongua2V5KSxnPWYoeCxnLHcpLG51bGw9PT1tP2w9eDptLnNpYmxpbmc9eCxtPXgpO2EmJnUuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7SSYmdGcoZSx3KTtyZXR1cm4gbH1mdW5jdGlvbiB0KGUsZyxoLGspe3ZhciBsPUthKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBsKXRocm93IEVycm9yKHAoMTUwKSk7aD1sLmNhbGwoaCk7aWYobnVsbD09aCl0aHJvdyBFcnJvcihwKDE1MSkpO2Zvcih2YXIgdT1sPW51bGwsbT1nLHc9Zz0wLHg9bnVsbCxuPWgubmV4dCgpO251bGwhPT1tJiYhbi5kb25lO3crKyxuPWgubmV4dCgpKXttLmluZGV4Pnc/KHg9bSxtPW51bGwpOng9bS5zaWJsaW5nO3ZhciB0PXIoZSxtLG4udmFsdWUsayk7aWYobnVsbD09PXQpe251bGw9PT1tJiYobT14KTticmVha31hJiZtJiZudWxsPT09dC5hbHRlcm5hdGUmJmIoZSxtKTtnPWYodCxnLHcpO251bGw9PT11P2w9dDp1LnNpYmxpbmc9dDt1PXQ7bT14fWlmKG4uZG9uZSlyZXR1cm4gYyhlLFxubSksSSYmdGcoZSx3KSxsO2lmKG51bGw9PT1tKXtmb3IoOyFuLmRvbmU7dysrLG49aC5uZXh0KCkpbj1xKGUsbi52YWx1ZSxrKSxudWxsIT09biYmKGc9ZihuLGcsdyksbnVsbD09PXU/bD1uOnUuc2libGluZz1uLHU9bik7SSYmdGcoZSx3KTtyZXR1cm4gbH1mb3IobT1kKGUsbSk7IW4uZG9uZTt3Kyssbj1oLm5leHQoKSluPXkobSxlLHcsbi52YWx1ZSxrKSxudWxsIT09biYmKGEmJm51bGwhPT1uLmFsdGVybmF0ZSYmbS5kZWxldGUobnVsbD09PW4ua2V5P3c6bi5rZXkpLGc9ZihuLGcsdyksbnVsbD09PXU/bD1uOnUuc2libGluZz1uLHU9bik7YSYmbS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtJJiZ0ZyhlLHcpO3JldHVybiBsfWZ1bmN0aW9uIEooYSxkLGYsaCl7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09eWEmJm51bGw9PT1mLmtleSYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zil7c3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgdmE6YTp7Zm9yKHZhciBrPVxuZi5rZXksbD1kO251bGwhPT1sOyl7aWYobC5rZXk9PT1rKXtrPWYudHlwZTtpZihrPT09eWEpe2lmKDc9PT1sLnRhZyl7YyhhLGwuc2libGluZyk7ZD1lKGwsZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19ZWxzZSBpZihsLmVsZW1lbnRUeXBlPT09a3x8XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09ayYmay4kJHR5cGVvZj09PUhhJiZ1aChrKT09PWwudHlwZSl7YyhhLGwuc2libGluZyk7ZD1lKGwsZi5wcm9wcyk7ZC5yZWY9c2goYSxsLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9YyhhLGwpO2JyZWFrfWVsc2UgYihhLGwpO2w9bC5zaWJsaW5nfWYudHlwZT09PXlhPyhkPUFoKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD15aChmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1zaChhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2Ugd2E6YTp7Zm9yKGw9Zi5rZXk7bnVsbCE9PVxuZDspe2lmKGQua2V5PT09bClpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD16aChmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKTtjYXNlIEhhOnJldHVybiBsPWYuX2luaXQsSihhLGQsbChmLl9wYXlsb2FkKSxoKX1pZihlYihmKSlyZXR1cm4gbihhLGQsZixoKTtpZihLYShmKSlyZXR1cm4gdChhLGQsZixoKTt0aChhLGYpfXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgZiYmXCJcIiE9PWZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZj8oZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZiksZC5yZXR1cm49YSxhPWQpOlxuKGMoYSxkKSxkPXhoKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpKTpjKGEsZCl9cmV0dXJuIEp9dmFyIEJoPXZoKCEwKSxDaD12aCghMSksRGg9e30sRWg9VWYoRGgpLEZoPVVmKERoKSxHaD1VZihEaCk7ZnVuY3Rpb24gSGgoYSl7aWYoYT09PURoKXRocm93IEVycm9yKHAoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gSWgoYSxiKXtHKEdoLGIpO0coRmgsYSk7RyhFaCxEaCk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpsYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9bGIoYixhKX1FKEVoKTtHKEVoLGIpfWZ1bmN0aW9uIEpoKCl7RShFaCk7RShGaCk7RShHaCl9XG5mdW5jdGlvbiBLaChhKXtIaChHaC5jdXJyZW50KTt2YXIgYj1IaChFaC5jdXJyZW50KTt2YXIgYz1sYihiLGEudHlwZSk7YiE9PWMmJihHKEZoLGEpLEcoRWgsYykpfWZ1bmN0aW9uIExoKGEpe0ZoLmN1cnJlbnQ9PT1hJiYoRShFaCksRShGaCkpfXZhciBNPVVmKDApO1xuZnVuY3Rpb24gTWgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8XCIkP1wiPT09Yy5kYXRhfHxcIiQhXCI9PT1jLmRhdGEpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZmxhZ3MmMTI4KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9dmFyIE5oPVtdO1xuZnVuY3Rpb24gT2goKXtmb3IodmFyIGE9MDthPE5oLmxlbmd0aDthKyspTmhbYV0uX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9bnVsbDtOaC5sZW5ndGg9MH12YXIgUGg9dWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixRaD11YS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxSaD0wLE49bnVsbCxPPW51bGwsUD1udWxsLFNoPSExLFRoPSExLFVoPTAsVmg9MDtmdW5jdGlvbiBRKCl7dGhyb3cgRXJyb3IocCgzMjEpKTt9ZnVuY3Rpb24gV2goYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighSGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFhoKGEsYixjLGQsZSxmKXtSaD1mO049YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5sYW5lcz0wO1BoLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/WWg6Wmg7YT1jKGQsZSk7aWYoVGgpe2Y9MDtkb3tUaD0hMTtVaD0wO2lmKDI1PD1mKXRocm93IEVycm9yKHAoMzAxKSk7Zis9MTtQPU89bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7UGguY3VycmVudD0kaDthPWMoZCxlKX13aGlsZShUaCl9UGguY3VycmVudD1haTtiPW51bGwhPT1PJiZudWxsIT09Ty5uZXh0O1JoPTA7UD1PPU49bnVsbDtTaD0hMTtpZihiKXRocm93IEVycm9yKHAoMzAwKSk7cmV0dXJuIGF9ZnVuY3Rpb24gYmkoKXt2YXIgYT0wIT09VWg7VWg9MDtyZXR1cm4gYX1cbmZ1bmN0aW9uIGNpKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxiYXNlUXVldWU6bnVsbCxxdWV1ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hO3JldHVybiBQfWZ1bmN0aW9uIGRpKCl7aWYobnVsbD09PU8pe3ZhciBhPU4uYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPU8ubmV4dDt2YXIgYj1udWxsPT09UD9OLm1lbW9pemVkU3RhdGU6UC5uZXh0O2lmKG51bGwhPT1iKVA9YixPPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcihwKDMxMCkpO089YTthPXttZW1vaXplZFN0YXRlOk8ubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Ty5iYXNlU3RhdGUsYmFzZVF1ZXVlOk8uYmFzZVF1ZXVlLHF1ZXVlOk8ucXVldWUsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWF9cmV0dXJuIFB9XG5mdW5jdGlvbiBlaShhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIGZpKGEpe3ZhciBiPWRpKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHAoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9TyxlPWQuYmFzZVF1ZXVlLGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXtpZihudWxsIT09ZSl7dmFyIGc9ZS5uZXh0O2UubmV4dD1mLm5leHQ7Zi5uZXh0PWd9ZC5iYXNlUXVldWU9ZT1mO2MucGVuZGluZz1udWxsfWlmKG51bGwhPT1lKXtmPWUubmV4dDtkPWQuYmFzZVN0YXRlO3ZhciBoPWc9bnVsbCxrPW51bGwsbD1mO2Rve3ZhciBtPWwubGFuZTtpZigoUmgmbSk9PT1tKW51bGwhPT1rJiYoaz1rLm5leHQ9e2xhbmU6MCxhY3Rpb246bC5hY3Rpb24saGFzRWFnZXJTdGF0ZTpsLmhhc0VhZ2VyU3RhdGUsZWFnZXJTdGF0ZTpsLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksZD1sLmhhc0VhZ2VyU3RhdGU/bC5lYWdlclN0YXRlOmEoZCxsLmFjdGlvbik7ZWxzZXt2YXIgcT17bGFuZTptLGFjdGlvbjpsLmFjdGlvbixoYXNFYWdlclN0YXRlOmwuaGFzRWFnZXJTdGF0ZSxcbmVhZ2VyU3RhdGU6bC5lYWdlclN0YXRlLG5leHQ6bnVsbH07bnVsbD09PWs/KGg9az1xLGc9ZCk6az1rLm5leHQ9cTtOLmxhbmVzfD1tO2hofD1tfWw9bC5uZXh0fXdoaWxlKG51bGwhPT1sJiZsIT09Zik7bnVsbD09PWs/Zz1kOmsubmV4dD1oO0hlKGQsYi5tZW1vaXplZFN0YXRlKXx8KFVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZDtiLmJhc2VTdGF0ZT1nO2IuYmFzZVF1ZXVlPWs7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1kfWE9Yy5pbnRlcmxlYXZlZDtpZihudWxsIT09YSl7ZT1hO2RvIGY9ZS5sYW5lLE4ubGFuZXN8PWYsaGh8PWYsZT1lLm5leHQ7d2hpbGUoZSE9PWEpfWVsc2UgbnVsbD09PWUmJihjLmxhbmVzPTApO3JldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiBnaShhKXt2YXIgYj1kaSgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcihwKDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7SGUoZixiLm1lbW9pemVkU3RhdGUpfHwoVWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1mdW5jdGlvbiBoaSgpe31cbmZ1bmN0aW9uIGlpKGEsYil7dmFyIGM9TixkPWRpKCksZT1iKCksZj0hSGUoZC5tZW1vaXplZFN0YXRlLGUpO2YmJihkLm1lbW9pemVkU3RhdGU9ZSxVZz0hMCk7ZD1kLnF1ZXVlO2ppKGtpLmJpbmQobnVsbCxjLGQsYSksW2FdKTtpZihkLmdldFNuYXBzaG90IT09Ynx8Znx8bnVsbCE9PVAmJlAubWVtb2l6ZWRTdGF0ZS50YWcmMSl7Yy5mbGFnc3w9MjA0ODtsaSg5LG1pLmJpbmQobnVsbCxjLGQsZSxiKSx2b2lkIDAsbnVsbCk7aWYobnVsbD09PVIpdGhyb3cgRXJyb3IocCgzNDkpKTswIT09KFJoJjMwKXx8bmkoYyxiLGUpfXJldHVybiBlfWZ1bmN0aW9uIG5pKGEsYixjKXthLmZsYWdzfD0xNjM4NDthPXtnZXRTbmFwc2hvdDpiLHZhbHVlOmN9O2I9Ti51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsLHN0b3JlczpudWxsfSxOLnVwZGF0ZVF1ZXVlPWIsYi5zdG9yZXM9W2FdKTooYz1iLnN0b3JlcyxudWxsPT09Yz9iLnN0b3Jlcz1bYV06Yy5wdXNoKGEpKX1cbmZ1bmN0aW9uIG1pKGEsYixjLGQpe2IudmFsdWU9YztiLmdldFNuYXBzaG90PWQ7b2koYikmJnBpKGEpfWZ1bmN0aW9uIGtpKGEsYixjKXtyZXR1cm4gYyhmdW5jdGlvbigpe29pKGIpJiZwaShhKX0pfWZ1bmN0aW9uIG9pKGEpe3ZhciBiPWEuZ2V0U25hcHNob3Q7YT1hLnZhbHVlO3RyeXt2YXIgYz1iKCk7cmV0dXJuIUhlKGEsYyl9Y2F0Y2goZCl7cmV0dXJuITB9fWZ1bmN0aW9uIHBpKGEpe3ZhciBiPVpnKGEsMSk7bnVsbCE9PWImJm1oKGIsYSwxLC0xKX1cbmZ1bmN0aW9uIHFpKGEpe3ZhciBiPWNpKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT17cGVuZGluZzpudWxsLGludGVybGVhdmVkOm51bGwsbGFuZXM6MCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6ZWksbGFzdFJlbmRlcmVkU3RhdGU6YX07Yi5xdWV1ZT1hO2E9YS5kaXNwYXRjaD1yaS5iaW5kKG51bGwsTixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfVxuZnVuY3Rpb24gbGkoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9Ti51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsLHN0b3JlczpudWxsfSxOLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfWZ1bmN0aW9uIHNpKCl7cmV0dXJuIGRpKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiB0aShhLGIsYyxkKXt2YXIgZT1jaSgpO04uZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPWxpKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiB1aShhLGIsYyxkKXt2YXIgZT1kaSgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJldoKGQsZy5kZXBzKSl7ZS5tZW1vaXplZFN0YXRlPWxpKGIsYyxmLGQpO3JldHVybn19Ti5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9bGkoMXxiLGMsZixkKX1mdW5jdGlvbiB2aShhLGIpe3JldHVybiB0aSg4MzkwNjU2LDgsYSxiKX1mdW5jdGlvbiBqaShhLGIpe3JldHVybiB1aSgyMDQ4LDgsYSxiKX1mdW5jdGlvbiB3aShhLGIpe3JldHVybiB1aSg0LDIsYSxiKX1mdW5jdGlvbiB4aShhLGIpe3JldHVybiB1aSg0LDQsYSxiKX1cbmZ1bmN0aW9uIHlpKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gemkoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiB1aSg0LDQseWkuYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gQWkoKXt9ZnVuY3Rpb24gQmkoYSxiKXt2YXIgYz1kaSgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmV2goYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBDaShhLGIpe3ZhciBjPWRpKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZXaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBEaShhLGIsYyl7aWYoMD09PShSaCYyMSkpcmV0dXJuIGEuYmFzZVN0YXRlJiYoYS5iYXNlU3RhdGU9ITEsVWc9ITApLGEubWVtb2l6ZWRTdGF0ZT1jO0hlKGMsYil8fChjPXljKCksTi5sYW5lc3w9YyxoaHw9YyxhLmJhc2VTdGF0ZT0hMCk7cmV0dXJuIGJ9ZnVuY3Rpb24gRWkoYSxiKXt2YXIgYz1DO0M9MCE9PWMmJjQ+Yz9jOjQ7YSghMCk7dmFyIGQ9UWgudHJhbnNpdGlvbjtRaC50cmFuc2l0aW9uPXt9O3RyeXthKCExKSxiKCl9ZmluYWxseXtDPWMsUWgudHJhbnNpdGlvbj1kfX1mdW5jdGlvbiBGaSgpe3JldHVybiBkaSgpLm1lbW9pemVkU3RhdGV9XG5mdW5jdGlvbiBHaShhLGIsYyl7dmFyIGQ9bGgoYSk7Yz17bGFuZTpkLGFjdGlvbjpjLGhhc0VhZ2VyU3RhdGU6ITEsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH07aWYoSGkoYSkpSWkoYixjKTtlbHNlIGlmKGM9WWcoYSxiLGMsZCksbnVsbCE9PWMpe3ZhciBlPUwoKTttaChjLGEsZCxlKTtKaShjLGIsZCl9fVxuZnVuY3Rpb24gcmkoYSxiLGMpe3ZhciBkPWxoKGEpLGU9e2xhbmU6ZCxhY3Rpb246YyxoYXNFYWdlclN0YXRlOiExLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O2lmKEhpKGEpKUlpKGIsZSk7ZWxzZXt2YXIgZj1hLmFsdGVybmF0ZTtpZigwPT09YS5sYW5lcyYmKG51bGw9PT1mfHwwPT09Zi5sYW5lcykmJihmPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZikpdHJ5e3ZhciBnPWIubGFzdFJlbmRlcmVkU3RhdGUsaD1mKGcsYyk7ZS5oYXNFYWdlclN0YXRlPSEwO2UuZWFnZXJTdGF0ZT1oO2lmKEhlKGgsZykpe3ZhciBrPWIuaW50ZXJsZWF2ZWQ7bnVsbD09PWs/KGUubmV4dD1lLFhnKGIpKTooZS5uZXh0PWsubmV4dCxrLm5leHQ9ZSk7Yi5pbnRlcmxlYXZlZD1lO3JldHVybn19Y2F0Y2gobCl7fWZpbmFsbHl7fWM9WWcoYSxiLGUsZCk7bnVsbCE9PWMmJihlPUwoKSxtaChjLGEsZCxlKSxKaShjLGIsZCkpfX1cbmZ1bmN0aW9uIEhpKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO3JldHVybiBhPT09Tnx8bnVsbCE9PWImJmI9PT1OfWZ1bmN0aW9uIElpKGEsYil7VGg9U2g9ITA7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn1mdW5jdGlvbiBKaShhLGIsYyl7aWYoMCE9PShjJjQxOTQyNDApKXt2YXIgZD1iLmxhbmVzO2QmPWEucGVuZGluZ0xhbmVzO2N8PWQ7Yi5sYW5lcz1jO0NjKGEsYyl9fVxudmFyIGFpPXtyZWFkQ29udGV4dDpWZyx1c2VDYWxsYmFjazpRLHVzZUNvbnRleHQ6USx1c2VFZmZlY3Q6USx1c2VJbXBlcmF0aXZlSGFuZGxlOlEsdXNlSW5zZXJ0aW9uRWZmZWN0OlEsdXNlTGF5b3V0RWZmZWN0OlEsdXNlTWVtbzpRLHVzZVJlZHVjZXI6USx1c2VSZWY6USx1c2VTdGF0ZTpRLHVzZURlYnVnVmFsdWU6USx1c2VEZWZlcnJlZFZhbHVlOlEsdXNlVHJhbnNpdGlvbjpRLHVzZU11dGFibGVTb3VyY2U6USx1c2VTeW5jRXh0ZXJuYWxTdG9yZTpRLHVzZUlkOlEsdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxZaD17cmVhZENvbnRleHQ6VmcsdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtjaSgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0OlZnLHVzZUVmZmVjdDp2aSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gdGkoNDE5NDMwOCxcbjQseWkuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiB0aSg0MTk0MzA4LDQsYSxiKX0sdXNlSW5zZXJ0aW9uRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRpKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9Y2koKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9Y2koKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9e3BlbmRpbmc6bnVsbCxpbnRlcmxlYXZlZDpudWxsLGxhbmVzOjAsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07ZC5xdWV1ZT1hO2E9YS5kaXNwYXRjaD1HaS5iaW5kKG51bGwsTixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9XG5jaSgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTpxaSx1c2VEZWJ1Z1ZhbHVlOkFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7cmV0dXJuIGNpKCkubWVtb2l6ZWRTdGF0ZT1hfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9cWkoITEpLGI9YVswXTthPUVpLmJpbmQobnVsbCxhWzFdKTtjaSgpLm1lbW9pemVkU3RhdGU9YTtyZXR1cm5bYixhXX0sdXNlTXV0YWJsZVNvdXJjZTpmdW5jdGlvbigpe30sdXNlU3luY0V4dGVybmFsU3RvcmU6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPU4sZT1jaSgpO2lmKEkpe2lmKHZvaWQgMD09PWMpdGhyb3cgRXJyb3IocCg0MDcpKTtjPWMoKX1lbHNle2M9YigpO2lmKG51bGw9PT1SKXRocm93IEVycm9yKHAoMzQ5KSk7MCE9PShSaCYzMCl8fG5pKGQsYixjKX1lLm1lbW9pemVkU3RhdGU9Yzt2YXIgZj17dmFsdWU6YyxnZXRTbmFwc2hvdDpifTtlLnF1ZXVlPWY7dmkoa2kuYmluZChudWxsLGQsXG5mLGEpLFthXSk7ZC5mbGFnc3w9MjA0ODtsaSg5LG1pLmJpbmQobnVsbCxkLGYsYyxiKSx2b2lkIDAsbnVsbCk7cmV0dXJuIGN9LHVzZUlkOmZ1bmN0aW9uKCl7dmFyIGE9Y2koKSxiPVIuaWRlbnRpZmllclByZWZpeDtpZihJKXt2YXIgYz1zZzt2YXIgZD1yZztjPShkJn4oMTw8MzItb2MoZCktMSkpLnRvU3RyaW5nKDMyKStjO2I9XCI6XCIrYitcIlJcIitjO2M9VWgrKzswPGMmJihiKz1cIkhcIitjLnRvU3RyaW5nKDMyKSk7Yis9XCI6XCJ9ZWxzZSBjPVZoKyssYj1cIjpcIitiK1wiclwiK2MudG9TdHJpbmcoMzIpK1wiOlwiO3JldHVybiBhLm1lbW9pemVkU3RhdGU9Yn0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxaaD17cmVhZENvbnRleHQ6VmcsdXNlQ2FsbGJhY2s6QmksdXNlQ29udGV4dDpWZyx1c2VFZmZlY3Q6amksdXNlSW1wZXJhdGl2ZUhhbmRsZTp6aSx1c2VJbnNlcnRpb25FZmZlY3Q6d2ksdXNlTGF5b3V0RWZmZWN0OnhpLHVzZU1lbW86Q2ksdXNlUmVkdWNlcjpmaSx1c2VSZWY6c2ksdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gZmkoZWkpfSxcbnVzZURlYnVnVmFsdWU6QWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1kaSgpO3JldHVybiBEaShiLE8ubWVtb2l6ZWRTdGF0ZSxhKX0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPWZpKGVpKVswXSxiPWRpKCkubWVtb2l6ZWRTdGF0ZTtyZXR1cm5bYSxiXX0sdXNlTXV0YWJsZVNvdXJjZTpoaSx1c2VTeW5jRXh0ZXJuYWxTdG9yZTppaSx1c2VJZDpGaSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LCRoPXtyZWFkQ29udGV4dDpWZyx1c2VDYWxsYmFjazpCaSx1c2VDb250ZXh0OlZnLHVzZUVmZmVjdDpqaSx1c2VJbXBlcmF0aXZlSGFuZGxlOnppLHVzZUluc2VydGlvbkVmZmVjdDp3aSx1c2VMYXlvdXRFZmZlY3Q6eGksdXNlTWVtbzpDaSx1c2VSZWR1Y2VyOmdpLHVzZVJlZjpzaSx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBnaShlaSl9LHVzZURlYnVnVmFsdWU6QWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1kaSgpO3JldHVybiBudWxsPT09XG5PP2IubWVtb2l6ZWRTdGF0ZT1hOkRpKGIsTy5tZW1vaXplZFN0YXRlLGEpfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9Z2koZWkpWzBdLGI9ZGkoKS5tZW1vaXplZFN0YXRlO3JldHVyblthLGJdfSx1c2VNdXRhYmxlU291cmNlOmhpLHVzZVN5bmNFeHRlcm5hbFN0b3JlOmlpLHVzZUlkOkZpLHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX07ZnVuY3Rpb24gS2koYSxiKXt0cnl7dmFyIGM9XCJcIixkPWI7ZG8gYys9UGEoZCksZD1kLnJldHVybjt3aGlsZShkKTt2YXIgZT1jfWNhdGNoKGYpe2U9XCJcXG5FcnJvciBnZW5lcmF0aW5nIHN0YWNrOiBcIitmLm1lc3NhZ2UrXCJcXG5cIitmLnN0YWNrfXJldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOmUsZGlnZXN0Om51bGx9fWZ1bmN0aW9uIExpKGEsYixjKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6bnVsbCxzdGFjazpudWxsIT1jP2M6bnVsbCxkaWdlc3Q6bnVsbCE9Yj9iOm51bGx9fVxuZnVuY3Rpb24gTWkoYSxiKXt0cnl7Y29uc29sZS5lcnJvcihiLnZhbHVlKX1jYXRjaChjKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYzt9KX19dmFyIE5pPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIE9pKGEsYixjKXtjPWNoKC0xLGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1BpfHwoUGk9ITAsUWk9ZCk7TWkoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBSaShhLGIsYyl7Yz1jaCgtMSxjKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIGQoZSl9O2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtNaShhLGIpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7TWkoYSxiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1TaT9TaT1uZXcgU2V0KFt0aGlzXSk6U2kuYWRkKHRoaXMpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY31cbmZ1bmN0aW9uIFRpKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtpZihudWxsPT09ZCl7ZD1hLnBpbmdDYWNoZT1uZXcgTmk7dmFyIGU9bmV3IFNldDtkLnNldChiLGUpfWVsc2UgZT1kLmdldChiKSx2b2lkIDA9PT1lJiYoZT1uZXcgU2V0LGQuc2V0KGIsZSkpO2UuaGFzKGMpfHwoZS5hZGQoYyksYT1VaS5iaW5kKG51bGwsYSxiLGMpLGIudGhlbihhLGEpKX1mdW5jdGlvbiBWaShhKXtkb3t2YXIgYjtpZihiPTEzPT09YS50YWcpYj1hLm1lbW9pemVkU3RhdGUsYj1udWxsIT09Yj9udWxsIT09Yi5kZWh5ZHJhdGVkPyEwOiExOiEwO2lmKGIpcmV0dXJuIGE7YT1hLnJldHVybn13aGlsZShudWxsIT09YSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBXaShhLGIsYyxkLGUpe2lmKDA9PT0oYS5tb2RlJjEpKXJldHVybiBhPT09Yj9hLmZsYWdzfD02NTUzNjooYS5mbGFnc3w9MTI4LGMuZmxhZ3N8PTEzMTA3MixjLmZsYWdzJj0tNTI4MDUsMT09PWMudGFnJiYobnVsbD09PWMuYWx0ZXJuYXRlP2MudGFnPTE3OihiPWNoKC0xLDEpLGIudGFnPTIsZGgoYyxiLDEpKSksYy5sYW5lc3w9MSksYTthLmZsYWdzfD02NTUzNjthLmxhbmVzPWU7cmV0dXJuIGF9dmFyIFhpPXVhLlJlYWN0Q3VycmVudE93bmVyLFVnPSExO2Z1bmN0aW9uIFlpKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/Q2goYixudWxsLGMsZCk6QmgoYixhLmNoaWxkLGMsZCl9XG5mdW5jdGlvbiBaaShhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7VGcoYixlKTtkPVhoKGEsYixjLGQsZixlKTtjPWJpKCk7aWYobnVsbCE9PWEmJiFVZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS0yMDUzLGEubGFuZXMmPX5lLCRpKGEsYixlKTtJJiZjJiZ2ZyhiKTtiLmZsYWdzfD0xO1lpKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gYWooYSxiLGMsZCxlKXtpZihudWxsPT09YSl7dmFyIGY9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYhYmooZikmJnZvaWQgMD09PWYuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWYsY2ooYSxiLGYsZCxlKTthPXloKGMudHlwZSxudWxsLGQsYixiLm1vZGUsZSk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWY9YS5jaGlsZDtpZigwPT09KGEubGFuZXMmZSkpe3ZhciBnPWYubWVtb2l6ZWRQcm9wcztjPWMuY29tcGFyZTtjPW51bGwhPT1jP2M6SWU7aWYoYyhnLGQpJiZhLnJlZj09PWIucmVmKXJldHVybiAkaShhLGIsZSl9Yi5mbGFnc3w9MTthPXdoKGYsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gY2ooYSxiLGMsZCxlKXtpZihudWxsIT09YSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKEllKGYsZCkmJmEucmVmPT09Yi5yZWYpaWYoVWc9ITEsYi5wZW5kaW5nUHJvcHM9ZD1mLDAhPT0oYS5sYW5lcyZlKSkwIT09KGEuZmxhZ3MmMTMxMDcyKSYmKFVnPSEwKTtlbHNlIHJldHVybiBiLmxhbmVzPWEubGFuZXMsJGkoYSxiLGUpfXJldHVybiBkaihhLGIsYyxkLGUpfVxuZnVuY3Rpb24gZWooYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5jaGlsZHJlbixmPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO2lmKFwiaGlkZGVuXCI9PT1kLm1vZGUpaWYoMD09PShiLm1vZGUmMSkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MCxjYWNoZVBvb2w6bnVsbCx0cmFuc2l0aW9uczpudWxsfSxHKGZqLGdqKSxnanw9YztlbHNle2lmKDA9PT0oYyYxMDczNzQxODI0KSlyZXR1cm4gYT1udWxsIT09Zj9mLmJhc2VMYW5lc3xjOmMsYi5sYW5lcz1iLmNoaWxkTGFuZXM9MTA3Mzc0MTgyNCxiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczphLGNhY2hlUG9vbDpudWxsLHRyYW5zaXRpb25zOm51bGx9LGIudXBkYXRlUXVldWU9bnVsbCxHKGZqLGdqKSxnanw9YSxudWxsO2IubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjAsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6bnVsbH07ZD1udWxsIT09Zj9mLmJhc2VMYW5lczpjO0coZmosZ2opO2dqfD1kfWVsc2UgbnVsbCE9PVxuZj8oZD1mLmJhc2VMYW5lc3xjLGIubWVtb2l6ZWRTdGF0ZT1udWxsKTpkPWMsRyhmaixnaiksZ2p8PWQ7WWkoYSxiLGUsYyk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gaGooYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5mbGFnc3w9NTEyLGIuZmxhZ3N8PTIwOTcxNTJ9ZnVuY3Rpb24gZGooYSxiLGMsZCxlKXt2YXIgZj1aZihjKT9YZjpILmN1cnJlbnQ7Zj1ZZihiLGYpO1RnKGIsZSk7Yz1YaChhLGIsYyxkLGYsZSk7ZD1iaSgpO2lmKG51bGwhPT1hJiYhVWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tMjA1MyxhLmxhbmVzJj1+ZSwkaShhLGIsZSk7SSYmZCYmdmcoYik7Yi5mbGFnc3w9MTtZaShhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGlqKGEsYixjLGQsZSl7aWYoWmYoYykpe3ZhciBmPSEwO2NnKGIpfWVsc2UgZj0hMTtUZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSlqaihhLGIpLHBoKGIsYyxkKSxyaChiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1WZyhsKToobD1aZihjKT9YZjpILmN1cnJlbnQsbD1ZZihiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxxPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtxfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8XG4oaCE9PWR8fGshPT1sKSYmcWgoYixnLGQsbCk7JGc9ITE7dmFyIHI9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cjtnaChiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8ciE9PWt8fFdmLmN1cnJlbnR8fCRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKGtoKGIsYyxtLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD0kZ3x8b2goYixjLGgsZCxyLGssbCkpPyhxfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NDE5NDMwOCkpOlxuKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NDE5NDMwOCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00MTk0MzA4KSxkPSExKX1lbHNle2c9Yi5zdGF0ZU5vZGU7YmgoYSxiKTtoPWIubWVtb2l6ZWRQcm9wcztsPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpMZyhiLnR5cGUsaCk7Zy5wcm9wcz1sO3E9Yi5wZW5kaW5nUHJvcHM7cj1nLmNvbnRleHQ7az1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az1WZyhrKTooaz1aZihjKT9YZjpILmN1cnJlbnQsaz1ZZihiLGspKTt2YXIgeT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczsobT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgeXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PXF8fHIhPT1rKSYmcWgoYixnLGQsayk7JGc9ITE7cj1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1yO2doKGIsZCxnLGUpO3ZhciBuPWIubWVtb2l6ZWRTdGF0ZTtoIT09cXx8ciE9PW58fFdmLmN1cnJlbnR8fCRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgeSYmKGtoKGIsYyx5LGQpLG49Yi5tZW1vaXplZFN0YXRlKSwobD0kZ3x8b2goYixjLGwsZCxyLG4sayl8fCExKT8obXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCxuLGspLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcbmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCxuLGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZmxhZ3N8PTEwMjQpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZyPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnI9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0xMDI0KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9biksZy5wcm9wcz1kLGcuc3RhdGU9bixnLmNvbnRleHQ9ayxkPWwpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnI9PT1cbmEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZyPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MTAyNCksZD0hMSl9cmV0dXJuIGtqKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIGtqKGEsYixjLGQsZSxmKXtoaihhLGIpO3ZhciBnPTAhPT0oYi5mbGFncyYxMjgpO2lmKCFkJiYhZylyZXR1cm4gZSYmZGcoYixjLCExKSwkaShhLGIsZik7ZD1iLnN0YXRlTm9kZTtYaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmZsYWdzfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPUJoKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9QmgoYixudWxsLGgsZikpOllpKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJmRnKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gbGooYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9hZyhhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZhZyhhLGIuY29udGV4dCwhMSk7SWgoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gbWooYSxiLGMsZCxlKXtJZygpO0pnKGUpO2IuZmxhZ3N8PTI1NjtZaShhLGIsYyxkKTtyZXR1cm4gYi5jaGlsZH12YXIgbmo9e2RlaHlkcmF0ZWQ6bnVsbCx0cmVlQ29udGV4dDpudWxsLHJldHJ5TGFuZTowfTtmdW5jdGlvbiBvaihhKXtyZXR1cm57YmFzZUxhbmVzOmEsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6bnVsbH19XG5mdW5jdGlvbiBwaihhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1NLmN1cnJlbnQsZj0hMSxnPTAhPT0oYi5mbGFncyYxMjgpLGg7KGg9Zyl8fChoPW51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlPyExOjAhPT0oZSYyKSk7aWYoaClmPSEwLGIuZmxhZ3MmPS0xMjk7ZWxzZSBpZihudWxsPT09YXx8bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSllfD0xO0coTSxlJjEpO2lmKG51bGw9PT1hKXtFZyhiKTthPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmKGE9YS5kZWh5ZHJhdGVkLG51bGwhPT1hKSlyZXR1cm4gMD09PShiLm1vZGUmMSk/Yi5sYW5lcz0xOlwiJCFcIj09PWEuZGF0YT9iLmxhbmVzPTg6Yi5sYW5lcz0xMDczNzQxODI0LG51bGw7Zz1kLmNoaWxkcmVuO2E9ZC5mYWxsYmFjaztyZXR1cm4gZj8oZD1iLm1vZGUsZj1iLmNoaWxkLGc9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpnfSwwPT09KGQmMSkmJm51bGwhPT1mPyhmLmNoaWxkTGFuZXM9MCxmLnBlbmRpbmdQcm9wcz1cbmcpOmY9cWooZyxkLDAsbnVsbCksYT1BaChhLGQsYyxudWxsKSxmLnJldHVybj1iLGEucmV0dXJuPWIsZi5zaWJsaW5nPWEsYi5jaGlsZD1mLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT1vaihjKSxiLm1lbW9pemVkU3RhdGU9bmosYSk6cmooYixnKX1lPWEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSYmKGg9ZS5kZWh5ZHJhdGVkLG51bGwhPT1oKSlyZXR1cm4gc2ooYSxiLGcsZCxoLGUsYyk7aWYoZil7Zj1kLmZhbGxiYWNrO2c9Yi5tb2RlO2U9YS5jaGlsZDtoPWUuc2libGluZzt2YXIgaz17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmQuY2hpbGRyZW59OzA9PT0oZyYxKSYmYi5jaGlsZCE9PWU/KGQ9Yi5jaGlsZCxkLmNoaWxkTGFuZXM9MCxkLnBlbmRpbmdQcm9wcz1rLGIuZGVsZXRpb25zPW51bGwpOihkPXdoKGUsayksZC5zdWJ0cmVlRmxhZ3M9ZS5zdWJ0cmVlRmxhZ3MmMTQ2ODAwNjQpO251bGwhPT1oP2Y9d2goaCxmKTooZj1BaChmLGcsYyxudWxsKSxmLmZsYWdzfD0yKTtmLnJldHVybj1cbmI7ZC5yZXR1cm49YjtkLnNpYmxpbmc9ZjtiLmNoaWxkPWQ7ZD1mO2Y9Yi5jaGlsZDtnPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZTtnPW51bGw9PT1nP29qKGMpOntiYXNlTGFuZXM6Zy5iYXNlTGFuZXN8YyxjYWNoZVBvb2w6bnVsbCx0cmFuc2l0aW9uczpnLnRyYW5zaXRpb25zfTtmLm1lbW9pemVkU3RhdGU9ZztmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jO2IubWVtb2l6ZWRTdGF0ZT1uajtyZXR1cm4gZH1mPWEuY2hpbGQ7YT1mLnNpYmxpbmc7ZD13aChmLHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmQuY2hpbGRyZW59KTswPT09KGIubW9kZSYxKSYmKGQubGFuZXM9Yyk7ZC5yZXR1cm49YjtkLnNpYmxpbmc9bnVsbDtudWxsIT09YSYmKGM9Yi5kZWxldGlvbnMsbnVsbD09PWM/KGIuZGVsZXRpb25zPVthXSxiLmZsYWdzfD0xNik6Yy5wdXNoKGEpKTtiLmNoaWxkPWQ7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGR9XG5mdW5jdGlvbiByaihhLGIpe2I9cWooe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46Yn0sYS5tb2RlLDAsbnVsbCk7Yi5yZXR1cm49YTtyZXR1cm4gYS5jaGlsZD1ifWZ1bmN0aW9uIHRqKGEsYixjLGQpe251bGwhPT1kJiZKZyhkKTtCaChiLGEuY2hpbGQsbnVsbCxjKTthPXJqKGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4pO2EuZmxhZ3N8PTI7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGF9XG5mdW5jdGlvbiBzaihhLGIsYyxkLGUsZixnKXtpZihjKXtpZihiLmZsYWdzJjI1NilyZXR1cm4gYi5mbGFncyY9LTI1NyxkPUxpKEVycm9yKHAoNDIyKSkpLHRqKGEsYixnLGQpO2lmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpcmV0dXJuIGIuY2hpbGQ9YS5jaGlsZCxiLmZsYWdzfD0xMjgsbnVsbDtmPWQuZmFsbGJhY2s7ZT1iLm1vZGU7ZD1xaih7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjpkLmNoaWxkcmVufSxlLDAsbnVsbCk7Zj1BaChmLGUsZyxudWxsKTtmLmZsYWdzfD0yO2QucmV0dXJuPWI7Zi5yZXR1cm49YjtkLnNpYmxpbmc9ZjtiLmNoaWxkPWQ7MCE9PShiLm1vZGUmMSkmJkJoKGIsYS5jaGlsZCxudWxsLGcpO2IuY2hpbGQubWVtb2l6ZWRTdGF0ZT1vaihnKTtiLm1lbW9pemVkU3RhdGU9bmo7cmV0dXJuIGZ9aWYoMD09PShiLm1vZGUmMSkpcmV0dXJuIHRqKGEsYixnLG51bGwpO2lmKFwiJCFcIj09PWUuZGF0YSl7ZD1lLm5leHRTaWJsaW5nJiZlLm5leHRTaWJsaW5nLmRhdGFzZXQ7XG5pZihkKXZhciBoPWQuZGdzdDtkPWg7Zj1FcnJvcihwKDQxOSkpO2Q9TGkoZixkLHZvaWQgMCk7cmV0dXJuIHRqKGEsYixnLGQpfWg9MCE9PShnJmEuY2hpbGRMYW5lcyk7aWYoVWd8fGgpe2Q9UjtpZihudWxsIT09ZCl7c3dpdGNoKGcmLWcpe2Nhc2UgNDplPTI7YnJlYWs7Y2FzZSAxNjplPTg7YnJlYWs7Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpjYXNlIDQxOTQzMDQ6Y2FzZSA4Mzg4NjA4OmNhc2UgMTY3NzcyMTY6Y2FzZSAzMzU1NDQzMjpjYXNlIDY3MTA4ODY0OmU9MzI7YnJlYWs7Y2FzZSA1MzY4NzA5MTI6ZT0yNjg0MzU0NTY7YnJlYWs7ZGVmYXVsdDplPTB9ZT0wIT09KGUmKGQuc3VzcGVuZGVkTGFuZXN8ZykpPzA6ZTtcbjAhPT1lJiZlIT09Zi5yZXRyeUxhbmUmJihmLnJldHJ5TGFuZT1lLFpnKGEsZSksbWgoZCxhLGUsLTEpKX11aigpO2Q9TGkoRXJyb3IocCg0MjEpKSk7cmV0dXJuIHRqKGEsYixnLGQpfWlmKFwiJD9cIj09PWUuZGF0YSlyZXR1cm4gYi5mbGFnc3w9MTI4LGIuY2hpbGQ9YS5jaGlsZCxiPXZqLmJpbmQobnVsbCxhKSxlLl9yZWFjdFJldHJ5PWIsbnVsbDthPWYudHJlZUNvbnRleHQ7eWc9TGYoZS5uZXh0U2libGluZyk7eGc9YjtJPSEwO3pnPW51bGw7bnVsbCE9PWEmJihvZ1twZysrXT1yZyxvZ1twZysrXT1zZyxvZ1twZysrXT1xZyxyZz1hLmlkLHNnPWEub3ZlcmZsb3cscWc9Yik7Yj1yaihiLGQuY2hpbGRyZW4pO2IuZmxhZ3N8PTQwOTY7cmV0dXJuIGJ9ZnVuY3Rpb24gd2ooYSxiLGMpe2EubGFuZXN8PWI7dmFyIGQ9YS5hbHRlcm5hdGU7bnVsbCE9PWQmJihkLmxhbmVzfD1iKTtTZyhhLnJldHVybixiLGMpfVxuZnVuY3Rpb24geGooYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWY/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbE1vZGU6ZX06KGYuaXNCYWNrd2FyZHM9YixmLnJlbmRlcmluZz1udWxsLGYucmVuZGVyaW5nU3RhcnRUaW1lPTAsZi5sYXN0PWQsZi50YWlsPWMsZi50YWlsTW9kZT1lKX1cbmZ1bmN0aW9uIHlqKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7WWkoYSxiLGQuY2hpbGRyZW4sYyk7ZD1NLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5mbGFnc3w9MTI4O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5mbGFncyYxMjgpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmd2ooYSxjLGIpO2Vsc2UgaWYoMTk9PT1hLnRhZyl3aihhLGMsYik7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUcoTSxkKTtpZigwPT09KGIubW9kZSYxKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09TWgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTt4aihiLCExLGUsYyxmKTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PU1oKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX14aihiLCEwLGMsbnVsbCxmKTticmVhaztjYXNlIFwidG9nZXRoZXJcIjp4aihiLCExLG51bGwsbnVsbCx2b2lkIDApO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBqaihhLGIpezA9PT0oYi5tb2RlJjEpJiZudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKX1mdW5jdGlvbiAkaShhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7aGh8PWIubGFuZXM7aWYoMD09PShjJmIuY2hpbGRMYW5lcykpcmV0dXJuIG51bGw7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHAoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPXdoKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz13aChhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gemooYSxiLGMpe3N3aXRjaChiLnRhZyl7Y2FzZSAzOmxqKGIpO0lnKCk7YnJlYWs7Y2FzZSA1OktoKGIpO2JyZWFrO2Nhc2UgMTpaZihiLnR5cGUpJiZjZyhiKTticmVhaztjYXNlIDQ6SWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOnZhciBkPWIudHlwZS5fY29udGV4dCxlPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTtHKE1nLGQuX2N1cnJlbnRWYWx1ZSk7ZC5fY3VycmVudFZhbHVlPWU7YnJlYWs7Y2FzZSAxMzpkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCl7aWYobnVsbCE9PWQuZGVoeWRyYXRlZClyZXR1cm4gRyhNLE0uY3VycmVudCYxKSxiLmZsYWdzfD0xMjgsbnVsbDtpZigwIT09KGMmYi5jaGlsZC5jaGlsZExhbmVzKSlyZXR1cm4gcGooYSxiLGMpO0coTSxNLmN1cnJlbnQmMSk7YT0kaShhLGIsYyk7cmV0dXJuIG51bGwhPT1hP2Euc2libGluZzpudWxsfUcoTSxNLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPTAhPT0oYyZcbmIuY2hpbGRMYW5lcyk7aWYoMCE9PShhLmZsYWdzJjEyOCkpe2lmKGQpcmV0dXJuIHlqKGEsYixjKTtiLmZsYWdzfD0xMjh9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsLGUubGFzdEVmZmVjdD1udWxsKTtHKE0sTS5jdXJyZW50KTtpZihkKWJyZWFrO2Vsc2UgcmV0dXJuIG51bGw7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiBiLmxhbmVzPTAsZWooYSxiLGMpfXJldHVybiAkaShhLGIsYyl9dmFyIEFqLEJqLENqLERqO1xuQWo9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O0JqPWZ1bmN0aW9uKCl7fTtcbkNqPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWEubWVtb2l6ZWRQcm9wcztpZihlIT09ZCl7YT1iLnN0YXRlTm9kZTtIaChFaC5jdXJyZW50KTt2YXIgZj1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjplPVlhKGEsZSk7ZD1ZYShhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmU9QSh7fSxlLHt2YWx1ZTp2b2lkIDB9KTtkPUEoe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplPWdiKGEsZSk7ZD1nYihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPUJmKX11YihjLGQpO3ZhciBnO2M9bnVsbDtmb3IobCBpbiBlKWlmKCFkLmhhc093blByb3BlcnR5KGwpJiZlLmhhc093blByb3BlcnR5KGwpJiZudWxsIT1lW2xdKWlmKFwic3R5bGVcIj09PWwpe3ZhciBoPWVbbF07Zm9yKGcgaW4gaCloLmhhc093blByb3BlcnR5KGcpJiZcbihjfHwoYz17fSksY1tnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09bCYmXCJjaGlsZHJlblwiIT09bCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKGVhLmhhc093blByb3BlcnR5KGwpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChsLG51bGwpKTtmb3IobCBpbiBkKXt2YXIgaz1kW2xdO2g9bnVsbCE9ZT9lW2xdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGwpJiZrIT09aCYmKG51bGwhPWt8fG51bGwhPWgpKWlmKFwic3R5bGVcIj09PWwpaWYoaCl7Zm9yKGcgaW4gaCkhaC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGN8fChjPXt9KSxjW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmaFtnXSE9PWtbZ10mJihjfHwoYz17fSksY1tnXT1rW2ddKX1lbHNlIGN8fChmfHwoZj1bXSksZi5wdXNoKGwsXG5jKSksYz1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGg9aD9oLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmaCE9PWsmJihmPWZ8fFtdKS5wdXNoKGwsaykpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGwsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJihlYS5oYXNPd25Qcm9wZXJ0eShsKT8obnVsbCE9ayYmXCJvblNjcm9sbFwiPT09bCYmRChcInNjcm9sbFwiLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOihmPWZ8fFtdKS5wdXNoKGwsaykpfWMmJihmPWZ8fFtdKS5wdXNoKFwic3R5bGVcIixjKTt2YXIgbD1mO2lmKGIudXBkYXRlUXVldWU9bCliLmZsYWdzfD00fX07RGo9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmZsYWdzfD00KX07XG5mdW5jdGlvbiBFaihhLGIpe2lmKCFJKXN3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBTKGEpe3ZhciBiPW51bGwhPT1hLmFsdGVybmF0ZSYmYS5hbHRlcm5hdGUuY2hpbGQ9PT1hLmNoaWxkLGM9MCxkPTA7aWYoYilmb3IodmFyIGU9YS5jaGlsZDtudWxsIT09ZTspY3w9ZS5sYW5lc3xlLmNoaWxkTGFuZXMsZHw9ZS5zdWJ0cmVlRmxhZ3MmMTQ2ODAwNjQsZHw9ZS5mbGFncyYxNDY4MDA2NCxlLnJldHVybj1hLGU9ZS5zaWJsaW5nO2Vsc2UgZm9yKGU9YS5jaGlsZDtudWxsIT09ZTspY3w9ZS5sYW5lc3xlLmNoaWxkTGFuZXMsZHw9ZS5zdWJ0cmVlRmxhZ3MsZHw9ZS5mbGFncyxlLnJldHVybj1hLGU9ZS5zaWJsaW5nO2Euc3VidHJlZUZsYWdzfD1kO2EuY2hpbGRMYW5lcz1jO3JldHVybiBifVxuZnVuY3Rpb24gRmooYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO3dnKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIFMoYiksbnVsbDtjYXNlIDE6cmV0dXJuIFpmKGIudHlwZSkmJiRmKCksUyhiKSxudWxsO2Nhc2UgMzpkPWIuc3RhdGVOb2RlO0poKCk7RShXZik7RShIKTtPaCgpO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClHZyhiKT9iLmZsYWdzfD00Om51bGw9PT1hfHxhLm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkJiYwPT09KGIuZmxhZ3MmMjU2KXx8KGIuZmxhZ3N8PTEwMjQsbnVsbCE9PXpnJiYoR2ooemcpLHpnPW51bGwpKTtCaihhLGIpO1MoYik7cmV0dXJuIG51bGw7Y2FzZSA1OkxoKGIpO3ZhciBlPUhoKEdoLmN1cnJlbnQpO1xuYz1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKUNqKGEsYixjLGQsZSksYS5yZWYhPT1iLnJlZiYmKGIuZmxhZ3N8PTUxMixiLmZsYWdzfD0yMDk3MTUyKTtlbHNle2lmKCFkKXtpZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IocCgxNjYpKTtTKGIpO3JldHVybiBudWxsfWE9SGgoRWguY3VycmVudCk7aWYoR2coYikpe2Q9Yi5zdGF0ZU5vZGU7Yz1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2RbT2ZdPWI7ZFtQZl09ZjthPTAhPT0oYi5tb2RlJjEpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RChcImNhbmNlbFwiLGQpO0QoXCJjbG9zZVwiLGQpO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RChcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZT0wO2U8bGYubGVuZ3RoO2UrKylEKGxmW2VdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpEKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpEKFwiZXJyb3JcIixcbmQpO0QoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpEKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoZCxmKTtEKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RChcImludmFsaWRcIixkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihkLGYpLEQoXCJpbnZhbGlkXCIsZCl9dWIoYyxmKTtlPW51bGw7Zm9yKHZhciBnIGluIGYpaWYoZi5oYXNPd25Qcm9wZXJ0eShnKSl7dmFyIGg9ZltnXTtcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgaD9kLnRleHRDb250ZW50IT09aCYmKCEwIT09Zi5zdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcmJkFmKGQudGV4dENvbnRlbnQsaCxhKSxlPVtcImNoaWxkcmVuXCIsaF0pOlwibnVtYmVyXCI9PT10eXBlb2YgaCYmZC50ZXh0Q29udGVudCE9PVwiXCIraCYmKCEwIT09Zi5zdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcmJkFmKGQudGV4dENvbnRlbnQsXG5oLGEpLGU9W1wiY2hpbGRyZW5cIixcIlwiK2hdKTplYS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9aCYmXCJvblNjcm9sbFwiPT09ZyYmRChcInNjcm9sbFwiLGQpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShkKTtkYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGQpO2piKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoZC5vbmNsaWNrPUJmKX1kPWU7Yi51cGRhdGVRdWV1ZT1kO251bGwhPT1kJiYoYi5mbGFnc3w9NCl9ZWxzZXtnPTk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50O1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YSYmKGE9a2IoYykpO1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9cInNjcmlwdFwiPT09Yz8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XG5cInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoYyx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChjKSxcInNlbGVjdFwiPT09YyYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsYyk7YVtPZl09YjthW1BmXT1kO0FqKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTthOntnPXZiKGMsZCk7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpEKFwiY2FuY2VsXCIsYSk7RChcImNsb3NlXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RChcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPGxmLmxlbmd0aDtlKyspRChsZltlXSxhKTtlPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkQoXCJlcnJvclwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpEKFwiZXJyb3JcIixcbmEpO0QoXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RChcInRvZ2dsZVwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpaYShhLGQpO2U9WWEoYSxkKTtEKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWQ7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtlPUEoe30sZCx7dmFsdWU6dm9pZCAwfSk7RChcImludmFsaWRcIixhKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihhLGQpO2U9Z2IoYSxkKTtEKFwiaW52YWxpZFwiLGEpO2JyZWFrO2RlZmF1bHQ6ZT1kfXViKGMsZSk7aD1lO2ZvcihmIGluIGgpaWYoaC5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGs9aFtmXTtcInN0eWxlXCI9PT1mP3NiKGEsayk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8oaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1rJiZuYihhLGspKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2Ygaz8oXCJ0ZXh0YXJlYVwiIT09XG5jfHxcIlwiIT09aykmJm9iKGEsayk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZvYihhLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKGVhLmhhc093blByb3BlcnR5KGYpP251bGwhPWsmJlwib25TY3JvbGxcIj09PWYmJkQoXCJzY3JvbGxcIixhKTpudWxsIT1rJiZ0YShhLGYsayxnKSl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGEpO2RiKGEsZCwhMSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoYSk7amIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK1NhKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Zj1kLnZhbHVlO251bGwhPWY/ZmIoYSwhIWQubXVsdGlwbGUsZiwhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJmZiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLFxuITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGUub25DbGljayYmKGEub25jbGljaz1CZil9c3dpdGNoKGMpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6ZD0hIWQuYXV0b0ZvY3VzO2JyZWFrIGE7Y2FzZSBcImltZ1wiOmQ9ITA7YnJlYWsgYTtkZWZhdWx0OmQ9ITF9fWQmJihiLmZsYWdzfD00KX1udWxsIT09Yi5yZWYmJihiLmZsYWdzfD01MTIsYi5mbGFnc3w9MjA5NzE1Mil9UyhiKTtyZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRGooYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHAoMTY2KSk7Yz1IaChHaC5jdXJyZW50KTtIaChFaC5jdXJyZW50KTtpZihHZyhiKSl7ZD1iLnN0YXRlTm9kZTtjPWIubWVtb2l6ZWRQcm9wcztkW09mXT1iO2lmKGY9ZC5ub2RlVmFsdWUhPT1jKWlmKGE9XG54ZyxudWxsIT09YSlzd2l0Y2goYS50YWcpe2Nhc2UgMzpBZihkLm5vZGVWYWx1ZSxjLDAhPT0oYS5tb2RlJjEpKTticmVhaztjYXNlIDU6ITAhPT1hLm1lbW9pemVkUHJvcHMuc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nJiZBZihkLm5vZGVWYWx1ZSxjLDAhPT0oYS5tb2RlJjEpKX1mJiYoYi5mbGFnc3w9NCl9ZWxzZSBkPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksZFtPZl09YixiLnN0YXRlTm9kZT1kfVMoYik7cmV0dXJuIG51bGw7Y2FzZSAxMzpFKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1hfHxudWxsIT09YS5tZW1vaXplZFN0YXRlJiZudWxsIT09YS5tZW1vaXplZFN0YXRlLmRlaHlkcmF0ZWQpe2lmKEkmJm51bGwhPT15ZyYmMCE9PShiLm1vZGUmMSkmJjA9PT0oYi5mbGFncyYxMjgpKUhnKCksSWcoKSxiLmZsYWdzfD05ODU2MCxmPSExO2Vsc2UgaWYoZj1HZyhiKSxudWxsIT09ZCYmbnVsbCE9PWQuZGVoeWRyYXRlZCl7aWYobnVsbD09PVxuYSl7aWYoIWYpdGhyb3cgRXJyb3IocCgzMTgpKTtmPWIubWVtb2l6ZWRTdGF0ZTtmPW51bGwhPT1mP2YuZGVoeWRyYXRlZDpudWxsO2lmKCFmKXRocm93IEVycm9yKHAoMzE3KSk7ZltPZl09Yn1lbHNlIElnKCksMD09PShiLmZsYWdzJjEyOCkmJihiLm1lbW9pemVkU3RhdGU9bnVsbCksYi5mbGFnc3w9NDtTKGIpO2Y9ITF9ZWxzZSBudWxsIT09emcmJihHaih6Zyksemc9bnVsbCksZj0hMDtpZighZilyZXR1cm4gYi5mbGFncyY2NTUzNj9iOm51bGx9aWYoMCE9PShiLmZsYWdzJjEyOCkpcmV0dXJuIGIubGFuZXM9YyxiO2Q9bnVsbCE9PWQ7ZCE9PShudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSkmJmQmJihiLmNoaWxkLmZsYWdzfD04MTkyLDAhPT0oYi5tb2RlJjEpJiYobnVsbD09PWF8fDAhPT0oTS5jdXJyZW50JjEpPzA9PT1UJiYoVD0zKTp1aigpKSk7bnVsbCE9PWIudXBkYXRlUXVldWUmJihiLmZsYWdzfD00KTtTKGIpO3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gSmgoKSxcbkJqKGEsYiksbnVsbD09PWEmJnNmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLFMoYiksbnVsbDtjYXNlIDEwOnJldHVybiBSZyhiLnR5cGUuX2NvbnRleHQpLFMoYiksbnVsbDtjYXNlIDE3OnJldHVybiBaZihiLnR5cGUpJiYkZigpLFMoYiksbnVsbDtjYXNlIDE5OkUoTSk7Zj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWYpcmV0dXJuIFMoYiksbnVsbDtkPTAhPT0oYi5mbGFncyYxMjgpO2c9Zi5yZW5kZXJpbmc7aWYobnVsbD09PWcpaWYoZClFaihmLCExKTtlbHNle2lmKDAhPT1UfHxudWxsIT09YSYmMCE9PShhLmZsYWdzJjEyOCkpZm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2c9TWgoYSk7aWYobnVsbCE9PWcpe2IuZmxhZ3N8PTEyODtFaihmLCExKTtkPWcudXBkYXRlUXVldWU7bnVsbCE9PWQmJihiLnVwZGF0ZVF1ZXVlPWQsYi5mbGFnc3w9NCk7Yi5zdWJ0cmVlRmxhZ3M9MDtkPWM7Zm9yKGM9Yi5jaGlsZDtudWxsIT09YzspZj1jLGE9ZCxmLmZsYWdzJj0xNDY4MDA2Nixcbmc9Zi5hbHRlcm5hdGUsbnVsbD09PWc/KGYuY2hpbGRMYW5lcz0wLGYubGFuZXM9YSxmLmNoaWxkPW51bGwsZi5zdWJ0cmVlRmxhZ3M9MCxmLm1lbW9pemVkUHJvcHM9bnVsbCxmLm1lbW9pemVkU3RhdGU9bnVsbCxmLnVwZGF0ZVF1ZXVlPW51bGwsZi5kZXBlbmRlbmNpZXM9bnVsbCxmLnN0YXRlTm9kZT1udWxsKTooZi5jaGlsZExhbmVzPWcuY2hpbGRMYW5lcyxmLmxhbmVzPWcubGFuZXMsZi5jaGlsZD1nLmNoaWxkLGYuc3VidHJlZUZsYWdzPTAsZi5kZWxldGlvbnM9bnVsbCxmLm1lbW9pemVkUHJvcHM9Zy5tZW1vaXplZFByb3BzLGYubWVtb2l6ZWRTdGF0ZT1nLm1lbW9pemVkU3RhdGUsZi51cGRhdGVRdWV1ZT1nLnVwZGF0ZVF1ZXVlLGYudHlwZT1nLnR5cGUsYT1nLmRlcGVuZGVuY2llcyxmLmRlcGVuZGVuY2llcz1udWxsPT09YT9udWxsOntsYW5lczphLmxhbmVzLGZpcnN0Q29udGV4dDphLmZpcnN0Q29udGV4dH0pLGM9Yy5zaWJsaW5nO0coTSxNLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1hPVxuYS5zaWJsaW5nfW51bGwhPT1mLnRhaWwmJkIoKT5IaiYmKGIuZmxhZ3N8PTEyOCxkPSEwLEVqKGYsITEpLGIubGFuZXM9NDE5NDMwNCl9ZWxzZXtpZighZClpZihhPU1oKGcpLG51bGwhPT1hKXtpZihiLmZsYWdzfD0xMjgsZD0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5mbGFnc3w9NCksRWooZiwhMCksbnVsbD09PWYudGFpbCYmXCJoaWRkZW5cIj09PWYudGFpbE1vZGUmJiFnLmFsdGVybmF0ZSYmIUkpcmV0dXJuIFMoYiksbnVsbH1lbHNlIDIqQigpLWYucmVuZGVyaW5nU3RhcnRUaW1lPkhqJiYxMDczNzQxODI0IT09YyYmKGIuZmxhZ3N8PTEyOCxkPSEwLEVqKGYsITEpLGIubGFuZXM9NDE5NDMwNCk7Zi5pc0JhY2t3YXJkcz8oZy5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1nKTooYz1mLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWc6Yi5jaGlsZD1nLGYubGFzdD1nKX1pZihudWxsIT09Zi50YWlsKXJldHVybiBiPWYudGFpbCxmLnJlbmRlcmluZz1cbmIsZi50YWlsPWIuc2libGluZyxmLnJlbmRlcmluZ1N0YXJ0VGltZT1CKCksYi5zaWJsaW5nPW51bGwsYz1NLmN1cnJlbnQsRyhNLGQ/YyYxfDI6YyYxKSxiO1MoYik7cmV0dXJuIG51bGw7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiBJaigpLGQ9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSxudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSE9PWQmJihiLmZsYWdzfD04MTkyKSxkJiYwIT09KGIubW9kZSYxKT8wIT09KGdqJjEwNzM3NDE4MjQpJiYoUyhiKSxiLnN1YnRyZWVGbGFncyY2JiYoYi5mbGFnc3w9ODE5MikpOlMoYiksbnVsbDtjYXNlIDI0OnJldHVybiBudWxsO2Nhc2UgMjU6cmV0dXJuIG51bGx9dGhyb3cgRXJyb3IocCgxNTYsYi50YWcpKTt9XG5mdW5jdGlvbiBKaihhLGIpe3dnKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAxOnJldHVybiBaZihiLnR5cGUpJiYkZigpLGE9Yi5mbGFncyxhJjY1NTM2PyhiLmZsYWdzPWEmLTY1NTM3fDEyOCxiKTpudWxsO2Nhc2UgMzpyZXR1cm4gSmgoKSxFKFdmKSxFKEgpLE9oKCksYT1iLmZsYWdzLDAhPT0oYSY2NTUzNikmJjA9PT0oYSYxMjgpPyhiLmZsYWdzPWEmLTY1NTM3fDEyOCxiKTpudWxsO2Nhc2UgNTpyZXR1cm4gTGgoYiksbnVsbDtjYXNlIDEzOkUoTSk7YT1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQpe2lmKG51bGw9PT1iLmFsdGVybmF0ZSl0aHJvdyBFcnJvcihwKDM0MCkpO0lnKCl9YT1iLmZsYWdzO3JldHVybiBhJjY1NTM2PyhiLmZsYWdzPWEmLTY1NTM3fDEyOCxiKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEUoTSksbnVsbDtjYXNlIDQ6cmV0dXJuIEpoKCksbnVsbDtjYXNlIDEwOnJldHVybiBSZyhiLnR5cGUuX2NvbnRleHQpLG51bGw7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiBJaigpLFxubnVsbDtjYXNlIDI0OnJldHVybiBudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fXZhciBLaj0hMSxVPSExLExqPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0LFY9bnVsbDtmdW5jdGlvbiBNaihhLGIpe3ZhciBjPWEucmVmO2lmKG51bGwhPT1jKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjKXRyeXtjKG51bGwpfWNhdGNoKGQpe1coYSxiLGQpfWVsc2UgYy5jdXJyZW50PW51bGx9ZnVuY3Rpb24gTmooYSxiLGMpe3RyeXtjKCl9Y2F0Y2goZCl7VyhhLGIsZCl9fXZhciBPaj0hMTtcbmZ1bmN0aW9uIFBqKGEsYil7Q2Y9ZGQ7YT1NZSgpO2lmKE5lKGEpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBhKXZhciBjPXtzdGFydDphLnNlbGVjdGlvblN0YXJ0LGVuZDphLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntjPShjPWEub3duZXJEb2N1bWVudCkmJmMuZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgZD1jLmdldFNlbGVjdGlvbiYmYy5nZXRTZWxlY3Rpb24oKTtpZihkJiYwIT09ZC5yYW5nZUNvdW50KXtjPWQuYW5jaG9yTm9kZTt2YXIgZT1kLmFuY2hvck9mZnNldCxmPWQuZm9jdXNOb2RlO2Q9ZC5mb2N1c09mZnNldDt0cnl7Yy5ub2RlVHlwZSxmLm5vZGVUeXBlfWNhdGNoKEYpe2M9bnVsbDticmVhayBhfXZhciBnPTAsaD0tMSxrPS0xLGw9MCxtPTAscT1hLHI9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB5Ozspe3EhPT1jfHwwIT09ZSYmMyE9PXEubm9kZVR5cGV8fChoPWcrZSk7cSE9PWZ8fDAhPT1kJiYzIT09cS5ub2RlVHlwZXx8KGs9ZytkKTszPT09cS5ub2RlVHlwZSYmKGcrPVxucS5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KHk9cS5maXJzdENoaWxkKSlicmVhaztyPXE7cT15fWZvcig7Oyl7aWYocT09PWEpYnJlYWsgYjtyPT09YyYmKytsPT09ZSYmKGg9Zyk7cj09PWYmJisrbT09PWQmJihrPWcpO2lmKG51bGwhPT0oeT1xLm5leHRTaWJsaW5nKSlicmVhaztxPXI7cj1xLnBhcmVudE5vZGV9cT15fWM9LTE9PT1ofHwtMT09PWs/bnVsbDp7c3RhcnQ6aCxlbmQ6a319ZWxzZSBjPW51bGx9Yz1jfHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBjPW51bGw7RGY9e2ZvY3VzZWRFbGVtOmEsc2VsZWN0aW9uUmFuZ2U6Y307ZGQ9ITE7Zm9yKFY9YjtudWxsIT09VjspaWYoYj1WLGE9Yi5jaGlsZCwwIT09KGIuc3VidHJlZUZsYWdzJjEwMjgpJiZudWxsIT09YSlhLnJldHVybj1iLFY9YTtlbHNlIGZvcig7bnVsbCE9PVY7KXtiPVY7dHJ5e3ZhciBuPWIuYWx0ZXJuYXRlO2lmKDAhPT0oYi5mbGFncyYxMDI0KSlzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6YnJlYWs7XG5jYXNlIDE6aWYobnVsbCE9PW4pe3ZhciB0PW4ubWVtb2l6ZWRQcm9wcyxKPW4ubWVtb2l6ZWRTdGF0ZSx4PWIuc3RhdGVOb2RlLHc9eC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP3Q6TGcoYi50eXBlLHQpLEopO3guX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9d31icmVhaztjYXNlIDM6dmFyIHU9Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzsxPT09dS5ub2RlVHlwZT91LnRleHRDb250ZW50PVwiXCI6OT09PXUubm9kZVR5cGUmJnUuZG9jdW1lbnRFbGVtZW50JiZ1LnJlbW92ZUNoaWxkKHUuZG9jdW1lbnRFbGVtZW50KTticmVhaztjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IocCgxNjMpKTt9fWNhdGNoKEYpe1coYixiLnJldHVybixGKX1hPWIuc2libGluZztpZihudWxsIT09YSl7YS5yZXR1cm49Yi5yZXR1cm47Vj1hO2JyZWFrfVY9Yi5yZXR1cm59bj1PajtPaj0hMTtyZXR1cm4gbn1cbmZ1bmN0aW9uIFFqKGEsYixjKXt2YXIgZD1iLnVwZGF0ZVF1ZXVlO2Q9bnVsbCE9PWQ/ZC5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWQpe3ZhciBlPWQ9ZC5uZXh0O2Rve2lmKChlLnRhZyZhKT09PWEpe3ZhciBmPWUuZGVzdHJveTtlLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWYmJk5qKGIsYyxmKX1lPWUubmV4dH13aGlsZShlIT09ZCl9fWZ1bmN0aW9uIFJqKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuY3JlYXRlO2MuZGVzdHJveT1kKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1mdW5jdGlvbiBTaihhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09Yil7dmFyIGM9YS5zdGF0ZU5vZGU7c3dpdGNoKGEudGFnKXtjYXNlIDU6YT1jO2JyZWFrO2RlZmF1bHQ6YT1jfVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yi5jdXJyZW50PWF9fVxuZnVuY3Rpb24gVGooYSl7dmFyIGI9YS5hbHRlcm5hdGU7bnVsbCE9PWImJihhLmFsdGVybmF0ZT1udWxsLFRqKGIpKTthLmNoaWxkPW51bGw7YS5kZWxldGlvbnM9bnVsbDthLnNpYmxpbmc9bnVsbDs1PT09YS50YWcmJihiPWEuc3RhdGVOb2RlLG51bGwhPT1iJiYoZGVsZXRlIGJbT2ZdLGRlbGV0ZSBiW1BmXSxkZWxldGUgYltvZl0sZGVsZXRlIGJbUWZdLGRlbGV0ZSBiW1JmXSkpO2Euc3RhdGVOb2RlPW51bGw7YS5yZXR1cm49bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5zdGF0ZU5vZGU9bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGx9ZnVuY3Rpb24gVWooYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBWaihhKXthOmZvcig7Oyl7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxVaihhLnJldHVybikpcmV0dXJuIG51bGw7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2ZvcihhPWEuc2libGluZzs1IT09YS50YWcmJjYhPT1hLnRhZyYmMTghPT1hLnRhZzspe2lmKGEuZmxhZ3MmMiljb250aW51ZSBhO2lmKG51bGw9PT1hLmNoaWxkfHw0PT09YS50YWcpY29udGludWUgYTtlbHNlIGEuY2hpbGQucmV0dXJuPWEsYT1hLmNoaWxkfWlmKCEoYS5mbGFncyYyKSlyZXR1cm4gYS5zdGF0ZU5vZGV9fVxuZnVuY3Rpb24gV2ooYSxiLGMpe3ZhciBkPWEudGFnO2lmKDU9PT1kfHw2PT09ZClhPWEuc3RhdGVOb2RlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPUJmKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFdqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspV2ooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gWGooYSxiLGMpe3ZhciBkPWEudGFnO2lmKDU9PT1kfHw2PT09ZClhPWEuc3RhdGVOb2RlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihYaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVhqKGEsYixjKSxhPWEuc2libGluZ312YXIgWD1udWxsLFlqPSExO2Z1bmN0aW9uIFpqKGEsYixjKXtmb3IoYz1jLmNoaWxkO251bGwhPT1jOylhayhhLGIsYyksYz1jLnNpYmxpbmd9XG5mdW5jdGlvbiBhayhhLGIsYyl7aWYobGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBsYy5vbkNvbW1pdEZpYmVyVW5tb3VudCl0cnl7bGMub25Db21taXRGaWJlclVubW91bnQoa2MsYyl9Y2F0Y2goaCl7fXN3aXRjaChjLnRhZyl7Y2FzZSA1OlV8fE1qKGMsYik7Y2FzZSA2OnZhciBkPVgsZT1ZajtYPW51bGw7WmooYSxiLGMpO1g9ZDtZaj1lO251bGwhPT1YJiYoWWo/KGE9WCxjPWMuc3RhdGVOb2RlLDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjKTphLnJlbW92ZUNoaWxkKGMpKTpYLnJlbW92ZUNoaWxkKGMuc3RhdGVOb2RlKSk7YnJlYWs7Y2FzZSAxODpudWxsIT09WCYmKFlqPyhhPVgsYz1jLnN0YXRlTm9kZSw4PT09YS5ub2RlVHlwZT9LZihhLnBhcmVudE5vZGUsYyk6MT09PWEubm9kZVR5cGUmJktmKGEsYyksYmQoYSkpOktmKFgsYy5zdGF0ZU5vZGUpKTticmVhaztjYXNlIDQ6ZD1YO2U9WWo7WD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO1lqPSEwO1xuWmooYSxiLGMpO1g9ZDtZaj1lO2JyZWFrO2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTppZighVSYmKGQ9Yy51cGRhdGVRdWV1ZSxudWxsIT09ZCYmKGQ9ZC5sYXN0RWZmZWN0LG51bGwhPT1kKSkpe2U9ZD1kLm5leHQ7ZG97dmFyIGY9ZSxnPWYuZGVzdHJveTtmPWYudGFnO3ZvaWQgMCE9PWcmJigwIT09KGYmMik/TmooYyxiLGcpOjAhPT0oZiY0KSYmTmooYyxiLGcpKTtlPWUubmV4dH13aGlsZShlIT09ZCl9WmooYSxiLGMpO2JyZWFrO2Nhc2UgMTppZighVSYmKE1qKGMsYiksZD1jLnN0YXRlTm9kZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnRXaWxsVW5tb3VudCkpdHJ5e2QucHJvcHM9Yy5tZW1vaXplZFByb3BzLGQuc3RhdGU9Yy5tZW1vaXplZFN0YXRlLGQuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChoKXtXKGMsYixoKX1aaihhLGIsYyk7YnJlYWs7Y2FzZSAyMTpaaihhLGIsYyk7YnJlYWs7Y2FzZSAyMjpjLm1vZGUmMT8oVT0oZD1VKXx8bnVsbCE9PVxuYy5tZW1vaXplZFN0YXRlLFpqKGEsYixjKSxVPWQpOlpqKGEsYixjKTticmVhaztkZWZhdWx0OlpqKGEsYixjKX19ZnVuY3Rpb24gYmsoYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgTGopO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1jay5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbmZ1bmN0aW9uIGRrKGEsYil7dmFyIGM9Yi5kZWxldGlvbnM7aWYobnVsbCE9PWMpZm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPWNbZF07dHJ5e3ZhciBmPWEsZz1iLGg9ZzthOmZvcig7bnVsbCE9PWg7KXtzd2l0Y2goaC50YWcpe2Nhc2UgNTpYPWguc3RhdGVOb2RlO1lqPSExO2JyZWFrIGE7Y2FzZSAzOlg9aC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztZaj0hMDticmVhayBhO2Nhc2UgNDpYPWguc3RhdGVOb2RlLmNvbnRhaW5lckluZm87WWo9ITA7YnJlYWsgYX1oPWgucmV0dXJufWlmKG51bGw9PT1YKXRocm93IEVycm9yKHAoMTYwKSk7YWsoZixnLGUpO1g9bnVsbDtZaj0hMTt2YXIgaz1lLmFsdGVybmF0ZTtudWxsIT09ayYmKGsucmV0dXJuPW51bGwpO2UucmV0dXJuPW51bGx9Y2F0Y2gobCl7VyhlLGIsbCl9fWlmKGIuc3VidHJlZUZsYWdzJjEyODU0KWZvcihiPWIuY2hpbGQ7bnVsbCE9PWI7KWVrKGIsYSksYj1iLnNpYmxpbmd9XG5mdW5jdGlvbiBlayhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlLGQ9YS5mbGFncztzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpkayhiLGEpO2ZrKGEpO2lmKGQmNCl7dHJ5e1FqKDMsYSxhLnJldHVybiksUmooMyxhKX1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9dHJ5e1FqKDUsYSxhLnJldHVybil9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1icmVhaztjYXNlIDE6ZGsoYixhKTtmayhhKTtkJjUxMiYmbnVsbCE9PWMmJk1qKGMsYy5yZXR1cm4pO2JyZWFrO2Nhc2UgNTpkayhiLGEpO2ZrKGEpO2QmNTEyJiZudWxsIT09YyYmTWooYyxjLnJldHVybik7aWYoYS5mbGFncyYzMil7dmFyIGU9YS5zdGF0ZU5vZGU7dHJ5e29iKGUsXCJcIil9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1pZihkJjQmJihlPWEuc3RhdGVOb2RlLG51bGwhPWUpKXt2YXIgZj1hLm1lbW9pemVkUHJvcHMsZz1udWxsIT09Yz9jLm1lbW9pemVkUHJvcHM6ZixoPWEudHlwZSxrPWEudXBkYXRlUXVldWU7XG5hLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWspdHJ5e1wiaW5wdXRcIj09PWgmJlwicmFkaW9cIj09PWYudHlwZSYmbnVsbCE9Zi5uYW1lJiZhYihlLGYpO3ZiKGgsZyk7dmFyIGw9dmIoaCxmKTtmb3IoZz0wO2c8ay5sZW5ndGg7Zys9Mil7dmFyIG09a1tnXSxxPWtbZysxXTtcInN0eWxlXCI9PT1tP3NiKGUscSk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bT9uYihlLHEpOlwiY2hpbGRyZW5cIj09PW0/b2IoZSxxKTp0YShlLG0scSxsKX1zd2l0Y2goaCl7Y2FzZSBcImlucHV0XCI6YmIoZSxmKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihlLGYpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjp2YXIgcj1lLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU7ZS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZi5tdWx0aXBsZTt2YXIgeT1mLnZhbHVlO251bGwhPXk/ZmIoZSwhIWYubXVsdGlwbGUseSwhMSk6ciE9PSEhZi5tdWx0aXBsZSYmKG51bGwhPWYuZGVmYXVsdFZhbHVlP2ZiKGUsISFmLm11bHRpcGxlLFxuZi5kZWZhdWx0VmFsdWUsITApOmZiKGUsISFmLm11bHRpcGxlLGYubXVsdGlwbGU/W106XCJcIiwhMSkpfWVbUGZdPWZ9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1icmVhaztjYXNlIDY6ZGsoYixhKTtmayhhKTtpZihkJjQpe2lmKG51bGw9PT1hLnN0YXRlTm9kZSl0aHJvdyBFcnJvcihwKDE2MikpO2U9YS5zdGF0ZU5vZGU7Zj1hLm1lbW9pemVkUHJvcHM7dHJ5e2Uubm9kZVZhbHVlPWZ9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1icmVhaztjYXNlIDM6ZGsoYixhKTtmayhhKTtpZihkJjQmJm51bGwhPT1jJiZjLm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkKXRyeXtiZChiLmNvbnRhaW5lckluZm8pfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX1icmVhaztjYXNlIDQ6ZGsoYixhKTtmayhhKTticmVhaztjYXNlIDEzOmRrKGIsYSk7ZmsoYSk7ZT1hLmNoaWxkO2UuZmxhZ3MmODE5MiYmKGY9bnVsbCE9PWUubWVtb2l6ZWRTdGF0ZSxlLnN0YXRlTm9kZS5pc0hpZGRlbj1mLCFmfHxcbm51bGwhPT1lLmFsdGVybmF0ZSYmbnVsbCE9PWUuYWx0ZXJuYXRlLm1lbW9pemVkU3RhdGV8fChnaz1CKCkpKTtkJjQmJmJrKGEpO2JyZWFrO2Nhc2UgMjI6bT1udWxsIT09YyYmbnVsbCE9PWMubWVtb2l6ZWRTdGF0ZTthLm1vZGUmMT8oVT0obD1VKXx8bSxkayhiLGEpLFU9bCk6ZGsoYixhKTtmayhhKTtpZihkJjgxOTIpe2w9bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZTtpZigoYS5zdGF0ZU5vZGUuaXNIaWRkZW49bCkmJiFtJiYwIT09KGEubW9kZSYxKSlmb3IoVj1hLG09YS5jaGlsZDtudWxsIT09bTspe2ZvcihxPVY9bTtudWxsIT09Vjspe3I9Vjt5PXIuY2hpbGQ7c3dpdGNoKHIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6UWooNCxyLHIucmV0dXJuKTticmVhaztjYXNlIDE6TWoocixyLnJldHVybik7dmFyIG49ci5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIG4uY29tcG9uZW50V2lsbFVubW91bnQpe2Q9cjtjPXIucmV0dXJuO3RyeXtiPWQsbi5wcm9wcz1cbmIubWVtb2l6ZWRQcm9wcyxuLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZSxuLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2godCl7VyhkLGMsdCl9fWJyZWFrO2Nhc2UgNTpNaihyLHIucmV0dXJuKTticmVhaztjYXNlIDIyOmlmKG51bGwhPT1yLm1lbW9pemVkU3RhdGUpe2hrKHEpO2NvbnRpbnVlfX1udWxsIT09eT8oeS5yZXR1cm49cixWPXkpOmhrKHEpfW09bS5zaWJsaW5nfWE6Zm9yKG09bnVsbCxxPWE7Oyl7aWYoNT09PXEudGFnKXtpZihudWxsPT09bSl7bT1xO3RyeXtlPXEuc3RhdGVOb2RlLGw/KGY9ZS5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5zZXRQcm9wZXJ0eT9mLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmYuZGlzcGxheT1cIm5vbmVcIik6KGg9cS5zdGF0ZU5vZGUsaz1xLm1lbW9pemVkUHJvcHMuc3R5bGUsZz12b2lkIDAhPT1rJiZudWxsIT09ayYmay5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ay5kaXNwbGF5Om51bGwsaC5zdHlsZS5kaXNwbGF5PVxucmIoXCJkaXNwbGF5XCIsZykpfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX19fWVsc2UgaWYoNj09PXEudGFnKXtpZihudWxsPT09bSl0cnl7cS5zdGF0ZU5vZGUubm9kZVZhbHVlPWw/XCJcIjpxLm1lbW9pemVkUHJvcHN9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1lbHNlIGlmKCgyMiE9PXEudGFnJiYyMyE9PXEudGFnfHxudWxsPT09cS5tZW1vaXplZFN0YXRlfHxxPT09YSkmJm51bGwhPT1xLmNoaWxkKXtxLmNoaWxkLnJldHVybj1xO3E9cS5jaGlsZDtjb250aW51ZX1pZihxPT09YSlicmVhayBhO2Zvcig7bnVsbD09PXEuc2libGluZzspe2lmKG51bGw9PT1xLnJldHVybnx8cS5yZXR1cm49PT1hKWJyZWFrIGE7bT09PXEmJihtPW51bGwpO3E9cS5yZXR1cm59bT09PXEmJihtPW51bGwpO3Euc2libGluZy5yZXR1cm49cS5yZXR1cm47cT1xLnNpYmxpbmd9fWJyZWFrO2Nhc2UgMTk6ZGsoYixhKTtmayhhKTtkJjQmJmJrKGEpO2JyZWFrO2Nhc2UgMjE6YnJlYWs7ZGVmYXVsdDpkayhiLFxuYSksZmsoYSl9fWZ1bmN0aW9uIGZrKGEpe3ZhciBiPWEuZmxhZ3M7aWYoYiYyKXt0cnl7YTp7Zm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7aWYoVWooYykpe3ZhciBkPWM7YnJlYWsgYX1jPWMucmV0dXJufXRocm93IEVycm9yKHAoMTYwKSk7fXN3aXRjaChkLnRhZyl7Y2FzZSA1OnZhciBlPWQuc3RhdGVOb2RlO2QuZmxhZ3MmMzImJihvYihlLFwiXCIpLGQuZmxhZ3MmPS0zMyk7dmFyIGY9VmooYSk7WGooYSxmLGUpO2JyZWFrO2Nhc2UgMzpjYXNlIDQ6dmFyIGc9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyxoPVZqKGEpO1dqKGEsaCxnKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMTYxKSk7fX1jYXRjaChrKXtXKGEsYS5yZXR1cm4sayl9YS5mbGFncyY9LTN9YiY0MDk2JiYoYS5mbGFncyY9LTQwOTcpfWZ1bmN0aW9uIGlrKGEsYixjKXtWPWE7amsoYSxiLGMpfVxuZnVuY3Rpb24gamsoYSxiLGMpe2Zvcih2YXIgZD0wIT09KGEubW9kZSYxKTtudWxsIT09Vjspe3ZhciBlPVYsZj1lLmNoaWxkO2lmKDIyPT09ZS50YWcmJmQpe3ZhciBnPW51bGwhPT1lLm1lbW9pemVkU3RhdGV8fEtqO2lmKCFnKXt2YXIgaD1lLmFsdGVybmF0ZSxrPW51bGwhPT1oJiZudWxsIT09aC5tZW1vaXplZFN0YXRlfHxVO2g9S2o7dmFyIGw9VTtLaj1nO2lmKChVPWspJiYhbClmb3IoVj1lO251bGwhPT1WOylnPVYsaz1nLmNoaWxkLDIyPT09Zy50YWcmJm51bGwhPT1nLm1lbW9pemVkU3RhdGU/a2soZSk6bnVsbCE9PWs/KGsucmV0dXJuPWcsVj1rKTprayhlKTtmb3IoO251bGwhPT1mOylWPWYsamsoZixiLGMpLGY9Zi5zaWJsaW5nO1Y9ZTtLaj1oO1U9bH1sayhhLGIsYyl9ZWxzZSAwIT09KGUuc3VidHJlZUZsYWdzJjg3NzIpJiZudWxsIT09Zj8oZi5yZXR1cm49ZSxWPWYpOmxrKGEsYixjKX19XG5mdW5jdGlvbiBsayhhKXtmb3IoO251bGwhPT1WOyl7dmFyIGI9VjtpZigwIT09KGIuZmxhZ3MmODc3Mikpe3ZhciBjPWIuYWx0ZXJuYXRlO3RyeXtpZigwIT09KGIuZmxhZ3MmODc3Mikpc3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlV8fFJqKDUsYik7YnJlYWs7Y2FzZSAxOnZhciBkPWIuc3RhdGVOb2RlO2lmKGIuZmxhZ3MmNCYmIVUpaWYobnVsbD09PWMpZC5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGU9Yi5lbGVtZW50VHlwZT09PWIudHlwZT9jLm1lbW9pemVkUHJvcHM6TGcoYi50eXBlLGMubWVtb2l6ZWRQcm9wcyk7ZC5jb21wb25lbnREaWRVcGRhdGUoZSxjLm1lbW9pemVkU3RhdGUsZC5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9dmFyIGY9Yi51cGRhdGVRdWV1ZTtudWxsIT09ZiYmaWgoYixmLGQpO2JyZWFrO2Nhc2UgMzp2YXIgZz1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1nKXtjPW51bGw7aWYobnVsbCE9PWIuY2hpbGQpc3dpdGNoKGIuY2hpbGQudGFnKXtjYXNlIDU6Yz1cbmIuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpjPWIuY2hpbGQuc3RhdGVOb2RlfWloKGIsZyxjKX1icmVhaztjYXNlIDU6dmFyIGg9Yi5zdGF0ZU5vZGU7aWYobnVsbD09PWMmJmIuZmxhZ3MmNCl7Yz1oO3ZhciBrPWIubWVtb2l6ZWRQcm9wcztzd2l0Y2goYi50eXBlKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOmsuYXV0b0ZvY3VzJiZjLmZvY3VzKCk7YnJlYWs7Y2FzZSBcImltZ1wiOmsuc3JjJiYoYy5zcmM9ay5zcmMpfX1icmVhaztjYXNlIDY6YnJlYWs7Y2FzZSA0OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSAxMzppZihudWxsPT09Yi5tZW1vaXplZFN0YXRlKXt2YXIgbD1iLmFsdGVybmF0ZTtpZihudWxsIT09bCl7dmFyIG09bC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1tKXt2YXIgcT1tLmRlaHlkcmF0ZWQ7bnVsbCE9PXEmJmJkKHEpfX19YnJlYWs7Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjE6Y2FzZSAyMjpjYXNlIDIzOmNhc2UgMjU6YnJlYWs7XG5kZWZhdWx0OnRocm93IEVycm9yKHAoMTYzKSk7fVV8fGIuZmxhZ3MmNTEyJiZTaihiKX1jYXRjaChyKXtXKGIsYi5yZXR1cm4scil9fWlmKGI9PT1hKXtWPW51bGw7YnJlYWt9Yz1iLnNpYmxpbmc7aWYobnVsbCE9PWMpe2MucmV0dXJuPWIucmV0dXJuO1Y9YzticmVha31WPWIucmV0dXJufX1mdW5jdGlvbiBoayhhKXtmb3IoO251bGwhPT1WOyl7dmFyIGI9VjtpZihiPT09YSl7Vj1udWxsO2JyZWFrfXZhciBjPWIuc2libGluZztpZihudWxsIT09Yyl7Yy5yZXR1cm49Yi5yZXR1cm47Vj1jO2JyZWFrfVY9Yi5yZXR1cm59fVxuZnVuY3Rpb24ga2soYSl7Zm9yKDtudWxsIT09Vjspe3ZhciBiPVY7dHJ5e3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp2YXIgYz1iLnJldHVybjt0cnl7UmooNCxiKX1jYXRjaChrKXtXKGIsYyxrKX1icmVhaztjYXNlIDE6dmFyIGQ9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkTW91bnQpe3ZhciBlPWIucmV0dXJuO3RyeXtkLmNvbXBvbmVudERpZE1vdW50KCl9Y2F0Y2goayl7VyhiLGUsayl9fXZhciBmPWIucmV0dXJuO3RyeXtTaihiKX1jYXRjaChrKXtXKGIsZixrKX1icmVhaztjYXNlIDU6dmFyIGc9Yi5yZXR1cm47dHJ5e1NqKGIpfWNhdGNoKGspe1coYixnLGspfX19Y2F0Y2goayl7VyhiLGIucmV0dXJuLGspfWlmKGI9PT1hKXtWPW51bGw7YnJlYWt9dmFyIGg9Yi5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1iLnJldHVybjtWPWg7YnJlYWt9Vj1iLnJldHVybn19XG52YXIgbWs9TWF0aC5jZWlsLG5rPXVhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsb2s9dWEuUmVhY3RDdXJyZW50T3duZXIscGs9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsSz0wLFI9bnVsbCxZPW51bGwsWj0wLGdqPTAsZmo9VWYoMCksVD0wLHFrPW51bGwsaGg9MCxyaz0wLHNrPTAsdGs9bnVsbCx1az1udWxsLGdrPTAsSGo9SW5maW5pdHksdms9bnVsbCxQaT0hMSxRaT1udWxsLFNpPW51bGwsd2s9ITEseGs9bnVsbCx5az0wLHprPTAsQWs9bnVsbCxCaz0tMSxDaz0wO2Z1bmN0aW9uIEwoKXtyZXR1cm4gMCE9PShLJjYpP0IoKTotMSE9PUJrP0JrOkJrPUIoKX1cbmZ1bmN0aW9uIGxoKGEpe2lmKDA9PT0oYS5tb2RlJjEpKXJldHVybiAxO2lmKDAhPT0oSyYyKSYmMCE9PVopcmV0dXJuIFomLVo7aWYobnVsbCE9PUtnLnRyYW5zaXRpb24pcmV0dXJuIDA9PT1DayYmKENrPXljKCkpLENrO2E9QztpZigwIT09YSlyZXR1cm4gYTthPXdpbmRvdy5ldmVudDthPXZvaWQgMD09PWE/MTY6amQoYS50eXBlKTtyZXR1cm4gYX1mdW5jdGlvbiBtaChhLGIsYyxkKXtpZig1MDx6ayl0aHJvdyB6az0wLEFrPW51bGwsRXJyb3IocCgxODUpKTtBYyhhLGMsZCk7aWYoMD09PShLJjIpfHxhIT09UilhPT09UiYmKDA9PT0oSyYyKSYmKHJrfD1jKSw0PT09VCYmRGsoYSxaKSksRWsoYSxkKSwxPT09YyYmMD09PUsmJjA9PT0oYi5tb2RlJjEpJiYoSGo9QigpKzUwMCxmZyYmamcoKSl9XG5mdW5jdGlvbiBFayhhLGIpe3ZhciBjPWEuY2FsbGJhY2tOb2RlO3djKGEsYik7dmFyIGQ9dWMoYSxhPT09Uj9aOjApO2lmKDA9PT1kKW51bGwhPT1jJiZiYyhjKSxhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tQcmlvcml0eT0wO2Vsc2UgaWYoYj1kJi1kLGEuY2FsbGJhY2tQcmlvcml0eSE9PWIpe251bGwhPWMmJmJjKGMpO2lmKDE9PT1iKTA9PT1hLnRhZz9pZyhGay5iaW5kKG51bGwsYSkpOmhnKEZrLmJpbmQobnVsbCxhKSksSmYoZnVuY3Rpb24oKXswPT09KEsmNikmJmpnKCl9KSxjPW51bGw7ZWxzZXtzd2l0Y2goRGMoZCkpe2Nhc2UgMTpjPWZjO2JyZWFrO2Nhc2UgNDpjPWdjO2JyZWFrO2Nhc2UgMTY6Yz1oYzticmVhaztjYXNlIDUzNjg3MDkxMjpjPWpjO2JyZWFrO2RlZmF1bHQ6Yz1oY31jPUdrKGMsSGsuYmluZChudWxsLGEpKX1hLmNhbGxiYWNrUHJpb3JpdHk9YjthLmNhbGxiYWNrTm9kZT1jfX1cbmZ1bmN0aW9uIEhrKGEsYil7Qms9LTE7Q2s9MDtpZigwIT09KEsmNikpdGhyb3cgRXJyb3IocCgzMjcpKTt2YXIgYz1hLmNhbGxiYWNrTm9kZTtpZihJaygpJiZhLmNhbGxiYWNrTm9kZSE9PWMpcmV0dXJuIG51bGw7dmFyIGQ9dWMoYSxhPT09Uj9aOjApO2lmKDA9PT1kKXJldHVybiBudWxsO2lmKDAhPT0oZCYzMCl8fDAhPT0oZCZhLmV4cGlyZWRMYW5lcyl8fGIpYj1KayhhLGQpO2Vsc2V7Yj1kO3ZhciBlPUs7S3w9Mjt2YXIgZj1LaygpO2lmKFIhPT1hfHxaIT09Yil2az1udWxsLEhqPUIoKSs1MDAsTGsoYSxiKTtkbyB0cnl7TWsoKTticmVha31jYXRjaChoKXtOayhhLGgpfXdoaWxlKDEpO1FnKCk7bmsuY3VycmVudD1mO0s9ZTtudWxsIT09WT9iPTA6KFI9bnVsbCxaPTAsYj1UKX1pZigwIT09Yil7Mj09PWImJihlPXhjKGEpLDAhPT1lJiYoZD1lLGI9T2soYSxlKSkpO2lmKDE9PT1iKXRocm93IGM9cWssTGsoYSwwKSxEayhhLGQpLEVrKGEsQigpKSxjO2lmKDY9PT1iKURrKGEsZCk7XG5lbHNle2U9YS5jdXJyZW50LmFsdGVybmF0ZTtpZigwPT09KGQmMzApJiYhUGsoZSkmJihiPUprKGEsZCksMj09PWImJihmPXhjKGEpLDAhPT1mJiYoZD1mLGI9T2soYSxmKSkpLDE9PT1iKSl0aHJvdyBjPXFrLExrKGEsMCksRGsoYSxkKSxFayhhLEIoKSksYzthLmZpbmlzaGVkV29yaz1lO2EuZmluaXNoZWRMYW5lcz1kO3N3aXRjaChiKXtjYXNlIDA6Y2FzZSAxOnRocm93IEVycm9yKHAoMzQ1KSk7Y2FzZSAyOlFrKGEsdWssdmspO2JyZWFrO2Nhc2UgMzpEayhhLGQpO2lmKChkJjEzMDAyMzQyNCk9PT1kJiYoYj1nays1MDAtQigpLDEwPGIpKXtpZigwIT09dWMoYSwwKSlicmVhaztlPWEuc3VzcGVuZGVkTGFuZXM7aWYoKGUmZCkhPT1kKXtMKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZlO2JyZWFrfWEudGltZW91dEhhbmRsZT1GZihRay5iaW5kKG51bGwsYSx1ayx2ayksYik7YnJlYWt9UWsoYSx1ayx2ayk7YnJlYWs7Y2FzZSA0OkRrKGEsZCk7aWYoKGQmNDE5NDI0MCk9PT1cbmQpYnJlYWs7Yj1hLmV2ZW50VGltZXM7Zm9yKGU9LTE7MDxkOyl7dmFyIGc9MzEtb2MoZCk7Zj0xPDxnO2c9YltnXTtnPmUmJihlPWcpO2QmPX5mfWQ9ZTtkPUIoKS1kO2Q9KDEyMD5kPzEyMDo0ODA+ZD80ODA6MTA4MD5kPzEwODA6MTkyMD5kPzE5MjA6M0UzPmQ/M0UzOjQzMjA+ZD80MzIwOjE5NjAqbWsoZC8xOTYwKSktZDtpZigxMDxkKXthLnRpbWVvdXRIYW5kbGU9RmYoUWsuYmluZChudWxsLGEsdWssdmspLGQpO2JyZWFrfVFrKGEsdWssdmspO2JyZWFrO2Nhc2UgNTpRayhhLHVrLHZrKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMzI5KSk7fX19RWsoYSxCKCkpO3JldHVybiBhLmNhbGxiYWNrTm9kZT09PWM/SGsuYmluZChudWxsLGEpOm51bGx9XG5mdW5jdGlvbiBPayhhLGIpe3ZhciBjPXRrO2EuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCYmKExrKGEsYikuZmxhZ3N8PTI1Nik7YT1KayhhLGIpOzIhPT1hJiYoYj11ayx1az1jLG51bGwhPT1iJiZHaihiKSk7cmV0dXJuIGF9ZnVuY3Rpb24gR2ooYSl7bnVsbD09PXVrP3VrPWE6dWsucHVzaC5hcHBseSh1ayxhKX1cbmZ1bmN0aW9uIFBrKGEpe2Zvcih2YXIgYj1hOzspe2lmKGIuZmxhZ3MmMTYzODQpe3ZhciBjPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWMmJihjPWMuc3RvcmVzLG51bGwhPT1jKSlmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9Y1tkXSxmPWUuZ2V0U25hcHNob3Q7ZT1lLnZhbHVlO3RyeXtpZighSGUoZigpLGUpKXJldHVybiExfWNhdGNoKGcpe3JldHVybiExfX19Yz1iLmNoaWxkO2lmKGIuc3VidHJlZUZsYWdzJjE2Mzg0JiZudWxsIT09YyljLnJldHVybj1iLGI9YztlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiEwO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuITB9XG5mdW5jdGlvbiBEayhhLGIpe2ImPX5zaztiJj1+cms7YS5zdXNwZW5kZWRMYW5lc3w9YjthLnBpbmdlZExhbmVzJj1+Yjtmb3IoYT1hLmV4cGlyYXRpb25UaW1lczswPGI7KXt2YXIgYz0zMS1vYyhiKSxkPTE8PGM7YVtjXT0tMTtiJj1+ZH19ZnVuY3Rpb24gRmsoYSl7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzI3KSk7SWsoKTt2YXIgYj11YyhhLDApO2lmKDA9PT0oYiYxKSlyZXR1cm4gRWsoYSxCKCkpLG51bGw7dmFyIGM9SmsoYSxiKTtpZigwIT09YS50YWcmJjI9PT1jKXt2YXIgZD14YyhhKTswIT09ZCYmKGI9ZCxjPU9rKGEsZCkpfWlmKDE9PT1jKXRocm93IGM9cWssTGsoYSwwKSxEayhhLGIpLEVrKGEsQigpKSxjO2lmKDY9PT1jKXRocm93IEVycm9yKHAoMzQ1KSk7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9YjtRayhhLHVrLHZrKTtFayhhLEIoKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBSayhhLGIpe3ZhciBjPUs7S3w9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtLPWMsMD09PUsmJihIaj1CKCkrNTAwLGZnJiZqZygpKX19ZnVuY3Rpb24gU2soYSl7bnVsbCE9PXhrJiYwPT09eGsudGFnJiYwPT09KEsmNikmJklrKCk7dmFyIGI9SztLfD0xO3ZhciBjPXBrLnRyYW5zaXRpb24sZD1DO3RyeXtpZihway50cmFuc2l0aW9uPW51bGwsQz0xLGEpcmV0dXJuIGEoKX1maW5hbGx5e0M9ZCxway50cmFuc2l0aW9uPWMsSz1iLDA9PT0oSyY2KSYmamcoKX19ZnVuY3Rpb24gSWooKXtnaj1mai5jdXJyZW50O0UoZmopfVxuZnVuY3Rpb24gTGsoYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEsR2YoYykpO2lmKG51bGwhPT1ZKWZvcihjPVkucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yzt3ZyhkKTtzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmJGYoKTticmVhaztjYXNlIDM6SmgoKTtFKFdmKTtFKEgpO09oKCk7YnJlYWs7Y2FzZSA1OkxoKGQpO2JyZWFrO2Nhc2UgNDpKaCgpO2JyZWFrO2Nhc2UgMTM6RShNKTticmVhaztjYXNlIDE5OkUoTSk7YnJlYWs7Y2FzZSAxMDpSZyhkLnR5cGUuX2NvbnRleHQpO2JyZWFrO2Nhc2UgMjI6Y2FzZSAyMzpJaigpfWM9Yy5yZXR1cm59Uj1hO1k9YT13aChhLmN1cnJlbnQsbnVsbCk7Wj1naj1iO1Q9MDtxaz1udWxsO3NrPXJrPWhoPTA7dWs9dGs9bnVsbDtpZihudWxsIT09V2cpe2ZvcihiPVxuMDtiPFdnLmxlbmd0aDtiKyspaWYoYz1XZ1tiXSxkPWMuaW50ZXJsZWF2ZWQsbnVsbCE9PWQpe2MuaW50ZXJsZWF2ZWQ9bnVsbDt2YXIgZT1kLm5leHQsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe3ZhciBnPWYubmV4dDtmLm5leHQ9ZTtkLm5leHQ9Z31jLnBlbmRpbmc9ZH1XZz1udWxsfXJldHVybiBhfVxuZnVuY3Rpb24gTmsoYSxiKXtkb3t2YXIgYz1ZO3RyeXtRZygpO1BoLmN1cnJlbnQ9YWk7aWYoU2gpe2Zvcih2YXIgZD1OLm1lbW9pemVkU3RhdGU7bnVsbCE9PWQ7KXt2YXIgZT1kLnF1ZXVlO251bGwhPT1lJiYoZS5wZW5kaW5nPW51bGwpO2Q9ZC5uZXh0fVNoPSExfVJoPTA7UD1PPU49bnVsbDtUaD0hMTtVaD0wO29rLmN1cnJlbnQ9bnVsbDtpZihudWxsPT09Y3x8bnVsbD09PWMucmV0dXJuKXtUPTE7cWs9YjtZPW51bGw7YnJlYWt9YTp7dmFyIGY9YSxnPWMucmV0dXJuLGg9YyxrPWI7Yj1aO2guZmxhZ3N8PTMyNzY4O2lmKG51bGwhPT1rJiZcIm9iamVjdFwiPT09dHlwZW9mIGsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLnRoZW4pe3ZhciBsPWssbT1oLHE9bS50YWc7aWYoMD09PShtLm1vZGUmMSkmJigwPT09cXx8MTE9PT1xfHwxNT09PXEpKXt2YXIgcj1tLmFsdGVybmF0ZTtyPyhtLnVwZGF0ZVF1ZXVlPXIudXBkYXRlUXVldWUsbS5tZW1vaXplZFN0YXRlPXIubWVtb2l6ZWRTdGF0ZSxcbm0ubGFuZXM9ci5sYW5lcyk6KG0udXBkYXRlUXVldWU9bnVsbCxtLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIHk9VmkoZyk7aWYobnVsbCE9PXkpe3kuZmxhZ3MmPS0yNTc7V2koeSxnLGgsZixiKTt5Lm1vZGUmMSYmVGkoZixsLGIpO2I9eTtrPWw7dmFyIG49Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09bil7dmFyIHQ9bmV3IFNldDt0LmFkZChrKTtiLnVwZGF0ZVF1ZXVlPXR9ZWxzZSBuLmFkZChrKTticmVhayBhfWVsc2V7aWYoMD09PShiJjEpKXtUaShmLGwsYik7dWooKTticmVhayBhfWs9RXJyb3IocCg0MjYpKX19ZWxzZSBpZihJJiZoLm1vZGUmMSl7dmFyIEo9VmkoZyk7aWYobnVsbCE9PUopezA9PT0oSi5mbGFncyY2NTUzNikmJihKLmZsYWdzfD0yNTYpO1dpKEosZyxoLGYsYik7SmcoS2koayxoKSk7YnJlYWsgYX19Zj1rPUtpKGssaCk7NCE9PVQmJihUPTIpO251bGw9PT10az90az1bZl06dGsucHVzaChmKTtmPWc7ZG97c3dpdGNoKGYudGFnKXtjYXNlIDM6Zi5mbGFnc3w9NjU1MzY7XG5iJj0tYjtmLmxhbmVzfD1iO3ZhciB4PU9pKGYsayxiKTtmaChmLHgpO2JyZWFrIGE7Y2FzZSAxOmg9azt2YXIgdz1mLnR5cGUsdT1mLnN0YXRlTm9kZTtpZigwPT09KGYuZmxhZ3MmMTI4KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB3LmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PXUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB1LmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVNpfHwhU2kuaGFzKHUpKSkpe2YuZmxhZ3N8PTY1NTM2O2ImPS1iO2YubGFuZXN8PWI7dmFyIEY9UmkoZixoLGIpO2ZoKGYsRik7YnJlYWsgYX19Zj1mLnJldHVybn13aGlsZShudWxsIT09Zil9VGsoYyl9Y2F0Y2gobmEpe2I9bmE7WT09PWMmJm51bGwhPT1jJiYoWT1jPWMucmV0dXJuKTtjb250aW51ZX1icmVha313aGlsZSgxKX1mdW5jdGlvbiBLaygpe3ZhciBhPW5rLmN1cnJlbnQ7bmsuY3VycmVudD1haTtyZXR1cm4gbnVsbD09PWE/YWk6YX1cbmZ1bmN0aW9uIHVqKCl7aWYoMD09PVR8fDM9PT1UfHwyPT09VClUPTQ7bnVsbD09PVJ8fDA9PT0oaGgmMjY4NDM1NDU1KSYmMD09PShyayYyNjg0MzU0NTUpfHxEayhSLFopfWZ1bmN0aW9uIEprKGEsYil7dmFyIGM9SztLfD0yO3ZhciBkPUtrKCk7aWYoUiE9PWF8fFohPT1iKXZrPW51bGwsTGsoYSxiKTtkbyB0cnl7VWsoKTticmVha31jYXRjaChlKXtOayhhLGUpfXdoaWxlKDEpO1FnKCk7Sz1jO25rLmN1cnJlbnQ9ZDtpZihudWxsIT09WSl0aHJvdyBFcnJvcihwKDI2MSkpO1I9bnVsbDtaPTA7cmV0dXJuIFR9ZnVuY3Rpb24gVWsoKXtmb3IoO251bGwhPT1ZOylWayhZKX1mdW5jdGlvbiBNaygpe2Zvcig7bnVsbCE9PVkmJiFjYygpOylWayhZKX1mdW5jdGlvbiBWayhhKXt2YXIgYj1XayhhLmFsdGVybmF0ZSxhLGdqKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWI/VGsoYSk6WT1iO29rLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIFRrKGEpe3ZhciBiPWE7ZG97dmFyIGM9Yi5hbHRlcm5hdGU7YT1iLnJldHVybjtpZigwPT09KGIuZmxhZ3MmMzI3NjgpKXtpZihjPUZqKGMsYixnaiksbnVsbCE9PWMpe1k9YztyZXR1cm59fWVsc2V7Yz1KaihjLGIpO2lmKG51bGwhPT1jKXtjLmZsYWdzJj0zMjc2NztZPWM7cmV0dXJufWlmKG51bGwhPT1hKWEuZmxhZ3N8PTMyNzY4LGEuc3VidHJlZUZsYWdzPTAsYS5kZWxldGlvbnM9bnVsbDtlbHNle1Q9NjtZPW51bGw7cmV0dXJufX1iPWIuc2libGluZztpZihudWxsIT09Yil7WT1iO3JldHVybn1ZPWI9YX13aGlsZShudWxsIT09Yik7MD09PVQmJihUPTUpfWZ1bmN0aW9uIFFrKGEsYixjKXt2YXIgZD1DLGU9cGsudHJhbnNpdGlvbjt0cnl7cGsudHJhbnNpdGlvbj1udWxsLEM9MSxYayhhLGIsYyxkKX1maW5hbGx5e3BrLnRyYW5zaXRpb249ZSxDPWR9cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBYayhhLGIsYyxkKXtkbyBJaygpO3doaWxlKG51bGwhPT14ayk7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzI3KSk7Yz1hLmZpbmlzaGVkV29yazt2YXIgZT1hLmZpbmlzaGVkTGFuZXM7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHAoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrUHJpb3JpdHk9MDt2YXIgZj1jLmxhbmVzfGMuY2hpbGRMYW5lcztCYyhhLGYpO2E9PT1SJiYoWT1SPW51bGwsWj0wKTswPT09KGMuc3VidHJlZUZsYWdzJjIwNjQpJiYwPT09KGMuZmxhZ3MmMjA2NCl8fHdrfHwod2s9ITAsR2soaGMsZnVuY3Rpb24oKXtJaygpO3JldHVybiBudWxsfSkpO2Y9MCE9PShjLmZsYWdzJjE1OTkwKTtpZigwIT09KGMuc3VidHJlZUZsYWdzJjE1OTkwKXx8Zil7Zj1way50cmFuc2l0aW9uO3BrLnRyYW5zaXRpb249bnVsbDtcbnZhciBnPUM7Qz0xO3ZhciBoPUs7S3w9NDtvay5jdXJyZW50PW51bGw7UGooYSxjKTtlayhjLGEpO09lKERmKTtkZD0hIUNmO0RmPUNmPW51bGw7YS5jdXJyZW50PWM7aWsoYyxhLGUpO2RjKCk7Sz1oO0M9Zztway50cmFuc2l0aW9uPWZ9ZWxzZSBhLmN1cnJlbnQ9Yzt3ayYmKHdrPSExLHhrPWEseWs9ZSk7Zj1hLnBlbmRpbmdMYW5lczswPT09ZiYmKFNpPW51bGwpO21jKGMuc3RhdGVOb2RlLGQpO0VrKGEsQigpKTtpZihudWxsIT09Yilmb3IoZD1hLm9uUmVjb3ZlcmFibGVFcnJvcixjPTA7YzxiLmxlbmd0aDtjKyspZT1iW2NdLGQoZS52YWx1ZSx7Y29tcG9uZW50U3RhY2s6ZS5zdGFjayxkaWdlc3Q6ZS5kaWdlc3R9KTtpZihQaSl0aHJvdyBQaT0hMSxhPVFpLFFpPW51bGwsYTswIT09KHlrJjEpJiYwIT09YS50YWcmJklrKCk7Zj1hLnBlbmRpbmdMYW5lczswIT09KGYmMSk/YT09PUFrP3prKys6KHprPTAsQWs9YSk6ems9MDtqZygpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gSWsoKXtpZihudWxsIT09eGspe3ZhciBhPURjKHlrKSxiPXBrLnRyYW5zaXRpb24sYz1DO3RyeXtway50cmFuc2l0aW9uPW51bGw7Qz0xNj5hPzE2OmE7aWYobnVsbD09PXhrKXZhciBkPSExO2Vsc2V7YT14azt4az1udWxsO3lrPTA7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzMxKSk7dmFyIGU9SztLfD00O2ZvcihWPWEuY3VycmVudDtudWxsIT09Vjspe3ZhciBmPVYsZz1mLmNoaWxkO2lmKDAhPT0oVi5mbGFncyYxNikpe3ZhciBoPWYuZGVsZXRpb25zO2lmKG51bGwhPT1oKXtmb3IodmFyIGs9MDtrPGgubGVuZ3RoO2srKyl7dmFyIGw9aFtrXTtmb3IoVj1sO251bGwhPT1WOyl7dmFyIG09Vjtzd2l0Y2gobS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6UWooOCxtLGYpfXZhciBxPW0uY2hpbGQ7aWYobnVsbCE9PXEpcS5yZXR1cm49bSxWPXE7ZWxzZSBmb3IoO251bGwhPT1WOyl7bT1WO3ZhciByPW0uc2libGluZyx5PW0ucmV0dXJuO1RqKG0pO2lmKG09PT1cbmwpe1Y9bnVsbDticmVha31pZihudWxsIT09cil7ci5yZXR1cm49eTtWPXI7YnJlYWt9Vj15fX19dmFyIG49Zi5hbHRlcm5hdGU7aWYobnVsbCE9PW4pe3ZhciB0PW4uY2hpbGQ7aWYobnVsbCE9PXQpe24uY2hpbGQ9bnVsbDtkb3t2YXIgSj10LnNpYmxpbmc7dC5zaWJsaW5nPW51bGw7dD1KfXdoaWxlKG51bGwhPT10KX19Vj1mfX1pZigwIT09KGYuc3VidHJlZUZsYWdzJjIwNjQpJiZudWxsIT09ZylnLnJldHVybj1mLFY9ZztlbHNlIGI6Zm9yKDtudWxsIT09Vjspe2Y9VjtpZigwIT09KGYuZmxhZ3MmMjA0OCkpc3dpdGNoKGYudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlFqKDksZixmLnJldHVybil9dmFyIHg9Zi5zaWJsaW5nO2lmKG51bGwhPT14KXt4LnJldHVybj1mLnJldHVybjtWPXg7YnJlYWsgYn1WPWYucmV0dXJufX12YXIgdz1hLmN1cnJlbnQ7Zm9yKFY9dztudWxsIT09Vjspe2c9Vjt2YXIgdT1nLmNoaWxkO2lmKDAhPT0oZy5zdWJ0cmVlRmxhZ3MmMjA2NCkmJm51bGwhPT1cbnUpdS5yZXR1cm49ZyxWPXU7ZWxzZSBiOmZvcihnPXc7bnVsbCE9PVY7KXtoPVY7aWYoMCE9PShoLmZsYWdzJjIwNDgpKXRyeXtzd2l0Y2goaC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6UmooOSxoKX19Y2F0Y2gobmEpe1coaCxoLnJldHVybixuYSl9aWYoaD09PWcpe1Y9bnVsbDticmVhayBifXZhciBGPWguc2libGluZztpZihudWxsIT09Ril7Ri5yZXR1cm49aC5yZXR1cm47Vj1GO2JyZWFrIGJ9Vj1oLnJldHVybn19Sz1lO2pnKCk7aWYobGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBsYy5vblBvc3RDb21taXRGaWJlclJvb3QpdHJ5e2xjLm9uUG9zdENvbW1pdEZpYmVyUm9vdChrYyxhKX1jYXRjaChuYSl7fWQ9ITB9cmV0dXJuIGR9ZmluYWxseXtDPWMscGsudHJhbnNpdGlvbj1ifX1yZXR1cm4hMX1mdW5jdGlvbiBZayhhLGIsYyl7Yj1LaShjLGIpO2I9T2koYSxiLDEpO2E9ZGgoYSxiLDEpO2I9TCgpO251bGwhPT1hJiYoQWMoYSwxLGIpLEVrKGEsYikpfVxuZnVuY3Rpb24gVyhhLGIsYyl7aWYoMz09PWEudGFnKVlrKGEsYSxjKTtlbHNlIGZvcig7bnVsbCE9PWI7KXtpZigzPT09Yi50YWcpe1lrKGIsYSxjKTticmVha31lbHNlIGlmKDE9PT1iLnRhZyl7dmFyIGQ9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVNpfHwhU2kuaGFzKGQpKSl7YT1LaShjLGEpO2E9UmkoYixhLDEpO2I9ZGgoYixhLDEpO2E9TCgpO251bGwhPT1iJiYoQWMoYiwxLGEpLEVrKGIsYSkpO2JyZWFrfX1iPWIucmV0dXJufX1cbmZ1bmN0aW9uIFVpKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7Yj1MKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZjO1I9PT1hJiYoWiZjKT09PWMmJig0PT09VHx8Mz09PVQmJihaJjEzMDAyMzQyNCk9PT1aJiY1MDA+QigpLWdrP0xrKGEsMCk6c2t8PWMpO0VrKGEsYil9ZnVuY3Rpb24gWmsoYSxiKXswPT09YiYmKDA9PT0oYS5tb2RlJjEpP2I9MTooYj1zYyxzYzw8PTEsMD09PShzYyYxMzAwMjM0MjQpJiYoc2M9NDE5NDMwNCkpKTt2YXIgYz1MKCk7YT1aZyhhLGIpO251bGwhPT1hJiYoQWMoYSxiLGMpLEVrKGEsYykpfWZ1bmN0aW9uIHZqKGEpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZSxjPTA7bnVsbCE9PWImJihjPWIucmV0cnlMYW5lKTtaayhhLGMpfVxuZnVuY3Rpb24gY2soYSxiKXt2YXIgYz0wO3N3aXRjaChhLnRhZyl7Y2FzZSAxMzp2YXIgZD1hLnN0YXRlTm9kZTt2YXIgZT1hLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihjPWUucmV0cnlMYW5lKTticmVhaztjYXNlIDE5OmQ9YS5zdGF0ZU5vZGU7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihwKDMxNCkpO31udWxsIT09ZCYmZC5kZWxldGUoYik7WmsoYSxjKX12YXIgV2s7XG5Xaz1mdW5jdGlvbihhLGIsYyl7aWYobnVsbCE9PWEpaWYoYS5tZW1vaXplZFByb3BzIT09Yi5wZW5kaW5nUHJvcHN8fFdmLmN1cnJlbnQpVWc9ITA7ZWxzZXtpZigwPT09KGEubGFuZXMmYykmJjA9PT0oYi5mbGFncyYxMjgpKXJldHVybiBVZz0hMSx6aihhLGIsYyk7VWc9MCE9PShhLmZsYWdzJjEzMTA3Mik/ITA6ITF9ZWxzZSBVZz0hMSxJJiYwIT09KGIuZmxhZ3MmMTA0ODU3NikmJnVnKGIsbmcsYi5pbmRleCk7Yi5sYW5lcz0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOnZhciBkPWIudHlwZTtqaihhLGIpO2E9Yi5wZW5kaW5nUHJvcHM7dmFyIGU9WWYoYixILmN1cnJlbnQpO1RnKGIsYyk7ZT1YaChudWxsLGIsZCxhLGUsYyk7dmFyIGY9YmkoKTtiLmZsYWdzfD0xO1wib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZj8oYi50YWc9MSxiLm1lbW9pemVkU3RhdGU9bnVsbCxiLnVwZGF0ZVF1ZXVlPVxubnVsbCxaZihkKT8oZj0hMCxjZyhiKSk6Zj0hMSxiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsLGFoKGIpLGUudXBkYXRlcj1uaCxiLnN0YXRlTm9kZT1lLGUuX3JlYWN0SW50ZXJuYWxzPWIscmgoYixkLGEsYyksYj1raihudWxsLGIsZCwhMCxmLGMpKTooYi50YWc9MCxJJiZmJiZ2ZyhiKSxZaShudWxsLGIsZSxjKSxiPWIuY2hpbGQpO3JldHVybiBiO2Nhc2UgMTY6ZD1iLmVsZW1lbnRUeXBlO2E6e2pqKGEsYik7YT1iLnBlbmRpbmdQcm9wcztlPWQuX2luaXQ7ZD1lKGQuX3BheWxvYWQpO2IudHlwZT1kO2U9Yi50YWc9JGsoZCk7YT1MZyhkLGEpO3N3aXRjaChlKXtjYXNlIDA6Yj1kaihudWxsLGIsZCxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9aWoobnVsbCxiLGQsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1aaShudWxsLGIsZCxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWFqKG51bGwsYixkLExnKGQudHlwZSxhKSxjKTticmVhayBhfXRocm93IEVycm9yKHAoMzA2LFxuZCxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TGcoZCxlKSxkaihhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TGcoZCxlKSxpaihhLGIsZCxlLGMpO2Nhc2UgMzphOntsaihiKTtpZihudWxsPT09YSl0aHJvdyBFcnJvcihwKDM4NykpO2Q9Yi5wZW5kaW5nUHJvcHM7Zj1iLm1lbW9pemVkU3RhdGU7ZT1mLmVsZW1lbnQ7YmgoYSxiKTtnaChiLGQsbnVsbCxjKTt2YXIgZz1iLm1lbW9pemVkU3RhdGU7ZD1nLmVsZW1lbnQ7aWYoZi5pc0RlaHlkcmF0ZWQpaWYoZj17ZWxlbWVudDpkLGlzRGVoeWRyYXRlZDohMSxjYWNoZTpnLmNhY2hlLHBlbmRpbmdTdXNwZW5zZUJvdW5kYXJpZXM6Zy5wZW5kaW5nU3VzcGVuc2VCb3VuZGFyaWVzLHRyYW5zaXRpb25zOmcudHJhbnNpdGlvbnN9LGIudXBkYXRlUXVldWUuYmFzZVN0YXRlPVxuZixiLm1lbW9pemVkU3RhdGU9ZixiLmZsYWdzJjI1Nil7ZT1LaShFcnJvcihwKDQyMykpLGIpO2I9bWooYSxiLGQsYyxlKTticmVhayBhfWVsc2UgaWYoZCE9PWUpe2U9S2koRXJyb3IocCg0MjQpKSxiKTtiPW1qKGEsYixkLGMsZSk7YnJlYWsgYX1lbHNlIGZvcih5Zz1MZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLHhnPWIsST0hMCx6Zz1udWxsLGM9Q2goYixudWxsLGQsYyksYi5jaGlsZD1jO2M7KWMuZmxhZ3M9Yy5mbGFncyYtM3w0MDk2LGM9Yy5zaWJsaW5nO2Vsc2V7SWcoKTtpZihkPT09ZSl7Yj0kaShhLGIsYyk7YnJlYWsgYX1ZaShhLGIsZCxjKX1iPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBLaChiKSxudWxsPT09YSYmRWcoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLGc9ZS5jaGlsZHJlbixFZihkLGUpP2c9bnVsbDpudWxsIT09ZiYmRWYoZCxmKSYmKGIuZmxhZ3N8PTMyKSxcbmhqKGEsYiksWWkoYSxiLGcsYyksYi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZFZyhiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHBqKGEsYixjKTtjYXNlIDQ6cmV0dXJuIEloKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPUJoKGIsbnVsbCxkLGMpOllpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TGcoZCxlKSxaaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gWWkoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBZaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBZaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zj1iLm1lbW9pemVkUHJvcHM7XG5nPWUudmFsdWU7RyhNZyxkLl9jdXJyZW50VmFsdWUpO2QuX2N1cnJlbnRWYWx1ZT1nO2lmKG51bGwhPT1mKWlmKEhlKGYudmFsdWUsZykpe2lmKGYuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhV2YuY3VycmVudCl7Yj0kaShhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoZj1iLmNoaWxkLG51bGwhPT1mJiYoZi5yZXR1cm49Yik7bnVsbCE9PWY7KXt2YXIgaD1mLmRlcGVuZGVuY2llcztpZihudWxsIT09aCl7Zz1mLmNoaWxkO2Zvcih2YXIgaz1oLmZpcnN0Q29udGV4dDtudWxsIT09azspe2lmKGsuY29udGV4dD09PWQpe2lmKDE9PT1mLnRhZyl7az1jaCgtMSxjJi1jKTtrLnRhZz0yO3ZhciBsPWYudXBkYXRlUXVldWU7aWYobnVsbCE9PWwpe2w9bC5zaGFyZWQ7dmFyIG09bC5wZW5kaW5nO251bGw9PT1tP2submV4dD1rOihrLm5leHQ9bS5uZXh0LG0ubmV4dD1rKTtsLnBlbmRpbmc9a319Zi5sYW5lc3w9YztrPWYuYWx0ZXJuYXRlO251bGwhPT1rJiYoay5sYW5lc3w9Yyk7U2coZi5yZXR1cm4sXG5jLGIpO2gubGFuZXN8PWM7YnJlYWt9az1rLm5leHR9fWVsc2UgaWYoMTA9PT1mLnRhZylnPWYudHlwZT09PWIudHlwZT9udWxsOmYuY2hpbGQ7ZWxzZSBpZigxOD09PWYudGFnKXtnPWYucmV0dXJuO2lmKG51bGw9PT1nKXRocm93IEVycm9yKHAoMzQxKSk7Zy5sYW5lc3w9YztoPWcuYWx0ZXJuYXRlO251bGwhPT1oJiYoaC5sYW5lc3w9Yyk7U2coZyxjLGIpO2c9Zi5zaWJsaW5nfWVsc2UgZz1mLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWY7ZWxzZSBmb3IoZz1mO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31mPWcuc2libGluZztpZihudWxsIT09Zil7Zi5yZXR1cm49Zy5yZXR1cm47Zz1mO2JyZWFrfWc9Zy5yZXR1cm59Zj1nfVlpKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGQ9Yi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sVGcoYixjKSxlPVZnKGUpLGQ9ZChlKSxiLmZsYWdzfD0xLFlpKGEsYixkLGMpLFxuYi5jaGlsZDtjYXNlIDE0OnJldHVybiBkPWIudHlwZSxlPUxnKGQsYi5wZW5kaW5nUHJvcHMpLGU9TGcoZC50eXBlLGUpLGFqKGEsYixkLGUsYyk7Y2FzZSAxNTpyZXR1cm4gY2ooYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMZyhkLGUpLGpqKGEsYiksYi50YWc9MSxaZihkKT8oYT0hMCxjZyhiKSk6YT0hMSxUZyhiLGMpLHBoKGIsZCxlKSxyaChiLGQsZSxjKSxraihudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIHlqKGEsYixjKTtjYXNlIDIyOnJldHVybiBlaihhLGIsYyl9dGhyb3cgRXJyb3IocCgxNTYsYi50YWcpKTt9O2Z1bmN0aW9uIEdrKGEsYil7cmV0dXJuIGFjKGEsYil9XG5mdW5jdGlvbiBhbChhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuc3VidHJlZUZsYWdzPXRoaXMuZmxhZ3M9MDt0aGlzLmRlbGV0aW9ucz1udWxsO3RoaXMuY2hpbGRMYW5lcz10aGlzLmxhbmVzPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBCZyhhLGIsYyxkKXtyZXR1cm4gbmV3IGFsKGEsYixjLGQpfWZ1bmN0aW9uIGJqKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9XG5mdW5jdGlvbiAkayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYmooYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PURhKXJldHVybiAxMTtpZihhPT09R2EpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gd2goYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1CZyhhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLnR5cGU9YS50eXBlLGMuZmxhZ3M9MCxjLnN1YnRyZWVGbGFncz0wLGMuZGVsZXRpb25zPW51bGwpO2MuZmxhZ3M9YS5mbGFncyYxNDY4MDA2NDtjLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzO2MubGFuZXM9YS5sYW5lcztjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2xhbmVzOmIubGFuZXMsZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0fTtcbmMuc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24geWgoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWJqKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIHlhOnJldHVybiBBaChjLmNoaWxkcmVuLGUsZixiKTtjYXNlIHphOmc9ODtlfD04O2JyZWFrO2Nhc2UgQWE6cmV0dXJuIGE9QmcoMTIsYyxiLGV8MiksYS5lbGVtZW50VHlwZT1BYSxhLmxhbmVzPWYsYTtjYXNlIEVhOnJldHVybiBhPUJnKDEzLGMsYixlKSxhLmVsZW1lbnRUeXBlPUVhLGEubGFuZXM9ZixhO2Nhc2UgRmE6cmV0dXJuIGE9QmcoMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9RmEsYS5sYW5lcz1mLGE7Y2FzZSBJYTpyZXR1cm4gcWooYyxlLGYsYik7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIEJhOmc9MTA7YnJlYWsgYTtjYXNlIENhOmc9OTticmVhayBhO2Nhc2UgRGE6Zz0xMTtcbmJyZWFrIGE7Y2FzZSBHYTpnPTE0O2JyZWFrIGE7Y2FzZSBIYTpnPTE2O2Q9bnVsbDticmVhayBhfXRocm93IEVycm9yKHAoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9QmcoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IubGFuZXM9ZjtyZXR1cm4gYn1mdW5jdGlvbiBBaChhLGIsYyxkKXthPUJnKDcsYSxkLGIpO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiBxaihhLGIsYyxkKXthPUJnKDIyLGEsZCxiKTthLmVsZW1lbnRUeXBlPUlhO2EubGFuZXM9YzthLnN0YXRlTm9kZT17aXNIaWRkZW46ITF9O3JldHVybiBhfWZ1bmN0aW9uIHhoKGEsYixjKXthPUJnKDYsYSxudWxsLGIpO2EubGFuZXM9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIHpoKGEsYixjKXtiPUJnKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmxhbmVzPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gYmwoYSxiLGMsZCxlKXt0aGlzLnRhZz1iO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLmNhbGxiYWNrTm9kZT10aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT0wO3RoaXMuZXZlbnRUaW1lcz16YygwKTt0aGlzLmV4cGlyYXRpb25UaW1lcz16YygtMSk7dGhpcy5lbnRhbmdsZWRMYW5lcz10aGlzLmZpbmlzaGVkTGFuZXM9dGhpcy5tdXRhYmxlUmVhZExhbmVzPXRoaXMuZXhwaXJlZExhbmVzPXRoaXMucGluZ2VkTGFuZXM9dGhpcy5zdXNwZW5kZWRMYW5lcz10aGlzLnBlbmRpbmdMYW5lcz0wO3RoaXMuZW50YW5nbGVtZW50cz16YygwKTt0aGlzLmlkZW50aWZpZXJQcmVmaXg9ZDt0aGlzLm9uUmVjb3ZlcmFibGVFcnJvcj1lO3RoaXMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1cbm51bGx9ZnVuY3Rpb24gY2woYSxiLGMsZCxlLGYsZyxoLGspe2E9bmV3IGJsKGEsYixjLGgsayk7MT09PWI/KGI9MSwhMD09PWYmJihifD04KSk6Yj0wO2Y9QmcoMyxudWxsLG51bGwsYik7YS5jdXJyZW50PWY7Zi5zdGF0ZU5vZGU9YTtmLm1lbW9pemVkU3RhdGU9e2VsZW1lbnQ6ZCxpc0RlaHlkcmF0ZWQ6YyxjYWNoZTpudWxsLHRyYW5zaXRpb25zOm51bGwscGVuZGluZ1N1c3BlbnNlQm91bmRhcmllczpudWxsfTthaChmKTtyZXR1cm4gYX1mdW5jdGlvbiBkbChhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOndhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuZnVuY3Rpb24gZWwoYSl7aWYoIWEpcmV0dXJuIFZmO2E9YS5fcmVhY3RJbnRlcm5hbHM7YTp7aWYoVmIoYSkhPT1hfHwxIT09YS50YWcpdGhyb3cgRXJyb3IocCgxNzApKTt2YXIgYj1hO2Rve3N3aXRjaChiLnRhZyl7Y2FzZSAzOmI9Yi5zdGF0ZU5vZGUuY29udGV4dDticmVhayBhO2Nhc2UgMTppZihaZihiLnR5cGUpKXtiPWIuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGF9fWI9Yi5yZXR1cm59d2hpbGUobnVsbCE9PWIpO3Rocm93IEVycm9yKHAoMTcxKSk7fWlmKDE9PT1hLnRhZyl7dmFyIGM9YS50eXBlO2lmKFpmKGMpKXJldHVybiBiZyhhLGMsYil9cmV0dXJuIGJ9XG5mdW5jdGlvbiBmbChhLGIsYyxkLGUsZixnLGgsayl7YT1jbChjLGQsITAsYSxlLGYsZyxoLGspO2EuY29udGV4dD1lbChudWxsKTtjPWEuY3VycmVudDtkPUwoKTtlPWxoKGMpO2Y9Y2goZCxlKTtmLmNhbGxiYWNrPXZvaWQgMCE9PWImJm51bGwhPT1iP2I6bnVsbDtkaChjLGYsZSk7YS5jdXJyZW50LmxhbmVzPWU7QWMoYSxlLGQpO0VrKGEsZCk7cmV0dXJuIGF9ZnVuY3Rpb24gZ2woYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9TCgpLGc9bGgoZSk7Yz1lbChjKTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWNoKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09ZD9udWxsOmQ7bnVsbCE9PWQmJihiLmNhbGxiYWNrPWQpO2E9ZGgoZSxiLGcpO251bGwhPT1hJiYobWgoYSxlLGcsZiksZWgoYSxlLGcpKTtyZXR1cm4gZ31cbmZ1bmN0aW9uIGhsKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gaWwoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCl7dmFyIGM9YS5yZXRyeUxhbmU7YS5yZXRyeUxhbmU9MCE9PWMmJmM8Yj9jOmJ9fWZ1bmN0aW9uIGpsKGEsYil7aWwoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJmlsKGEsYil9ZnVuY3Rpb24ga2woKXtyZXR1cm4gbnVsbH12YXIgbGw9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJlcG9ydEVycm9yP3JlcG9ydEVycm9yOmZ1bmN0aW9uKGEpe2NvbnNvbGUuZXJyb3IoYSl9O2Z1bmN0aW9uIG1sKGEpe3RoaXMuX2ludGVybmFsUm9vdD1hfVxubmwucHJvdG90eXBlLnJlbmRlcj1tbC5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuX2ludGVybmFsUm9vdDtpZihudWxsPT09Yil0aHJvdyBFcnJvcihwKDQwOSkpO2dsKGEsYixudWxsLG51bGwpfTtubC5wcm90b3R5cGUudW5tb3VudD1tbC5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX2ludGVybmFsUm9vdDtpZihudWxsIT09YSl7dGhpcy5faW50ZXJuYWxSb290PW51bGw7dmFyIGI9YS5jb250YWluZXJJbmZvO1NrKGZ1bmN0aW9uKCl7Z2wobnVsbCxhLG51bGwsbnVsbCl9KTtiW3VmXT1udWxsfX07ZnVuY3Rpb24gbmwoYSl7dGhpcy5faW50ZXJuYWxSb290PWF9XG5ubC5wcm90b3R5cGUudW5zdGFibGVfc2NoZWR1bGVIeWRyYXRpb249ZnVuY3Rpb24oYSl7aWYoYSl7dmFyIGI9SGMoKTthPXtibG9ja2VkT246bnVsbCx0YXJnZXQ6YSxwcmlvcml0eTpifTtmb3IodmFyIGM9MDtjPFFjLmxlbmd0aCYmMCE9PWImJmI8UWNbY10ucHJpb3JpdHk7YysrKTtRYy5zcGxpY2UoYywwLGEpOzA9PT1jJiZWYyhhKX19O2Z1bmN0aW9uIG9sKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlKX1mdW5jdGlvbiBwbChhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9ZnVuY3Rpb24gcWwoKXt9XG5mdW5jdGlvbiBybChhLGIsYyxkLGUpe2lmKGUpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZj1kO2Q9ZnVuY3Rpb24oKXt2YXIgYT1obChnKTtmLmNhbGwoYSl9fXZhciBnPWZsKGIsZCxhLDAsbnVsbCwhMSwhMSxcIlwiLHFsKTthLl9yZWFjdFJvb3RDb250YWluZXI9ZzthW3VmXT1nLmN1cnJlbnQ7c2YoOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmEpO1NrKCk7cmV0dXJuIGd9Zm9yKDtlPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGUpO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgaD1kO2Q9ZnVuY3Rpb24oKXt2YXIgYT1obChrKTtoLmNhbGwoYSl9fXZhciBrPWNsKGEsMCwhMSxudWxsLG51bGwsITEsITEsXCJcIixxbCk7YS5fcmVhY3RSb290Q29udGFpbmVyPWs7YVt1Zl09ay5jdXJyZW50O3NmKDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphKTtTayhmdW5jdGlvbigpe2dsKGIsayxjLGQpfSk7cmV0dXJuIGt9XG5mdW5jdGlvbiBzbChhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1obChnKTtoLmNhbGwoYSl9fWdsKGIsZyxhLGUpfWVsc2UgZz1ybChjLGIsYSxlLGQpO3JldHVybiBobChnKX1FYz1mdW5jdGlvbihhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMzp2YXIgYj1hLnN0YXRlTm9kZTtpZihiLmN1cnJlbnQubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQpe3ZhciBjPXRjKGIucGVuZGluZ0xhbmVzKTswIT09YyYmKENjKGIsY3wxKSxFayhiLEIoKSksMD09PShLJjYpJiYoSGo9QigpKzUwMCxqZygpKSl9YnJlYWs7Y2FzZSAxMzpTayhmdW5jdGlvbigpe3ZhciBiPVpnKGEsMSk7aWYobnVsbCE9PWIpe3ZhciBjPUwoKTttaChiLGEsMSxjKX19KSxqbChhLDEpfX07XG5GYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1aZyhhLDEzNDIxNzcyOCk7aWYobnVsbCE9PWIpe3ZhciBjPUwoKTttaChiLGEsMTM0MjE3NzI4LGMpfWpsKGEsMTM0MjE3NzI4KX19O0djPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWxoKGEpLGM9WmcoYSxiKTtpZihudWxsIT09Yyl7dmFyIGQ9TCgpO21oKGMsYSxiLGQpfWpsKGEsYil9fTtIYz1mdW5jdGlvbigpe3JldHVybiBDfTtJYz1mdW5jdGlvbihhLGIpe3ZhciBjPUM7dHJ5e3JldHVybiBDPWEsYigpfWZpbmFsbHl7Qz1jfX07XG55Yj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmJiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1EYihkKTtpZighZSl0aHJvdyBFcnJvcihwKDkwKSk7V2EoZCk7YmIoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZmYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0diPVJrO0hiPVNrO1xudmFyIHRsPXt1c2luZ0NsaWVudEVudHJ5UG9pbnQ6ITEsRXZlbnRzOltDYix1ZSxEYixFYixGYixSa119LHVsPXtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpXYyxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE4LjIuMFwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn07XG52YXIgdmw9e2J1bmRsZVR5cGU6dWwuYnVuZGxlVHlwZSx2ZXJzaW9uOnVsLnZlcnNpb24scmVuZGVyZXJQYWNrYWdlTmFtZTp1bC5yZW5kZXJlclBhY2thZ2VOYW1lLHJlbmRlcmVyQ29uZmlnOnVsLnJlbmRlcmVyQ29uZmlnLG92ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLG92ZXJyaWRlUHJvcHNEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGg6bnVsbCxzZXRFcnJvckhhbmRsZXI6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOnVhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1aYihhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6dWwuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2V8fFxua2wsZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoOm51bGwsc2NoZWR1bGVSZWZyZXNoOm51bGwsc2NoZWR1bGVSb290Om51bGwsc2V0UmVmcmVzaEhhbmRsZXI6bnVsbCxnZXRDdXJyZW50RmliZXI6bnVsbCxyZWNvbmNpbGVyVmVyc2lvbjpcIjE4LjIuMC1uZXh0LTllM2I3NzJiOC0yMDIyMDYwOFwifTtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyl7dmFyIHdsPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZighd2wuaXNEaXNhYmxlZCYmd2wuc3VwcG9ydHNGaWJlcil0cnl7a2M9d2wuaW5qZWN0KHZsKSxsYz13bH1jYXRjaChhKXt9fWV4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9dGw7XG5leHBvcnRzLmNyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFvbChiKSl0aHJvdyBFcnJvcihwKDIwMCkpO3JldHVybiBkbChhLGIsbnVsbCxjKX07ZXhwb3J0cy5jcmVhdGVSb290PWZ1bmN0aW9uKGEsYil7aWYoIW9sKGEpKXRocm93IEVycm9yKHAoMjk5KSk7dmFyIGM9ITEsZD1cIlwiLGU9bGw7bnVsbCE9PWImJnZvaWQgMCE9PWImJighMD09PWIudW5zdGFibGVfc3RyaWN0TW9kZSYmKGM9ITApLHZvaWQgMCE9PWIuaWRlbnRpZmllclByZWZpeCYmKGQ9Yi5pZGVudGlmaWVyUHJlZml4KSx2b2lkIDAhPT1iLm9uUmVjb3ZlcmFibGVFcnJvciYmKGU9Yi5vblJlY292ZXJhYmxlRXJyb3IpKTtiPWNsKGEsMSwhMSxudWxsLG51bGwsYywhMSxkLGUpO2FbdWZdPWIuY3VycmVudDtzZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7cmV0dXJuIG5ldyBtbChiKX07XG5leHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbHM7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHAoMTg4KSk7YT1PYmplY3Qua2V5cyhhKS5qb2luKFwiLFwiKTt0aHJvdyBFcnJvcihwKDI2OCxhKSk7fWE9WmIoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtleHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhKXtyZXR1cm4gU2soYSl9O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIXBsKGIpKXRocm93IEVycm9yKHAoMjAwKSk7cmV0dXJuIHNsKG51bGwsYSxiLCEwLGMpfTtcbmV4cG9ydHMuaHlkcmF0ZVJvb3Q9ZnVuY3Rpb24oYSxiLGMpe2lmKCFvbChhKSl0aHJvdyBFcnJvcihwKDQwNSkpO3ZhciBkPW51bGwhPWMmJmMuaHlkcmF0ZWRTb3VyY2VzfHxudWxsLGU9ITEsZj1cIlwiLGc9bGw7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJighMD09PWMudW5zdGFibGVfc3RyaWN0TW9kZSYmKGU9ITApLHZvaWQgMCE9PWMuaWRlbnRpZmllclByZWZpeCYmKGY9Yy5pZGVudGlmaWVyUHJlZml4KSx2b2lkIDAhPT1jLm9uUmVjb3ZlcmFibGVFcnJvciYmKGc9Yy5vblJlY292ZXJhYmxlRXJyb3IpKTtiPWZsKGIsbnVsbCxhLDEsbnVsbCE9Yz9jOm51bGwsZSwhMSxmLGcpO2FbdWZdPWIuY3VycmVudDtzZihhKTtpZihkKWZvcihhPTA7YTxkLmxlbmd0aDthKyspYz1kW2FdLGU9Yy5fZ2V0VmVyc2lvbixlPWUoYy5fc291cmNlKSxudWxsPT1iLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yi5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtjLGVdOmIubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGMsXG5lKTtyZXR1cm4gbmV3IG5sKGIpfTtleHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIXBsKGIpKXRocm93IEVycm9yKHAoMjAwKSk7cmV0dXJuIHNsKG51bGwsYSxiLCExLGMpfTtleHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIXBsKGEpKXRocm93IEVycm9yKHAoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhTayhmdW5jdGlvbigpe3NsKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVt1Zl09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPVJrO1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighcGwoYykpdGhyb3cgRXJyb3IocCgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFscyl0aHJvdyBFcnJvcihwKDM4KSk7cmV0dXJuIHNsKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxOC4yLjAtbmV4dC05ZTNiNzcyYjgtMjAyMjA2MDhcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIG0gPSByZXF1aXJlKCdyZWFjdC1kb20nKTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IG0uY3JlYXRlUm9vdDtcbiAgZXhwb3J0cy5oeWRyYXRlUm9vdCA9IG0uaHlkcmF0ZVJvb3Q7XG59IGVsc2Uge1xuICB2YXIgaSA9IG0uX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IGZ1bmN0aW9uKGMsIG8pIHtcbiAgICBpLnVzaW5nQ2xpZW50RW50cnlQb2ludCA9IHRydWU7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBtLmNyZWF0ZVJvb3QoYywgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xuICBleHBvcnRzLmh5ZHJhdGVSb290ID0gZnVuY3Rpb24oYywgaCwgbykge1xuICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIG0uaHlkcmF0ZVJvb3QoYywgaCwgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9cblN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSx3PWI/U3ltYm9sLmZvcihcInJlYWN0LmZ1bmRhbWVudGFsXCIpOjYwMTE3LHg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpOjYwMTE4LHk9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik6NjAxMTk7XG5mdW5jdGlvbiB6KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSB0OmNhc2UgcjpjYXNlIGg6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gdX19Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gQShhKXtyZXR1cm4geihhKT09PW19ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO1xuZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiBBKGEpfHx6KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPUE7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWt9O2V4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ofTtleHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXR9O1xuZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1yfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1mfTtleHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1wfTtcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8YT09PXF8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09dHx8YS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW58fGEuJCR0eXBlb2Y9PT13fHxhLiQkdHlwZW9mPT09eHx8YS4kJHR5cGVvZj09PXl8fGEuJCR0eXBlb2Y9PT12KX07ZXhwb3J0cy50eXBlT2Y9ejtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBiPVN5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpLGM9U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKSxkPVN5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKSxlPVN5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKSxmPVN5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKSxnPVN5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKSxoPVN5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpLGs9U3ltYm9sLmZvcihcInJlYWN0LnNlcnZlcl9jb250ZXh0XCIpLGw9U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpLG09U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpLG49U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIikscD1TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKSxxPVN5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpLHQ9U3ltYm9sLmZvcihcInJlYWN0Lm9mZnNjcmVlblwiKSx1O3U9U3ltYm9sLmZvcihcInJlYWN0Lm1vZHVsZS5yZWZlcmVuY2VcIik7XG5mdW5jdGlvbiB2KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciByPWEuJCR0eXBlb2Y7c3dpdGNoKHIpe2Nhc2UgYjpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBkOmNhc2UgZjpjYXNlIGU6Y2FzZSBtOmNhc2UgbjpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgaDpjYXNlIGw6Y2FzZSBxOmNhc2UgcDpjYXNlIGc6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gcn19Y2FzZSBjOnJldHVybiByfX19ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aDtleHBvcnRzLkNvbnRleHRQcm92aWRlcj1nO2V4cG9ydHMuRWxlbWVudD1iO2V4cG9ydHMuRm9yd2FyZFJlZj1sO2V4cG9ydHMuRnJhZ21lbnQ9ZDtleHBvcnRzLkxhenk9cTtleHBvcnRzLk1lbW89cDtleHBvcnRzLlBvcnRhbD1jO2V4cG9ydHMuUHJvZmlsZXI9ZjtleHBvcnRzLlN0cmljdE1vZGU9ZTtleHBvcnRzLlN1c3BlbnNlPW07XG5leHBvcnRzLlN1c3BlbnNlTGlzdD1uO2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oKXtyZXR1cm4hMX07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1ofTtleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09Z307ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWJ9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09bH07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09ZH07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1xfTtleHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PXB9O1xuZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PWN9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PWZ9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09ZX07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09bX07ZXhwb3J0cy5pc1N1c3BlbnNlTGlzdD1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PW59O1xuZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYXx8YT09PWR8fGE9PT1mfHxhPT09ZXx8YT09PW18fGE9PT1ufHxhPT09dHx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT1xfHxhLiQkdHlwZW9mPT09cHx8YS4kJHR5cGVvZj09PWd8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09bHx8YS4kJHR5cGVvZj09PXV8fHZvaWQgMCE9PWEuZ2V0TW9kdWxlSWQpPyEwOiExfTtleHBvcnRzLnR5cGVPZj12O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGw9U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIiksbj1TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpLHA9U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpLHE9U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpLHI9U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpLHQ9U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpLHU9U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIiksdj1TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIiksdz1TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIikseD1TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKSx5PVN5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpLHo9U3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEEoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXomJmFbel18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1cbnZhciBCPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxDPU9iamVjdC5hc3NpZ24sRD17fTtmdW5jdGlvbiBFKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWV8fEJ9RS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtcbkUucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcihcInNldFN0YXRlKC4uLik6IHRha2VzIGFuIG9iamVjdCBvZiBzdGF0ZSB2YXJpYWJsZXMgdG8gdXBkYXRlIG9yIGEgZnVuY3Rpb24gd2hpY2ggcmV0dXJucyBhbiBvYmplY3Qgb2Ygc3RhdGUgdmFyaWFibGVzLlwiKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0UucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9RS5wcm90b3R5cGU7ZnVuY3Rpb24gRyhhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1lfHxCfXZhciBIPUcucHJvdG90eXBlPW5ldyBGO1xuSC5jb25zdHJ1Y3Rvcj1HO0MoSCxFLnByb3RvdHlwZSk7SC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgST1BcnJheS5pc0FycmF5LEo9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxLPXtjdXJyZW50Om51bGx9LEw9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE0oYSxiLGUpe3ZhciBkLGM9e30saz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihkIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihrPVwiXCIrYi5rZXkpLGIpSi5jYWxsKGIsZCkmJiFMLmhhc093blByb3BlcnR5KGQpJiYoY1tkXT1iW2RdKTt2YXIgZz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWcpYy5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxnKXtmb3IodmFyIGY9QXJyYXkoZyksbT0wO208ZzttKyspZlttXT1hcmd1bWVudHNbbSsyXTtjLmNoaWxkcmVuPWZ9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGQgaW4gZz1hLmRlZmF1bHRQcm9wcyxnKXZvaWQgMD09PWNbZF0mJihjW2RdPWdbZF0pO3JldHVybnskJHR5cGVvZjpsLHR5cGU6YSxrZXk6ayxyZWY6aCxwcm9wczpjLF9vd25lcjpLLmN1cnJlbnR9fVxuZnVuY3Rpb24gTihhLGIpe3JldHVybnskJHR5cGVvZjpsLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09bH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiK2EucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIFA9L1xcLysvZztmdW5jdGlvbiBRKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKFwiXCIrYS5rZXkpOmIudG9TdHJpbmcoMzYpfVxuZnVuY3Rpb24gUihhLGIsZSxkLGMpe3ZhciBrPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1rfHxcImJvb2xlYW5cIj09PWspYT1udWxsO3ZhciBoPSExO2lmKG51bGw9PT1hKWg9ITA7ZWxzZSBzd2l0Y2goayl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpoPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBsOmNhc2UgbjpoPSEwfX1pZihoKXJldHVybiBoPWEsYz1jKGgpLGE9XCJcIj09PWQ/XCIuXCIrUShoLDApOmQsSShjKT8oZT1cIlwiLG51bGwhPWEmJihlPWEucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKSxSKGMsYixlLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KSk6bnVsbCE9YyYmKE8oYykmJihjPU4oYyxlKyghYy5rZXl8fGgmJmgua2V5PT09Yy5rZXk/XCJcIjooXCJcIitjLmtleSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKSthKSksYi5wdXNoKGMpKSwxO2g9MDtkPVwiXCI9PT1kP1wiLlwiOmQrXCI6XCI7aWYoSShhKSlmb3IodmFyIGc9MDtnPGEubGVuZ3RoO2crKyl7az1cbmFbZ107dmFyIGY9ZCtRKGssZyk7aCs9UihrLGIsZSxmLGMpfWVsc2UgaWYoZj1BKGEpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxnPTA7IShrPWEubmV4dCgpKS5kb25lOylrPWsudmFsdWUsZj1kK1EoayxnKyspLGgrPVIoayxiLGUsZixjKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1rKXRocm93IGI9U3RyaW5nKGEpLEVycm9yKFwiT2JqZWN0cyBhcmUgbm90IHZhbGlkIGFzIGEgUmVhY3QgY2hpbGQgKGZvdW5kOiBcIisoXCJbb2JqZWN0IE9iamVjdF1cIj09PWI/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YikrXCIpLiBJZiB5b3UgbWVhbnQgdG8gcmVuZGVyIGEgY29sbGVjdGlvbiBvZiBjaGlsZHJlbiwgdXNlIGFuIGFycmF5IGluc3RlYWQuXCIpO3JldHVybiBofVxuZnVuY3Rpb24gUyhhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZD1bXSxjPTA7UihhLGQsXCJcIixcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBiLmNhbGwoZSxhLGMrKyl9KTtyZXR1cm4gZH1mdW5jdGlvbiBUKGEpe2lmKC0xPT09YS5fc3RhdHVzKXt2YXIgYj1hLl9yZXN1bHQ7Yj1iKCk7Yi50aGVuKGZ1bmN0aW9uKGIpe2lmKDA9PT1hLl9zdGF0dXN8fC0xPT09YS5fc3RhdHVzKWEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1ifSxmdW5jdGlvbihiKXtpZigwPT09YS5fc3RhdHVzfHwtMT09PWEuX3N0YXR1cylhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yn0pOy0xPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTAsYS5fcmVzdWx0PWIpfWlmKDE9PT1hLl9zdGF0dXMpcmV0dXJuIGEuX3Jlc3VsdC5kZWZhdWx0O3Rocm93IGEuX3Jlc3VsdDt9XG52YXIgVT17Y3VycmVudDpudWxsfSxWPXt0cmFuc2l0aW9uOm51bGx9LFc9e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6VSxSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzpWLFJlYWN0Q3VycmVudE93bmVyOkt9O2V4cG9ydHMuQ2hpbGRyZW49e21hcDpTLGZvckVhY2g6ZnVuY3Rpb24oYSxiLGUpe1MoYSxmdW5jdGlvbigpe2IuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxlKX0sY291bnQ6ZnVuY3Rpb24oYSl7dmFyIGI9MDtTKGEsZnVuY3Rpb24oKXtiKyt9KTtyZXR1cm4gYn0sdG9BcnJheTpmdW5jdGlvbihhKXtyZXR1cm4gUyhhLGZ1bmN0aW9uKGEpe3JldHVybiBhfSl8fFtdfSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFPKGEpKXRocm93IEVycm9yKFwiUmVhY3QuQ2hpbGRyZW4ub25seSBleHBlY3RlZCB0byByZWNlaXZlIGEgc2luZ2xlIFJlYWN0IGVsZW1lbnQgY2hpbGQuXCIpO3JldHVybiBhfX07ZXhwb3J0cy5Db21wb25lbnQ9RTtleHBvcnRzLkZyYWdtZW50PXA7XG5leHBvcnRzLlByb2ZpbGVyPXI7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUc7ZXhwb3J0cy5TdHJpY3RNb2RlPXE7ZXhwb3J0cy5TdXNwZW5zZT13O2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9VztcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixlKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcihcIlJlYWN0LmNsb25lRWxlbWVudCguLi4pOiBUaGUgYXJndW1lbnQgbXVzdCBiZSBhIFJlYWN0IGVsZW1lbnQsIGJ1dCB5b3UgcGFzc2VkIFwiK2ErXCIuXCIpO3ZhciBkPUMoe30sYS5wcm9wcyksYz1hLmtleSxrPWEucmVmLGg9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihrPWIucmVmLGg9Sy5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGM9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBnPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGYgaW4gYilKLmNhbGwoYixmKSYmIUwuaGFzT3duUHJvcGVydHkoZikmJihkW2ZdPXZvaWQgMD09PWJbZl0mJnZvaWQgMCE9PWc/Z1tmXTpiW2ZdKX12YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxmKXtnPUFycmF5KGYpO1xuZm9yKHZhciBtPTA7bTxmO20rKylnW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49Z31yZXR1cm57JCR0eXBlb2Y6bCx0eXBlOmEudHlwZSxrZXk6YyxyZWY6ayxwcm9wczpkLF9vd25lcjpofX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEpe2E9eyQkdHlwZW9mOnUsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsLF9kZWZhdWx0VmFsdWU6bnVsbCxfZ2xvYmFsTmFtZTpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp0LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1NO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07XG5leHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnYscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87ZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp5LF9wYXlsb2FkOntfc3RhdHVzOi0xLF9yZXN1bHQ6YX0sX2luaXQ6VH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp4LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy5zdGFydFRyYW5zaXRpb249ZnVuY3Rpb24oYSl7dmFyIGI9Vi50cmFuc2l0aW9uO1YudHJhbnNpdGlvbj17fTt0cnl7YSgpfWZpbmFsbHl7Vi50cmFuc2l0aW9uPWJ9fTtleHBvcnRzLnVuc3RhYmxlX2FjdD1mdW5jdGlvbigpe3Rocm93IEVycm9yKFwiYWN0KC4uLikgaXMgbm90IHN1cHBvcnRlZCBpbiBwcm9kdWN0aW9uIGJ1aWxkcyBvZiBSZWFjdC5cIik7fTtcbmV4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhKXtyZXR1cm4gVS5jdXJyZW50LnVzZUNvbnRleHQoYSl9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VEZWZlcnJlZFZhbHVlPWZ1bmN0aW9uKGEpe3JldHVybiBVLmN1cnJlbnQudXNlRGVmZXJyZWRWYWx1ZShhKX07ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUlkPWZ1bmN0aW9uKCl7cmV0dXJuIFUuY3VycmVudC51c2VJZCgpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGUpe3JldHVybiBVLmN1cnJlbnQudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsZSl9O1xuZXhwb3J0cy51c2VJbnNlcnRpb25FZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUluc2VydGlvbkVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGUpe3JldHVybiBVLmN1cnJlbnQudXNlUmVkdWNlcihhLGIsZSl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBVLmN1cnJlbnQudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBVLmN1cnJlbnQudXNlU3RhdGUoYSl9O2V4cG9ydHMudXNlU3luY0V4dGVybmFsU3RvcmU9ZnVuY3Rpb24oYSxiLGUpe3JldHVybiBVLmN1cnJlbnQudXNlU3luY0V4dGVybmFsU3RvcmUoYSxiLGUpfTtcbmV4cG9ydHMudXNlVHJhbnNpdGlvbj1mdW5jdGlvbigpe3JldHVybiBVLmN1cnJlbnQudXNlVHJhbnNpdGlvbigpfTtleHBvcnRzLnZlcnNpb249XCIxOC4yLjBcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0JztmdW5jdGlvbiBmKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDswPGM7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZigwPGcoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIGgoYSl7cmV0dXJuIDA9PT1hLmxlbmd0aD9udWxsOmFbMF19ZnVuY3Rpb24gayhhKXtpZigwPT09YS5sZW5ndGgpcmV0dXJuIG51bGw7dmFyIGI9YVswXSxjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGgsdz1lPj4+MTtkPHc7KXt2YXIgbT0yKihkKzEpLTEsQz1hW21dLG49bSsxLHg9YVtuXTtpZigwPmcoQyxjKSluPGUmJjA+Zyh4LEMpPyhhW2RdPXgsYVtuXT1jLGQ9bik6KGFbZF09QyxhW21dPWMsZD1tKTtlbHNlIGlmKG48ZSYmMD5nKHgsYykpYVtkXT14LGFbbl09YyxkPW47ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGcoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIGw9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gbC5ub3coKX19ZWxzZXt2YXIgcD1EYXRlLHE9cC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBwLm5vdygpLXF9fXZhciByPVtdLHQ9W10sdT0xLHY9bnVsbCx5PTMsej0hMSxBPSExLEI9ITEsRD1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0Om51bGwsRT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDpudWxsLEY9XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBzZXRJbW1lZGlhdGU/c2V0SW1tZWRpYXRlOm51bGw7XG5cInVuZGVmaW5lZFwiIT09dHlwZW9mIG5hdmlnYXRvciYmdm9pZCAwIT09bmF2aWdhdG9yLnNjaGVkdWxpbmcmJnZvaWQgMCE9PW5hdmlnYXRvci5zY2hlZHVsaW5nLmlzSW5wdXRQZW5kaW5nJiZuYXZpZ2F0b3Iuc2NoZWR1bGluZy5pc0lucHV0UGVuZGluZy5iaW5kKG5hdmlnYXRvci5zY2hlZHVsaW5nKTtmdW5jdGlvbiBHKGEpe2Zvcih2YXIgYj1oKHQpO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spayh0KTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKWsodCksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxmKHIsYik7ZWxzZSBicmVhaztiPWgodCl9fWZ1bmN0aW9uIEgoYSl7Qj0hMTtHKGEpO2lmKCFBKWlmKG51bGwhPT1oKHIpKUE9ITAsSShKKTtlbHNle3ZhciBiPWgodCk7bnVsbCE9PWImJksoSCxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBKKGEsYil7QT0hMTtCJiYoQj0hMSxFKEwpLEw9LTEpO3o9ITA7dmFyIGM9eTt0cnl7RyhiKTtmb3Iodj1oKHIpO251bGwhPT12JiYoISh2LmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhTSgpKTspe3ZhciBkPXYuY2FsbGJhY2s7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3YuY2FsbGJhY2s9bnVsbDt5PXYucHJpb3JpdHlMZXZlbDt2YXIgZT1kKHYuZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT92LmNhbGxiYWNrPWU6dj09PWgocikmJmsocik7RyhiKX1lbHNlIGsocik7dj1oKHIpfWlmKG51bGwhPT12KXZhciB3PSEwO2Vsc2V7dmFyIG09aCh0KTtudWxsIT09bSYmSyhILG0uc3RhcnRUaW1lLWIpO3c9ITF9cmV0dXJuIHd9ZmluYWxseXt2PW51bGwseT1jLHo9ITF9fXZhciBOPSExLE89bnVsbCxMPS0xLFA9NSxRPS0xO1xuZnVuY3Rpb24gTSgpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpLVE8UD8hMTohMH1mdW5jdGlvbiBSKCl7aWYobnVsbCE9PU8pe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7UT1hO3ZhciBiPSEwO3RyeXtiPU8oITAsYSl9ZmluYWxseXtiP1MoKTooTj0hMSxPPW51bGwpfX1lbHNlIE49ITF9dmFyIFM7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEYpUz1mdW5jdGlvbigpe0YoUil9O2Vsc2UgaWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIFQ9bmV3IE1lc3NhZ2VDaGFubmVsLFU9VC5wb3J0MjtULnBvcnQxLm9ubWVzc2FnZT1SO1M9ZnVuY3Rpb24oKXtVLnBvc3RNZXNzYWdlKG51bGwpfX1lbHNlIFM9ZnVuY3Rpb24oKXtEKFIsMCl9O2Z1bmN0aW9uIEkoYSl7Tz1hO058fChOPSEwLFMoKSl9ZnVuY3Rpb24gSyhhLGIpe0w9RChmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfVxuZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe0F8fHp8fChBPSEwLEkoSikpfTtcbmV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWUgcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3Qgc3VwcG9ydGVkXCIpOlA9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4geX07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBoKHIpfTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKHkpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPXl9dmFyIGM9eTt5PWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXt5PWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtcbmV4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPXk7eT1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7eT1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yz8oYz1jLmRlbGF5LGM9XCJudW1iZXJcIj09PXR5cGVvZiBjJiYwPGM/ZCtjOmQpOmM9ZDtzd2l0Y2goYSl7Y2FzZSAxOnZhciBlPS0xO2JyZWFrO2Nhc2UgMjplPTI1MDticmVhaztjYXNlIDU6ZT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgNDplPTFFNDticmVhaztkZWZhdWx0OmU9NUUzfWU9YytlO2E9e2lkOnUrKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6YyxleHBpcmF0aW9uVGltZTplLHNvcnRJbmRleDotMX07Yz5kPyhhLnNvcnRJbmRleD1jLGYodCxhKSxudWxsPT09aChyKSYmYT09PWgodCkmJihCPyhFKEwpLEw9LTEpOkI9ITAsSyhILGMtZCkpKTooYS5zb3J0SW5kZXg9ZSxmKHIsYSksQXx8enx8KEE9ITAsSShKKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9TTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj15O3JldHVybiBmdW5jdGlvbigpe3ZhciBjPXk7eT1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXt5PWN9fX07XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgaWYgKCFjb250ZW50LmxvY2FscyB8fCBtb2R1bGUuaG90LmludmFsaWRhdGUpIHtcbiAgICB2YXIgaXNFcXVhbExvY2FscyA9IGZ1bmN0aW9uIGlzRXF1YWxMb2NhbHMoYSwgYiwgaXNOYW1lZEV4cG9ydCkge1xuICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIHA7XG5cbiAgZm9yIChwIGluIGEpIHtcbiAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGZvciAocCBpbiBiKSB7XG4gICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKCFhW3BdKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBpc05hbWVkRXhwb3J0ID0gIWNvbnRlbnQubG9jYWxzO1xuICAgIHZhciBvbGRMb2NhbHMgPSBpc05hbWVkRXhwb3J0ID8gbmFtZWRFeHBvcnQgOiBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBpc05hbWVkRXhwb3J0ID8gbmFtZWRFeHBvcnQgOiBjb250ZW50LmxvY2FscywgaXNOYW1lZEV4cG9ydCkpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGlzTmFtZWRFeHBvcnQgPyBuYW1lZEV4cG9ydCA6IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiB1c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgZT1yZXF1aXJlKFwicmVhY3RcIik7ZnVuY3Rpb24gaChhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIGs9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6aCxsPWUudXNlU3RhdGUsbT1lLnVzZUVmZmVjdCxuPWUudXNlTGF5b3V0RWZmZWN0LHA9ZS51c2VEZWJ1Z1ZhbHVlO2Z1bmN0aW9uIHEoYSxiKXt2YXIgZD1iKCksZj1sKHtpbnN0Ont2YWx1ZTpkLGdldFNuYXBzaG90OmJ9fSksYz1mWzBdLmluc3QsZz1mWzFdO24oZnVuY3Rpb24oKXtjLnZhbHVlPWQ7Yy5nZXRTbmFwc2hvdD1iO3IoYykmJmcoe2luc3Q6Y30pfSxbYSxkLGJdKTttKGZ1bmN0aW9uKCl7cihjKSYmZyh7aW5zdDpjfSk7cmV0dXJuIGEoZnVuY3Rpb24oKXtyKGMpJiZnKHtpbnN0OmN9KX0pfSxbYV0pO3AoZCk7cmV0dXJuIGR9XG5mdW5jdGlvbiByKGEpe3ZhciBiPWEuZ2V0U25hcHNob3Q7YT1hLnZhbHVlO3RyeXt2YXIgZD1iKCk7cmV0dXJuIWsoYSxkKX1jYXRjaChmKXtyZXR1cm4hMH19ZnVuY3Rpb24gdChhLGIpe3JldHVybiBiKCl9dmFyIHU9XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50P3Q6cTtleHBvcnRzLnVzZVN5bmNFeHRlcm5hbFN0b3JlPXZvaWQgMCE9PWUudXNlU3luY0V4dGVybmFsU3RvcmU/ZS51c2VTeW5jRXh0ZXJuYWxTdG9yZTp1O1xuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS93aXRoLXNlbGVjdG9yLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgaD1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwidXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbVwiKTtmdW5jdGlvbiBwKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgcT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpwLHI9bi51c2VTeW5jRXh0ZXJuYWxTdG9yZSx0PWgudXNlUmVmLHU9aC51c2VFZmZlY3Qsdj1oLnVzZU1lbW8sdz1oLnVzZURlYnVnVmFsdWU7XG5leHBvcnRzLnVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yPWZ1bmN0aW9uKGEsYixlLGwsZyl7dmFyIGM9dChudWxsKTtpZihudWxsPT09Yy5jdXJyZW50KXt2YXIgZj17aGFzVmFsdWU6ITEsdmFsdWU6bnVsbH07Yy5jdXJyZW50PWZ9ZWxzZSBmPWMuY3VycmVudDtjPXYoZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEpe2lmKCFjKXtjPSEwO2Q9YTthPWwoYSk7aWYodm9pZCAwIT09ZyYmZi5oYXNWYWx1ZSl7dmFyIGI9Zi52YWx1ZTtpZihnKGIsYSkpcmV0dXJuIGs9Yn1yZXR1cm4gaz1hfWI9aztpZihxKGQsYSkpcmV0dXJuIGI7dmFyIGU9bChhKTtpZih2b2lkIDAhPT1nJiZnKGIsZSkpcmV0dXJuIGI7ZD1hO3JldHVybiBrPWV9dmFyIGM9ITEsZCxrLG09dm9pZCAwPT09ZT9udWxsOmU7cmV0dXJuW2Z1bmN0aW9uKCl7cmV0dXJuIGEoYigpKX0sbnVsbD09PW0/dm9pZCAwOmZ1bmN0aW9uKCl7cmV0dXJuIGEobSgpKX1dfSxbYixlLGwsZ10pO3ZhciBkPXIoYSxjWzBdLGNbMV0pO1xudShmdW5jdGlvbigpe2YuaGFzVmFsdWU9ITA7Zi52YWx1ZT1kfSxbZF0pO3coZCk7cmV0dXJuIGR9O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0vd2l0aC1zZWxlY3Rvci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS93aXRoLXNlbGVjdG9yLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJ2YXIgX3R5cGVvZiA9IHJlcXVpcmUoXCIuL3R5cGVvZi5qc1wiKVtcImRlZmF1bHRcIl07XG5cbmZ1bmN0aW9uIF9yZWdlbmVyYXRvclJ1bnRpbWUoKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuICAvKiEgcmVnZW5lcmF0b3ItcnVudGltZSAtLSBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy4gLS0gbGljZW5zZSAoTUlUKTogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL2Jsb2IvbWFpbi9MSUNFTlNFICovXG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBfcmVnZW5lcmF0b3JSdW50aW1lID0gZnVuY3Rpb24gX3JlZ2VuZXJhdG9yUnVudGltZSgpIHtcbiAgICByZXR1cm4gZXhwb3J0cztcbiAgfSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzO1xuICB2YXIgZXhwb3J0cyA9IHt9LFxuICAgICAgT3AgPSBPYmplY3QucHJvdG90eXBlLFxuICAgICAgaGFzT3duID0gT3AuaGFzT3duUHJvcGVydHksXG4gICAgICAkU3ltYm9sID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgPyBTeW1ib2wgOiB7fSxcbiAgICAgIGl0ZXJhdG9yU3ltYm9sID0gJFN5bWJvbC5pdGVyYXRvciB8fCBcIkBAaXRlcmF0b3JcIixcbiAgICAgIGFzeW5jSXRlcmF0b3JTeW1ib2wgPSAkU3ltYm9sLmFzeW5jSXRlcmF0b3IgfHwgXCJAQGFzeW5jSXRlcmF0b3JcIixcbiAgICAgIHRvU3RyaW5nVGFnU3ltYm9sID0gJFN5bWJvbC50b1N0cmluZ1RhZyB8fCBcIkBAdG9TdHJpbmdUYWdcIjtcblxuICBmdW5jdGlvbiBkZWZpbmUob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogITAsXG4gICAgICBjb25maWd1cmFibGU6ICEwLFxuICAgICAgd3JpdGFibGU6ICEwXG4gICAgfSksIG9ialtrZXldO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBkZWZpbmUoe30sIFwiXCIpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBkZWZpbmUgPSBmdW5jdGlvbiBkZWZpbmUob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgICByZXR1cm4gb2JqW2tleV0gPSB2YWx1ZTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCkge1xuICAgIHZhciBwcm90b0dlbmVyYXRvciA9IG91dGVyRm4gJiYgb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IgPyBvdXRlckZuIDogR2VuZXJhdG9yLFxuICAgICAgICBnZW5lcmF0b3IgPSBPYmplY3QuY3JlYXRlKHByb3RvR2VuZXJhdG9yLnByb3RvdHlwZSksXG4gICAgICAgIGNvbnRleHQgPSBuZXcgQ29udGV4dCh0cnlMb2NzTGlzdCB8fCBbXSk7XG4gICAgcmV0dXJuIGdlbmVyYXRvci5faW52b2tlID0gZnVuY3Rpb24gKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpIHtcbiAgICAgIHZhciBzdGF0ZSA9IFwic3VzcGVuZGVkU3RhcnRcIjtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAobWV0aG9kLCBhcmcpIHtcbiAgICAgICAgaWYgKFwiZXhlY3V0aW5nXCIgPT09IHN0YXRlKSB0aHJvdyBuZXcgRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBydW5uaW5nXCIpO1xuXG4gICAgICAgIGlmIChcImNvbXBsZXRlZFwiID09PSBzdGF0ZSkge1xuICAgICAgICAgIGlmIChcInRocm93XCIgPT09IG1ldGhvZCkgdGhyb3cgYXJnO1xuICAgICAgICAgIHJldHVybiBkb25lUmVzdWx0KCk7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGNvbnRleHQubWV0aG9kID0gbWV0aG9kLCBjb250ZXh0LmFyZyA9IGFyZzs7KSB7XG4gICAgICAgICAgdmFyIGRlbGVnYXRlID0gY29udGV4dC5kZWxlZ2F0ZTtcblxuICAgICAgICAgIGlmIChkZWxlZ2F0ZSkge1xuICAgICAgICAgICAgdmFyIGRlbGVnYXRlUmVzdWx0ID0gbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCk7XG5cbiAgICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCkge1xuICAgICAgICAgICAgICBpZiAoZGVsZWdhdGVSZXN1bHQgPT09IENvbnRpbnVlU2VudGluZWwpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICByZXR1cm4gZGVsZWdhdGVSZXN1bHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKFwibmV4dFwiID09PSBjb250ZXh0Lm1ldGhvZCkgY29udGV4dC5zZW50ID0gY29udGV4dC5fc2VudCA9IGNvbnRleHQuYXJnO2Vsc2UgaWYgKFwidGhyb3dcIiA9PT0gY29udGV4dC5tZXRob2QpIHtcbiAgICAgICAgICAgIGlmIChcInN1c3BlbmRlZFN0YXJ0XCIgPT09IHN0YXRlKSB0aHJvdyBzdGF0ZSA9IFwiY29tcGxldGVkXCIsIGNvbnRleHQuYXJnO1xuICAgICAgICAgICAgY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZyk7XG4gICAgICAgICAgfSBlbHNlIFwicmV0dXJuXCIgPT09IGNvbnRleHQubWV0aG9kICYmIGNvbnRleHQuYWJydXB0KFwicmV0dXJuXCIsIGNvbnRleHQuYXJnKTtcbiAgICAgICAgICBzdGF0ZSA9IFwiZXhlY3V0aW5nXCI7XG4gICAgICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuXG4gICAgICAgICAgaWYgKFwibm9ybWFsXCIgPT09IHJlY29yZC50eXBlKSB7XG4gICAgICAgICAgICBpZiAoc3RhdGUgPSBjb250ZXh0LmRvbmUgPyBcImNvbXBsZXRlZFwiIDogXCJzdXNwZW5kZWRZaWVsZFwiLCByZWNvcmQuYXJnID09PSBDb250aW51ZVNlbnRpbmVsKSBjb250aW51ZTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIHZhbHVlOiByZWNvcmQuYXJnLFxuICAgICAgICAgICAgICBkb25lOiBjb250ZXh0LmRvbmVcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgXCJ0aHJvd1wiID09PSByZWNvcmQudHlwZSAmJiAoc3RhdGUgPSBcImNvbXBsZXRlZFwiLCBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIiwgY29udGV4dC5hcmcgPSByZWNvcmQuYXJnKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KGlubmVyRm4sIHNlbGYsIGNvbnRleHQpLCBnZW5lcmF0b3I7XG4gIH1cblxuICBmdW5jdGlvbiB0cnlDYXRjaChmbiwgb2JqLCBhcmcpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogXCJub3JtYWxcIixcbiAgICAgICAgYXJnOiBmbi5jYWxsKG9iaiwgYXJnKVxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwidGhyb3dcIixcbiAgICAgICAgYXJnOiBlcnJcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgZXhwb3J0cy53cmFwID0gd3JhcDtcbiAgdmFyIENvbnRpbnVlU2VudGluZWwgPSB7fTtcblxuICBmdW5jdGlvbiBHZW5lcmF0b3IoKSB7fVxuXG4gIGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uKCkge31cblxuICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSgpIHt9XG5cbiAgdmFyIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG4gIGRlZmluZShJdGVyYXRvclByb3RvdHlwZSwgaXRlcmF0b3JTeW1ib2wsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfSk7XG4gIHZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZixcbiAgICAgIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG8gJiYgZ2V0UHJvdG8oZ2V0UHJvdG8odmFsdWVzKFtdKSkpO1xuICBOYXRpdmVJdGVyYXRvclByb3RvdHlwZSAmJiBOYXRpdmVJdGVyYXRvclByb3RvdHlwZSAhPT0gT3AgJiYgaGFzT3duLmNhbGwoTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUsIGl0ZXJhdG9yU3ltYm9sKSAmJiAoSXRlcmF0b3JQcm90b3R5cGUgPSBOYXRpdmVJdGVyYXRvclByb3RvdHlwZSk7XG4gIHZhciBHcCA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLnByb3RvdHlwZSA9IEdlbmVyYXRvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlKTtcblxuICBmdW5jdGlvbiBkZWZpbmVJdGVyYXRvck1ldGhvZHMocHJvdG90eXBlKSB7XG4gICAgW1wibmV4dFwiLCBcInRocm93XCIsIFwicmV0dXJuXCJdLmZvckVhY2goZnVuY3Rpb24gKG1ldGhvZCkge1xuICAgICAgZGVmaW5lKHByb3RvdHlwZSwgbWV0aG9kLCBmdW5jdGlvbiAoYXJnKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnZva2UobWV0aG9kLCBhcmcpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBBc3luY0l0ZXJhdG9yKGdlbmVyYXRvciwgUHJvbWlzZUltcGwpIHtcbiAgICBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGdlbmVyYXRvclttZXRob2RdLCBnZW5lcmF0b3IsIGFyZyk7XG5cbiAgICAgIGlmIChcInRocm93XCIgIT09IHJlY29yZC50eXBlKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSByZWNvcmQuYXJnLFxuICAgICAgICAgICAgdmFsdWUgPSByZXN1bHQudmFsdWU7XG4gICAgICAgIHJldHVybiB2YWx1ZSAmJiBcIm9iamVjdFwiID09IF90eXBlb2YodmFsdWUpICYmIGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIikgPyBQcm9taXNlSW1wbC5yZXNvbHZlKHZhbHVlLl9fYXdhaXQpLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgaW52b2tlKFwibmV4dFwiLCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgIGludm9rZShcInRocm93XCIsIGVyciwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSkgOiBQcm9taXNlSW1wbC5yZXNvbHZlKHZhbHVlKS50aGVuKGZ1bmN0aW9uICh1bndyYXBwZWQpIHtcbiAgICAgICAgICByZXN1bHQudmFsdWUgPSB1bndyYXBwZWQsIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgcmV0dXJuIGludm9rZShcInRocm93XCIsIGVycm9yLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmVqZWN0KHJlY29yZC5hcmcpO1xuICAgIH1cblxuICAgIHZhciBwcmV2aW91c1Byb21pc2U7XG5cbiAgICB0aGlzLl9pbnZva2UgPSBmdW5jdGlvbiAobWV0aG9kLCBhcmcpIHtcbiAgICAgIGZ1bmN0aW9uIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2VJbXBsKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJldmlvdXNQcm9taXNlID0gcHJldmlvdXNQcm9taXNlID8gcHJldmlvdXNQcm9taXNlLnRoZW4oY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcsIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKSA6IGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpIHtcbiAgICB2YXIgbWV0aG9kID0gZGVsZWdhdGUuaXRlcmF0b3JbY29udGV4dC5tZXRob2RdO1xuXG4gICAgaWYgKHVuZGVmaW5lZCA9PT0gbWV0aG9kKSB7XG4gICAgICBpZiAoY29udGV4dC5kZWxlZ2F0ZSA9IG51bGwsIFwidGhyb3dcIiA9PT0gY29udGV4dC5tZXRob2QpIHtcbiAgICAgICAgaWYgKGRlbGVnYXRlLml0ZXJhdG9yW1wicmV0dXJuXCJdICYmIChjb250ZXh0Lm1ldGhvZCA9IFwicmV0dXJuXCIsIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkLCBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KSwgXCJ0aHJvd1wiID09PSBjb250ZXh0Lm1ldGhvZCkpIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIiwgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFwiVGhlIGl0ZXJhdG9yIGRvZXMgbm90IHByb3ZpZGUgYSAndGhyb3cnIG1ldGhvZFwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKG1ldGhvZCwgZGVsZWdhdGUuaXRlcmF0b3IsIGNvbnRleHQuYXJnKTtcbiAgICBpZiAoXCJ0aHJvd1wiID09PSByZWNvcmQudHlwZSkgcmV0dXJuIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiLCBjb250ZXh0LmFyZyA9IHJlY29yZC5hcmcsIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsLCBDb250aW51ZVNlbnRpbmVsO1xuICAgIHZhciBpbmZvID0gcmVjb3JkLmFyZztcbiAgICByZXR1cm4gaW5mbyA/IGluZm8uZG9uZSA/IChjb250ZXh0W2RlbGVnYXRlLnJlc3VsdE5hbWVdID0gaW5mby52YWx1ZSwgY29udGV4dC5uZXh0ID0gZGVsZWdhdGUubmV4dExvYywgXCJyZXR1cm5cIiAhPT0gY29udGV4dC5tZXRob2QgJiYgKGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCIsIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkKSwgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGwsIENvbnRpbnVlU2VudGluZWwpIDogaW5mbyA6IChjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIiwgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFwiaXRlcmF0b3IgcmVzdWx0IGlzIG5vdCBhbiBvYmplY3RcIiksIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsLCBDb250aW51ZVNlbnRpbmVsKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2hUcnlFbnRyeShsb2NzKSB7XG4gICAgdmFyIGVudHJ5ID0ge1xuICAgICAgdHJ5TG9jOiBsb2NzWzBdXG4gICAgfTtcbiAgICAxIGluIGxvY3MgJiYgKGVudHJ5LmNhdGNoTG9jID0gbG9jc1sxXSksIDIgaW4gbG9jcyAmJiAoZW50cnkuZmluYWxseUxvYyA9IGxvY3NbMl0sIGVudHJ5LmFmdGVyTG9jID0gbG9jc1szXSksIHRoaXMudHJ5RW50cmllcy5wdXNoKGVudHJ5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlc2V0VHJ5RW50cnkoZW50cnkpIHtcbiAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbiB8fCB7fTtcbiAgICByZWNvcmQudHlwZSA9IFwibm9ybWFsXCIsIGRlbGV0ZSByZWNvcmQuYXJnLCBlbnRyeS5jb21wbGV0aW9uID0gcmVjb3JkO1xuICB9XG5cbiAgZnVuY3Rpb24gQ29udGV4dCh0cnlMb2NzTGlzdCkge1xuICAgIHRoaXMudHJ5RW50cmllcyA9IFt7XG4gICAgICB0cnlMb2M6IFwicm9vdFwiXG4gICAgfV0sIHRyeUxvY3NMaXN0LmZvckVhY2gocHVzaFRyeUVudHJ5LCB0aGlzKSwgdGhpcy5yZXNldCghMCk7XG4gIH1cblxuICBmdW5jdGlvbiB2YWx1ZXMoaXRlcmFibGUpIHtcbiAgICBpZiAoaXRlcmFibGUpIHtcbiAgICAgIHZhciBpdGVyYXRvck1ldGhvZCA9IGl0ZXJhYmxlW2l0ZXJhdG9yU3ltYm9sXTtcbiAgICAgIGlmIChpdGVyYXRvck1ldGhvZCkgcmV0dXJuIGl0ZXJhdG9yTWV0aG9kLmNhbGwoaXRlcmFibGUpO1xuICAgICAgaWYgKFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgaXRlcmFibGUubmV4dCkgcmV0dXJuIGl0ZXJhYmxlO1xuXG4gICAgICBpZiAoIWlzTmFOKGl0ZXJhYmxlLmxlbmd0aCkpIHtcbiAgICAgICAgdmFyIGkgPSAtMSxcbiAgICAgICAgICAgIG5leHQgPSBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICAgIGZvciAoOyArK2kgPCBpdGVyYWJsZS5sZW5ndGg7KSB7XG4gICAgICAgICAgICBpZiAoaGFzT3duLmNhbGwoaXRlcmFibGUsIGkpKSByZXR1cm4gbmV4dC52YWx1ZSA9IGl0ZXJhYmxlW2ldLCBuZXh0LmRvbmUgPSAhMSwgbmV4dDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gbmV4dC52YWx1ZSA9IHVuZGVmaW5lZCwgbmV4dC5kb25lID0gITAsIG5leHQ7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIG5leHQubmV4dCA9IG5leHQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIG5leHQ6IGRvbmVSZXN1bHRcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gZG9uZVJlc3VsdCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdmFsdWU6IHVuZGVmaW5lZCxcbiAgICAgIGRvbmU6ICEwXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBHZW5lcmF0b3JGdW5jdGlvbi5wcm90b3R5cGUgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgZGVmaW5lKEdwLCBcImNvbnN0cnVjdG9yXCIsIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKSwgZGVmaW5lKEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLCBcImNvbnN0cnVjdG9yXCIsIEdlbmVyYXRvckZ1bmN0aW9uKSwgR2VuZXJhdG9yRnVuY3Rpb24uZGlzcGxheU5hbWUgPSBkZWZpbmUoR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIHRvU3RyaW5nVGFnU3ltYm9sLCBcIkdlbmVyYXRvckZ1bmN0aW9uXCIpLCBleHBvcnRzLmlzR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiAoZ2VuRnVuKSB7XG4gICAgdmFyIGN0b3IgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGdlbkZ1biAmJiBnZW5GdW4uY29uc3RydWN0b3I7XG4gICAgcmV0dXJuICEhY3RvciAmJiAoY3RvciA9PT0gR2VuZXJhdG9yRnVuY3Rpb24gfHwgXCJHZW5lcmF0b3JGdW5jdGlvblwiID09PSAoY3Rvci5kaXNwbGF5TmFtZSB8fCBjdG9yLm5hbWUpKTtcbiAgfSwgZXhwb3J0cy5tYXJrID0gZnVuY3Rpb24gKGdlbkZ1bikge1xuICAgIHJldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YoZ2VuRnVuLCBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSkgOiAoZ2VuRnVuLl9fcHJvdG9fXyA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLCBkZWZpbmUoZ2VuRnVuLCB0b1N0cmluZ1RhZ1N5bWJvbCwgXCJHZW5lcmF0b3JGdW5jdGlvblwiKSksIGdlbkZ1bi5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEdwKSwgZ2VuRnVuO1xuICB9LCBleHBvcnRzLmF3cmFwID0gZnVuY3Rpb24gKGFyZykge1xuICAgIHJldHVybiB7XG4gICAgICBfX2F3YWl0OiBhcmdcbiAgICB9O1xuICB9LCBkZWZpbmVJdGVyYXRvck1ldGhvZHMoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUpLCBkZWZpbmUoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUsIGFzeW5jSXRlcmF0b3JTeW1ib2wsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfSksIGV4cG9ydHMuQXN5bmNJdGVyYXRvciA9IEFzeW5jSXRlcmF0b3IsIGV4cG9ydHMuYXN5bmMgPSBmdW5jdGlvbiAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QsIFByb21pc2VJbXBsKSB7XG4gICAgdm9pZCAwID09PSBQcm9taXNlSW1wbCAmJiAoUHJvbWlzZUltcGwgPSBQcm9taXNlKTtcbiAgICB2YXIgaXRlciA9IG5ldyBBc3luY0l0ZXJhdG9yKHdyYXAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpLCBQcm9taXNlSW1wbCk7XG4gICAgcmV0dXJuIGV4cG9ydHMuaXNHZW5lcmF0b3JGdW5jdGlvbihvdXRlckZuKSA/IGl0ZXIgOiBpdGVyLm5leHQoKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgIHJldHVybiByZXN1bHQuZG9uZSA/IHJlc3VsdC52YWx1ZSA6IGl0ZXIubmV4dCgpO1xuICAgIH0pO1xuICB9LCBkZWZpbmVJdGVyYXRvck1ldGhvZHMoR3ApLCBkZWZpbmUoR3AsIHRvU3RyaW5nVGFnU3ltYm9sLCBcIkdlbmVyYXRvclwiKSwgZGVmaW5lKEdwLCBpdGVyYXRvclN5bWJvbCwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9KSwgZGVmaW5lKEdwLCBcInRvU3RyaW5nXCIsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gXCJbb2JqZWN0IEdlbmVyYXRvcl1cIjtcbiAgfSksIGV4cG9ydHMua2V5cyA9IGZ1bmN0aW9uIChvYmplY3QpIHtcbiAgICB2YXIga2V5cyA9IFtdO1xuXG4gICAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuICAgICAga2V5cy5wdXNoKGtleSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGtleXMucmV2ZXJzZSgpLCBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgZm9yICg7IGtleXMubGVuZ3RoOykge1xuICAgICAgICB2YXIga2V5ID0ga2V5cy5wb3AoKTtcbiAgICAgICAgaWYgKGtleSBpbiBvYmplY3QpIHJldHVybiBuZXh0LnZhbHVlID0ga2V5LCBuZXh0LmRvbmUgPSAhMSwgbmV4dDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5leHQuZG9uZSA9ICEwLCBuZXh0O1xuICAgIH07XG4gIH0sIGV4cG9ydHMudmFsdWVzID0gdmFsdWVzLCBDb250ZXh0LnByb3RvdHlwZSA9IHtcbiAgICBjb25zdHJ1Y3RvcjogQ29udGV4dCxcbiAgICByZXNldDogZnVuY3Rpb24gcmVzZXQoc2tpcFRlbXBSZXNldCkge1xuICAgICAgaWYgKHRoaXMucHJldiA9IDAsIHRoaXMubmV4dCA9IDAsIHRoaXMuc2VudCA9IHRoaXMuX3NlbnQgPSB1bmRlZmluZWQsIHRoaXMuZG9uZSA9ICExLCB0aGlzLmRlbGVnYXRlID0gbnVsbCwgdGhpcy5tZXRob2QgPSBcIm5leHRcIiwgdGhpcy5hcmcgPSB1bmRlZmluZWQsIHRoaXMudHJ5RW50cmllcy5mb3JFYWNoKHJlc2V0VHJ5RW50cnkpLCAhc2tpcFRlbXBSZXNldCkgZm9yICh2YXIgbmFtZSBpbiB0aGlzKSB7XG4gICAgICAgIFwidFwiID09PSBuYW1lLmNoYXJBdCgwKSAmJiBoYXNPd24uY2FsbCh0aGlzLCBuYW1lKSAmJiAhaXNOYU4oK25hbWUuc2xpY2UoMSkpICYmICh0aGlzW25hbWVdID0gdW5kZWZpbmVkKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHN0b3A6IGZ1bmN0aW9uIHN0b3AoKSB7XG4gICAgICB0aGlzLmRvbmUgPSAhMDtcbiAgICAgIHZhciByb290UmVjb3JkID0gdGhpcy50cnlFbnRyaWVzWzBdLmNvbXBsZXRpb247XG4gICAgICBpZiAoXCJ0aHJvd1wiID09PSByb290UmVjb3JkLnR5cGUpIHRocm93IHJvb3RSZWNvcmQuYXJnO1xuICAgICAgcmV0dXJuIHRoaXMucnZhbDtcbiAgICB9LFxuICAgIGRpc3BhdGNoRXhjZXB0aW9uOiBmdW5jdGlvbiBkaXNwYXRjaEV4Y2VwdGlvbihleGNlcHRpb24pIHtcbiAgICAgIGlmICh0aGlzLmRvbmUpIHRocm93IGV4Y2VwdGlvbjtcbiAgICAgIHZhciBjb250ZXh0ID0gdGhpcztcblxuICAgICAgZnVuY3Rpb24gaGFuZGxlKGxvYywgY2F1Z2h0KSB7XG4gICAgICAgIHJldHVybiByZWNvcmQudHlwZSA9IFwidGhyb3dcIiwgcmVjb3JkLmFyZyA9IGV4Y2VwdGlvbiwgY29udGV4dC5uZXh0ID0gbG9jLCBjYXVnaHQgJiYgKGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCIsIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkKSwgISFjYXVnaHQ7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldLFxuICAgICAgICAgICAgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbjtcbiAgICAgICAgaWYgKFwicm9vdFwiID09PSBlbnRyeS50cnlMb2MpIHJldHVybiBoYW5kbGUoXCJlbmRcIik7XG5cbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA8PSB0aGlzLnByZXYpIHtcbiAgICAgICAgICB2YXIgaGFzQ2F0Y2ggPSBoYXNPd24uY2FsbChlbnRyeSwgXCJjYXRjaExvY1wiKSxcbiAgICAgICAgICAgICAgaGFzRmluYWxseSA9IGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIik7XG5cbiAgICAgICAgICBpZiAoaGFzQ2F0Y2ggJiYgaGFzRmluYWxseSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmNhdGNoTG9jKSByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCAhMCk7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGhhc0NhdGNoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHJldHVybiBoYW5kbGUoZW50cnkuY2F0Y2hMb2MsICEwKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKCFoYXNGaW5hbGx5KSB0aHJvdyBuZXcgRXJyb3IoXCJ0cnkgc3RhdGVtZW50IHdpdGhvdXQgY2F0Y2ggb3IgZmluYWxseVwiKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSByZXR1cm4gaGFuZGxlKGVudHJ5LmZpbmFsbHlMb2MpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgYWJydXB0OiBmdW5jdGlvbiBhYnJ1cHQodHlwZSwgYXJnKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldiAmJiBoYXNPd24uY2FsbChlbnRyeSwgXCJmaW5hbGx5TG9jXCIpICYmIHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICB2YXIgZmluYWxseUVudHJ5ID0gZW50cnk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZmluYWxseUVudHJ5ICYmIChcImJyZWFrXCIgPT09IHR5cGUgfHwgXCJjb250aW51ZVwiID09PSB0eXBlKSAmJiBmaW5hbGx5RW50cnkudHJ5TG9jIDw9IGFyZyAmJiBhcmcgPD0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2MgJiYgKGZpbmFsbHlFbnRyeSA9IG51bGwpO1xuICAgICAgdmFyIHJlY29yZCA9IGZpbmFsbHlFbnRyeSA/IGZpbmFsbHlFbnRyeS5jb21wbGV0aW9uIDoge307XG4gICAgICByZXR1cm4gcmVjb3JkLnR5cGUgPSB0eXBlLCByZWNvcmQuYXJnID0gYXJnLCBmaW5hbGx5RW50cnkgPyAodGhpcy5tZXRob2QgPSBcIm5leHRcIiwgdGhpcy5uZXh0ID0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2MsIENvbnRpbnVlU2VudGluZWwpIDogdGhpcy5jb21wbGV0ZShyZWNvcmQpO1xuICAgIH0sXG4gICAgY29tcGxldGU6IGZ1bmN0aW9uIGNvbXBsZXRlKHJlY29yZCwgYWZ0ZXJMb2MpIHtcbiAgICAgIGlmIChcInRocm93XCIgPT09IHJlY29yZC50eXBlKSB0aHJvdyByZWNvcmQuYXJnO1xuICAgICAgcmV0dXJuIFwiYnJlYWtcIiA9PT0gcmVjb3JkLnR5cGUgfHwgXCJjb250aW51ZVwiID09PSByZWNvcmQudHlwZSA/IHRoaXMubmV4dCA9IHJlY29yZC5hcmcgOiBcInJldHVyblwiID09PSByZWNvcmQudHlwZSA/ICh0aGlzLnJ2YWwgPSB0aGlzLmFyZyA9IHJlY29yZC5hcmcsIHRoaXMubWV0aG9kID0gXCJyZXR1cm5cIiwgdGhpcy5uZXh0ID0gXCJlbmRcIikgOiBcIm5vcm1hbFwiID09PSByZWNvcmQudHlwZSAmJiBhZnRlckxvYyAmJiAodGhpcy5uZXh0ID0gYWZ0ZXJMb2MpLCBDb250aW51ZVNlbnRpbmVsO1xuICAgIH0sXG4gICAgZmluaXNoOiBmdW5jdGlvbiBmaW5pc2goZmluYWxseUxvYykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS5maW5hbGx5TG9jID09PSBmaW5hbGx5TG9jKSByZXR1cm4gdGhpcy5jb21wbGV0ZShlbnRyeS5jb21wbGV0aW9uLCBlbnRyeS5hZnRlckxvYyksIHJlc2V0VHJ5RW50cnkoZW50cnkpLCBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgfVxuICAgIH0sXG4gICAgXCJjYXRjaFwiOiBmdW5jdGlvbiBfY2F0Y2godHJ5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jID09PSB0cnlMb2MpIHtcbiAgICAgICAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbjtcblxuICAgICAgICAgIGlmIChcInRocm93XCIgPT09IHJlY29yZC50eXBlKSB7XG4gICAgICAgICAgICB2YXIgdGhyb3duID0gcmVjb3JkLmFyZztcbiAgICAgICAgICAgIHJlc2V0VHJ5RW50cnkoZW50cnkpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiB0aHJvd247XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaWxsZWdhbCBjYXRjaCBhdHRlbXB0XCIpO1xuICAgIH0sXG4gICAgZGVsZWdhdGVZaWVsZDogZnVuY3Rpb24gZGVsZWdhdGVZaWVsZChpdGVyYWJsZSwgcmVzdWx0TmFtZSwgbmV4dExvYykge1xuICAgICAgcmV0dXJuIHRoaXMuZGVsZWdhdGUgPSB7XG4gICAgICAgIGl0ZXJhdG9yOiB2YWx1ZXMoaXRlcmFibGUpLFxuICAgICAgICByZXN1bHROYW1lOiByZXN1bHROYW1lLFxuICAgICAgICBuZXh0TG9jOiBuZXh0TG9jXG4gICAgICB9LCBcIm5leHRcIiA9PT0gdGhpcy5tZXRob2QgJiYgKHRoaXMuYXJnID0gdW5kZWZpbmVkKSwgQ29udGludWVTZW50aW5lbDtcbiAgICB9XG4gIH0sIGV4cG9ydHM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3JlZ2VuZXJhdG9yUnVudGltZSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyIsImZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICByZXR1cm4gKG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvYmopIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgfSA6IGZ1bmN0aW9uIChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xuICB9LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHMpLCBfdHlwZW9mKG9iaik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyIsIi8vIFRPRE8oQmFiZWwgOCk6IFJlbW92ZSB0aGlzIGZpbGUuXG5cbnZhciBydW50aW1lID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvcmVnZW5lcmF0b3JSdW50aW1lXCIpKCk7XG5tb2R1bGUuZXhwb3J0cyA9IHJ1bnRpbWU7XG5cbi8vIENvcGllZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWdlbmVyYXRvci9ibG9iL21haW4vcGFja2FnZXMvcnVudGltZS9ydW50aW1lLmpzI0w3MzY9XG50cnkge1xuICByZWdlbmVyYXRvclJ1bnRpbWUgPSBydW50aW1lO1xufSBjYXRjaCAoYWNjaWRlbnRhbFN0cmljdE1vZGUpIHtcbiAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSBcIm9iamVjdFwiKSB7XG4gICAgZ2xvYmFsVGhpcy5yZWdlbmVyYXRvclJ1bnRpbWUgPSBydW50aW1lO1xuICB9IGVsc2Uge1xuICAgIEZ1bmN0aW9uKFwiclwiLCBcInJlZ2VuZXJhdG9yUnVudGltZSA9IHJcIikocnVudGltZSk7XG4gIH1cbn1cbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRpZiAoY2FjaGVkTW9kdWxlLmVycm9yICE9PSB1bmRlZmluZWQpIHRocm93IGNhY2hlZE1vZHVsZS5lcnJvcjtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0dHJ5IHtcblx0XHR2YXIgZXhlY09wdGlvbnMgPSB7IGlkOiBtb2R1bGVJZCwgbW9kdWxlOiBtb2R1bGUsIGZhY3Rvcnk6IF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLCByZXF1aXJlOiBfX3dlYnBhY2tfcmVxdWlyZV9fIH07XG5cdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5pLmZvckVhY2goZnVuY3Rpb24oaGFuZGxlcikgeyBoYW5kbGVyKGV4ZWNPcHRpb25zKTsgfSk7XG5cdFx0bW9kdWxlID0gZXhlY09wdGlvbnMubW9kdWxlO1xuXHRcdGV4ZWNPcHRpb25zLmZhY3RvcnkuY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgZXhlY09wdGlvbnMucmVxdWlyZSk7XG5cdH0gY2F0Y2goZSkge1xuXHRcdG1vZHVsZS5lcnJvciA9IGU7XG5cdFx0dGhyb3cgZTtcblx0fVxuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX187XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlIGV4ZWN1dGlvbiBpbnRlcmNlcHRvclxuX193ZWJwYWNrX3JlcXVpcmVfXy5pID0gW107XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiLy8gVGhpcyBmdW5jdGlvbiBhbGxvdyB0byByZWZlcmVuY2UgYWxsIGNodW5rc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5odSA9IChjaHVua0lkKSA9PiB7XG5cdC8vIHJldHVybiB1cmwgZm9yIGZpbGVuYW1lcyBiYXNlZCBvbiB0ZW1wbGF0ZVxuXHRyZXR1cm4gXCJcIiArIGNodW5rSWQgKyBcIi5cIiArIF9fd2VicGFja19yZXF1aXJlX18uaCgpICsgXCIuaG90LXVwZGF0ZS5qc1wiO1xufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckYgPSAoKSA9PiAoXCJtYWluLlwiICsgX193ZWJwYWNrX3JlcXVpcmVfXy5oKCkgKyBcIi5ob3QtdXBkYXRlLmpzb25cIik7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiMmQzY2VhZGYyOTI3YWJhZWUyYjRcIikiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwidmFyIGN1cnJlbnRNb2R1bGVEYXRhID0ge307XG52YXIgaW5zdGFsbGVkTW9kdWxlcyA9IF9fd2VicGFja19yZXF1aXJlX18uYztcblxuLy8gbW9kdWxlIGFuZCByZXF1aXJlIGNyZWF0aW9uXG52YXIgY3VycmVudENoaWxkTW9kdWxlO1xudmFyIGN1cnJlbnRQYXJlbnRzID0gW107XG5cbi8vIHN0YXR1c1xudmFyIHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycyA9IFtdO1xudmFyIGN1cnJlbnRTdGF0dXMgPSBcImlkbGVcIjtcblxuLy8gd2hpbGUgZG93bmxvYWRpbmdcbnZhciBibG9ja2luZ1Byb21pc2VzID0gMDtcbnZhciBibG9ja2luZ1Byb21pc2VzV2FpdGluZyA9IFtdO1xuXG4vLyBUaGUgdXBkYXRlIGluZm9cbnZhciBjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycztcbnZhciBxdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXM7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5obXJEID0gY3VycmVudE1vZHVsZURhdGE7XG5cbl9fd2VicGFja19yZXF1aXJlX18uaS5wdXNoKGZ1bmN0aW9uIChvcHRpb25zKSB7XG5cdHZhciBtb2R1bGUgPSBvcHRpb25zLm1vZHVsZTtcblx0dmFyIHJlcXVpcmUgPSBjcmVhdGVSZXF1aXJlKG9wdGlvbnMucmVxdWlyZSwgb3B0aW9ucy5pZCk7XG5cdG1vZHVsZS5ob3QgPSBjcmVhdGVNb2R1bGVIb3RPYmplY3Qob3B0aW9ucy5pZCwgbW9kdWxlKTtcblx0bW9kdWxlLnBhcmVudHMgPSBjdXJyZW50UGFyZW50cztcblx0bW9kdWxlLmNoaWxkcmVuID0gW107XG5cdGN1cnJlbnRQYXJlbnRzID0gW107XG5cdG9wdGlvbnMucmVxdWlyZSA9IHJlcXVpcmU7XG59KTtcblxuX193ZWJwYWNrX3JlcXVpcmVfXy5obXJDID0ge307XG5fX3dlYnBhY2tfcmVxdWlyZV9fLmhtckkgPSB7fTtcblxuZnVuY3Rpb24gY3JlYXRlUmVxdWlyZShyZXF1aXJlLCBtb2R1bGVJZCkge1xuXHR2YXIgbWUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcblx0aWYgKCFtZSkgcmV0dXJuIHJlcXVpcmU7XG5cdHZhciBmbiA9IGZ1bmN0aW9uIChyZXF1ZXN0KSB7XG5cdFx0aWYgKG1lLmhvdC5hY3RpdmUpIHtcblx0XHRcdGlmIChpbnN0YWxsZWRNb2R1bGVzW3JlcXVlc3RdKSB7XG5cdFx0XHRcdHZhciBwYXJlbnRzID0gaW5zdGFsbGVkTW9kdWxlc1tyZXF1ZXN0XS5wYXJlbnRzO1xuXHRcdFx0XHRpZiAocGFyZW50cy5pbmRleE9mKG1vZHVsZUlkKSA9PT0gLTEpIHtcblx0XHRcdFx0XHRwYXJlbnRzLnB1c2gobW9kdWxlSWQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRjdXJyZW50UGFyZW50cyA9IFttb2R1bGVJZF07XG5cdFx0XHRcdGN1cnJlbnRDaGlsZE1vZHVsZSA9IHJlcXVlc3Q7XG5cdFx0XHR9XG5cdFx0XHRpZiAobWUuY2hpbGRyZW4uaW5kZXhPZihyZXF1ZXN0KSA9PT0gLTEpIHtcblx0XHRcdFx0bWUuY2hpbGRyZW4ucHVzaChyZXF1ZXN0KTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0Y29uc29sZS53YXJuKFxuXHRcdFx0XHRcIltITVJdIHVuZXhwZWN0ZWQgcmVxdWlyZShcIiArXG5cdFx0XHRcdFx0cmVxdWVzdCArXG5cdFx0XHRcdFx0XCIpIGZyb20gZGlzcG9zZWQgbW9kdWxlIFwiICtcblx0XHRcdFx0XHRtb2R1bGVJZFxuXHRcdFx0KTtcblx0XHRcdGN1cnJlbnRQYXJlbnRzID0gW107XG5cdFx0fVxuXHRcdHJldHVybiByZXF1aXJlKHJlcXVlc3QpO1xuXHR9O1xuXHR2YXIgY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yID0gZnVuY3Rpb24gKG5hbWUpIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRyZXR1cm4gcmVxdWlyZVtuYW1lXTtcblx0XHRcdH0sXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuXHRcdFx0XHRyZXF1aXJlW25hbWVdID0gdmFsdWU7XG5cdFx0XHR9XG5cdFx0fTtcblx0fTtcblx0Zm9yICh2YXIgbmFtZSBpbiByZXF1aXJlKSB7XG5cdFx0aWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChyZXF1aXJlLCBuYW1lKSAmJiBuYW1lICE9PSBcImVcIikge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGZuLCBuYW1lLCBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IobmFtZSkpO1xuXHRcdH1cblx0fVxuXHRmbi5lID0gZnVuY3Rpb24gKGNodW5rSWQpIHtcblx0XHRyZXR1cm4gdHJhY2tCbG9ja2luZ1Byb21pc2UocmVxdWlyZS5lKGNodW5rSWQpKTtcblx0fTtcblx0cmV0dXJuIGZuO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVNb2R1bGVIb3RPYmplY3QobW9kdWxlSWQsIG1lKSB7XG5cdHZhciBfbWFpbiA9IGN1cnJlbnRDaGlsZE1vZHVsZSAhPT0gbW9kdWxlSWQ7XG5cdHZhciBob3QgPSB7XG5cdFx0Ly8gcHJpdmF0ZSBzdHVmZlxuXHRcdF9hY2NlcHRlZERlcGVuZGVuY2llczoge30sXG5cdFx0X2FjY2VwdGVkRXJyb3JIYW5kbGVyczoge30sXG5cdFx0X2RlY2xpbmVkRGVwZW5kZW5jaWVzOiB7fSxcblx0XHRfc2VsZkFjY2VwdGVkOiBmYWxzZSxcblx0XHRfc2VsZkRlY2xpbmVkOiBmYWxzZSxcblx0XHRfc2VsZkludmFsaWRhdGVkOiBmYWxzZSxcblx0XHRfZGlzcG9zZUhhbmRsZXJzOiBbXSxcblx0XHRfbWFpbjogX21haW4sXG5cdFx0X3JlcXVpcmVTZWxmOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRjdXJyZW50UGFyZW50cyA9IG1lLnBhcmVudHMuc2xpY2UoKTtcblx0XHRcdGN1cnJlbnRDaGlsZE1vZHVsZSA9IF9tYWluID8gdW5kZWZpbmVkIDogbW9kdWxlSWQ7XG5cdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKTtcblx0XHR9LFxuXG5cdFx0Ly8gTW9kdWxlIEFQSVxuXHRcdGFjdGl2ZTogdHJ1ZSxcblx0XHRhY2NlcHQ6IGZ1bmN0aW9uIChkZXAsIGNhbGxiYWNrLCBlcnJvckhhbmRsZXIpIHtcblx0XHRcdGlmIChkZXAgPT09IHVuZGVmaW5lZCkgaG90Ll9zZWxmQWNjZXB0ZWQgPSB0cnVlO1xuXHRcdFx0ZWxzZSBpZiAodHlwZW9mIGRlcCA9PT0gXCJmdW5jdGlvblwiKSBob3QuX3NlbGZBY2NlcHRlZCA9IGRlcDtcblx0XHRcdGVsc2UgaWYgKHR5cGVvZiBkZXAgPT09IFwib2JqZWN0XCIgJiYgZGVwICE9PSBudWxsKSB7XG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgZGVwLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdFx0aG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1tkZXBbaV1dID0gY2FsbGJhY2sgfHwgZnVuY3Rpb24gKCkge307XG5cdFx0XHRcdFx0aG90Ll9hY2NlcHRlZEVycm9ySGFuZGxlcnNbZGVwW2ldXSA9IGVycm9ySGFuZGxlcjtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1tkZXBdID0gY2FsbGJhY2sgfHwgZnVuY3Rpb24gKCkge307XG5cdFx0XHRcdGhvdC5fYWNjZXB0ZWRFcnJvckhhbmRsZXJzW2RlcF0gPSBlcnJvckhhbmRsZXI7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRkZWNsaW5lOiBmdW5jdGlvbiAoZGVwKSB7XG5cdFx0XHRpZiAoZGVwID09PSB1bmRlZmluZWQpIGhvdC5fc2VsZkRlY2xpbmVkID0gdHJ1ZTtcblx0XHRcdGVsc2UgaWYgKHR5cGVvZiBkZXAgPT09IFwib2JqZWN0XCIgJiYgZGVwICE9PSBudWxsKVxuXHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGRlcC5sZW5ndGg7IGkrKylcblx0XHRcdFx0XHRob3QuX2RlY2xpbmVkRGVwZW5kZW5jaWVzW2RlcFtpXV0gPSB0cnVlO1xuXHRcdFx0ZWxzZSBob3QuX2RlY2xpbmVkRGVwZW5kZW5jaWVzW2RlcF0gPSB0cnVlO1xuXHRcdH0sXG5cdFx0ZGlzcG9zZTogZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG5cdFx0XHRob3QuX2Rpc3Bvc2VIYW5kbGVycy5wdXNoKGNhbGxiYWNrKTtcblx0XHR9LFxuXHRcdGFkZERpc3Bvc2VIYW5kbGVyOiBmdW5jdGlvbiAoY2FsbGJhY2spIHtcblx0XHRcdGhvdC5fZGlzcG9zZUhhbmRsZXJzLnB1c2goY2FsbGJhY2spO1xuXHRcdH0sXG5cdFx0cmVtb3ZlRGlzcG9zZUhhbmRsZXI6IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuXHRcdFx0dmFyIGlkeCA9IGhvdC5fZGlzcG9zZUhhbmRsZXJzLmluZGV4T2YoY2FsbGJhY2spO1xuXHRcdFx0aWYgKGlkeCA+PSAwKSBob3QuX2Rpc3Bvc2VIYW5kbGVycy5zcGxpY2UoaWR4LCAxKTtcblx0XHR9LFxuXHRcdGludmFsaWRhdGU6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHRoaXMuX3NlbGZJbnZhbGlkYXRlZCA9IHRydWU7XG5cdFx0XHRzd2l0Y2ggKGN1cnJlbnRTdGF0dXMpIHtcblx0XHRcdFx0Y2FzZSBcImlkbGVcIjpcblx0XHRcdFx0XHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycyA9IFtdO1xuXHRcdFx0XHRcdE9iamVjdC5rZXlzKF9fd2VicGFja19yZXF1aXJlX18uaG1ySSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0XHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmhtcklba2V5XShcblx0XHRcdFx0XHRcdFx0bW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdHNldFN0YXR1cyhcInJlYWR5XCIpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwicmVhZHlcIjpcblx0XHRcdFx0XHRPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5obXJJW2tleV0oXG5cdFx0XHRcdFx0XHRcdG1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVyc1xuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcInByZXBhcmVcIjpcblx0XHRcdFx0Y2FzZSBcImNoZWNrXCI6XG5cdFx0XHRcdGNhc2UgXCJkaXNwb3NlXCI6XG5cdFx0XHRcdGNhc2UgXCJhcHBseVwiOlxuXHRcdFx0XHRcdChxdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMgPSBxdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMgfHwgW10pLnB1c2goXG5cdFx0XHRcdFx0XHRtb2R1bGVJZFxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0Ly8gaWdub3JlIHJlcXVlc3RzIGluIGVycm9yIHN0YXRlc1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHQvLyBNYW5hZ2VtZW50IEFQSVxuXHRcdGNoZWNrOiBob3RDaGVjayxcblx0XHRhcHBseTogaG90QXBwbHksXG5cdFx0c3RhdHVzOiBmdW5jdGlvbiAobCkge1xuXHRcdFx0aWYgKCFsKSByZXR1cm4gY3VycmVudFN0YXR1cztcblx0XHRcdHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycy5wdXNoKGwpO1xuXHRcdH0sXG5cdFx0YWRkU3RhdHVzSGFuZGxlcjogZnVuY3Rpb24gKGwpIHtcblx0XHRcdHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycy5wdXNoKGwpO1xuXHRcdH0sXG5cdFx0cmVtb3ZlU3RhdHVzSGFuZGxlcjogZnVuY3Rpb24gKGwpIHtcblx0XHRcdHZhciBpZHggPSByZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMuaW5kZXhPZihsKTtcblx0XHRcdGlmIChpZHggPj0gMCkgcmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzLnNwbGljZShpZHgsIDEpO1xuXHRcdH0sXG5cblx0XHQvL2luaGVyaXQgZnJvbSBwcmV2aW91cyBkaXNwb3NlIGNhbGxcblx0XHRkYXRhOiBjdXJyZW50TW9kdWxlRGF0YVttb2R1bGVJZF1cblx0fTtcblx0Y3VycmVudENoaWxkTW9kdWxlID0gdW5kZWZpbmVkO1xuXHRyZXR1cm4gaG90O1xufVxuXG5mdW5jdGlvbiBzZXRTdGF0dXMobmV3U3RhdHVzKSB7XG5cdGN1cnJlbnRTdGF0dXMgPSBuZXdTdGF0dXM7XG5cdHZhciByZXN1bHRzID0gW107XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCByZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMubGVuZ3RoOyBpKyspXG5cdFx0cmVzdWx0c1tpXSA9IHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVyc1tpXS5jYWxsKG51bGwsIG5ld1N0YXR1cyk7XG5cblx0cmV0dXJuIFByb21pc2UuYWxsKHJlc3VsdHMpO1xufVxuXG5mdW5jdGlvbiB1bmJsb2NrKCkge1xuXHRpZiAoLS1ibG9ja2luZ1Byb21pc2VzID09PSAwKSB7XG5cdFx0c2V0U3RhdHVzKFwicmVhZHlcIikudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHRpZiAoYmxvY2tpbmdQcm9taXNlcyA9PT0gMCkge1xuXHRcdFx0XHR2YXIgbGlzdCA9IGJsb2NraW5nUHJvbWlzZXNXYWl0aW5nO1xuXHRcdFx0XHRibG9ja2luZ1Byb21pc2VzV2FpdGluZyA9IFtdO1xuXHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0XHRsaXN0W2ldKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9KTtcblx0fVxufVxuXG5mdW5jdGlvbiB0cmFja0Jsb2NraW5nUHJvbWlzZShwcm9taXNlKSB7XG5cdHN3aXRjaCAoY3VycmVudFN0YXR1cykge1xuXHRcdGNhc2UgXCJyZWFkeVwiOlxuXHRcdFx0c2V0U3RhdHVzKFwicHJlcGFyZVwiKTtcblx0XHQvKiBmYWxsdGhyb3VnaCAqL1xuXHRcdGNhc2UgXCJwcmVwYXJlXCI6XG5cdFx0XHRibG9ja2luZ1Byb21pc2VzKys7XG5cdFx0XHRwcm9taXNlLnRoZW4odW5ibG9jaywgdW5ibG9jayk7XG5cdFx0XHRyZXR1cm4gcHJvbWlzZTtcblx0XHRkZWZhdWx0OlxuXHRcdFx0cmV0dXJuIHByb21pc2U7XG5cdH1cbn1cblxuZnVuY3Rpb24gd2FpdEZvckJsb2NraW5nUHJvbWlzZXMoZm4pIHtcblx0aWYgKGJsb2NraW5nUHJvbWlzZXMgPT09IDApIHJldHVybiBmbigpO1xuXHRyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcblx0XHRibG9ja2luZ1Byb21pc2VzV2FpdGluZy5wdXNoKGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlc29sdmUoZm4oKSk7XG5cdFx0fSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBob3RDaGVjayhhcHBseU9uVXBkYXRlKSB7XG5cdGlmIChjdXJyZW50U3RhdHVzICE9PSBcImlkbGVcIikge1xuXHRcdHRocm93IG5ldyBFcnJvcihcImNoZWNrKCkgaXMgb25seSBhbGxvd2VkIGluIGlkbGUgc3RhdHVzXCIpO1xuXHR9XG5cdHJldHVybiBzZXRTdGF0dXMoXCJjaGVja1wiKVxuXHRcdC50aGVuKF9fd2VicGFja19yZXF1aXJlX18uaG1yTSlcblx0XHQudGhlbihmdW5jdGlvbiAodXBkYXRlKSB7XG5cdFx0XHRpZiAoIXVwZGF0ZSkge1xuXHRcdFx0XHRyZXR1cm4gc2V0U3RhdHVzKGFwcGx5SW52YWxpZGF0ZWRNb2R1bGVzKCkgPyBcInJlYWR5XCIgOiBcImlkbGVcIikudGhlbihcblx0XHRcdFx0XHRmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBzZXRTdGF0dXMoXCJwcmVwYXJlXCIpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0XHR2YXIgdXBkYXRlZE1vZHVsZXMgPSBbXTtcblx0XHRcdFx0Y3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMgPSBbXTtcblxuXHRcdFx0XHRyZXR1cm4gUHJvbWlzZS5hbGwoXG5cdFx0XHRcdFx0T2JqZWN0LmtleXMoX193ZWJwYWNrX3JlcXVpcmVfXy5obXJDKS5yZWR1Y2UoZnVuY3Rpb24gKFxuXHRcdFx0XHRcdFx0cHJvbWlzZXMsXG5cdFx0XHRcdFx0XHRrZXlcblx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uaG1yQ1trZXldKFxuXHRcdFx0XHRcdFx0XHR1cGRhdGUuYyxcblx0XHRcdFx0XHRcdFx0dXBkYXRlLnIsXG5cdFx0XHRcdFx0XHRcdHVwZGF0ZS5tLFxuXHRcdFx0XHRcdFx0XHRwcm9taXNlcyxcblx0XHRcdFx0XHRcdFx0Y3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMsXG5cdFx0XHRcdFx0XHRcdHVwZGF0ZWRNb2R1bGVzXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0cmV0dXJuIHByb21pc2VzO1xuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0W10pXG5cdFx0XHRcdCkudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHdhaXRGb3JCbG9ja2luZ1Byb21pc2VzKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdGlmIChhcHBseU9uVXBkYXRlKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBpbnRlcm5hbEFwcGx5KGFwcGx5T25VcGRhdGUpO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHNldFN0YXR1cyhcInJlYWR5XCIpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiB1cGRhdGVkTW9kdWxlcztcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cdFx0fSk7XG59XG5cbmZ1bmN0aW9uIGhvdEFwcGx5KG9wdGlvbnMpIHtcblx0aWYgKGN1cnJlbnRTdGF0dXMgIT09IFwicmVhZHlcIikge1xuXHRcdHJldHVybiBQcm9taXNlLnJlc29sdmUoKS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcihcblx0XHRcdFx0XCJhcHBseSgpIGlzIG9ubHkgYWxsb3dlZCBpbiByZWFkeSBzdGF0dXMgKHN0YXRlOiBcIiArXG5cdFx0XHRcdFx0Y3VycmVudFN0YXR1cyArXG5cdFx0XHRcdFx0XCIpXCJcblx0XHRcdCk7XG5cdFx0fSk7XG5cdH1cblx0cmV0dXJuIGludGVybmFsQXBwbHkob3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIGludGVybmFsQXBwbHkob3B0aW9ucykge1xuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRhcHBseUludmFsaWRhdGVkTW9kdWxlcygpO1xuXG5cdHZhciByZXN1bHRzID0gY3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMubWFwKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG5cdFx0cmV0dXJuIGhhbmRsZXIob3B0aW9ucyk7XG5cdH0pO1xuXHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycyA9IHVuZGVmaW5lZDtcblxuXHR2YXIgZXJyb3JzID0gcmVzdWx0c1xuXHRcdC5tYXAoZnVuY3Rpb24gKHIpIHtcblx0XHRcdHJldHVybiByLmVycm9yO1xuXHRcdH0pXG5cdFx0LmZpbHRlcihCb29sZWFuKTtcblxuXHRpZiAoZXJyb3JzLmxlbmd0aCA+IDApIHtcblx0XHRyZXR1cm4gc2V0U3RhdHVzKFwiYWJvcnRcIikudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHR0aHJvdyBlcnJvcnNbMF07XG5cdFx0fSk7XG5cdH1cblxuXHQvLyBOb3cgaW4gXCJkaXNwb3NlXCIgcGhhc2Vcblx0dmFyIGRpc3Bvc2VQcm9taXNlID0gc2V0U3RhdHVzKFwiZGlzcG9zZVwiKTtcblxuXHRyZXN1bHRzLmZvckVhY2goZnVuY3Rpb24gKHJlc3VsdCkge1xuXHRcdGlmIChyZXN1bHQuZGlzcG9zZSkgcmVzdWx0LmRpc3Bvc2UoKTtcblx0fSk7XG5cblx0Ly8gTm93IGluIFwiYXBwbHlcIiBwaGFzZVxuXHR2YXIgYXBwbHlQcm9taXNlID0gc2V0U3RhdHVzKFwiYXBwbHlcIik7XG5cblx0dmFyIGVycm9yO1xuXHR2YXIgcmVwb3J0RXJyb3IgPSBmdW5jdGlvbiAoZXJyKSB7XG5cdFx0aWYgKCFlcnJvcikgZXJyb3IgPSBlcnI7XG5cdH07XG5cblx0dmFyIG91dGRhdGVkTW9kdWxlcyA9IFtdO1xuXHRyZXN1bHRzLmZvckVhY2goZnVuY3Rpb24gKHJlc3VsdCkge1xuXHRcdGlmIChyZXN1bHQuYXBwbHkpIHtcblx0XHRcdHZhciBtb2R1bGVzID0gcmVzdWx0LmFwcGx5KHJlcG9ydEVycm9yKTtcblx0XHRcdGlmIChtb2R1bGVzKSB7XG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdG91dGRhdGVkTW9kdWxlcy5wdXNoKG1vZHVsZXNbaV0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9KTtcblxuXHRyZXR1cm4gUHJvbWlzZS5hbGwoW2Rpc3Bvc2VQcm9taXNlLCBhcHBseVByb21pc2VdKS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHQvLyBoYW5kbGUgZXJyb3JzIGluIGFjY2VwdCBoYW5kbGVycyBhbmQgc2VsZiBhY2NlcHRlZCBtb2R1bGUgbG9hZFxuXHRcdGlmIChlcnJvcikge1xuXHRcdFx0cmV0dXJuIHNldFN0YXR1cyhcImZhaWxcIikudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdHRocm93IGVycm9yO1xuXHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0aWYgKHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcykge1xuXHRcdFx0cmV0dXJuIGludGVybmFsQXBwbHkob3B0aW9ucykudGhlbihmdW5jdGlvbiAobGlzdCkge1xuXHRcdFx0XHRvdXRkYXRlZE1vZHVsZXMuZm9yRWFjaChmdW5jdGlvbiAobW9kdWxlSWQpIHtcblx0XHRcdFx0XHRpZiAobGlzdC5pbmRleE9mKG1vZHVsZUlkKSA8IDApIGxpc3QucHVzaChtb2R1bGVJZCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRyZXR1cm4gbGlzdDtcblx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdHJldHVybiBzZXRTdGF0dXMoXCJpZGxlXCIpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIG91dGRhdGVkTW9kdWxlcztcblx0XHR9KTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGFwcGx5SW52YWxpZGF0ZWRNb2R1bGVzKCkge1xuXHRpZiAocXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzKSB7XG5cdFx0aWYgKCFjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycykgY3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMgPSBbXTtcblx0XHRPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdFx0cXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24gKG1vZHVsZUlkKSB7XG5cdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uaG1ySVtrZXldKFxuXHRcdFx0XHRcdG1vZHVsZUlkLFxuXHRcdFx0XHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzXG5cdFx0XHRcdCk7XG5cdFx0XHR9KTtcblx0XHR9KTtcblx0XHRxdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMgPSB1bmRlZmluZWQ7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cbn0iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIi9cIjsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0gX193ZWJwYWNrX3JlcXVpcmVfXy5obXJTX2pzb25wID0gX193ZWJwYWNrX3JlcXVpcmVfXy5obXJTX2pzb25wIHx8IHtcblx0MTc5OiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxudmFyIGN1cnJlbnRVcGRhdGVkTW9kdWxlc0xpc3Q7XG52YXIgd2FpdGluZ1VwZGF0ZVJlc29sdmVzID0ge307XG5mdW5jdGlvbiBsb2FkVXBkYXRlQ2h1bmsoY2h1bmtJZCwgdXBkYXRlZE1vZHVsZXNMaXN0KSB7XG5cdGN1cnJlbnRVcGRhdGVkTW9kdWxlc0xpc3QgPSB1cGRhdGVkTW9kdWxlc0xpc3Q7XG5cdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0d2FpdGluZ1VwZGF0ZVJlc29sdmVzW2NodW5rSWRdID0gcmVzb2x2ZTtcblx0XHQvLyBzdGFydCB1cGRhdGUgY2h1bmsgbG9hZGluZ1xuXHRcdHZhciB1cmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLnAgKyBfX3dlYnBhY2tfcmVxdWlyZV9fLmh1KGNodW5rSWQpO1xuXHRcdC8vIGNyZWF0ZSBlcnJvciBiZWZvcmUgc3RhY2sgdW53b3VuZCB0byBnZXQgdXNlZnVsIHN0YWNrdHJhY2UgbGF0ZXJcblx0XHR2YXIgZXJyb3IgPSBuZXcgRXJyb3IoKTtcblx0XHR2YXIgbG9hZGluZ0VuZGVkID0gKGV2ZW50KSA9PiB7XG5cdFx0XHRpZih3YWl0aW5nVXBkYXRlUmVzb2x2ZXNbY2h1bmtJZF0pIHtcblx0XHRcdFx0d2FpdGluZ1VwZGF0ZVJlc29sdmVzW2NodW5rSWRdID0gdW5kZWZpbmVkXG5cdFx0XHRcdHZhciBlcnJvclR5cGUgPSBldmVudCAmJiAoZXZlbnQudHlwZSA9PT0gJ2xvYWQnID8gJ21pc3NpbmcnIDogZXZlbnQudHlwZSk7XG5cdFx0XHRcdHZhciByZWFsU3JjID0gZXZlbnQgJiYgZXZlbnQudGFyZ2V0ICYmIGV2ZW50LnRhcmdldC5zcmM7XG5cdFx0XHRcdGVycm9yLm1lc3NhZ2UgPSAnTG9hZGluZyBob3QgdXBkYXRlIGNodW5rICcgKyBjaHVua0lkICsgJyBmYWlsZWQuXFxuKCcgKyBlcnJvclR5cGUgKyAnOiAnICsgcmVhbFNyYyArICcpJztcblx0XHRcdFx0ZXJyb3IubmFtZSA9ICdDaHVua0xvYWRFcnJvcic7XG5cdFx0XHRcdGVycm9yLnR5cGUgPSBlcnJvclR5cGU7XG5cdFx0XHRcdGVycm9yLnJlcXVlc3QgPSByZWFsU3JjO1xuXHRcdFx0XHRyZWplY3QoZXJyb3IpO1xuXHRcdFx0fVxuXHRcdH07XG5cdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5sKHVybCwgbG9hZGluZ0VuZGVkKTtcblx0fSk7XG59XG5cbnNlbGZbXCJ3ZWJwYWNrSG90VXBkYXRlc2ltcGxlX3JlZGRpdF9hcHBcIl0gPSAoY2h1bmtJZCwgbW9yZU1vZHVsZXMsIHJ1bnRpbWUpID0+IHtcblx0Zm9yKHZhciBtb2R1bGVJZCBpbiBtb3JlTW9kdWxlcykge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhtb3JlTW9kdWxlcywgbW9kdWxlSWQpKSB7XG5cdFx0XHRjdXJyZW50VXBkYXRlW21vZHVsZUlkXSA9IG1vcmVNb2R1bGVzW21vZHVsZUlkXTtcblx0XHRcdGlmKGN1cnJlbnRVcGRhdGVkTW9kdWxlc0xpc3QpIGN1cnJlbnRVcGRhdGVkTW9kdWxlc0xpc3QucHVzaChtb2R1bGVJZCk7XG5cdFx0fVxuXHR9XG5cdGlmKHJ1bnRpbWUpIGN1cnJlbnRVcGRhdGVSdW50aW1lLnB1c2gocnVudGltZSk7XG5cdGlmKHdhaXRpbmdVcGRhdGVSZXNvbHZlc1tjaHVua0lkXSkge1xuXHRcdHdhaXRpbmdVcGRhdGVSZXNvbHZlc1tjaHVua0lkXSgpO1xuXHRcdHdhaXRpbmdVcGRhdGVSZXNvbHZlc1tjaHVua0lkXSA9IHVuZGVmaW5lZDtcblx0fVxufTtcblxudmFyIGN1cnJlbnRVcGRhdGVDaHVua3M7XG52YXIgY3VycmVudFVwZGF0ZTtcbnZhciBjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcztcbnZhciBjdXJyZW50VXBkYXRlUnVudGltZTtcbmZ1bmN0aW9uIGFwcGx5SGFuZGxlcihvcHRpb25zKSB7XG5cdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmYpIGRlbGV0ZSBfX3dlYnBhY2tfcmVxdWlyZV9fLmYuanNvbnBIbXI7XG5cdGN1cnJlbnRVcGRhdGVDaHVua3MgPSB1bmRlZmluZWQ7XG5cdGZ1bmN0aW9uIGdldEFmZmVjdGVkTW9kdWxlRWZmZWN0cyh1cGRhdGVNb2R1bGVJZCkge1xuXHRcdHZhciBvdXRkYXRlZE1vZHVsZXMgPSBbdXBkYXRlTW9kdWxlSWRdO1xuXHRcdHZhciBvdXRkYXRlZERlcGVuZGVuY2llcyA9IHt9O1xuXG5cdFx0dmFyIHF1ZXVlID0gb3V0ZGF0ZWRNb2R1bGVzLm1hcChmdW5jdGlvbiAoaWQpIHtcblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdGNoYWluOiBbaWRdLFxuXHRcdFx0XHRpZDogaWRcblx0XHRcdH07XG5cdFx0fSk7XG5cdFx0d2hpbGUgKHF1ZXVlLmxlbmd0aCA+IDApIHtcblx0XHRcdHZhciBxdWV1ZUl0ZW0gPSBxdWV1ZS5wb3AoKTtcblx0XHRcdHZhciBtb2R1bGVJZCA9IHF1ZXVlSXRlbS5pZDtcblx0XHRcdHZhciBjaGFpbiA9IHF1ZXVlSXRlbS5jaGFpbjtcblx0XHRcdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbbW9kdWxlSWRdO1xuXHRcdFx0aWYgKFxuXHRcdFx0XHQhbW9kdWxlIHx8XG5cdFx0XHRcdChtb2R1bGUuaG90Ll9zZWxmQWNjZXB0ZWQgJiYgIW1vZHVsZS5ob3QuX3NlbGZJbnZhbGlkYXRlZClcblx0XHRcdClcblx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRpZiAobW9kdWxlLmhvdC5fc2VsZkRlY2xpbmVkKSB7XG5cdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0dHlwZTogXCJzZWxmLWRlY2xpbmVkXCIsXG5cdFx0XHRcdFx0Y2hhaW46IGNoYWluLFxuXHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZFxuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdFx0aWYgKG1vZHVsZS5ob3QuX21haW4pIHtcblx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHR0eXBlOiBcInVuYWNjZXB0ZWRcIixcblx0XHRcdFx0XHRjaGFpbjogY2hhaW4sXG5cdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkXG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1vZHVsZS5wYXJlbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdHZhciBwYXJlbnRJZCA9IG1vZHVsZS5wYXJlbnRzW2ldO1xuXHRcdFx0XHR2YXIgcGFyZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW3BhcmVudElkXTtcblx0XHRcdFx0aWYgKCFwYXJlbnQpIGNvbnRpbnVlO1xuXHRcdFx0XHRpZiAocGFyZW50LmhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRcdHR5cGU6IFwiZGVjbGluZWRcIixcblx0XHRcdFx0XHRcdGNoYWluOiBjaGFpbi5jb25jYXQoW3BhcmVudElkXSksXG5cdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRwYXJlbnRJZDogcGFyZW50SWRcblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChvdXRkYXRlZE1vZHVsZXMuaW5kZXhPZihwYXJlbnRJZCkgIT09IC0xKSBjb250aW51ZTtcblx0XHRcdFx0aWYgKHBhcmVudC5ob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSkge1xuXHRcdFx0XHRcdGlmICghb3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdKVxuXHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdID0gW107XG5cdFx0XHRcdFx0YWRkQWxsVG9TZXQob3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdLCBbbW9kdWxlSWRdKTtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRkZWxldGUgb3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdO1xuXHRcdFx0XHRvdXRkYXRlZE1vZHVsZXMucHVzaChwYXJlbnRJZCk7XG5cdFx0XHRcdHF1ZXVlLnB1c2goe1xuXHRcdFx0XHRcdGNoYWluOiBjaGFpbi5jb25jYXQoW3BhcmVudElkXSksXG5cdFx0XHRcdFx0aWQ6IHBhcmVudElkXG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB7XG5cdFx0XHR0eXBlOiBcImFjY2VwdGVkXCIsXG5cdFx0XHRtb2R1bGVJZDogdXBkYXRlTW9kdWxlSWQsXG5cdFx0XHRvdXRkYXRlZE1vZHVsZXM6IG91dGRhdGVkTW9kdWxlcyxcblx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzOiBvdXRkYXRlZERlcGVuZGVuY2llc1xuXHRcdH07XG5cdH1cblxuXHRmdW5jdGlvbiBhZGRBbGxUb1NldChhLCBiKSB7XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBiLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IGJbaV07XG5cdFx0XHRpZiAoYS5pbmRleE9mKGl0ZW0pID09PSAtMSkgYS5wdXNoKGl0ZW0pO1xuXHRcdH1cblx0fVxuXG5cdC8vIGF0IGJlZ2luIGFsbCB1cGRhdGVzIG1vZHVsZXMgYXJlIG91dGRhdGVkXG5cdC8vIHRoZSBcIm91dGRhdGVkXCIgc3RhdHVzIGNhbiBwcm9wYWdhdGUgdG8gcGFyZW50cyBpZiB0aGV5IGRvbid0IGFjY2VwdCB0aGUgY2hpbGRyZW5cblx0dmFyIG91dGRhdGVkRGVwZW5kZW5jaWVzID0ge307XG5cdHZhciBvdXRkYXRlZE1vZHVsZXMgPSBbXTtcblx0dmFyIGFwcGxpZWRVcGRhdGUgPSB7fTtcblxuXHR2YXIgd2FyblVuZXhwZWN0ZWRSZXF1aXJlID0gZnVuY3Rpb24gd2FyblVuZXhwZWN0ZWRSZXF1aXJlKG1vZHVsZSkge1xuXHRcdGNvbnNvbGUud2Fybihcblx0XHRcdFwiW0hNUl0gdW5leHBlY3RlZCByZXF1aXJlKFwiICsgbW9kdWxlLmlkICsgXCIpIHRvIGRpc3Bvc2VkIG1vZHVsZVwiXG5cdFx0KTtcblx0fTtcblxuXHRmb3IgKHZhciBtb2R1bGVJZCBpbiBjdXJyZW50VXBkYXRlKSB7XG5cdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubyhjdXJyZW50VXBkYXRlLCBtb2R1bGVJZCkpIHtcblx0XHRcdHZhciBuZXdNb2R1bGVGYWN0b3J5ID0gY3VycmVudFVwZGF0ZVttb2R1bGVJZF07XG5cdFx0XHQvKiogQHR5cGUge1RPRE99ICovXG5cdFx0XHR2YXIgcmVzdWx0O1xuXHRcdFx0aWYgKG5ld01vZHVsZUZhY3RvcnkpIHtcblx0XHRcdFx0cmVzdWx0ID0gZ2V0QWZmZWN0ZWRNb2R1bGVFZmZlY3RzKG1vZHVsZUlkKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJlc3VsdCA9IHtcblx0XHRcdFx0XHR0eXBlOiBcImRpc3Bvc2VkXCIsXG5cdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkXG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0XHQvKiogQHR5cGUge0Vycm9yfGZhbHNlfSAqL1xuXHRcdFx0dmFyIGFib3J0RXJyb3IgPSBmYWxzZTtcblx0XHRcdHZhciBkb0FwcGx5ID0gZmFsc2U7XG5cdFx0XHR2YXIgZG9EaXNwb3NlID0gZmFsc2U7XG5cdFx0XHR2YXIgY2hhaW5JbmZvID0gXCJcIjtcblx0XHRcdGlmIChyZXN1bHQuY2hhaW4pIHtcblx0XHRcdFx0Y2hhaW5JbmZvID0gXCJcXG5VcGRhdGUgcHJvcGFnYXRpb246IFwiICsgcmVzdWx0LmNoYWluLmpvaW4oXCIgLT4gXCIpO1xuXHRcdFx0fVxuXHRcdFx0c3dpdGNoIChyZXN1bHQudHlwZSkge1xuXHRcdFx0XHRjYXNlIFwic2VsZi1kZWNsaW5lZFwiOlxuXHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRGVjbGluZWQpIG9wdGlvbnMub25EZWNsaW5lZChyZXN1bHQpO1xuXHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVEZWNsaW5lZClcblx0XHRcdFx0XHRcdGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXG5cdFx0XHRcdFx0XHRcdFwiQWJvcnRlZCBiZWNhdXNlIG9mIHNlbGYgZGVjbGluZTogXCIgK1xuXHRcdFx0XHRcdFx0XHRcdHJlc3VsdC5tb2R1bGVJZCArXG5cdFx0XHRcdFx0XHRcdFx0Y2hhaW5JbmZvXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwiZGVjbGluZWRcIjpcblx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkRlY2xpbmVkKSBvcHRpb25zLm9uRGVjbGluZWQocmVzdWx0KTtcblx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRGVjbGluZWQpXG5cdFx0XHRcdFx0XHRhYm9ydEVycm9yID0gbmV3IEVycm9yKFxuXHRcdFx0XHRcdFx0XHRcIkFib3J0ZWQgYmVjYXVzZSBvZiBkZWNsaW5lZCBkZXBlbmRlbmN5OiBcIiArXG5cdFx0XHRcdFx0XHRcdFx0cmVzdWx0Lm1vZHVsZUlkICtcblx0XHRcdFx0XHRcdFx0XHRcIiBpbiBcIiArXG5cdFx0XHRcdFx0XHRcdFx0cmVzdWx0LnBhcmVudElkICtcblx0XHRcdFx0XHRcdFx0XHRjaGFpbkluZm9cblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJ1bmFjY2VwdGVkXCI6XG5cdFx0XHRcdFx0aWYgKG9wdGlvbnMub25VbmFjY2VwdGVkKSBvcHRpb25zLm9uVW5hY2NlcHRlZChyZXN1bHQpO1xuXHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVVbmFjY2VwdGVkKVxuXHRcdFx0XHRcdFx0YWJvcnRFcnJvciA9IG5ldyBFcnJvcihcblx0XHRcdFx0XHRcdFx0XCJBYm9ydGVkIGJlY2F1c2UgXCIgKyBtb2R1bGVJZCArIFwiIGlzIG5vdCBhY2NlcHRlZFwiICsgY2hhaW5JbmZvXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwiYWNjZXB0ZWRcIjpcblx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkFjY2VwdGVkKSBvcHRpb25zLm9uQWNjZXB0ZWQocmVzdWx0KTtcblx0XHRcdFx0XHRkb0FwcGx5ID0gdHJ1ZTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcImRpc3Bvc2VkXCI6XG5cdFx0XHRcdFx0aWYgKG9wdGlvbnMub25EaXNwb3NlZCkgb3B0aW9ucy5vbkRpc3Bvc2VkKHJlc3VsdCk7XG5cdFx0XHRcdFx0ZG9EaXNwb3NlID0gdHJ1ZTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJVbmV4Y2VwdGlvbiB0eXBlIFwiICsgcmVzdWx0LnR5cGUpO1xuXHRcdFx0fVxuXHRcdFx0aWYgKGFib3J0RXJyb3IpIHtcblx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRlcnJvcjogYWJvcnRFcnJvclxuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdFx0aWYgKGRvQXBwbHkpIHtcblx0XHRcdFx0YXBwbGllZFVwZGF0ZVttb2R1bGVJZF0gPSBuZXdNb2R1bGVGYWN0b3J5O1xuXHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZE1vZHVsZXMsIHJlc3VsdC5vdXRkYXRlZE1vZHVsZXMpO1xuXHRcdFx0XHRmb3IgKG1vZHVsZUlkIGluIHJlc3VsdC5vdXRkYXRlZERlcGVuZGVuY2llcykge1xuXHRcdFx0XHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm8ocmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzLCBtb2R1bGVJZCkpIHtcblx0XHRcdFx0XHRcdGlmICghb3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdKVxuXHRcdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0gPSBbXTtcblx0XHRcdFx0XHRcdGFkZEFsbFRvU2V0KFxuXHRcdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0sXG5cdFx0XHRcdFx0XHRcdHJlc3VsdC5vdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF1cblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoZG9EaXNwb3NlKSB7XG5cdFx0XHRcdGFkZEFsbFRvU2V0KG91dGRhdGVkTW9kdWxlcywgW3Jlc3VsdC5tb2R1bGVJZF0pO1xuXHRcdFx0XHRhcHBsaWVkVXBkYXRlW21vZHVsZUlkXSA9IHdhcm5VbmV4cGVjdGVkUmVxdWlyZTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0Y3VycmVudFVwZGF0ZSA9IHVuZGVmaW5lZDtcblxuXHQvLyBTdG9yZSBzZWxmIGFjY2VwdGVkIG91dGRhdGVkIG1vZHVsZXMgdG8gcmVxdWlyZSB0aGVtIGxhdGVyIGJ5IHRoZSBtb2R1bGUgc3lzdGVtXG5cdHZhciBvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMgPSBbXTtcblx0Zm9yICh2YXIgaiA9IDA7IGogPCBvdXRkYXRlZE1vZHVsZXMubGVuZ3RoOyBqKyspIHtcblx0XHR2YXIgb3V0ZGF0ZWRNb2R1bGVJZCA9IG91dGRhdGVkTW9kdWxlc1tqXTtcblx0XHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW291dGRhdGVkTW9kdWxlSWRdO1xuXHRcdGlmIChcblx0XHRcdG1vZHVsZSAmJlxuXHRcdFx0KG1vZHVsZS5ob3QuX3NlbGZBY2NlcHRlZCB8fCBtb2R1bGUuaG90Ll9tYWluKSAmJlxuXHRcdFx0Ly8gcmVtb3ZlZCBzZWxmLWFjY2VwdGVkIG1vZHVsZXMgc2hvdWxkIG5vdCBiZSByZXF1aXJlZFxuXHRcdFx0YXBwbGllZFVwZGF0ZVtvdXRkYXRlZE1vZHVsZUlkXSAhPT0gd2FyblVuZXhwZWN0ZWRSZXF1aXJlICYmXG5cdFx0XHQvLyB3aGVuIGNhbGxlZCBpbnZhbGlkYXRlIHNlbGYtYWNjZXB0aW5nIGlzIG5vdCBwb3NzaWJsZVxuXHRcdFx0IW1vZHVsZS5ob3QuX3NlbGZJbnZhbGlkYXRlZFxuXHRcdCkge1xuXHRcdFx0b3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzLnB1c2goe1xuXHRcdFx0XHRtb2R1bGU6IG91dGRhdGVkTW9kdWxlSWQsXG5cdFx0XHRcdHJlcXVpcmU6IG1vZHVsZS5ob3QuX3JlcXVpcmVTZWxmLFxuXHRcdFx0XHRlcnJvckhhbmRsZXI6IG1vZHVsZS5ob3QuX3NlbGZBY2NlcHRlZFxuXHRcdFx0fSk7XG5cdFx0fVxuXHR9XG5cblx0dmFyIG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzO1xuXG5cdHJldHVybiB7XG5cdFx0ZGlzcG9zZTogZnVuY3Rpb24gKCkge1xuXHRcdFx0Y3VycmVudFVwZGF0ZVJlbW92ZWRDaHVua3MuZm9yRWFjaChmdW5jdGlvbiAoY2h1bmtJZCkge1xuXHRcdFx0XHRkZWxldGUgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdO1xuXHRcdFx0fSk7XG5cdFx0XHRjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcyA9IHVuZGVmaW5lZDtcblxuXHRcdFx0dmFyIGlkeDtcblx0XHRcdHZhciBxdWV1ZSA9IG91dGRhdGVkTW9kdWxlcy5zbGljZSgpO1xuXHRcdFx0d2hpbGUgKHF1ZXVlLmxlbmd0aCA+IDApIHtcblx0XHRcdFx0dmFyIG1vZHVsZUlkID0gcXVldWUucG9wKCk7XG5cdFx0XHRcdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbbW9kdWxlSWRdO1xuXHRcdFx0XHRpZiAoIW1vZHVsZSkgY29udGludWU7XG5cblx0XHRcdFx0dmFyIGRhdGEgPSB7fTtcblxuXHRcdFx0XHQvLyBDYWxsIGRpc3Bvc2UgaGFuZGxlcnNcblx0XHRcdFx0dmFyIGRpc3Bvc2VIYW5kbGVycyA9IG1vZHVsZS5ob3QuX2Rpc3Bvc2VIYW5kbGVycztcblx0XHRcdFx0Zm9yIChqID0gMDsgaiA8IGRpc3Bvc2VIYW5kbGVycy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRcdGRpc3Bvc2VIYW5kbGVyc1tqXS5jYWxsKG51bGwsIGRhdGEpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uaG1yRFttb2R1bGVJZF0gPSBkYXRhO1xuXG5cdFx0XHRcdC8vIGRpc2FibGUgbW9kdWxlICh0aGlzIGRpc2FibGVzIHJlcXVpcmVzIGZyb20gdGhpcyBtb2R1bGUpXG5cdFx0XHRcdG1vZHVsZS5ob3QuYWN0aXZlID0gZmFsc2U7XG5cblx0XHRcdFx0Ly8gcmVtb3ZlIG1vZHVsZSBmcm9tIGNhY2hlXG5cdFx0XHRcdGRlbGV0ZSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbbW9kdWxlSWRdO1xuXG5cdFx0XHRcdC8vIHdoZW4gZGlzcG9zaW5nIHRoZXJlIGlzIG5vIG5lZWQgdG8gY2FsbCBkaXNwb3NlIGhhbmRsZXJcblx0XHRcdFx0ZGVsZXRlIG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXTtcblxuXHRcdFx0XHQvLyByZW1vdmUgXCJwYXJlbnRzXCIgcmVmZXJlbmNlcyBmcm9tIGFsbCBjaGlsZHJlblxuXHRcdFx0XHRmb3IgKGogPSAwOyBqIDwgbW9kdWxlLmNoaWxkcmVuLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdFx0dmFyIGNoaWxkID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW21vZHVsZS5jaGlsZHJlbltqXV07XG5cdFx0XHRcdFx0aWYgKCFjaGlsZCkgY29udGludWU7XG5cdFx0XHRcdFx0aWR4ID0gY2hpbGQucGFyZW50cy5pbmRleE9mKG1vZHVsZUlkKTtcblx0XHRcdFx0XHRpZiAoaWR4ID49IDApIHtcblx0XHRcdFx0XHRcdGNoaWxkLnBhcmVudHMuc3BsaWNlKGlkeCwgMSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIHJlbW92ZSBvdXRkYXRlZCBkZXBlbmRlbmN5IGZyb20gbW9kdWxlIGNoaWxkcmVuXG5cdFx0XHR2YXIgZGVwZW5kZW5jeTtcblx0XHRcdGZvciAodmFyIG91dGRhdGVkTW9kdWxlSWQgaW4gb3V0ZGF0ZWREZXBlbmRlbmNpZXMpIHtcblx0XHRcdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubyhvdXRkYXRlZERlcGVuZGVuY2llcywgb3V0ZGF0ZWRNb2R1bGVJZCkpIHtcblx0XHRcdFx0XHRtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbb3V0ZGF0ZWRNb2R1bGVJZF07XG5cdFx0XHRcdFx0aWYgKG1vZHVsZSkge1xuXHRcdFx0XHRcdFx0bW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMgPVxuXHRcdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1tvdXRkYXRlZE1vZHVsZUlkXTtcblx0XHRcdFx0XHRcdGZvciAoaiA9IDA7IGogPCBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRcdFx0XHRkZXBlbmRlbmN5ID0gbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXNbal07XG5cdFx0XHRcdFx0XHRcdGlkeCA9IG1vZHVsZS5jaGlsZHJlbi5pbmRleE9mKGRlcGVuZGVuY3kpO1xuXHRcdFx0XHRcdFx0XHRpZiAoaWR4ID49IDApIG1vZHVsZS5jaGlsZHJlbi5zcGxpY2UoaWR4LCAxKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXHRcdGFwcGx5OiBmdW5jdGlvbiAocmVwb3J0RXJyb3IpIHtcblx0XHRcdC8vIGluc2VydCBuZXcgY29kZVxuXHRcdFx0Zm9yICh2YXIgdXBkYXRlTW9kdWxlSWQgaW4gYXBwbGllZFVwZGF0ZSkge1xuXHRcdFx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGFwcGxpZWRVcGRhdGUsIHVwZGF0ZU1vZHVsZUlkKSkge1xuXHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18ubVt1cGRhdGVNb2R1bGVJZF0gPSBhcHBsaWVkVXBkYXRlW3VwZGF0ZU1vZHVsZUlkXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBydW4gbmV3IHJ1bnRpbWUgbW9kdWxlc1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBjdXJyZW50VXBkYXRlUnVudGltZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRjdXJyZW50VXBkYXRlUnVudGltZVtpXShfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gY2FsbCBhY2NlcHQgaGFuZGxlcnNcblx0XHRcdGZvciAodmFyIG91dGRhdGVkTW9kdWxlSWQgaW4gb3V0ZGF0ZWREZXBlbmRlbmNpZXMpIHtcblx0XHRcdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubyhvdXRkYXRlZERlcGVuZGVuY2llcywgb3V0ZGF0ZWRNb2R1bGVJZCkpIHtcblx0XHRcdFx0XHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW291dGRhdGVkTW9kdWxlSWRdO1xuXHRcdFx0XHRcdGlmIChtb2R1bGUpIHtcblx0XHRcdFx0XHRcdG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzID1cblx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbb3V0ZGF0ZWRNb2R1bGVJZF07XG5cdFx0XHRcdFx0XHR2YXIgY2FsbGJhY2tzID0gW107XG5cdFx0XHRcdFx0XHR2YXIgZXJyb3JIYW5kbGVycyA9IFtdO1xuXHRcdFx0XHRcdFx0dmFyIGRlcGVuZGVuY2llc0ZvckNhbGxiYWNrcyA9IFtdO1xuXHRcdFx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRcdFx0XHR2YXIgZGVwZW5kZW5jeSA9IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzW2pdO1xuXHRcdFx0XHRcdFx0XHR2YXIgYWNjZXB0Q2FsbGJhY2sgPVxuXHRcdFx0XHRcdFx0XHRcdG1vZHVsZS5ob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW2RlcGVuZGVuY3ldO1xuXHRcdFx0XHRcdFx0XHR2YXIgZXJyb3JIYW5kbGVyID1cblx0XHRcdFx0XHRcdFx0XHRtb2R1bGUuaG90Ll9hY2NlcHRlZEVycm9ySGFuZGxlcnNbZGVwZW5kZW5jeV07XG5cdFx0XHRcdFx0XHRcdGlmIChhY2NlcHRDYWxsYmFjaykge1xuXHRcdFx0XHRcdFx0XHRcdGlmIChjYWxsYmFja3MuaW5kZXhPZihhY2NlcHRDYWxsYmFjaykgIT09IC0xKSBjb250aW51ZTtcblx0XHRcdFx0XHRcdFx0XHRjYWxsYmFja3MucHVzaChhY2NlcHRDYWxsYmFjayk7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3JIYW5kbGVycy5wdXNoKGVycm9ySGFuZGxlcik7XG5cdFx0XHRcdFx0XHRcdFx0ZGVwZW5kZW5jaWVzRm9yQ2FsbGJhY2tzLnB1c2goZGVwZW5kZW5jeSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGZvciAodmFyIGsgPSAwOyBrIDwgY2FsbGJhY2tzLmxlbmd0aDsgaysrKSB7XG5cdFx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdFx0Y2FsbGJhY2tzW2tdLmNhbGwobnVsbCwgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMpO1xuXHRcdFx0XHRcdFx0XHR9IGNhdGNoIChlcnIpIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAodHlwZW9mIGVycm9ySGFuZGxlcnNba10gPT09IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0XHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3JIYW5kbGVyc1trXShlcnIsIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogb3V0ZGF0ZWRNb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZXBlbmRlbmN5SWQ6IGRlcGVuZGVuY2llc0ZvckNhbGxiYWNrc1trXVxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0XHRcdH0gY2F0Y2ggKGVycjIpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vbkVycm9yZWQoe1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJhY2NlcHQtZXJyb3ItaGFuZGxlci1lcnJvcmVkXCIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogb3V0ZGF0ZWRNb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGRlcGVuZGVuY3lJZDogZGVwZW5kZW5jaWVzRm9yQ2FsbGJhY2tzW2tdLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVycjIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRvcmlnaW5hbEVycm9yOiBlcnJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycjIpO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycik7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcImFjY2VwdC1lcnJvcmVkXCIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG91dGRhdGVkTW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZGVwZW5kZW5jeUlkOiBkZXBlbmRlbmNpZXNGb3JDYWxsYmFja3Nba10sXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVyclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycik7XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIExvYWQgc2VsZiBhY2NlcHRlZCBtb2R1bGVzXG5cdFx0XHRmb3IgKHZhciBvID0gMDsgbyA8IG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcy5sZW5ndGg7IG8rKykge1xuXHRcdFx0XHR2YXIgaXRlbSA9IG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlc1tvXTtcblx0XHRcdFx0dmFyIG1vZHVsZUlkID0gaXRlbS5tb2R1bGU7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0aXRlbS5yZXF1aXJlKG1vZHVsZUlkKTtcblx0XHRcdFx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0XHRcdFx0aWYgKHR5cGVvZiBpdGVtLmVycm9ySGFuZGxlciA9PT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRpdGVtLmVycm9ySGFuZGxlcihlcnIsIHtcblx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdFx0bW9kdWxlOiBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbbW9kdWxlSWRdXG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0fSBjYXRjaCAoZXJyMikge1xuXHRcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XG5cdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcInNlbGYtYWNjZXB0LWVycm9yLWhhbmRsZXItZXJyb3JlZFwiLFxuXHRcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVycjIsXG5cdFx0XHRcdFx0XHRcdFx0XHRvcmlnaW5hbEVycm9yOiBlcnJcblx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycjIpO1xuXHRcdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycik7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcblx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcInNlbGYtYWNjZXB0LWVycm9yZWRcIixcblx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVyclxuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycik7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBvdXRkYXRlZE1vZHVsZXM7XG5cdFx0fVxuXHR9O1xufVxuX193ZWJwYWNrX3JlcXVpcmVfXy5obXJJLmpzb25wID0gZnVuY3Rpb24gKG1vZHVsZUlkLCBhcHBseUhhbmRsZXJzKSB7XG5cdGlmICghY3VycmVudFVwZGF0ZSkge1xuXHRcdGN1cnJlbnRVcGRhdGUgPSB7fTtcblx0XHRjdXJyZW50VXBkYXRlUnVudGltZSA9IFtdO1xuXHRcdGN1cnJlbnRVcGRhdGVSZW1vdmVkQ2h1bmtzID0gW107XG5cdFx0YXBwbHlIYW5kbGVycy5wdXNoKGFwcGx5SGFuZGxlcik7XG5cdH1cblx0aWYgKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oY3VycmVudFVwZGF0ZSwgbW9kdWxlSWQpKSB7XG5cdFx0Y3VycmVudFVwZGF0ZVttb2R1bGVJZF0gPSBfX3dlYnBhY2tfcmVxdWlyZV9fLm1bbW9kdWxlSWRdO1xuXHR9XG59O1xuX193ZWJwYWNrX3JlcXVpcmVfXy5obXJDLmpzb25wID0gZnVuY3Rpb24gKFxuXHRjaHVua0lkcyxcblx0cmVtb3ZlZENodW5rcyxcblx0cmVtb3ZlZE1vZHVsZXMsXG5cdHByb21pc2VzLFxuXHRhcHBseUhhbmRsZXJzLFxuXHR1cGRhdGVkTW9kdWxlc0xpc3Rcbikge1xuXHRhcHBseUhhbmRsZXJzLnB1c2goYXBwbHlIYW5kbGVyKTtcblx0Y3VycmVudFVwZGF0ZUNodW5rcyA9IHt9O1xuXHRjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcyA9IHJlbW92ZWRDaHVua3M7XG5cdGN1cnJlbnRVcGRhdGUgPSByZW1vdmVkTW9kdWxlcy5yZWR1Y2UoZnVuY3Rpb24gKG9iaiwga2V5KSB7XG5cdFx0b2JqW2tleV0gPSBmYWxzZTtcblx0XHRyZXR1cm4gb2JqO1xuXHR9LCB7fSk7XG5cdGN1cnJlbnRVcGRhdGVSdW50aW1lID0gW107XG5cdGNodW5rSWRzLmZvckVhY2goZnVuY3Rpb24gKGNodW5rSWQpIHtcblx0XHRpZiAoXG5cdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8oaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSAmJlxuXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdICE9PSB1bmRlZmluZWRcblx0XHQpIHtcblx0XHRcdHByb21pc2VzLnB1c2gobG9hZFVwZGF0ZUNodW5rKGNodW5rSWQsIHVwZGF0ZWRNb2R1bGVzTGlzdCkpO1xuXHRcdFx0Y3VycmVudFVwZGF0ZUNodW5rc1tjaHVua0lkXSA9IHRydWU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGN1cnJlbnRVcGRhdGVDaHVua3NbY2h1bmtJZF0gPSBmYWxzZTtcblx0XHR9XG5cdH0pO1xuXHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5mKSB7XG5cdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5mLmpzb25wSG1yID0gZnVuY3Rpb24gKGNodW5rSWQsIHByb21pc2VzKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdGN1cnJlbnRVcGRhdGVDaHVua3MgJiZcblx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vKGN1cnJlbnRVcGRhdGVDaHVua3MsIGNodW5rSWQpICYmXG5cdFx0XHRcdCFjdXJyZW50VXBkYXRlQ2h1bmtzW2NodW5rSWRdXG5cdFx0XHQpIHtcblx0XHRcdFx0cHJvbWlzZXMucHVzaChsb2FkVXBkYXRlQ2h1bmsoY2h1bmtJZCkpO1xuXHRcdFx0XHRjdXJyZW50VXBkYXRlQ2h1bmtzW2NodW5rSWRdID0gdHJ1ZTtcblx0XHRcdH1cblx0XHR9O1xuXHR9XG59O1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmhtck0gPSAoKSA9PiB7XG5cdGlmICh0eXBlb2YgZmV0Y2ggPT09IFwidW5kZWZpbmVkXCIpIHRocm93IG5ldyBFcnJvcihcIk5vIGJyb3dzZXIgc3VwcG9ydDogbmVlZCBmZXRjaCBBUElcIik7XG5cdHJldHVybiBmZXRjaChfX3dlYnBhY2tfcmVxdWlyZV9fLnAgKyBfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckYoKSkudGhlbigocmVzcG9uc2UpID0+IHtcblx0XHRpZihyZXNwb25zZS5zdGF0dXMgPT09IDQwNCkgcmV0dXJuOyAvLyBubyB1cGRhdGUgYXZhaWxhYmxlXG5cdFx0aWYoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggdXBkYXRlIG1hbmlmZXN0IFwiICsgcmVzcG9uc2Uuc3RhdHVzVGV4dCk7XG5cdFx0cmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcblx0fSk7XG59O1xuXG4vLyBubyBvbiBjaHVua3MgbG9hZGVkXG5cbi8vIG5vIGpzb25wIGZ1bmN0aW9uIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCIvLyBtb2R1bGUgY2FjaGUgYXJlIHVzZWQgc28gZW50cnkgaW5saW5pbmcgaXMgZGlzYWJsZWRcbi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xudmFyIF9fd2VicGFja19leHBvcnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDcxNCk7XG4iXSwibmFtZXMiOlsiaW5Qcm9ncmVzcyIsImRhdGFXZWJwYWNrUHJlZml4IiwiYXN5bmNHZW5lcmF0b3JTdGVwIiwiZ2VuIiwicmVzb2x2ZSIsInJlamVjdCIsIl9uZXh0IiwiX3Rocm93Iiwia2V5IiwiYXJnIiwiaW5mbyIsInZhbHVlIiwiZXJyb3IiLCJkb25lIiwiUHJvbWlzZSIsInRoZW4iLCJfYXN5bmNUb0dlbmVyYXRvciIsImZuIiwic2VsZiIsInRoaXMiLCJhcmdzIiwiYXJndW1lbnRzIiwiYXBwbHkiLCJlcnIiLCJ1bmRlZmluZWQiLCJfYXJyYXlMaWtlVG9BcnJheSIsImFyciIsImxlbiIsImxlbmd0aCIsImkiLCJhcnIyIiwiQXJyYXkiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJvIiwibWluTGVuIiwibiIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiY2FsbCIsInNsaWNlIiwiY29uc3RydWN0b3IiLCJuYW1lIiwiZnJvbSIsInRlc3QiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJpc0FycmF5IiwiaXRlciIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiVHlwZUVycm9yIiwiciIsInQiLCJlIiwiRXJyb3IiLCJtYXAiLCJqb2luIiwiUSIsImdldFByb3RvdHlwZU9mIiwiaGFzT3duUHJvcGVydHkiLCJGdW5jdGlvbiIsIloiLCJMIiwicyIsInYiLCJrZXlzIiwibm4iLCJmb3JFYWNoIiwidSIsImhhcyIsImYiLCJzZXQiLCJkZWxldGUiLCJhZGQiLCJjIiwiWCIsIk1hcCIsInEiLCJTZXQiLCJwIiwibCIsInJuIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJnZXQiLCJlbnVtZXJhYmxlIiwiY3JlYXRlIiwiZCIsInkiLCJjbGVhciIsImgiLCJmcmVlemUiLCJpc0Zyb3plbiIsImIiLCJ0biIsIl8iLCJVIiwiaiIsIk8iLCJnIiwiUyIsInciLCJtIiwiUCIsIk0iLCJ4IiwiSCIsIkEiLCJJIiwiayIsIlIiLCJhIiwiRCIsImNvbmNhdCIsIkYiLCJ6IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiRSIsIk4iLCJUIiwiQyIsImVuIiwib24iLCJQcm94eSIsInJldm9jYWJsZSIsInJldm9rZSIsInByb3h5IiwiSiIsInB1c2giLCJLIiwiRyIsIlciLCJCIiwiUmVmbGVjdCIsImZvciIsIm93bktleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlbGV0ZVByb3BlcnR5IiwiZGVmaW5lUHJvcGVydHkiLCJzZXRQcm90b3R5cGVPZiIsInVuIiwicHJvZHVjZSIsInByb2R1Y2VXaXRoUGF0Y2hlcyIsInVzZVByb3hpZXMiLCJzZXRVc2VQcm94aWVzIiwiYXV0b0ZyZWV6ZSIsInNldEF1dG9GcmVlemUiLCJjcmVhdGVEcmFmdCIsImZpbmlzaERyYWZ0IiwiYXBwbHlQYXRjaGVzIiwicGF0aCIsIm9wIiwiJCIsImFuIiwiYmluZCIsIl9kZWZpbmVQcm9wZXJ0eSIsIm9iaiIsIm9iamVjdCIsImVudW1lcmFibGVPbmx5Iiwic3ltYm9scyIsImZpbHRlciIsInN5bSIsIl9vYmplY3RTcHJlYWQyIiwidGFyZ2V0Iiwic291cmNlIiwiZGVmaW5lUHJvcGVydGllcyIsImZvcm1hdFByb2RFcnJvck1lc3NhZ2UiLCJjb2RlIiwiJCRvYnNlcnZhYmxlIiwib2JzZXJ2YWJsZSIsInJhbmRvbVN0cmluZyIsIk1hdGgiLCJyYW5kb20iLCJzdWJzdHJpbmciLCJzcGxpdCIsIkFjdGlvblR5cGVzIiwiSU5JVCIsIlJFUExBQ0UiLCJQUk9CRV9VTktOT1dOX0FDVElPTiIsImlzUGxhaW5PYmplY3QiLCJwcm90byIsImNyZWF0ZVN0b3JlIiwicmVkdWNlciIsInByZWxvYWRlZFN0YXRlIiwiZW5oYW5jZXIiLCJfcmVmMiIsImN1cnJlbnRSZWR1Y2VyIiwiY3VycmVudFN0YXRlIiwiY3VycmVudExpc3RlbmVycyIsIm5leHRMaXN0ZW5lcnMiLCJpc0Rpc3BhdGNoaW5nIiwiZW5zdXJlQ2FuTXV0YXRlTmV4dExpc3RlbmVycyIsImdldFN0YXRlIiwic3Vic2NyaWJlIiwibGlzdGVuZXIiLCJpc1N1YnNjcmliZWQiLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiLCJkaXNwYXRjaCIsImFjdGlvbiIsInR5cGUiLCJsaXN0ZW5lcnMiLCJyZXBsYWNlUmVkdWNlciIsIm5leHRSZWR1Y2VyIiwiX3JlZiIsIm91dGVyU3Vic2NyaWJlIiwib2JzZXJ2ZXIiLCJvYnNlcnZlU3RhdGUiLCJuZXh0IiwidW5zdWJzY3JpYmUiLCJjb21wb3NlIiwiX2xlbiIsImZ1bmNzIiwiX2tleSIsInJlZHVjZSIsImFwcGx5TWlkZGxld2FyZSIsIm1pZGRsZXdhcmVzIiwic3RvcmUiLCJfZGlzcGF0Y2giLCJtaWRkbGV3YXJlQVBJIiwiY2hhaW4iLCJtaWRkbGV3YXJlIiwiY3JlYXRlVGh1bmtNaWRkbGV3YXJlIiwiZXh0cmFBcmd1bWVudCIsInRodW5rIiwid2l0aEV4dHJhQXJndW1lbnQiLCJleHRlbmRTdGF0aWNzIiwiX19leHRlbmRzIiwiX19wcm90b19fIiwiU3RyaW5nIiwiX18iLCJfX3NwcmVhZEFycmF5IiwidG8iLCJpbCIsIl9fZGVmUHJvcCIsIl9fZGVmUHJvcHMiLCJfX2dldE93blByb3BEZXNjcyIsIl9fZ2V0T3duUHJvcFN5bWJvbHMiLCJfX2hhc093blByb3AiLCJfX3Byb3BJc0VudW0iLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIl9fZGVmTm9ybWFsUHJvcCIsIl9fc3ByZWFkVmFsdWVzIiwicHJvcCIsIl9pIiwiX2MiLCJfX3NwcmVhZFByb3BzIiwiY29tcG9zZVdpdGhEZXZUb29scyIsIndpbmRvdyIsIl9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX0NPTVBPU0VfXyIsIl9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX18iLCJNaWRkbGV3YXJlQXJyYXkiLCJfc3VwZXIiLCJfdGhpcyIsInNwZWNpZXMiLCJwcmVwZW5kIiwiZnJlZXplRHJhZnRhYmxlIiwidmFsIiwiY3JlYXRlQWN0aW9uIiwicHJlcGFyZUFjdGlvbiIsImFjdGlvbkNyZWF0b3IiLCJwcmVwYXJlZCIsInBheWxvYWQiLCJtZXRhIiwibWF0Y2giLCJleGVjdXRlUmVkdWNlckJ1aWxkZXJDYWxsYmFjayIsImJ1aWxkZXJDYWxsYmFjayIsImRlZmF1bHRDYXNlUmVkdWNlciIsImFjdGlvbnNNYXAiLCJhY3Rpb25NYXRjaGVycyIsImJ1aWxkZXIiLCJhZGRDYXNlIiwidHlwZU9yQWN0aW9uQ3JlYXRvciIsImFkZE1hdGNoZXIiLCJtYXRjaGVyIiwiYWRkRGVmYXVsdENhc2UiLCJjcmVhdGVTbGljZSIsIm9wdGlvbnMiLCJfcmVkdWNlciIsImluaXRpYWxTdGF0ZSIsInJlZHVjZXJzIiwicmVkdWNlck5hbWVzIiwic2xpY2VDYXNlUmVkdWNlcnNCeU5hbWUiLCJzbGljZUNhc2VSZWR1Y2Vyc0J5VHlwZSIsImFjdGlvbkNyZWF0b3JzIiwiYnVpbGRSZWR1Y2VyIiwiZXh0cmFSZWR1Y2VycyIsIl9kIiwiX2UiLCJfZiIsImZpbmFsQ2FzZVJlZHVjZXJzIiwibWFwT3JCdWlsZGVyQ2FsbGJhY2siLCJnZXRJbml0aWFsU3RhdGUiLCJmaW5hbEFjdGlvbk1hdGNoZXJzIiwiZmluYWxEZWZhdWx0Q2FzZVJlZHVjZXIiLCJpc1N0YXRlRnVuY3Rpb24iLCJmcm96ZW5Jbml0aWFsU3RhdGVfMSIsInN0YXRlIiwiY2FzZVJlZHVjZXJzIiwiY3IiLCJwcmV2aW91c1N0YXRlIiwiY2FzZVJlZHVjZXIiLCJyZXN1bHQiLCJkcmFmdCIsImNyZWF0ZVJlZHVjZXIiLCJyZWR1Y2VyTmFtZSIsInByZXBhcmVDYWxsYmFjayIsIm1heWJlUmVkdWNlcldpdGhQcmVwYXJlIiwicHJlcGFyZSIsImFjdGlvbnMiLCJjb21tb25Qcm9wZXJ0aWVzIiwiUmVqZWN0V2l0aFZhbHVlIiwiRnVsZmlsbFdpdGhNZXRhIiwibWluaVNlcmlhbGl6ZUVycm9yIiwic2ltcGxlRXJyb3IiLCJjb21tb25Qcm9wZXJ0aWVzXzEiLCJwcm9wZXJ0eSIsIm1lc3NhZ2UiLCJjcmVhdGVBc3luY1RodW5rIiwidHlwZVByZWZpeCIsInBheWxvYWRDcmVhdG9yIiwiZnVsZmlsbGVkIiwicmVxdWVzdElkIiwicmVxdWVzdFN0YXR1cyIsInBlbmRpbmciLCJyZWplY3RlZCIsInNlcmlhbGl6ZUVycm9yIiwicmVqZWN0ZWRXaXRoVmFsdWUiLCJhYm9ydGVkIiwiY29uZGl0aW9uIiwiQUMiLCJBYm9ydENvbnRyb2xsZXIiLCJjbGFzc18xIiwic2lnbmFsIiwiYWRkRXZlbnRMaXN0ZW5lciIsImRpc3BhdGNoRXZlbnQiLCJvbmFib3J0IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJlYXNvbiIsInRocm93SWZBYm9ydGVkIiwiYWJvcnQiLCJhc3NpZ24iLCJleHRyYSIsImFib3J0UmVhc29uIiwiaWRHZW5lcmF0b3IiLCJzaXplIiwiaWQiLCJuYW5vaWQiLCJhYm9ydENvbnRyb2xsZXIiLCJhYm9ydGVkUHJvbWlzZSIsInN0YXJ0ZWQiLCJwcm9taXNlIiwiX190aGlzIiwiX19hcmd1bWVudHMiLCJnZW5lcmF0b3IiLCJfYSIsIl9iIiwiZmluYWxBY3Rpb24iLCJjb25kaXRpb25SZXN1bHQiLCJlcnJfMSIsInRoaXNBcmciLCJib2R5IiwibGFiZWwiLCJzZW50IiwidHJ5cyIsIm9wcyIsInZlcmIiLCJwb3AiLCJzdGVwIiwiX19nZW5lcmF0b3IiLCJnZXRQZW5kaW5nTWV0YSIsInJhY2UiLCJyZWplY3RXaXRoVmFsdWUiLCJmdWxmaWxsV2l0aFZhbHVlIiwiZGlzcGF0Y2hDb25kaXRpb25SZWplY3Rpb24iLCJ0aHJvdyIsInVud3JhcCIsInVud3JhcFJlc3VsdCIsImFsbSIsIm1pbiIsIm1hcFNlYXJjaFJlc3BvbnNlVG9BcnJheSIsInJlc3BvbnNlIiwiZGF0YSIsImNoaWxkcmVuIiwicmVwbGFjZVN0clNwYWNlcyIsInN0ciIsInN5bWJvbCIsImZldGNoU2VhcmNoUmVzdWx0cyIsInNlYXJjaCIsInNlYXJjaFVybCIsImZldGNoIiwicmVhZGFibGVTdHJlYW0iLCJqc29uIiwiY2F1c2UiLCJmZXRjaE1vcmVTZWFyY2hSZXN1bHRzIiwiYWZ0ZXIiLCJzZXRTZWFyY2hSZXN1bHRzQWN0aW9uIiwic2VhcmNoUmVzdWx0cyIsImFkZFNlYXJjaFJlc3VsdHNBY3Rpb24iLCJzZXRHZXRNb3JlUmVzdWx0c0tleSIsImdldE1vcmVSZXN1bHRzS2V5IiwiZW5hYmxlTG9hZGluZ0FjdGlvbiIsImxvYWRpbmciLCJkaXNhYmxlTG9hZGluZ0FjdGlvbiIsImVuYWJsZUxvYWRpbmdNb3JlQWN0aW9uIiwibG9hZGluZ01vcmUiLCJkaXNhYmxlTG9hZGluZ01vcmVBY3Rpb24iLCJzZWFyY2hTbGljZSIsInNldFNlYXJjaFJlc3VsdHMiLCJhZGRTZWFyY2hSZXN1bHRzIiwiZW5hYmxlTG9hZGluZyIsImRpc2FibGVMb2FkaW5nIiwiZW5hYmxlTG9hZGluZ01vcmUiLCJkaXNhYmxlTG9hZGluZ01vcmUiLCJtYXBwZWRSZXNwb25zZSIsImNvbnNvbGUiLCJCYXNlSW5wdXQiLCJjbGFzc05hbWUiLCJwbGFjZWhvbGRlciIsImhhbmRsZUNoYW5nZSIsInByZWZpeEljb24iLCJodG1sRm9yIiwib25DaGFuZ2UiLCJhdXRvQ29tcGxldGUiLCJBcHBMYXlvdXQiLCJoZWFkZXJDaGlsZHJlbiIsInNob3dTZWN0aW9uIiwiYmF0Y2giLCJjYWxsYmFjayIsImdldEJhdGNoIiwidXNlQ29udGV4dCIsInVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yIiwicmVmRXF1YWxpdHkiLCJjcmVhdGVTZWxlY3Rvckhvb2siLCJjb250ZXh0IiwidXNlUmVkdXhDb250ZXh0Iiwic2VsZWN0b3IiLCJlcXVhbGl0eUZuIiwic3Vic2NyaXB0aW9uIiwiZ2V0U2VydmVyU3RhdGUiLCJzZWxlY3RlZFN0YXRlIiwiYWRkTmVzdGVkU3ViIiwidXNlRGVidWdWYWx1ZSIsInVzZVNlbGVjdG9yIiwibnVsbExpc3RlbmVycyIsIm5vdGlmeSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInVzZUxheW91dEVmZmVjdCIsInVzZUVmZmVjdCIsInVzZVN5bmNFeHRlcm5hbFN0b3JlIiwic2VydmVyU3RhdGUiLCJjb250ZXh0VmFsdWUiLCJ1c2VNZW1vIiwicGFyZW50U3ViIiwiaGFuZGxlQ2hhbmdlV3JhcHBlciIsIm9uU3RhdGVDaGFuZ2UiLCJ0cnlTdWJzY3JpYmUiLCJmaXJzdCIsImxhc3QiLCJwcmV2IiwiY3JlYXRlTGlzdGVuZXJDb2xsZWN0aW9uIiwibm90aWZ5TmVzdGVkU3VicyIsIkJvb2xlYW4iLCJ0cnlVbnN1YnNjcmliZSIsImdldExpc3RlbmVycyIsIkNvbnRleHQiLCJQcm92aWRlciIsImNyZWF0ZVN0b3JlSG9vayIsImNyZWF0ZURpc3BhdGNoSG9vayIsInVzZVN0b3JlIiwidXNlRGlzcGF0Y2giLCJuZXdCYXRjaCIsImluaXRpYWxpemVVc2VTZWxlY3RvciIsImluaXRpYWxpemVDb25uZWN0IiwidXNlQXBwRGlzcGF0Y2giLCJ1c2VBcHBTZWxlY3RvciIsIkNvbnRhaW5lciIsIkxvYWRlciIsInZlcnNpb24iLCJ4bWxucyIsIndpZHRoIiwiaGVpZ2h0Iiwidmlld0JveCIsImN4IiwiY3kiLCJCYXNlQnV0dG9uIiwiZGlzYWJsZWQiLCJ3aWRlIiwib25DbGljayIsImhhbmRsZUxvYWRFcnJvciIsImN1cnJlbnRUYXJnZXQiLCJvbmVycm9yIiwic3JjIiwiQ2FyZCIsInRpdGxlIiwidXJsIiwidGh1bWJuYWlsIiwiaHJlZiIsInJlbCIsIm9uRXJyb3IiLCJMaXN0IiwiaXRlbXMiLCJoYW5kbGVMb2FkTW9yZSIsInNob3dCdXR0b24iLCJBcHAiLCJzZWxlY3RTZWFyY2hSZXN1bHRzIiwic2VhcmNoTG9hZGluZyIsInNlbGVjdFNlYXJjaExvYWRpbmciLCJzZWFyY2hMb2FkaW5nTW9yZSIsInNlbGVjdFNlYXJjaExvYWRpbmdNb3JlIiwic2VsZWN0R2V0TW9yZVJlc3VsdHNLZXkiLCJfcyIsIl9hcnIiLCJfbiIsInVzZVN0YXRlIiwic2V0U2VhcmNoIiwidXNlQ2FsbGJhY2siLCJoYW5kbGVyIiwiZGVib3VuY2UiLCJzZWFyY2hTdHJpbmciLCJsYXlvdXRTbGljZSIsInNob3dSZXN1bHRzU2VjdGlvbiIsImVuYWJsZVNob3dSZXN1bHRzIiwiZGlzYWJsZVNob3dSZXN1bHRzIiwicm9vdFJlZHVjZXIiLCJjdXJyaWVkR2V0RGVmYXVsdE1pZGRsZXdhcmUiLCJtaWRkbGV3YXJlQXJyYXkiLCJpbW11dGFibGVDaGVjayIsInNlcmlhbGl6YWJsZUNoZWNrIiwiaXNCb29sZWFuIiwiZ2V0RGVmYXVsdE1pZGRsZXdhcmUiLCJkZXZUb29scyIsIl9nIiwiX2giLCJlbmhhbmNlcnMiLCJiYXNlUHJvdG8iLCJyZWR1Y2VyS2V5cyIsImZpbmFsUmVkdWNlcnMiLCJzaGFwZUFzc2VydGlvbkVycm9yIiwiZmluYWxSZWR1Y2VyS2V5cyIsImFzc2VydFJlZHVjZXJTaGFwZSIsImhhc0NoYW5nZWQiLCJuZXh0U3RhdGUiLCJwcmV2aW91c1N0YXRlRm9yS2V5IiwibmV4dFN0YXRlRm9yS2V5IiwiY29tYmluZVJlZHVjZXJzIiwiZmluYWxNaWRkbGV3YXJlIiwibWlkZGxld2FyZUVuaGFuY2VyIiwiZmluYWxDb21wb3NlIiwidHJhY2UiLCJzdG9yZUVuaGFuY2VycyIsImNvbmZpZ3VyZVN0b3JlIiwibGF5b3V0IiwiUmVhY3RET00iLCJnZXRFbGVtZW50QnlJZCIsInJlbmRlciIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIiwiVVJMIiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fIiwibW9kdWxlIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsIl9rIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJoYXNoIiwibmVlZFF1b3RlcyIsInJlcGxhY2UiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZVJvb3QiLCJmdW5jIiwid2FpdCIsImltbWVkaWF0ZSIsInRpbWVvdXQiLCJ0aW1lc3RhbXAiLCJsYXRlciIsIkRhdGUiLCJub3ciLCJzZXRUaW1lb3V0IiwiZGVib3VuY2VkIiwiY2FsbE5vdyIsImNsZWFyVGltZW91dCIsImZsdXNoIiwicmVhY3RJcyIsIlJFQUNUX1NUQVRJQ1MiLCJjaGlsZENvbnRleHRUeXBlcyIsImNvbnRleHRUeXBlIiwiY29udGV4dFR5cGVzIiwiZGVmYXVsdFByb3BzIiwiZGlzcGxheU5hbWUiLCJnZXREZWZhdWx0UHJvcHMiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJtaXhpbnMiLCJwcm9wVHlwZXMiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJpdHkiLCJNRU1PX1NUQVRJQ1MiLCJjb21wYXJlIiwiVFlQRV9TVEFUSUNTIiwiZ2V0U3RhdGljcyIsImNvbXBvbmVudCIsImlzTWVtbyIsIkZvcndhcmRSZWYiLCJNZW1vIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJ0YXJnZXRTdGF0aWNzIiwic291cmNlU3RhdGljcyIsImRlc2NyaXB0b3IiLCJhYSIsImNhIiwiZGEiLCJlYSIsImZhIiwiaGEiLCJpYSIsImphIiwia2EiLCJsYSIsIm1hIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInNhbml0aXplVVJMIiwicmVtb3ZlRW1wdHlTdHJpbmciLCJ0b0xvd2VyQ2FzZSIsInJhIiwic2EiLCJ0b1VwcGVyQ2FzZSIsInRhIiwicGEiLCJpc05hTiIsInFhIiwib2EiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInhsaW5rSHJlZiIsInVhIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJ2YSIsIndhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiS2EiLCJMYSIsIk1hIiwic3RhY2siLCJ0cmltIiwiTmEiLCJPYSIsInByZXBhcmVTdGFja1RyYWNlIiwiY29uc3RydWN0IiwiaW5jbHVkZXMiLCJQYSIsInRhZyIsIlFhIiwiJCR0eXBlb2YiLCJfY29udGV4dCIsIl9wYXlsb2FkIiwiX2luaXQiLCJSYSIsIlNhIiwiVGEiLCJub2RlTmFtZSIsIlZhIiwiX3ZhbHVlVHJhY2tlciIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJVYSIsIldhIiwiY2hlY2tlZCIsIlhhIiwiYWN0aXZlRWxlbWVudCIsIllhIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJaYSIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJhYiIsImJiIiwiY2IiLCJkYiIsIm93bmVyRG9jdW1lbnQiLCJlYiIsImZiIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJnYiIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiaGIiLCJpYiIsImpiIiwidGV4dENvbnRlbnQiLCJrYiIsImxiIiwibWIiLCJuYiIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsInZhbHVlT2YiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJvYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwicGIiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImFzcGVjdFJhdGlvIiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwicWIiLCJyYiIsInNiIiwic3R5bGUiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInRiIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJ1YiIsInZiIiwiaXMiLCJ3YiIsInhiIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwicGFyZW50Tm9kZSIsInliIiwiemIiLCJBYiIsIkJiIiwiQ2IiLCJzdGF0ZU5vZGUiLCJEYiIsIkViIiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJNYiIsIk5iIiwiT2IiLCJQYiIsIlFiIiwiUmIiLCJTYiIsIlRiIiwiVmIiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCJmbGFncyIsIldiIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJYYiIsIlpiIiwiY2hpbGQiLCJzaWJsaW5nIiwiY3VycmVudCIsIlliIiwiJGIiLCJhYyIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJiYyIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiY2MiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsImRjIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwidW5zdGFibGVfbm93IiwiZWMiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsImZjIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJnYyIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiaGMiLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsImljIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJqYyIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsImtjIiwibGMiLCJvYyIsImNsejMyIiwicGMiLCJxYyIsImxvZyIsIkxOMiIsInJjIiwic2MiLCJ0YyIsInVjIiwicGVuZGluZ0xhbmVzIiwic3VzcGVuZGVkTGFuZXMiLCJwaW5nZWRMYW5lcyIsImVudGFuZ2xlZExhbmVzIiwiZW50YW5nbGVtZW50cyIsInZjIiwieGMiLCJ5YyIsInpjIiwiQWMiLCJldmVudFRpbWVzIiwiQ2MiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIlFjIiwiUmMiLCJTYyIsInBvaW50ZXJJZCIsIlRjIiwibmF0aXZlRXZlbnQiLCJibG9ja2VkT24iLCJkb21FdmVudE5hbWUiLCJldmVudFN5c3RlbUZsYWdzIiwidGFyZ2V0Q29udGFpbmVycyIsIlZjIiwiV2MiLCJwcmlvcml0eSIsImlzRGVoeWRyYXRlZCIsImNvbnRhaW5lckluZm8iLCJYYyIsIlljIiwic2hpZnQiLCJaYyIsIiRjIiwiYWQiLCJiZCIsImNkIiwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWciLCJkZCIsImVkIiwidHJhbnNpdGlvbiIsImZkIiwiZ2QiLCJoZCIsIlVjIiwic3RvcFByb3BhZ2F0aW9uIiwiamQiLCJrZCIsImxkIiwibWQiLCJuZCIsIm9kIiwia2V5Q29kZSIsImNoYXJDb2RlIiwicGQiLCJxZCIsInJkIiwiX3JlYWN0TmFtZSIsIl90YXJnZXRJbnN0IiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJwcmV2ZW50RGVmYXVsdCIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJpc1BlcnNpc3RlbnQiLCJ3ZCIsInhkIiwieWQiLCJzZCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsImlzVHJ1c3RlZCIsInRkIiwidWQiLCJ2aWV3IiwiZGV0YWlsIiwidmQiLCJBZCIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwiY3RybEtleSIsInNoaWZ0S2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImdldE1vZGlmaWVyU3RhdGUiLCJ6ZCIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJCZCIsIkRkIiwiZGF0YVRyYW5zZmVyIiwiRmQiLCJIZCIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJJZCIsImNsaXBib2FyZERhdGEiLCJKZCIsIkxkIiwiTWQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwiTmQiLCJPZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZCIsIlFkIiwiZnJvbUNoYXJDb2RlIiwibG9jYXRpb24iLCJyZXBlYXQiLCJsb2NhbGUiLCJ3aGljaCIsIlJkIiwiVGQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiVmQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwiWGQiLCJZZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwiWmQiLCIkZCIsImFlIiwiYmUiLCJkb2N1bWVudE1vZGUiLCJjZSIsImRlIiwiZWUiLCJmZSIsImdlIiwiaGUiLCJpZSIsImxlIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJlbWFpbCIsIm1vbnRoIiwibnVtYmVyIiwicGFzc3dvcmQiLCJyYW5nZSIsInRlbCIsInRleHQiLCJ0aW1lIiwid2VlayIsIm1lIiwibmUiLCJvZSIsImV2ZW50IiwicGUiLCJxZSIsInJlIiwic2UiLCJ0ZSIsInVlIiwidmUiLCJ3ZSIsInhlIiwieWUiLCJ6ZSIsIm9uaW5wdXQiLCJBZSIsImRldGFjaEV2ZW50IiwiQmUiLCJDZSIsImF0dGFjaEV2ZW50IiwiRGUiLCJFZSIsIkZlIiwiSGUiLCJJZSIsIkplIiwiS2UiLCJub2RlIiwib2Zmc2V0IiwibmV4dFNpYmxpbmciLCJMZSIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJNZSIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsIk5lIiwiY29udGVudEVkaXRhYmxlIiwiT2UiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiZG9jdW1lbnRFbGVtZW50Iiwic3RhcnQiLCJlbmQiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImRlZmF1bHRWaWV3IiwiZ2V0U2VsZWN0aW9uIiwiZXh0ZW5kIiwicmFuZ2VDb3VudCIsImFuY2hvck5vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImVsZW1lbnQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsImZvY3VzIiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJUZSIsIlVlIiwiVmUiLCJXZSIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlhlIiwiWWUiLCJaZSIsImFuaW1hdGlvbiIsIiRlIiwiYWYiLCJiZiIsImNmIiwiZGYiLCJlZiIsImZmIiwiZ2YiLCJoZiIsImxmIiwibWYiLCJuZiIsIlViIiwiaW5zdGFuY2UiLCJvZiIsInBmIiwicWYiLCJyZiIsInNmIiwiY2FwdHVyZSIsInBhc3NpdmUiLCJ0ZiIsInVmIiwicGFyZW50V2luZG93IiwidmYiLCJ3ZiIsIm5hIiwieGEiLCIkYSIsImJhIiwiamUiLCJjaGFyIiwia2UiLCJ1bnNoaWZ0IiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIkNmIiwiRGYiLCJFZiIsIl9faHRtbCIsIkZmIiwiR2YiLCJIZiIsIkpmIiwicXVldWVNaWNyb3Rhc2siLCJjYXRjaCIsIklmIiwiS2YiLCJMZiIsIk1mIiwicHJldmlvdXNTaWJsaW5nIiwiTmYiLCJPZiIsIlBmIiwiUWYiLCJSZiIsIlNmIiwiVGYiLCJVZiIsIlZmIiwiV2YiLCJYZiIsIllmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiWmYiLCIkZiIsImFnIiwiYmciLCJnZXRDaGlsZENvbnRleHQiLCJjZyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiZGciLCJlZyIsImZnIiwiZ2ciLCJoZyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwicWciLCJyZyIsInNnIiwidGciLCJ1ZyIsInZnIiwid2ciLCJ4ZyIsInlnIiwiemciLCJBZyIsIkJnIiwiZWxlbWVudFR5cGUiLCJkZWxldGlvbnMiLCJDZyIsInBlbmRpbmdQcm9wcyIsIm92ZXJmbG93IiwidHJlZUNvbnRleHQiLCJyZXRyeUxhbmUiLCJEZyIsIm1vZGUiLCJFZyIsIkZnIiwiR2ciLCJtZW1vaXplZFByb3BzIiwiSGciLCJJZyIsIkpnIiwiS2ciLCJMZyIsIk1nIiwiTmciLCJPZyIsIlBnIiwiUWciLCJSZyIsIl9jdXJyZW50VmFsdWUiLCJTZyIsImNoaWxkTGFuZXMiLCJUZyIsImRlcGVuZGVuY2llcyIsImZpcnN0Q29udGV4dCIsImxhbmVzIiwiVWciLCJWZyIsIm1lbW9pemVkVmFsdWUiLCJXZyIsIlhnIiwiWWciLCJpbnRlcmxlYXZlZCIsIlpnIiwiJGciLCJhaCIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiZmlyc3RCYXNlVXBkYXRlIiwibGFzdEJhc2VVcGRhdGUiLCJzaGFyZWQiLCJlZmZlY3RzIiwiYmgiLCJjaCIsImV2ZW50VGltZSIsImxhbmUiLCJkaCIsImVoIiwiZmgiLCJnaCIsImhoIiwiaWgiLCJqaCIsIkNvbXBvbmVudCIsInJlZnMiLCJraCIsIm5oIiwiaXNNb3VudGVkIiwiX3JlYWN0SW50ZXJuYWxzIiwiZW5xdWV1ZVNldFN0YXRlIiwibGgiLCJtaCIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJvaCIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwicGgiLCJ1cGRhdGVyIiwicWgiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJyaCIsInByb3BzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJzaCIsInJlZiIsIl9vd25lciIsIl9zdHJpbmdSZWYiLCJ0aCIsInVoIiwidmgiLCJ3aCIsInhoIiwieWgiLCJpbXBsZW1lbnRhdGlvbiIsInpoIiwiQWgiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsIkloIiwidGFnTmFtZSIsIkpoIiwiS2giLCJMaCIsIk1oIiwicmV2ZWFsT3JkZXIiLCJOaCIsIk9oIiwiX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnkiLCJQaCIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJRaCIsIlJoIiwiU2giLCJUaCIsIlVoIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiYmFzZVF1ZXVlIiwicXVldWUiLCJkaSIsImVpIiwiZmkiLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiaGFzRWFnZXJTdGF0ZSIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImdpIiwiaGkiLCJpaSIsImppIiwia2kiLCJnZXRTbmFwc2hvdCIsImxpIiwibWkiLCJuaSIsImxhc3RFZmZlY3QiLCJzdG9yZXMiLCJvaSIsInBpIiwicWkiLCJyaSIsImRlc3Ryb3kiLCJkZXBzIiwic2kiLCJ0aSIsInVpIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsIkFpIiwiQmkiLCJDaSIsIkRpIiwiRWkiLCJGaSIsIkdpIiwiSGkiLCJJaSIsIkppIiwicmVhZENvbnRleHQiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlSW5zZXJ0aW9uRWZmZWN0IiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwidXNlTXV0YWJsZVNvdXJjZSIsInVzZUlkIiwidW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyIiwiaWRlbnRpZmllclByZWZpeCIsIktpIiwiZGlnZXN0IiwiTGkiLCJNaSIsIk5pIiwiV2Vha01hcCIsIk9pIiwiUGkiLCJRaSIsIlJpIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJTaSIsImNvbXBvbmVudFN0YWNrIiwiVGkiLCJwaW5nQ2FjaGUiLCJVaSIsIlZpIiwiV2kiLCJYaSIsIlJlYWN0Q3VycmVudE93bmVyIiwiWWkiLCJaaSIsIiRpIiwiYWoiLCJiaiIsImNqIiwiZGoiLCJlaiIsImJhc2VMYW5lcyIsImNhY2hlUG9vbCIsInRyYW5zaXRpb25zIiwiZmoiLCJnaiIsImhqIiwiaWoiLCJqaiIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsImtqIiwibGoiLCJwZW5kaW5nQ29udGV4dCIsIm1qIiwiQWoiLCJDaiIsIkRqIiwibmoiLCJvaiIsInBqIiwiZmFsbGJhY2siLCJxaiIsInJqIiwidGoiLCJkYXRhc2V0IiwiZGdzdCIsInVqIiwidmoiLCJfcmVhY3RSZXRyeSIsInNqIiwic3VidHJlZUZsYWdzIiwid2oiLCJ4aiIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwicmVuZGVyaW5nU3RhcnRUaW1lIiwidGFpbCIsInRhaWxNb2RlIiwieWoiLCJFaiIsIkZqIiwiR2oiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIiwib25jbGljayIsImNyZWF0ZUVsZW1lbnROUyIsImF1dG9Gb2N1cyIsImNyZWF0ZVRleHROb2RlIiwiSGoiLCJJaiIsIkpqIiwiS2oiLCJMaiIsIldlYWtTZXQiLCJWIiwiTWoiLCJOaiIsIk9qIiwiUWoiLCJSaiIsIlNqIiwiVGoiLCJVaiIsIlZqIiwiV2oiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiWGoiLCJZaiIsIlpqIiwiYWsiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiYmsiLCJjayIsImRrIiwiZWsiLCJmayIsImlzSGlkZGVuIiwiZ2siLCJoayIsImRpc3BsYXkiLCJpayIsImprIiwia2siLCJsayIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiV2siLCJtayIsImNlaWwiLCJuayIsIm9rIiwicGsiLCJZIiwicWsiLCJyayIsInNrIiwidGsiLCJ1ayIsIkluZmluaXR5IiwidmsiLCJ3ayIsInhrIiwieWsiLCJ6ayIsIkFrIiwiQmsiLCJDayIsIkRrIiwiRWsiLCJjYWxsYmFja05vZGUiLCJleHBpcmF0aW9uVGltZXMiLCJleHBpcmVkTGFuZXMiLCJ3YyIsImNhbGxiYWNrUHJpb3JpdHkiLCJpZyIsIkZrIiwiR2siLCJIayIsIklrIiwiSmsiLCJLayIsIkxrIiwiTWsiLCJOayIsIk9rIiwiUGsiLCJmaW5pc2hlZFdvcmsiLCJmaW5pc2hlZExhbmVzIiwiUWsiLCJ0aW1lb3V0SGFuZGxlIiwiUmsiLCJTayIsIlRrIiwiVWsiLCJWayIsIm11dGFibGVSZWFkTGFuZXMiLCJCYyIsIlBqIiwib25Db21taXRGaWJlclJvb3QiLCJtYyIsIm9uUmVjb3ZlcmFibGVFcnJvciIsIlhrIiwib25Qb3N0Q29tbWl0RmliZXJSb290IiwiWWsiLCJaayIsImFsIiwiaXNSZWFjdENvbXBvbmVudCIsInBlbmRpbmdDaGlsZHJlbiIsImJsIiwibXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YSIsImNsIiwiY2FjaGUiLCJwZW5kaW5nU3VzcGVuc2VCb3VuZGFyaWVzIiwiZGwiLCJlbCIsImZsIiwiZ2wiLCJobCIsImpsIiwiemoiLCIkayIsImxsIiwicmVwb3J0RXJyb3IiLCJtbCIsIl9pbnRlcm5hbFJvb3QiLCJubCIsIm9sIiwicGwiLCJxbCIsInNsIiwicmwiLCJ1bm1vdW50IiwidW5zdGFibGVfc2NoZWR1bGVIeWRyYXRpb24iLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsInRsIiwidXNpbmdDbGllbnRFbnRyeVBvaW50IiwiRXZlbnRzIiwidWwiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwidmwiLCJyZW5kZXJlckNvbmZpZyIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoIiwib3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoIiwib3ZlcnJpZGVQcm9wcyIsIm92ZXJyaWRlUHJvcHNEZWxldGVQYXRoIiwib3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGgiLCJzZXRFcnJvckhhbmRsZXIiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsInJlY29uY2lsZXJWZXJzaW9uIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwid2wiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsImNyZWF0ZVBvcnRhbCIsImNyZWF0ZVJvb3QiLCJ1bnN0YWJsZV9zdHJpY3RNb2RlIiwiZmluZERPTU5vZGUiLCJmbHVzaFN5bmMiLCJoeWRyYXRlIiwiaHlkcmF0ZVJvb3QiLCJoeWRyYXRlZFNvdXJjZXMiLCJfZ2V0VmVyc2lvbiIsIl9zb3VyY2UiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImNoZWNrRENFIiwiQXN5bmNNb2RlIiwiQ29uY3VycmVudE1vZGUiLCJDb250ZXh0Q29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJFbGVtZW50IiwiRnJhZ21lbnQiLCJMYXp5IiwiUG9ydGFsIiwiUHJvZmlsZXIiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJ0eXBlT2YiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJlc2NhcGUiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsIkNoaWxkcmVuIiwiY291bnQiLCJ0b0FycmF5Iiwib25seSIsIlB1cmVDb21wb25lbnQiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJDb25zdW1lciIsIl9kZWZhdWx0VmFsdWUiLCJfZ2xvYmFsTmFtZSIsImNyZWF0ZUZhY3RvcnkiLCJjcmVhdGVSZWYiLCJmb3J3YXJkUmVmIiwiaXNWYWxpZEVsZW1lbnQiLCJsYXp5IiwibWVtbyIsInN0YXJ0VHJhbnNpdGlvbiIsInVuc3RhYmxlX2FjdCIsInNvcnRJbmRleCIsInBlcmZvcm1hbmNlIiwic2V0SW1tZWRpYXRlIiwic3RhcnRUaW1lIiwiZXhwaXJhdGlvblRpbWUiLCJwcmlvcml0eUxldmVsIiwibmF2aWdhdG9yIiwic2NoZWR1bGluZyIsImlzSW5wdXRQZW5kaW5nIiwiTWVzc2FnZUNoYW5uZWwiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwiZmxvb3IiLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJzZXRBdHRyaWJ1dGVzIiwiaW5zZXJ0IiwiZG9tQVBJIiwiaW5zZXJ0U3R5bGVFbGVtZW50IiwidXBkYXRlIiwiaG90IiwiaW52YWxpZGF0ZSIsImlzTmFtZWRFeHBvcnQiLCJvbGRMb2NhbHMiLCJhY2NlcHQiLCJpc0VxdWFsTG9jYWxzIiwiZGlzcG9zZSIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiaW5kZXhCeUlkZW50aWZpZXIiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsImFwaSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaW5kZXgiLCJzdHlsZVRhcmdldCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZ2V0VGFyZ2V0IiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJpbnN0IiwiaGFzVmFsdWUiLCJfdHlwZW9mIiwiX3JlZ2VuZXJhdG9yUnVudGltZSIsIk9wIiwiaGFzT3duIiwiJFN5bWJvbCIsIml0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvclN5bWJvbCIsImFzeW5jSXRlcmF0b3IiLCJ0b1N0cmluZ1RhZ1N5bWJvbCIsInRvU3RyaW5nVGFnIiwiZGVmaW5lIiwid3JhcCIsImlubmVyRm4iLCJvdXRlckZuIiwidHJ5TG9jc0xpc3QiLCJwcm90b0dlbmVyYXRvciIsIkdlbmVyYXRvciIsIl9pbnZva2UiLCJtZXRob2QiLCJkZWxlZ2F0ZSIsImRlbGVnYXRlUmVzdWx0IiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsIkNvbnRpbnVlU2VudGluZWwiLCJfc2VudCIsImRpc3BhdGNoRXhjZXB0aW9uIiwiYWJydXB0IiwicmVjb3JkIiwidHJ5Q2F0Y2giLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwiSXRlcmF0b3JQcm90b3R5cGUiLCJnZXRQcm90byIsIk5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlIiwidmFsdWVzIiwiR3AiLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJBc3luY0l0ZXJhdG9yIiwiUHJvbWlzZUltcGwiLCJpbnZva2UiLCJfX2F3YWl0IiwidW53cmFwcGVkIiwicHJldmlvdXNQcm9taXNlIiwiY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmciLCJyZXN1bHROYW1lIiwibmV4dExvYyIsInB1c2hUcnlFbnRyeSIsImxvY3MiLCJlbnRyeSIsInRyeUxvYyIsImNhdGNoTG9jIiwiZmluYWxseUxvYyIsImFmdGVyTG9jIiwidHJ5RW50cmllcyIsInJlc2V0VHJ5RW50cnkiLCJjb21wbGV0aW9uIiwicmVzZXQiLCJpdGVyYWJsZSIsIml0ZXJhdG9yTWV0aG9kIiwiZG9uZVJlc3VsdCIsImlzR2VuZXJhdG9yRnVuY3Rpb24iLCJnZW5GdW4iLCJjdG9yIiwibWFyayIsImF3cmFwIiwiYXN5bmMiLCJyZXZlcnNlIiwic2tpcFRlbXBSZXNldCIsInN0b3AiLCJyb290UmVjb3JkIiwicnZhbCIsImV4Y2VwdGlvbiIsImhhbmRsZSIsImxvYyIsImNhdWdodCIsImhhc0NhdGNoIiwiaGFzRmluYWxseSIsImZpbmFsbHlFbnRyeSIsImNvbXBsZXRlIiwiZmluaXNoIiwidGhyb3duIiwiZGVsZWdhdGVZaWVsZCIsInJ1bnRpbWUiLCJyZWdlbmVyYXRvclJ1bnRpbWUiLCJhY2NpZGVudGFsU3RyaWN0TW9kZSIsImdsb2JhbFRoaXMiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJleGVjT3B0aW9ucyIsImZhY3RvcnkiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwicmVxdWlyZSIsImdldHRlciIsImRlZmluaXRpb24iLCJodSIsImNodW5rSWQiLCJobXJGIiwic2NyaXB0IiwibmVlZEF0dGFjaCIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImdldEF0dHJpYnV0ZSIsImNoYXJzZXQiLCJuYyIsIm9uU2NyaXB0Q29tcGxldGUiLCJvbmxvYWQiLCJkb25lRm5zIiwiY3VycmVudENoaWxkTW9kdWxlIiwiY3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMiLCJxdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMiLCJjdXJyZW50TW9kdWxlRGF0YSIsImluc3RhbGxlZE1vZHVsZXMiLCJjdXJyZW50UGFyZW50cyIsInJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycyIsImN1cnJlbnRTdGF0dXMiLCJibG9ja2luZ1Byb21pc2VzIiwiYmxvY2tpbmdQcm9taXNlc1dhaXRpbmciLCJzZXRTdGF0dXMiLCJuZXdTdGF0dXMiLCJyZXN1bHRzIiwiYWxsIiwidW5ibG9jayIsImhvdENoZWNrIiwiYXBwbHlPblVwZGF0ZSIsImhtck0iLCJ1cGRhdGVkTW9kdWxlcyIsImhtckMiLCJwcm9taXNlcyIsImludGVybmFsQXBwbHkiLCJhcHBseUludmFsaWRhdGVkTW9kdWxlcyIsImhvdEFwcGx5IiwiZXJyb3JzIiwiZGlzcG9zZVByb21pc2UiLCJhcHBseVByb21pc2UiLCJvdXRkYXRlZE1vZHVsZXMiLCJobXJJIiwiaG1yRCIsIl9tYWluIiwicmVxdWVzdCIsImFjdGl2ZSIsInBhcmVudHMiLCJ3YXJuIiwiY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yIiwidHJhY2tCbG9ja2luZ1Byb21pc2UiLCJjcmVhdGVSZXF1aXJlIiwiX2FjY2VwdGVkRGVwZW5kZW5jaWVzIiwiX2FjY2VwdGVkRXJyb3JIYW5kbGVycyIsIl9kZWNsaW5lZERlcGVuZGVuY2llcyIsIl9zZWxmQWNjZXB0ZWQiLCJfc2VsZkRlY2xpbmVkIiwiX3NlbGZJbnZhbGlkYXRlZCIsIl9kaXNwb3NlSGFuZGxlcnMiLCJfcmVxdWlyZVNlbGYiLCJkZXAiLCJlcnJvckhhbmRsZXIiLCJkZWNsaW5lIiwiYWRkRGlzcG9zZUhhbmRsZXIiLCJyZW1vdmVEaXNwb3NlSGFuZGxlciIsImlkeCIsImNoZWNrIiwic3RhdHVzIiwiYWRkU3RhdHVzSGFuZGxlciIsInJlbW92ZVN0YXR1c0hhbmRsZXIiLCJiYXNlVVJJIiwiY3VycmVudFVwZGF0ZWRNb2R1bGVzTGlzdCIsImN1cnJlbnRVcGRhdGVDaHVua3MiLCJjdXJyZW50VXBkYXRlIiwiY3VycmVudFVwZGF0ZVJlbW92ZWRDaHVua3MiLCJjdXJyZW50VXBkYXRlUnVudGltZSIsImluc3RhbGxlZENodW5rcyIsImhtclNfanNvbnAiLCJ3YWl0aW5nVXBkYXRlUmVzb2x2ZXMiLCJsb2FkVXBkYXRlQ2h1bmsiLCJ1cGRhdGVkTW9kdWxlc0xpc3QiLCJlcnJvclR5cGUiLCJyZWFsU3JjIiwiYXBwbHlIYW5kbGVyIiwiZ2V0QWZmZWN0ZWRNb2R1bGVFZmZlY3RzIiwidXBkYXRlTW9kdWxlSWQiLCJvdXRkYXRlZERlcGVuZGVuY2llcyIsInF1ZXVlSXRlbSIsInBhcmVudElkIiwicGFyZW50IiwiYWRkQWxsVG9TZXQiLCJqc29ucEhtciIsImFwcGxpZWRVcGRhdGUiLCJ3YXJuVW5leHBlY3RlZFJlcXVpcmUiLCJuZXdNb2R1bGVGYWN0b3J5IiwiYWJvcnRFcnJvciIsImRvQXBwbHkiLCJkb0Rpc3Bvc2UiLCJjaGFpbkluZm8iLCJvbkRlY2xpbmVkIiwiaWdub3JlRGVjbGluZWQiLCJvblVuYWNjZXB0ZWQiLCJpZ25vcmVVbmFjY2VwdGVkIiwib25BY2NlcHRlZCIsIm9uRGlzcG9zZWQiLCJtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcyIsIm91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcyIsIm91dGRhdGVkTW9kdWxlSWQiLCJkZXBlbmRlbmN5IiwiZGlzcG9zZUhhbmRsZXJzIiwiY2FsbGJhY2tzIiwiZXJyb3JIYW5kbGVycyIsImRlcGVuZGVuY2llc0ZvckNhbGxiYWNrcyIsImFjY2VwdENhbGxiYWNrIiwiZGVwZW5kZW5jeUlkIiwiZXJyMiIsIm9uRXJyb3JlZCIsIm9yaWdpbmFsRXJyb3IiLCJpZ25vcmVFcnJvcmVkIiwibW9yZU1vZHVsZXMiLCJqc29ucCIsImFwcGx5SGFuZGxlcnMiLCJjaHVua0lkcyIsInJlbW92ZWRDaHVua3MiLCJyZW1vdmVkTW9kdWxlcyIsInN0YXR1c1RleHQiXSwic291cmNlUm9vdCI6IiJ9